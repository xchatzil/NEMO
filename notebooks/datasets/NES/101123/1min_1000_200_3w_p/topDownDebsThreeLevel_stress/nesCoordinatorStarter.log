
███╗░░██╗███████╗██████╗░██╗░░░██╗██╗░░░░░░█████╗░░██████╗████████╗██████╗░███████╗░█████╗░███╗░░░███╗
████╗░██║██╔════╝██╔══██╗██║░░░██║██║░░░░░██╔══██╗██╔════╝╚══██╔══╝██╔══██╗██╔════╝██╔══██╗████╗░████║
██╔██╗██║█████╗░░██████╦╝██║░░░██║██║░░░░░███████║╚█████╗░░░░██║░░░██████╔╝█████╗░░███████║██╔████╔██║
██║╚████║██╔══╝░░██╔══██╗██║░░░██║██║░░░░░██╔══██║░╚═══██╗░░░██║░░░██╔══██╗██╔══╝░░██╔══██║██║╚██╔╝██║
██║░╚███║███████╗██████╦╝╚██████╔╝███████╗██║░░██║██████╔╝░░░██║░░░██║░░██║███████╗██║░░██║██║░╚═╝░██║
╚═╝░░╚══╝╚══════╝╚═════╝░░╚═════╝░╚══════╝╚═╝░░╚═╝╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝╚══════╝╚═╝░░╚═╝╚═╝░░░░░╚═╝

▒█▀▀█ █▀▀█ █▀▀█ █▀▀█ █▀▀▄ ░▀░ █▀▀▄ █▀▀█ ▀▀█▀▀ █▀▀█ █▀▀█ 
▒█░░░ █░░█ █░░█ █▄▄▀ █░░█ ▀█▀ █░░█ █▄▄█ ░░█░░ █░░█ █▄▄▀ 
▒█▄▄█ ▀▀▀▀ ▀▀▀▀ ▀░▀▀ ▀▀▀░ ▀▀▀ ▀░░▀ ▀░░▀ ░░▀░░ ▀▀▀▀ ▀░▀▀ v0.5.215-SNAPSHOT
[32m[08:30:27.117389] [I] [thread 125671] [nesCoordinatorStarter.cpp:48] [main] start coordinator with Name: restIp
Description: NES ip of the REST server.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: coordinatorIp
Description: RPC IP address of NES Coordinator.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the Coordinator
Value: 4000
Default Value: 4000

Name: restPort
Description: Port exposed for rest endpoints
Value: 8081
Default Value: 8081

Name: dataPort
Description: Data server port of the Coordinator
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_DEBUG
Default Value: LOG_INFO

Name: enableQueryReconfiguration
Description: Enable reconfiguration of running query plans. (Default: false)
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 

Name: workerId
Description: Worker id.
Value: 0
Default Value: 0

Name: localWorkerIp
Description: Worker IP.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: coordinatorIp
Description: Server IP of the NES Coordinator to which the NES Worker should connect.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the NES Worker.
Value: 0
Default Value: 0

Name: dataPort
Description: Data port of the NES Worker.
Value: 0
Default Value: 0

Name: coordinatorPort
Description: RPC server Port of the NES Coordinator to which the NES Worker should connect. Needs to be set and needs to be the same as rpcPort in Coordinator.
Value: 4000
Default Value: 4000

Name: numberOfSlots
Description: Number of computing slots for the NES Worker.
Value: 65535
Default Value: 65535

Name: numWorkerThreads
Description: Number of worker threads.
Value: 4
Default Value: 1

Name: numberOfBuffersInGlobalBufferManager
Description: Number buffers in global buffer pool.
Value: 1024
Default Value: 1024

Name: numberOfBuffersPerWorker
Description: Number buffers in task local buffer pool.
Value: 128
Default Value: 128

Name: numberOfBuffersInSourceLocalBufferPool
Description: Number buffers in source local buffer pool.
Value: 64
Default Value: 64

Name: bufferSizeInBytes
Description: BufferSizeInBytes.
Value: 32000
Default Value: 4096

Name: parentId
Description: Parent ID of this node.
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_INFO
Default Value: LOG_INFO

Name: sourcePinList
Description: comma separated list of where to map the sources
Value: 
Default Value: 

Name: workerPinList
Description: comma separated list of where to map the worker
Value: 
Default Value: 

Name: queuePinList
Description: comma separated list of where to map the worker on the queue
Value: 
Default Value: 

Name: numaAwareness
Description: Enable Numa-Aware execution
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: monitoringWaitTime
Description: Sampling period of metrics (ms).
Value: 1000
Default Value: 1000

Name: queryCompilerType
Description: Indicates the type for the query compiler [DEFAULT_QUERY_COMPILER|NAUTILUS_QUERY_COMPILER].
Value: NAUTILUS_QUERY_COMPILER
Default Value: DEFAULT_QUERY_COMPILER

Name: compilationStrategy
Description: Indicates the optimization strategy for the query compiler [FAST|DEBUG|OPTIMIZE|PROXY_INLINING].
Value: OPTIMIZE
Default Value: OPTIMIZE

Name: pipeliningStrategy
Description: Indicates the pipelining strategy for the query compiler [OPERATOR_FUSION|OPERATOR_AT_A_TIME].
Value: OPERATOR_FUSION
Default Value: OPERATOR_FUSION

Name: queryCompilerNautilusBackendConfig
Description: Indicates the nautilus backend for the nautilus query compiler [MLIR_COMPILER|INTERPRETER|BC_INTERPRETER|FLOUNDER_COMPILER].
Value: MLIR_COMPILER
Default Value: MLIR_COMPILER

Name: outputBufferOptimizationLevel
Description: Indicates the OutputBufferAllocationStrategy [ALL|NO|ONLY_INPLACE_OPERATIONS_NO_FALLBACK,|REUSE_INPUT_BUFFER_AND_OMIT_OVERFLOW_CHECK_NO_FALLBACK,|REUSE_INPUT_BUFFER_NO_FALLBACK|OMIT_OVERFLOW_CHECK_NO_FALLBACK]. 
Value: ALL
Default Value: ALL

Name: windowingStrategy
Description: Indicates the windowingStrategy [LEGACY|SLICING|BUCKETING]. 
Value: LEGACY
Default Value: LEGACY

Name: useCompilationCache
Description: Enable use compilation caching
Value: 0
Default Value: 0

Name: numberOfPartitions
Description: Partitions in the hash table
Value: 1
Default Value: 1

Name: pageSize
Description: Page size of hash table
Value: 131072
Default Value: 131072

Name: preAllocPageCnt
Description: Page count of pre allocated pages in each bucket hash table
Value: 1
Default Value: 1

Name: cudaSdkPath
Description: Path to CUDA SDK.
Value: /usr/local/cuda
Default Value: /usr/local/cuda

Name: maxHashTableSize
Description: Maximum size of hash table
Value: 2097152
Default Value: 2097152

Name: joinStrategy
Description: Indicates the windowingStrategy[HASH_JOIN_LOCAL|HASH_JOIN_GLOBAL_LOCKING|HASH_JOIN_GLOBAL_LOCK_FREE|NESTED_LOOP_JOIN]. 
Value: NESTED_LOOP_JOIN
Default Value: NESTED_LOOP_JOIN


Name: physicalSources
Description: Physical sources


Name: nodeSpatialType
Description: specifies if the worker has no known location or if it is a fixed location node or mobile node
Value: NO_LOCATION
Default Value: NO_LOCATION

Name: locationBufferSize
Description: The amount of past locations to be recorded in order to predict the future trajectory
Value: 30
Default Value: 30

Name: locationBufferSaveRate
Description: Determines after how many location updates a new location will be inserted in the location buffer
Value: 4
Default Value: 4

Name: pathDistanceDelta
Description: when deviating further than delta meters from the current predicted path, an update of the prediction will be triggered
Value: 20
Default Value: 20

Name: nodeInfoDownloadRadius
Description: The radius in meters in which nodes will be downloaded
Value: 10000
Default Value: 10000

Name: nodeIndexUpdateThreshold
Description: Trigger download of new node info when the device is less than threshold away from the boundary of the area covered by the current info
Value: 2000
Default Value: 2000

Name: defaultCoverageRadius
Description: The coverage in meters each field node is assumed to have
Value: 1000
Default Value: 1000

Name: pathPredictionLength
Description: The Length of the predicted path to be computed
Value: 10000
Default Value: 10000

Name: speedDifferenceThresholdFactor
Description: The factor by which the speed needs to change to trigger a recalculation of reconnect predictions
Value: 1e-05
Default Value: 1e-05

Name: sendDevicePositionUpdateThreshold
Description: The distance in meters after which the device will report it's new position in meters
Value: 100
Default Value: 100

Name: pushPositionUpdates
Description: determines if position updates should be sent to the coordinator
Value: 1
Default Value: 1

Name: mobilityHandlerUpdateInterval
Description: the time which the thread running at the worker mobility handler will sleep after each iteration
Value: 10000
Default Value: 10000

Name: locationProviderType
Description: the kind of interface which the  mobile worker gets its geolocation info from
Value: BASE
Default Value: BASE

Name: locationProviderConfig
Description: the configuration data for the location interface
Value: 
Default Value: 

Name: locationProviderSimulatedStartTime
Description: The start time to be simulated if device movement is simulated
Value: 0
Default Value: 0


Name: numberOfQueues
Description: Number of processing queues.
Value: 1
Default Value: 1

Name: numberOfThreadsPerQueue
Description: Number of threads per processing queue.
Value: 0
Default Value: 0

Name: numberOfBuffersPerEpoch
Description: Number of tuple buffers allowed in one epoch.
Value: 100
Default Value: 100

Name: queryManagerMode
Description: Which mode the query manager is running in. (Dynamic, Static, NumaAware, Invalid)
Value: Dynamic
Default Value: Dynamic

Name: enableSourceSharing
Description: Enable source sharing
Value: 0
Default Value: 0

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 


Name: workerConfigPath
Description: Path to a configuration file for the internal worker.
Value: 
Default Value: 

Name: queryBatchSize
Description: The number of queryIdAndCatalogEntryMapping to be processed together
Value: 1
Default Value: 1

Name: queryMergerRule
Description: The rule to be used for performing query merging
Value: DefaultQueryMergerRule
Default Value: DefaultQueryMergerRule

Name: memoryLayoutPolicy
Description: selects the memory layout selection policy can be [FORCE_ROW_LAYOUT|FORCE_COLUMN_LAYOUT]
Value: FORCE_ROW_LAYOUT
Default Value: FORCE_ROW_LAYOUT

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: performDistributedWindowOptimization
Description: Enables the distribution of window aggregations.
Value: 1
Default Value: 1

Name: distributedWindowChildThreshold
Description: Threshold for the distribution of window aggregations.
Value: 1000
Default Value: 2

Name: distributedWindowCombinerThreshold
Description: Threshold for the insertion of pre-aggregation operators.
Value: 1
Default Value: 4

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: advanceSemanticValidation
Description: Perform advance semantic validation on the incoming queryIdAndCatalogEntryMapping. (Default: false)
Value: 0
Default Value: 0

Name: enableNemoPlacement
Description: Enables NEMO distributed window rule to use central windows instead of the distributed windows. (Default: false)
Value: 1
Default Value: 0


Name: logicalSources
Description: Logical Sources

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: restServerCorsAllowedOrigin
Description: The allowed origins to be set in the header of the responses to rest requests
Value: 
Default Value: 

[m
[32m[08:30:27.117569] [I] [thread 125671] [nesCoordinatorStarter.cpp:50] [main] creating coordinator[m
[36m[08:30:27.117823] [D] [thread 125671] [NesCoordinator.cpp:81] [NesCoordinator] NesCoordinator() restIp=192.168.2.11 restPort=8081 rpcIp=192.168.2.11 rpcPort=4000[m
[36m[08:30:27.118816] [D] [thread 125671] [ExecutablePath.cpp:80] [loadRuntimePathConfig] Detected a build dir as a execution location[m
[32m[08:30:27.119161] [I] [thread 125671] [ExecutablePath.cpp:113] [loadRuntimePathConfig] RuntimePathConfig: 
clangBinaryPath: /home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16
includePaths: 
	/home/ubuntu/git/nebulastream/build/include/nebulastream
libPaths:
	/home/ubuntu/git/nebulastream/build/nes-common/
	/home/ubuntu/git/nebulastream/build/nes-runtime/
	/home/ubuntu/git/nebulastream/build/nes-core/
	/home/ubuntu/git/nebulastream/build/nes-data-types/[m
[36m[08:30:27.119964] [D] [thread 125671] [SourceCatalog.cpp:41] [SourceCatalog] SourceCatalog: construct source catalog[m
[36m[08:30:27.120043] [D] [thread 125671] [SourceCatalog.cpp:31] [addDefaultSources] Sourcecatalog addDefaultSources[m
[36m[08:30:27.120744] [D] [thread 125671] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source default_logical already exist.[m
[36m[08:30:27.120847] [D] [thread 125671] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source default_logical[m
[36m[08:30:27.120959] [D] [thread 125671] [SourceCatalog.cpp:43] [SourceCatalog] SourceCatalog: construct source catalog successfully[m
[36m[08:30:27.121310] [D] [thread 125671] [SourceCatalogService.cpp:30] [SourceCatalogService] SourceCatalogService()[m
[36m[08:30:27.121480] [D] [thread 125671] [TopologyManagerService.cpp:36] [TopologyManagerService] TopologyManagerService()[m
[36m[08:30:27.173724] [D] [thread 125671] [RequestProcessorService.cpp:62] [RequestProcessorService] QueryRequestProcessorService()[m
[36m[08:30:27.173835] [D] [thread 125671] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[08:30:27.174286] [D] [thread 125671] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[08:30:27.174698] [D] [thread 125671] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[08:30:27.175030] [D] [thread 125671] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[08:30:27.175321] [D] [thread 125671] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[08:30:27.175510] [D] [thread 125671] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[08:30:27.175897] [D] [thread 125671] [BinaryOperatorSortRule.cpp:28] [BinaryOperatorSortRule] BinaryOperatorSortRule()[m
[36m[08:30:27.177095] [D] [thread 125671] [DistributedWindowRule.cpp:36] [DistributedWindowRule] Create DistributedWindowRule with distributedWindowChildThreshold: 1000 distributedWindowCombinerThreshold: 1[m
[36m[08:30:27.177168] [D] [thread 125671] [NemoWindowPinningRule.cpp:45] [NemoWindowPinningRule] Create NemoWindowPinningRule with distributedWindowChildThreshold: 1000 distributedWindowCombinerThreshold: 1[m
[36m[08:30:27.177448] [D] [thread 125671] [SignatureInferencePhase.cpp:26] [SignatureInferencePhase] SignatureInferencePhase()[m
[36m[08:30:27.177749] [D] [thread 125671] [QueryPlacementPhase.cpp:39] [QueryPlacementPhase] QueryPlacementPhase()[m
[36m[08:30:27.178059] [D] [thread 125671] [QueryUndeploymentPhase.cpp:35] [QueryUndeploymentPhase] QueryUndeploymentPhase()[m
[36m[08:30:27.179077] [D] [thread 125671] [QueryService.cpp:56] [QueryService] QueryService()[m
[36m[08:30:27.179586] [D] [thread 125671] [MonitoringService.cpp:37] [MonitoringService] MonitoringService: Initializing with monitoring= false[m
[36m[08:30:27.179781] [D] [thread 125671] [LatestEntriesMetricStore.cpp:23] [LatestEntriesMetricStore] LatestEntriesMetricStore: Init NewestMetricStore[m
[36m[08:30:27.180029] [D] [thread 125671] [MonitoringManager.cpp:70] [MonitoringManager] MonitoringManager: Init with monitoring= false , storage= NewestEntry [m
[33m[1m[08:30:27.180146] [W] [thread 125671] [MonitoringManager.cpp:194] [registerLogicalMonitoringStreams] MonitoringManager: Monitoring is disabled, registering of logical monitoring streams not possible.[m
[32m[08:30:27.180188] [I] [thread 125671] [nesCoordinatorStarter.cpp:53] [main] Starting Coordinator[m
[36m[08:30:27.180201] [D] [thread 125671] [NesCoordinator.cpp:159] [startCoordinator] NesCoordinator start[m
[36m[08:30:27.180605] [D] [thread 125671] [NesCoordinator.cpp:174] [startCoordinator] NesCoordinator: startCoordinatorRPCServer: Building GRPC Server[m
[32m[08:30:27.180621] [I] [thread 125679] [NesCoordinator.cpp:169] [operator()] NesCoordinator: started queryRequestProcessor[m
[36m[08:30:27.180675] [D] [thread 125679] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[08:30:27.181061] [D] [thread 125680] [NesCoordinator.cpp:180] [operator()] NesCoordinator: buildAndStartGRPCServer[m
[36m[08:30:27.187731] [D] [thread 125680] [NesCoordinator.cpp:354] [buildAndStartGRPCServer] NesCoordinator: buildAndStartGRPCServerServer listening on address=192.168.2.11:4000[m
[36m[08:30:27.187758] [D] [thread 125671] [NesCoordinator.cpp:185] [startCoordinator] NesCoordinator:buildAndStartGRPCServer: ready[m
[36m[08:30:27.187805] [D] [thread 125671] [NesCoordinator.cpp:187] [startCoordinator] NesCoordinator: Register Logical sources[m
[36m[08:30:27.187916] [D] [thread 125671] [NesCoordinator.cpp:192] [startCoordinator] NesCoordinator: Finished Registering Logical source[m
[36m[08:30:27.187927] [D] [thread 125671] [NesCoordinator.cpp:195] [startCoordinator] NesCoordinator::startCoordinator: start nes worker[m
[36m[08:30:27.188549] [D] [thread 125671] [NesWorker.cpp:65] [NesWorker] NesWorker: constructed[m
[36m[08:30:27.188717] [D] [thread 125671] [NesWorker.cpp:138] [start] NesWorker: start with blocking false workerId=0 coordinatorIp=192.168.2.11 coordinatorPort=4000 localWorkerIp=192.168.2.11 localWorkerRpcPort=0 localWorkerZmqPort=0 windowStrategy=LEGACY[m
[36m[08:30:27.188743] [D] [thread 125671] [NesWorker.cpp:140] [start] NesWorker::start: start Runtime[m
[36m[08:30:27.188778] [D] [thread 125671] [NesWorker.cpp:147] [start] NesWorker: MonitoringAgent configured with monitoring=false[m
[36m[08:30:27.189026] [D] [thread 125671] [MonitoringPlan.cpp:21] [MonitoringPlan] MonitoringPlan: Init with metrics of size 4[m
[36m[08:30:27.189077] [D] [thread 125671] [MonitoringCatalog.cpp:36] [defaultCatalog] MonitoringCatalog: Init default catalog[m
[32m[08:30:27.189166] [I] [thread 125671] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[08:30:27.189781] [I] [thread 125671] [CpuCollector.cpp:29] [CpuCollector] CpuCollector: Init CpuCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) coreNum:INTEGER(64 bits) user:INTEGER(64 bits) nice:INTEGER(64 bits) system:INTEGER(64 bits) idle:INTEGER(64 bits) iowait:INTEGER(64 bits) irq:INTEGER(64 bits) softirq:INTEGER(64 bits) steal:INTEGER(64 bits) guest:INTEGER(64 bits) guestnice:INTEGER(64 bits)[m
[32m[08:30:27.189855] [I] [thread 125671] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[08:30:27.190107] [I] [thread 125671] [DiskCollector.cpp:30] [DiskCollector] DiskCollector: Init DiskCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) F_BSIZE:INTEGER(64 bits) F_FRSIZE:INTEGER(64 bits) F_BLOCKS:INTEGER(64 bits) F_BFREE:INTEGER(64 bits) F_BAVAIL:INTEGER(64 bits)[m
[32m[08:30:27.190158] [I] [thread 125671] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[08:30:27.190647] [I] [thread 125671] [MemoryCollector.cpp:29] [MemoryCollector] MemoryCollector: Init MemoryCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) TOTAL_RAM:INTEGER(64 bits) TOTAL_SWAP:INTEGER(64 bits) FREE_RAM:INTEGER(64 bits) SHARED_RAM:INTEGER(64 bits) BUFFER_RAM:INTEGER(64 bits) FREE_SWAP:INTEGER(64 bits) TOTAL_HIGH:INTEGER(64 bits) FREE_HIGH:INTEGER(64 bits) PROCS:INTEGER(64 bits) MEM_UNIT:INTEGER(64 bits) LOADS_1MIN:INTEGER(64 bits) LOADS_5MIN:INTEGER(64 bits) LOADS_15MIN:INTEGER(64 bits)[m
[32m[08:30:27.190706] [I] [thread 125671] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[08:30:27.191619] [I] [thread 125671] [NetworkCollector.cpp:30] [NetworkCollector] NetworkCollector: Init NetworkCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)[m
[36m[08:30:27.191989] [D] [thread 125671] [MonitoringCatalog.cpp:28] [MonitoringCatalog] MonitoringCatalog: Init with collector map of size 4[m
[36m[08:30:27.192243] [D] [thread 125671] [MonitoringAgent.cpp:43] [MonitoringAgent] MonitoringAgent: Init with monitoring plan MonitoringPlan:disk(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True); and enabled=false[m
[33m[1m[08:30:27.192355] [W] [thread 125671] [MonitoringAgent.cpp:117] [addMonitoringStreams] MonitoringAgent: Monitoring is disabled, registering of physical monitoring streams not possible.[m
[36m[08:30:27.204210] [D] [thread 125671] [BufferManager.cpp:107] [initialize] NES memory allocation requires 32768000 out of 3975450624 available bytes[m
[36m[08:30:27.216509] [D] [thread 125671] [BufferManager.cpp:160] [initialize] BufferManager configuration bufferSize=32000 numOfBuffers=1024[m
[36m[08:30:27.266050] [D] [thread 125671] [QueryManager.cpp:78] [DynamicQueryManager] QueryManger: use dynamic mode with numThreads= 4[m
[33m[1m[08:30:27.266484] [W] [thread 125671] [NodeEngineBuilder.cpp:291] [createQueryCompilationOptions] The LEGACY window strategy is not supported by Nautilus. Switch to SLICING![m
[36m[08:30:27.266591] [D] [thread 125671] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[08:30:27.266694] [D] [thread 125671] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[08:30:27.266770] [D] [thread 125671] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[08:30:27.266825] [D] [thread 125671] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[08:30:27.267039] [D] [thread 125671] [NodeEngineBuilder.cpp:238] [build] Creating default OpenCLManager[m
[36m[08:30:27.267127] [D] [thread 125671] [OpenCLManager.cpp:230] [OpenCLManager] OpenCL support was disabled at build time[m
[36m[08:30:27.267407] [D] [thread 125671] [ExchangeProtocol.cpp:30] [ExchangeProtocol] ExchangeProtocol: Initializing ExchangeProtocol()[m
[36m[08:30:27.267617] [D] [thread 125671] [ZmqServer.cpp:69] [ZmqServer] ZmqServer(192.168.2.11:0) Creating ZmqServer()[m
[36m[08:30:27.267697] [D] [thread 125671] [ZmqServer.cpp:78] [start] ZmqServer(192.168.2.11:0): Starting server..[m
[36m[08:30:27.270111] [D] [thread 125685] [ZmqServer.cpp:156] [routerLoop] ZmqServer(192.168.2.11:0):  Trying to bind on tcp://192.168.2.11:0[m
[36m[08:30:27.271803] [D] [thread 125685] [ZmqServer.cpp:161] [routerLoop] ZmqServer(192.168.2.11:0):  Created socket on 192.168.2.11: 0[m
[36m[08:30:27.271963] [D] [thread 125685] [ZmqServer.cpp:176] [routerLoop] ZmqServer: Created socket on 192.168.2.11: 43687[m
[36m[08:30:27.273405] [D] [thread 125688] [ZmqServer.cpp:254] [messageHandlerEventLoop] Created Zmq Handler Thread #0 on 192.168.2.11: 43687[m
[36m[08:30:27.273405] [D] [thread 125689] [ZmqServer.cpp:254] [messageHandlerEventLoop] Created Zmq Handler Thread #1 on 192.168.2.11: 43687[m
[32m[08:30:27.273546] [I] [thread 125671] [NetworkManager.cpp:36] [NetworkManager] NetworkManager: Server started successfully on tcp://192.168.2.11:43687[m
[36m[08:30:27.273654] [D] [thread 125671] [QueryManager.cpp:140] [startThreadPool] startThreadPool: setup thread pool for nodeEngineId= 1699755077  with numThreads= 4[m
[36m[08:30:27.273919] [D] [thread 125671] [ThreadPool.cpp:108] [start] Threadpool: Spawning 4 threads[m
[36m[08:30:27.275130] [D] [thread 125671] [ThreadPool.cpp:152] [start] Threadpool: start return from start[m
[36m[08:30:27.275208] [D] [thread 125671] [NodeEngine.cpp:78] [NodeEngine] NodeEngine(): thread pool successfully started[m
[36m[08:30:27.275205] [D] [thread 125692] [ThreadPool.cpp:147] [operator()] worker 2 with workerId 2 pins to queue 0[m
[36m[08:30:27.275205] [D] [thread 125693] [ThreadPool.cpp:147] [operator()] worker 3 with workerId 1 pins to queue 0[m
[36m[08:30:27.275205] [D] [thread 125690] [ThreadPool.cpp:147] [operator()] worker 0 with workerId 0 pins to queue 0[m
[36m[08:30:27.275385] [D] [thread 125671] [NesWorker.cpp:156] [start] NesWorker: Node engine started successfully[m
[36m[08:30:27.275426] [D] [thread 125671] [NesWorker.cpp:164] [start] NesWorker: request startWorkerRPCServer for accepting messages for address=192.168.2.11:0: 0[m
[36m[08:30:27.275467] [D] [thread 125690] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=1024 requested buffers=128[m
[36m[08:30:27.276117] [D] [thread 125691] [ThreadPool.cpp:147] [operator()] worker 1 with workerId 3 pins to queue 0[m
[36m[08:30:27.276246] [D] [thread 125694] [NesWorker.cpp:176] [operator()] NesWorker: buildAndStartGRPCServer[m
[36m[08:30:27.276731] [D] [thread 125694] [WorkerRPCServer.cpp:38] [WorkerRPCServer] WorkerRPCServer::WorkerRPCServer()[m
[36m[08:30:27.276815] [D] [thread 125693] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=896 requested buffers=128[m
[36m[08:30:27.277439] [D] [thread 125692] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=768 requested buffers=128[m
[36m[08:30:27.278063] [D] [thread 125691] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=640 requested buffers=128[m
[36m[08:30:27.279991] [D] [thread 125694] [NesWorker.cpp:117] [buildAndStartGRPCServer] NesWorker: buildAndStartGRPCServer Server listening on address 192.168.2.11:0: 39877[m
[36m[08:30:27.280031] [D] [thread 125671] [NesWorker.cpp:184] [start] NesWorker: startWorkerRPCServer ready for accepting messages for address=192.168.2.11:39877: 39877[m
[36m[08:30:27.280055] [D] [thread 125671] [NesWorker.cpp:187] [start] NesWorker: start with connect[m
[36m[08:30:27.280083] [D] [thread 125671] [NesWorker.cpp:306] [connect] NesWorker::connect() Registering worker with coordinator at 192.168.2.11:4000[m
[36m[08:30:27.280187] [D] [thread 125671] [CoordinatorRPCClient.cpp:152] [CoordinatorRPCClient] CoordinatorRPCClient(): creating channels to address =192.168.2.11:4000[m
[36m[08:30:27.282431] [D] [thread 125694] [CallData.cpp:36] [proceed] RequestInSyncInCreate=[m
[36m[08:30:27.282758] [D] [thread 125671] [CoordinatorRPCClient.cpp:156] [CoordinatorRPCClient] CoordinatorRPCClient::connecting: channel successfully created[m
[33m[1m[08:30:27.283685] [W] [thread 125671] [MonitoringAgent.cpp:96] [getRegistrationMetrics] MonitoringAgent: Metrics disabled. Return empty metric object for registration.[m
[36m[08:30:27.283742] [D] [thread 125671] [RegistrationMetrics.cpp:32] [RegistrationMetrics] RegistrationMetrics: Default ctor[m
[36m[08:30:27.285779] [D] [thread 125671] [CoordinatorRPCClient.cpp:387] [registerWorker] CoordinatorRPCClient::RegisterNodeRequest request=address: "192.168.2.11"
grpcPort: 39877
dataPort: 43687
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[08:30:27.298676] [D] [thread 125681] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.11"
grpcPort: 39877
dataPort: 43687
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[08:30:27.298967] [D] [thread 125681] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.11"
grpcPort: 39877
dataPort: 43687
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[08:30:27.299085] [D] [thread 125681] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[33m[1m[08:30:27.299109] [W] [thread 125681] [Topology.cpp:280] [toString] Topology: No root node found[m
[36m[08:30:27.299155] [D] [thread 125681] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[08:30:27.299169] [D] [thread 125681] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[08:30:27.299212] [D] [thread 125681] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 1 and resources 65535[m
[36m[08:30:27.299425] [D] [thread 125681] [TopologyManagerService.cpp:99] [registerWorker] TopologyManagerService::registerWorker: tree is empty so this becomes new root[m
[32m[08:30:27.299525] [I] [thread 125681] [Topology.cpp:356] [setAsRoot] Topology: Setting physical node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0] as root to the topology.[m
[36m[08:30:27.299641] [D] [thread 125681] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[08:30:27.299882] [D] [thread 125681] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
[m
[32m[08:30:27.299980] [I] [thread 125681] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[08:30:27.300014] [D] [thread 125681] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[08:30:27.300053] [D] [thread 125681] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[08:30:27.300064] [D] [thread 125681] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[08:30:27.300100] [D] [thread 125681] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[08:30:27.301441] [D] [thread 125681] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=1[m
[36m[08:30:27.303146] [D] [thread 125671] [NesWorker.cpp:334] [connect] NesWorker::connect() Worker registered successfully and got id=1[m
[36m[08:30:27.303225] [D] [thread 125671] [NesWorker.cpp:341] [connect] NesWorker::connect() Persisting workerId=1 in yaml file for the first time.[m
[36m[08:30:27.303334] [D] [thread 125671] [NesWorker.cpp:347] [connect] NesWorker::connect() Persisted workerId=1 successfully in yaml file.[m
[36m[08:30:27.303349] [D] [thread 125671] [NesWorker.cpp:362] [connect] NesWorker::registerWorker rpc register success with id 1[m
[36m[08:30:27.335306] [D] [thread 125671] [NesWorker.cpp:368] [connect] NesWorker start health check[m
[36m[08:30:27.335492] [D] [thread 125671] [WorkerHealthCheckService.cpp:39] [startHealthCheck] WorkerHealthCheckService::startHealthCheck worker id= 1[m
[36m[08:30:27.335507] [D] [thread 125671] [WorkerHealthCheckService.cpp:41] [startHealthCheck] start health checking on worker[m
[36m[08:30:27.336019] [D] [thread 125671] [NesWorker.cpp:247] [start] NesWorker: started, return[m
[36m[08:30:27.336186] [D] [thread 125671] [NesCoordinator.cpp:210] [startCoordinator] NesCoordinator starting rest server[m
[36m[08:30:27.336845] [D] [thread 125671] [NesCoordinator.cpp:239] [startCoordinator] NesCoordinator::startCoordinatorRESTServer: ready[m
[32m[08:30:27.336931] [I] [thread 125698] [RestServer.cpp:64] [start] Starting Oatpp Server on 192.168.2.11:8081[m
[32m[08:30:27.353529] [I] [thread 125698] [RestServer.cpp:166] [run] NebulaStream REST Server listening on port 8081[m
[36m[08:30:27.353674] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:27.367201] [D] [thread 125671] [NesCoordinator.cpp:244] [startCoordinator] NesCoordinator start health check[m
[36m[08:30:27.367299] [D] [thread 125671] [CoordinatortHealthCheckService.cpp:34] [startHealthCheck] CoordinatorHealthCheckService::startHealthCheck[m
[36m[08:30:27.367310] [D] [thread 125671] [CoordinatortHealthCheckService.cpp:36] [startHealthCheck] start health checking on coordinator[m
[36m[08:30:27.367786] [D] [thread 125671] [NesCoordinator.cpp:248] [startCoordinator] NesCoordinator started, join now and waiting for work[m
[36m[08:30:28.354949] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:29.356282] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:30.159037] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:30.160463] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:30.162547] [D] [thread 125701] [SourceCatalogController.hpp:125] [addLogicalSource] SourceCatalogController: addLogicalSource: REST received request to add new Logical Source.[m
[36m[08:30:30.165532] [D] [thread 125701] [SourceCatalogController.hpp:144] [addLogicalSource] SourceCatalogController: addLogicalSource: Try to add new Logical Source debs and Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));[m
[36m[08:30:30.165675] [D] [thread 125701] [SourceCatalogService.cpp:92] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source=debs schema= Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));[m
[36m[08:30:30.165803] [D] [thread 125701] [QueryParsingService.cpp:53] [createSchemaFromCode] QueryParsingService : generated code= #include <API/Schema.hpp>
#include <Common/DataTypes/DataTypeFactory.hpp>
namespace NES{
Schema createSchema(){
return Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));;}
}
[m
[36m[08:30:30.168507] [D] [thread 125702] [File.cpp:27] [createFile] Create File to file:///tmp/query_13-11-2023_08-30-30_7417175.cpp[m
[36m[08:30:30.169758] [D] [thread 125702] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[08:30:30.170524] [D] [thread 125702] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DFMT_HEADER_ONLY -o/tmp/query_13-11-2023_08-30-30_7417175.so -DNES_COMPILE_TIME_LOG_LEVEL=6 -I/home/ubuntu/git/nebulastream/build/include/nebulastream -L/home/ubuntu/git/nebulastream/build/nes-core/ -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -shared -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -Wparentheses-equality -fpic -fno-trigraphs -std=c++20 -stdlib=libstdc++ /tmp/query_13-11-2023_08-30-30_7417175.cpp'[m
[36m[08:30:31.161713] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[08:30:31.906015] [I] [thread 125702] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 1737.732975ms[m
[36m[08:30:31.907636] [D] [thread 125701] [SourceCatalog.cpp:49] [addLogicalSource] SourceCatalog: schema successfully created[m
[36m[08:30:31.907728] [D] [thread 125701] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source debs already exist.[m
[36m[08:30:31.907761] [D] [thread 125701] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source debs[m
[36m[08:30:31.907816] [D] [thread 125701] [SourceCatalogController.hpp:146] [addLogicalSource] SourceCatalogController: addLogicalSource: Successfully added new logical Source ? true[m
[36m[08:30:32.162992] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:32.190257] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:32.190724] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[08:30:32.191356] [I] [thread 125707] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[08:30:32.192662] [I] [thread 125707] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[08:30:32.487310] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:32.487788] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[08:30:32.488471] [I] [thread 125708] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[08:30:32.489056] [I] [thread 125708] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[08:30:32.666282] [D] [thread 125681] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.12"
grpcPort: 32805
dataPort: 37941
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[08:30:32.666452] [D] [thread 125681] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.12"
grpcPort: 32805
dataPort: 37941
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[08:30:32.666497] [D] [thread 125681] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[08:30:32.666630] [D] [thread 125681] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[08:30:32.666644] [D] [thread 125681] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[08:30:32.666674] [D] [thread 125681] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 2 and resources 65535[m
[36m[08:30:32.666789] [D] [thread 125681] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[08:30:32.666842] [I] [thread 125681] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[08:30:32.666949] [I] [thread 125681] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[08:30:32.667094] [D] [thread 125681] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 2[m
[36m[08:30:32.667266] [D] [thread 125681] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[08:30:32.667427] [D] [thread 125681] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[08:30:32.667467] [I] [thread 125681] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[08:30:32.667484] [D] [thread 125681] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[08:30:32.667512] [D] [thread 125681] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[08:30:32.667536] [D] [thread 125681] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[08:30:32.667552] [D] [thread 125681] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[08:30:32.667963] [D] [thread 125681] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=2[m
[36m[08:30:33.489082] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:34.490394] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:35.491698] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:36.298443] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:36.298922] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[08:30:36.299780] [I] [thread 125709] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[08:30:36.300829] [I] [thread 125709] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[08:30:36.451274] [D] [thread 125696] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.30"
grpcPort: 41695
dataPort: 46877
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[08:30:36.451558] [D] [thread 125696] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.30"
grpcPort: 41695
dataPort: 46877
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[08:30:36.451641] [D] [thread 125696] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[08:30:36.451963] [D] [thread 125696] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[08:30:36.452001] [D] [thread 125696] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[08:30:36.452064] [D] [thread 125696] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 3 and resources 65535[m
[36m[08:30:36.452229] [D] [thread 125696] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[08:30:36.452377] [I] [thread 125696] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[08:30:36.452553] [I] [thread 125696] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[08:30:36.452665] [D] [thread 125696] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 3[m
[36m[08:30:36.452792] [D] [thread 125696] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[08:30:36.453085] [D] [thread 125696] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[08:30:36.453176] [I] [thread 125696] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[08:30:36.453210] [D] [thread 125696] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[08:30:36.453258] [D] [thread 125696] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[08:30:36.453284] [D] [thread 125696] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[08:30:36.453311] [D] [thread 125696] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[08:30:36.453903] [D] [thread 125696] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=3[m
[36m[08:30:37.300166] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:38.301447] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:39.302759] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:40.166187] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:40.166661] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[08:30:40.167294] [I] [thread 125710] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[08:30:40.168567] [I] [thread 125710] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[08:30:40.315701] [D] [thread 125696] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.31"
grpcPort: 41615
dataPort: 40151
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[08:30:40.315966] [D] [thread 125696] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.31"
grpcPort: 41615
dataPort: 40151
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[08:30:40.316042] [D] [thread 125696] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[08:30:40.316453] [D] [thread 125696] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[08:30:40.316528] [D] [thread 125696] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[08:30:40.316629] [D] [thread 125696] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 4 and resources 65535[m
[36m[08:30:40.316812] [D] [thread 125696] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[08:30:40.316903] [I] [thread 125696] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[08:30:40.317048] [I] [thread 125696] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[08:30:40.317140] [D] [thread 125696] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 4[m
[36m[08:30:40.317254] [D] [thread 125696] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[08:30:40.317562] [D] [thread 125696] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[08:30:40.317672] [I] [thread 125696] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[08:30:40.317706] [D] [thread 125696] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[08:30:40.317752] [D] [thread 125696] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[08:30:40.317778] [D] [thread 125696] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[08:30:40.317805] [D] [thread 125696] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[08:30:40.318393] [D] [thread 125696] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=4[m
[36m[08:30:41.167925] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:42.169225] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:43.130593] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:43.131029] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[08:30:43.131836] [I] [thread 125711] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[08:30:43.133319] [I] [thread 125711] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[08:30:43.311961] [D] [thread 125696] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.32"
grpcPort: 36981
dataPort: 34279
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[08:30:43.312153] [D] [thread 125696] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.32"
grpcPort: 36981
dataPort: 34279
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[08:30:43.312207] [D] [thread 125696] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[08:30:43.312480] [D] [thread 125696] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[08:30:43.312510] [D] [thread 125696] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[08:30:43.312547] [D] [thread 125696] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 5 and resources 65535[m
[36m[08:30:43.312643] [D] [thread 125696] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[08:30:43.312692] [I] [thread 125696] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[08:30:43.312773] [I] [thread 125696] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[08:30:43.312827] [D] [thread 125696] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 5[m
[36m[08:30:43.339109] [D] [thread 125696] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[08:30:43.339529] [D] [thread 125696] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[08:30:43.339617] [I] [thread 125696] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[08:30:43.339642] [D] [thread 125696] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[08:30:43.339682] [D] [thread 125696] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[08:30:43.339693] [D] [thread 125696] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[08:30:43.339709] [D] [thread 125696] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[08:30:43.340158] [D] [thread 125696] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=5[m
[36m[08:30:43.378221] [D] [thread 125696] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 5
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream4"
  logicalSourceName: "debs"
}
[m
[32m[08:30:43.378312] [I] [thread 125696] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[08:30:43.378335] [D] [thread 125696] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[08:30:43.378427] [D] [thread 125696] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= test_stream4 logical source= debs[m
[36m[08:30:43.378781] [D] [thread 125696] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[08:30:43.378852] [D] [thread 125696] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream4[m
[36m[08:30:43.379035] [D] [thread 125696] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream4 does not exist, try to add[m
[36m[08:30:43.379077] [D] [thread 125696] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[08:30:43.379139] [D] [thread 125696] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[08:30:43.379160] [D] [thread 125696] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[08:30:43.382593] [D] [thread 125681] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 5
oldParent: 1
newParent: 2
[m
[36m[08:30:43.382681] [D] [thread 125681] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 5  parentId= 1[m
[32m[08:30:43.382699] [I] [thread 125681] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[08:30:43.382718] [D] [thread 125681] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[08:30:43.382734] [D] [thread 125681] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  5  exists[m
[32m[08:30:43.382742] [I] [thread 125681] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[08:30:43.382751] [D] [thread 125681] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[08:30:43.382761] [D] [thread 125681] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[08:30:43.382818] [D] [thread 125681] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[08:30:43.382916] [I] [thread 125681] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[08:30:43.382954] [D] [thread 125681] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[08:30:43.382996] [D] [thread 125681] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[08:30:43.383015] [D] [thread 125681] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 5  parentId= 2[m
[32m[08:30:43.383026] [I] [thread 125681] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[08:30:43.383038] [D] [thread 125681] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[08:30:43.383050] [D] [thread 125681] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 5 exists[m
[32m[08:30:43.383058] [I] [thread 125681] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[08:30:43.383067] [D] [thread 125681] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[08:30:43.383151] [D] [thread 125681] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[08:30:43.383282] [I] [thread 125681] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[36m[08:30:43.383387] [D] [thread 125681] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[08:30:43.383750] [D] [thread 125681] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[08:30:43.383867] [D] [thread 125681] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[08:30:44.132313] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:45.133660] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:46.134938] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:47.136215] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:47.942597] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:47.943099] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[08:30:47.944032] [I] [thread 125713] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[08:30:47.945884] [I] [thread 125713] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[08:30:48.318434] [D] [thread 125712] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.33"
grpcPort: 46475
dataPort: 42341
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[08:30:48.318699] [D] [thread 125712] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.33"
grpcPort: 46475
dataPort: 42341
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[08:30:48.318776] [D] [thread 125712] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[08:30:48.319404] [D] [thread 125712] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[08:30:48.319540] [D] [thread 125712] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[08:30:48.319612] [D] [thread 125712] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 6 and resources 65535[m
[36m[08:30:48.319782] [D] [thread 125712] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[08:30:48.319880] [I] [thread 125712] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[08:30:48.320438] [I] [thread 125712] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[08:30:48.320740] [D] [thread 125712] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 6[m
[36m[08:30:48.320998] [D] [thread 125712] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[08:30:48.321716] [D] [thread 125712] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[08:30:48.321976] [I] [thread 125712] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[08:30:48.322018] [D] [thread 125712] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[08:30:48.322071] [D] [thread 125712] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[08:30:48.322123] [D] [thread 125712] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[08:30:48.322183] [D] [thread 125712] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[08:30:48.323270] [D] [thread 125712] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=6[m
[36m[08:30:48.359159] [D] [thread 125712] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 6
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream5"
  logicalSourceName: "debs"
}
[m
[32m[08:30:48.359264] [I] [thread 125712] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[08:30:48.359296] [D] [thread 125712] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[08:30:48.359369] [D] [thread 125712] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= test_stream5 logical source= debs[m
[36m[08:30:48.359542] [D] [thread 125712] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[08:30:48.359583] [D] [thread 125712] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream5[m
[36m[08:30:48.359714] [D] [thread 125712] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[08:30:48.359766] [D] [thread 125712] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream5 does not exist, try to add[m
[36m[08:30:48.359896] [D] [thread 125712] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[08:30:48.360030] [D] [thread 125712] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[08:30:48.360127] [D] [thread 125712] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[08:30:48.364892] [D] [thread 125714] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 6
oldParent: 1
newParent: 2
[m
[36m[08:30:48.365003] [D] [thread 125714] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 6  parentId= 1[m
[32m[08:30:48.365032] [I] [thread 125714] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[08:30:48.365060] [D] [thread 125714] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[08:30:48.365086] [D] [thread 125714] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  6  exists[m
[32m[08:30:48.365101] [I] [thread 125714] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[08:30:48.365117] [D] [thread 125714] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[08:30:48.365135] [D] [thread 125714] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[08:30:48.365208] [D] [thread 125714] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[08:30:48.365351] [I] [thread 125714] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[08:30:48.365400] [D] [thread 125714] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[08:30:48.365424] [D] [thread 125714] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[08:30:48.365447] [D] [thread 125714] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 6  parentId= 2[m
[32m[08:30:48.365465] [I] [thread 125714] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[08:30:48.365485] [D] [thread 125714] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[08:30:48.365508] [D] [thread 125714] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 6 exists[m
[32m[08:30:48.365522] [I] [thread 125714] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[08:30:48.365538] [D] [thread 125714] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[08:30:48.365557] [D] [thread 125714] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[08:30:48.365669] [I] [thread 125714] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[36m[08:30:48.365721] [D] [thread 125714] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[08:30:48.366034] [D] [thread 125714] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[08:30:48.366062] [D] [thread 125714] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[08:30:48.944392] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:49.945665] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:50.946962] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:51.948286] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:52.280777] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:52.281300] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[08:30:52.282516] [I] [thread 125715] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[08:30:52.284515] [I] [thread 125715] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[08:30:52.544186] [D] [thread 125714] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.34"
grpcPort: 34507
dataPort: 34019
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[08:30:52.544511] [D] [thread 125714] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.34"
grpcPort: 34507
dataPort: 34019
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[08:30:52.544596] [D] [thread 125714] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[08:30:52.545153] [D] [thread 125714] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[08:30:52.545223] [D] [thread 125714] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[08:30:52.545320] [D] [thread 125714] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 7 and resources 65535[m
[36m[08:30:52.545501] [D] [thread 125714] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[08:30:52.545619] [I] [thread 125714] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[08:30:52.545770] [I] [thread 125714] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[08:30:52.545854] [D] [thread 125714] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 7[m
[36m[08:30:52.545957] [D] [thread 125714] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[08:30:52.546391] [D] [thread 125714] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[08:30:52.546456] [I] [thread 125714] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[08:30:52.546488] [D] [thread 125714] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[08:30:52.546550] [D] [thread 125714] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[08:30:52.546578] [D] [thread 125714] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[08:30:52.546606] [D] [thread 125714] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[08:30:52.547197] [D] [thread 125714] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=7[m
[36m[08:30:52.583596] [D] [thread 125712] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 7
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream6"
  logicalSourceName: "debs"
}
[m
[32m[08:30:52.583692] [I] [thread 125712] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[08:30:52.583719] [D] [thread 125712] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[08:30:52.583781] [D] [thread 125712] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= test_stream6 logical source= debs[m
[36m[08:30:52.583934] [D] [thread 125712] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[08:30:52.583968] [D] [thread 125712] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream6[m
[36m[08:30:52.584020] [D] [thread 125712] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[08:30:52.584040] [D] [thread 125712] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[08:30:52.584061] [D] [thread 125712] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream6 does not exist, try to add[m
[36m[08:30:52.584081] [D] [thread 125712] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[08:30:52.584115] [D] [thread 125712] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[08:30:52.584130] [D] [thread 125712] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[08:30:52.587705] [D] [thread 125712] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 7
oldParent: 1
newParent: 3
[m
[36m[08:30:52.587793] [D] [thread 125712] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 7  parentId= 1[m
[32m[08:30:52.587814] [I] [thread 125712] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[08:30:52.587837] [D] [thread 125712] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[08:30:52.587857] [D] [thread 125712] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  7  exists[m
[32m[08:30:52.587868] [I] [thread 125712] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[08:30:52.587880] [D] [thread 125712] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[08:30:52.587894] [D] [thread 125712] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[08:30:52.587958] [D] [thread 125712] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[08:30:52.588108] [I] [thread 125712] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[08:30:52.588149] [D] [thread 125712] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[08:30:52.588172] [D] [thread 125712] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[08:30:52.588195] [D] [thread 125712] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 7  parentId= 3[m
[32m[08:30:52.588213] [I] [thread 125712] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[08:30:52.588234] [D] [thread 125712] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[08:30:52.588255] [D] [thread 125712] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 7 exists[m
[32m[08:30:52.588271] [I] [thread 125712] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[08:30:52.588287] [D] [thread 125712] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[08:30:52.588306] [D] [thread 125712] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[08:30:52.588499] [I] [thread 125712] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[08:30:52.588559] [D] [thread 125712] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[08:30:52.588965] [D] [thread 125712] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[08:30:52.588999] [D] [thread 125712] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[08:30:53.282587] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:54.283892] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:55.285165] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:56.286460] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:57.287739] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:57.362072] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:57.362525] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[08:30:57.363180] [I] [thread 125716] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[08:30:57.365428] [I] [thread 125716] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[08:30:57.580220] [D] [thread 125714] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.35"
grpcPort: 41727
dataPort: 42353
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[08:30:57.580530] [D] [thread 125714] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.35"
grpcPort: 41727
dataPort: 42353
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[08:30:57.580610] [D] [thread 125714] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[08:30:57.581425] [D] [thread 125714] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[08:30:57.581501] [D] [thread 125714] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[08:30:57.581577] [D] [thread 125714] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 8 and resources 65535[m
[36m[08:30:57.581745] [D] [thread 125714] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[08:30:57.581873] [I] [thread 125714] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[08:30:57.582236] [I] [thread 125714] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[08:30:57.582592] [D] [thread 125714] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 8[m
[36m[08:30:57.582924] [D] [thread 125714] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[08:30:57.583774] [D] [thread 125714] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[08:30:57.583930] [I] [thread 125714] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[08:30:57.583974] [D] [thread 125714] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[08:30:57.584025] [D] [thread 125714] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[08:30:57.584039] [D] [thread 125714] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[08:30:57.584057] [D] [thread 125714] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[08:30:57.584751] [D] [thread 125714] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=8[m
[36m[08:30:57.621485] [D] [thread 125712] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 8
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream7"
  logicalSourceName: "debs"
}
[m
[32m[08:30:57.621576] [I] [thread 125712] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[08:30:57.621603] [D] [thread 125712] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[08:30:57.621665] [D] [thread 125712] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= test_stream7 logical source= debs[m
[36m[08:30:57.621815] [D] [thread 125712] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[08:30:57.621848] [D] [thread 125712] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream7[m
[36m[08:30:57.621902] [D] [thread 125712] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[08:30:57.621922] [D] [thread 125712] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[08:30:57.621937] [D] [thread 125712] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[08:30:57.621957] [D] [thread 125712] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream7 does not exist, try to add[m
[36m[08:30:57.621976] [D] [thread 125712] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[08:30:57.621996] [D] [thread 125712] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[08:30:57.622011] [D] [thread 125712] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[08:30:57.625712] [D] [thread 125712] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 8
oldParent: 1
newParent: 3
[m
[36m[08:30:57.625805] [D] [thread 125712] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 8  parentId= 1[m
[32m[08:30:57.625827] [I] [thread 125712] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[08:30:57.625849] [D] [thread 125712] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[08:30:57.625868] [D] [thread 125712] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  8  exists[m
[32m[08:30:57.625880] [I] [thread 125712] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[08:30:57.625891] [D] [thread 125712] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[08:30:57.625905] [D] [thread 125712] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[08:30:57.625964] [D] [thread 125712] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[08:30:57.626076] [I] [thread 125712] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[08:30:57.626105] [D] [thread 125712] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[08:30:57.626122] [D] [thread 125712] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[08:30:57.626153] [D] [thread 125712] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 8  parentId= 3[m
[32m[08:30:57.626166] [I] [thread 125712] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[08:30:57.626181] [D] [thread 125712] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[08:30:57.626196] [D] [thread 125712] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 8 exists[m
[32m[08:30:57.626207] [I] [thread 125712] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[08:30:57.626270] [D] [thread 125712] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[08:30:57.626286] [D] [thread 125712] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[08:30:57.626379] [I] [thread 125712] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[08:30:57.626422] [D] [thread 125712] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[08:30:57.626741] [D] [thread 125712] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[08:30:57.626765] [D] [thread 125712] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[08:30:58.363822] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:30:59.365114] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:00.366432] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:01.150204] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:01.150574] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[08:31:01.151137] [I] [thread 125719] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[08:31:01.152481] [I] [thread 125719] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[08:31:01.305329] [D] [thread 125718] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.37"
grpcPort: 36655
dataPort: 42547
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[08:31:01.305604] [D] [thread 125718] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.37"
grpcPort: 36655
dataPort: 42547
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[08:31:01.305685] [D] [thread 125718] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[08:31:01.306272] [D] [thread 125718] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[08:31:01.306305] [D] [thread 125718] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[08:31:01.306365] [D] [thread 125718] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 9 and resources 65535[m
[36m[08:31:01.306531] [D] [thread 125718] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[08:31:01.306623] [I] [thread 125718] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[08:31:01.306774] [I] [thread 125718] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[08:31:01.306858] [D] [thread 125718] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 9[m
[36m[08:31:01.306960] [D] [thread 125718] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[08:31:01.307483] [D] [thread 125718] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[08:31:01.307548] [I] [thread 125718] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[08:31:01.307580] [D] [thread 125718] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[08:31:01.307626] [D] [thread 125718] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[08:31:01.307651] [D] [thread 125718] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[08:31:01.307678] [D] [thread 125718] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[08:31:01.308272] [D] [thread 125718] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=9[m
[36m[08:31:01.344659] [D] [thread 125718] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 9
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream8"
  logicalSourceName: "debs"
}
[m
[32m[08:31:01.344768] [I] [thread 125718] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[08:31:01.344800] [D] [thread 125718] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[08:31:01.344874] [D] [thread 125718] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= test_stream8 logical source= debs[m
[36m[08:31:01.345052] [D] [thread 125718] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[08:31:01.345091] [D] [thread 125718] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream8[m
[36m[08:31:01.345156] [D] [thread 125718] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[08:31:01.345183] [D] [thread 125718] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[08:31:01.345205] [D] [thread 125718] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[08:31:01.345226] [D] [thread 125718] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[08:31:01.345253] [D] [thread 125718] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream8 does not exist, try to add[m
[36m[08:31:01.345277] [D] [thread 125718] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[08:31:01.345321] [D] [thread 125718] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[08:31:01.345341] [D] [thread 125718] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[08:31:01.348970] [D] [thread 125718] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 9
oldParent: 1
newParent: 4
[m
[36m[08:31:01.349070] [D] [thread 125718] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 9  parentId= 1[m
[32m[08:31:01.349099] [I] [thread 125718] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[08:31:01.349126] [D] [thread 125718] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[08:31:01.349152] [D] [thread 125718] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  9  exists[m
[32m[08:31:01.349167] [I] [thread 125718] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[08:31:01.349183] [D] [thread 125718] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[08:31:01.349202] [D] [thread 125718] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[08:31:01.349272] [D] [thread 125718] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[08:31:01.349430] [I] [thread 125718] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[08:31:01.349468] [D] [thread 125718] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[08:31:01.349491] [D] [thread 125718] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[08:31:01.349513] [D] [thread 125718] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 9  parentId= 4[m
[32m[08:31:01.349530] [I] [thread 125718] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[08:31:01.349551] [D] [thread 125718] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[08:31:01.349573] [D] [thread 125718] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 9 exists[m
[32m[08:31:01.349587] [I] [thread 125718] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[08:31:01.349603] [D] [thread 125718] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[08:31:01.349621] [D] [thread 125718] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  4  exists[m
[32m[08:31:01.349739] [I] [thread 125718] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[08:31:01.349792] [D] [thread 125718] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[08:31:01.350217] [D] [thread 125718] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[08:31:01.350248] [D] [thread 125718] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[08:31:02.151819] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:03.153097] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:04.154353] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:05.155636] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:06.156917] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:06.750629] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:06.751323] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[08:31:06.752189] [I] [thread 125725] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[08:31:06.754977] [I] [thread 125725] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[08:31:06.804963] [D] [thread 125723] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.38"
grpcPort: 43257
dataPort: 39237
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[08:31:06.805132] [D] [thread 125723] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.38"
grpcPort: 43257
dataPort: 39237
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[08:31:06.805179] [D] [thread 125723] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[08:31:06.805543] [D] [thread 125723] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[08:31:06.805583] [D] [thread 125723] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[08:31:06.805637] [D] [thread 125723] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 10 and resources 65535[m
[36m[08:31:06.805754] [D] [thread 125723] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[08:31:06.805808] [I] [thread 125723] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[08:31:06.805895] [I] [thread 125723] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[08:31:06.805956] [D] [thread 125723] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 10[m
[36m[08:31:06.874830] [D] [thread 125723] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[08:31:06.875293] [D] [thread 125723] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[08:31:06.875402] [I] [thread 125723] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[08:31:06.875428] [D] [thread 125723] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[08:31:06.875466] [D] [thread 125723] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[08:31:06.875477] [D] [thread 125723] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[08:31:06.875493] [D] [thread 125723] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[08:31:06.875938] [D] [thread 125723] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=10[m
[36m[08:31:06.991721] [D] [thread 125724] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 10
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream9"
  logicalSourceName: "debs"
}
[m
[32m[08:31:06.991859] [I] [thread 125724] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[08:31:06.991903] [D] [thread 125724] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[08:31:06.991992] [D] [thread 125724] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= test_stream9 logical source= debs[m
[36m[08:31:06.992203] [D] [thread 125724] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[08:31:06.992252] [D] [thread 125724] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream9[m
[36m[08:31:06.992387] [D] [thread 125724] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[08:31:06.992432] [D] [thread 125724] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[08:31:06.992461] [D] [thread 125724] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[08:31:06.992487] [D] [thread 125724] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[08:31:06.992514] [D] [thread 125724] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=test_stream8[m
[36m[08:31:06.992569] [D] [thread 125724] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream9 does not exist, try to add[m
[36m[08:31:06.992606] [D] [thread 125724] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[08:31:06.992642] [D] [thread 125724] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[08:31:06.992667] [D] [thread 125724] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[08:31:07.001137] [D] [thread 125724] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 10
oldParent: 1
newParent: 4
[m
[36m[08:31:07.001229] [D] [thread 125724] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 10  parentId= 1[m
[32m[08:31:07.001254] [I] [thread 125724] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[08:31:07.001280] [D] [thread 125724] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[08:31:07.001304] [D] [thread 125724] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  10  exists[m
[32m[08:31:07.001317] [I] [thread 125724] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[08:31:07.001332] [D] [thread 125724] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[08:31:07.001348] [D] [thread 125724] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[08:31:07.001413] [D] [thread 125724] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[08:31:07.001539] [I] [thread 125724] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[08:31:07.001573] [D] [thread 125724] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[08:31:07.001593] [D] [thread 125724] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[08:31:07.001613] [D] [thread 125724] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 10  parentId= 4[m
[32m[08:31:07.001628] [I] [thread 125724] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[08:31:07.001646] [D] [thread 125724] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[08:31:07.001664] [D] [thread 125724] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 10 exists[m
[32m[08:31:07.001677] [I] [thread 125724] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[08:31:07.001692] [D] [thread 125724] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[08:31:07.001708] [D] [thread 125724] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  4  exists[m
[32m[08:31:07.001824] [I] [thread 125724] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[08:31:07.001874] [D] [thread 125724] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[08:31:07.002355] [D] [thread 125724] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[08:31:07.002386] [D] [thread 125724] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[08:31:07.752513] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:08.753797] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:08.905733] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:08.906251] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[08:31:08.907209] [I] [thread 125726] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[08:31:08.910340] [I] [thread 125726] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[08:31:09.907534] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:10.706356] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:10.707038] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:10.929666] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:10.930152] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:10.932237] [D] [thread 125731] [QueryController.hpp:223] [submitQuery] QueryController: handlePost -execute-query: Params: userQuery= Query::from("debs").window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out","CSV_FORMAT","APPEND", true));, strategyName= BottomUp, faultTolerance= NONE, lineage= NONE[m
[32m[08:31:10.932408] [I] [thread 125731] [QueryService.cpp:69] [validateAndQueueAddQueryRequest] QueryService: Validating and registering the user query.[m
[32m[08:31:10.932435] [I] [thread 125731] [QueryService.cpp:73] [validateAndQueueAddQueryRequest] QueryService: check validation of a query.[m
[36m[08:31:10.932485] [D] [thread 125731] [SyntacticQueryValidation.cpp:40] [validate] SyntacticQueryValidation: parse C++ query from query string.[m
[36m[08:31:10.932581] [D] [thread 125731] [QueryParsingService.cpp:94] [createQueryFromCodeString]  QueryParsingService: source name = "debs"[m
[36m[08:31:10.932648] [D] [thread 125731] [QueryParsingService.cpp:100] [createQueryFromCodeString] QueryParsingService: parsed query = return Query::from("debs").window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out","CSV_FORMAT","APPEND", true));[m
[36m[08:31:10.932682] [D] [thread 125731] [QueryParsingService.cpp:104] [createQueryFromCodeString] QueryParsingService: query code
#include <API/QueryAPI.hpp>
namespace NES{
Query createQuery(){
return Query::from("debs").window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out","CSV_FORMAT","APPEND", true));
}
}
[m
[36m[08:31:10.934039] [D] [thread 125732] [File.cpp:27] [createFile] Create File to file:///tmp/query_13-11-2023_08-31-10_1379975.cpp[m
[36m[08:31:10.934542] [D] [thread 125732] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[08:31:10.934618] [D] [thread 125732] [CPPCompilerFlags.cpp:64] [enableProfilingFlags] Compilation Time tracing is activated open: chrome://tracing/[m
[36m[08:31:10.934948] [D] [thread 125732] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DNES_COMPILE_TIME_LOG_LEVEL=6 -o/tmp/query_13-11-2023_08-31-10_1379975.so -fno-trigraphs -fpic -Wparentheses-equality -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -std=c++20 -stdlib=libstdc++ -shared -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -ftime-trace -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-core/ -I/home/ubuntu/git/nebulastream/build/include/nebulastream -DFMT_HEADER_ONLY /tmp/query_13-11-2023_08-31-10_1379975.cpp'[m
[36m[08:31:11.931356] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:12.932585] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[08:31:13.846292] [I] [thread 125732] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 2912.347349ms[m
[36m[08:31:13.846637] [D] [thread 125731] [Query.cpp:231] [from] Query: create new Query with source debs[m
[36m[08:31:13.846691] [D] [thread 125731] [QueryPlanBuilder.cpp:43] [createQueryPlan] QueryPlanBuilder: create query plan for input source  debs[m
[32m[08:31:13.847003] [I] [thread 125731] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[08:31:13.848280] [D] [thread 125731] [WindowedQuery.cpp:122] [windowByKey] Query: add keyed window operator[m
[36m[08:31:13.848792] [D] [thread 125731] [WindowedQuery.cpp:142] [windowByKey] add default watermark strategy as non is provided[m
[32m[08:31:13.849211] [I] [thread 125731] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[08:31:13.849385] [D] [thread 125731] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WATERMARKASSIGNER(2) as new root of the plan.[m
[36m[08:31:13.849558] [D] [thread 125731] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:13.849600] [D] [thread 125731] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[08:31:13.850045] [I] [thread 125731] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[08:31:13.850248] [D] [thread 125731] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WINDOW AGGREGATION(OP-3, Min;) as new root of the plan.[m
[36m[08:31:13.850409] [D] [thread 125731] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:13.850441] [D] [thread 125731] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[08:31:13.850645] [D] [thread 125731] [Query.cpp:353] [sink] Query: add sink operator to query[m
[32m[08:31:13.850794] [I] [thread 125731] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[08:31:13.850938] [D] [thread 125731] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(4: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[08:31:13.851101] [D] [thread 125731] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:13.851137] [D] [thread 125731] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[08:31:13.852047] [D] [thread 125731] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[08:31:13.852264] [D] [thread 125731] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[08:31:13.852435] [D] [thread 125731] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[08:31:13.852629] [D] [thread 125731] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[08:31:13.852708] [D] [thread 125731] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[08:31:13.852743] [D] [thread 125731] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[08:31:13.852846] [D] [thread 125731] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[08:31:13.852897] [D] [thread 125731] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[08:31:13.852931] [D] [thread 125731] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[08:31:13.852955] [D] [thread 125731] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[08:31:13.853431] [D] [thread 125731] [TypeInferencePhase.cpp:76] [execute] TypeInferencePhase: update source descriptor for source debs with schema: debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.853498] [D] [thread 125731] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[08:31:13.853616] [D] [thread 125731] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[08:31:13.854339] [D] [thread 125731] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.855114] [D] [thread 125731] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[08:31:13.855635] [I] [thread 125731] [QueryCatalog.cpp:55] [createNewEntry] QueryCatalog: Creating query catalog entry for query with id 1[m
[32m[08:31:13.856404] [I] [thread 125731] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : RunQueryRequest { QueryId: 1, QueryPlan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
, QueryPlacementStrategy: BottomUp}[m
[32m[08:31:13.856490] [I] [thread 125731] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[08:31:13.856544] [I] [thread 125679] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[08:31:13.856665] [I] [thread 125679] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[08:31:13.856702] [I] [thread 125679] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[08:31:13.856969] [I] [thread 125679] [GlobalQueryPlanUpdatePhase.cpp:150] [processAddQueryRequest] QueryProcessingService: Request received for optimizing and deploying of the query 1[m
[36m[08:31:13.857123] [D] [thread 125679] [GlobalQueryPlanUpdatePhase.cpp:156] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[08:31:13.857159] [D] [thread 125679] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[08:31:13.857226] [D] [thread 125679] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[08:31:13.857270] [D] [thread 125679] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[08:31:13.857323] [D] [thread 125679] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[08:31:13.857359] [D] [thread 125679] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[08:31:13.857975] [D] [thread 125679] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.858493] [D] [thread 125679] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[08:31:13.858547] [D] [thread 125679] [GlobalQueryPlanUpdatePhase.cpp:160] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[08:31:13.858571] [D] [thread 125679] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[08:31:13.858821] [D] [thread 125679] [GlobalQueryPlanUpdatePhase.cpp:164] [processAddQueryRequest] QueryProcessingService: Performing Query rewrite phase for query:  1[m
[32m[08:31:13.858865] [I] [thread 125679] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[08:31:13.859103] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[08:31:13.859453] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[08:31:13.859816] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[08:31:13.860080] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[08:31:13.860458] [D] [thread 125679] [RenameSourceToProjectOperatorRule.cpp:27] [apply] RenameSourceToProjectOperatorRule: Convert all Rename Source operator to the project operator[m
[36m[08:31:13.860826] [D] [thread 125679] [ProjectBeforeUnionOperatorRule.cpp:32] [apply] Before applying ProjectBeforeUnionOperatorRule to the query plan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[08:31:13.861059] [D] [thread 125679] [ProjectBeforeUnionOperatorRule.cpp:52] [apply] After applying ProjectBeforeUnionOperatorRule to the query plan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[32m[08:31:13.861198] [I] [thread 125679] [FilterSplitUpRule.cpp:30] [apply] Applying FilterSplitUpRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[08:31:13.861339] [D] [thread 125679] [FilterSplitUpRule.cpp:38] [apply] FilterSplitUpRule: Sort all filter nodes in increasing order of the operator id[m
[32m[08:31:13.861368] [I] [thread 125679] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[08:31:13.861471] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[08:31:13.861639] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[08:31:13.861844] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[08:31:13.862009] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[08:31:13.862245] [D] [thread 125679] [FilterSplitUpRule.cpp:46] [apply] FilterSplitUpRule: Iterate over all the filter operators to split them[m
[32m[08:31:13.862460] [I] [thread 125679] [FilterPushDownRule.cpp:50] [apply] Applying FilterPushDownRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[08:31:13.862522] [D] [thread 125679] [FilterPushDownRule.cpp:58] [apply] FilterPushDownRule: Sort all filter nodes in increasing order of the operator id[m
[32m[08:31:13.862534] [I] [thread 125679] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[08:31:13.862619] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[08:31:13.862781] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[08:31:13.863001] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[08:31:13.863175] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[08:31:13.863376] [D] [thread 125679] [FilterPushDownRule.cpp:66] [apply] FilterPushDownRule: Iterate over all the filter operators to push them down in the query plan[m
[32m[08:31:13.863547] [I] [thread 125679] [FilterPushDownRule.cpp:71] [apply] FilterPushDownRule: Return the updated query plan SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[32m[08:31:13.863688] [I] [thread 125679] [FilterMergeRule.cpp:27] [apply] Applying FilterMergeRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[08:31:13.863842] [D] [thread 125679] [FilterMergeRule.cpp:30] [apply] FilterMergeRule: Identified 0 filter nodes in the query plan[m
[36m[08:31:13.863988] [D] [thread 125679] [FilterMergeRule.cpp:31] [apply] Query before applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[08:31:13.864084] [D] [thread 125679] [FilterMergeRule.cpp:77] [apply] Query after applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[08:31:13.864211] [D] [thread 125679] [PredicateReorderingRule.cpp:28] [apply] PredicateReorderingRule: Identified 0 filter nodes in the query plan[m
[36m[08:31:13.864392] [D] [thread 125679] [PredicateReorderingRule.cpp:29] [apply] Query before applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[08:31:13.864508] [D] [thread 125679] [PredicateReorderingRule.cpp:87] [apply] Query after applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[08:31:13.864634] [D] [thread 125679] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[08:31:13.864693] [D] [thread 125679] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[08:31:13.864737] [D] [thread 125679] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[08:31:13.864787] [D] [thread 125679] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[08:31:13.864825] [D] [thread 125679] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[08:31:13.865409] [D] [thread 125679] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.865900] [D] [thread 125679] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[08:31:13.866001] [I] [thread 125679] [SignatureInferencePhase.cpp:59] [execute] Skipping signature creation[m
[32m[08:31:13.866208] [I] [thread 125679] [LogicalSourceExpansionRule.cpp:49] [apply] LogicalSourceExpansionRule: Plan before
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[08:31:13.866243] [D] [thread 125679] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[08:31:13.866302] [D] [thread 125679] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[08:31:13.866347] [D] [thread 125679] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[32m[08:31:13.867028] [I] [thread 125679] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[08:31:13.867133] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[08:31:13.867244] [D] [thread 125679] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[08:31:13.867268] [D] [thread 125679] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[08:31:13.867305] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[08:31:13.867564] [D] [thread 125679] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[08:31:13.868141] [I] [thread 125679] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[08:31:13.868243] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[08:31:13.868395] [D] [thread 125679] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[08:31:13.868420] [D] [thread 125679] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[08:31:13.868458] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[08:31:13.868707] [D] [thread 125679] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[08:31:13.869068] [I] [thread 125679] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[08:31:13.869148] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[08:31:13.869242] [D] [thread 125679] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[08:31:13.869313] [D] [thread 125679] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[08:31:13.869356] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[08:31:13.869604] [D] [thread 125679] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[08:31:13.870047] [I] [thread 125679] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[08:31:13.870133] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[08:31:13.870255] [D] [thread 125679] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[08:31:13.870277] [D] [thread 125679] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[08:31:13.870314] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[08:31:13.870540] [D] [thread 125679] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[08:31:13.870944] [I] [thread 125679] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[08:31:13.871028] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[08:31:13.871124] [D] [thread 125679] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[08:31:13.871141] [D] [thread 125679] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[08:31:13.871176] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[08:31:13.871398] [D] [thread 125679] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[08:31:13.871761] [I] [thread 125679] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[08:31:13.871841] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[08:31:13.871940] [D] [thread 125679] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[08:31:13.871958] [D] [thread 125679] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[08:31:13.871992] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[08:31:13.872248] [D] [thread 125679] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[36m[08:31:13.872906] [D] [thread 125679] [LogicalSourceExpansionRule.cpp:151] [apply] LogicalSourceExpansionRule: Plan after
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[32m[08:31:13.873042] [I] [thread 125679] [DistributedJoinRule.cpp:31] [apply] DistributeJoinRule: Apply DistributeJoinRule.[m
[36m[08:31:13.873284] [D] [thread 125679] [DistributedJoinRule.cpp:32] [apply] DistributeJoinRule::apply: plan before replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[08:31:13.873586] [D] [thread 125679] [DistributedJoinRule.cpp:55] [apply] DistributeJoinRule::apply: no join operator in query[m
[36m[08:31:13.873892] [D] [thread 125679] [DistributedJoinRule.cpp:58] [apply] DistributeJoinRule::apply: plan after replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[08:31:13.873969] [D] [thread 125679] [NemoWindowPinningRule.cpp:58] [apply] NemoWindowPinningRule: Apply NemoWindowPinningRule.[m
[36m[08:31:13.874198] [D] [thread 125679] [NemoWindowPinningRule.cpp:59] [apply] NemoWindowPinningRule::apply: plan before replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[08:31:13.874544] [D] [thread 125679] [NemoWindowPinningRule.cpp:68] [apply] NemoWindowPinningRule::apply: found 1 window operators[m
[36m[08:31:13.874650] [D] [thread 125679] [NemoWindowPinningRule.cpp:70] [apply] NemoWindowPinningRule::apply: window operator WINDOW AGGREGATION(OP-3, Min;)[m
[36m[08:31:13.874697] [D] [thread 125679] [NemoWindowPinningRule.cpp:92] [createCentralWindowOperator] NemoWindowPinningRule::apply: introduce centralized window operator for window WINDOW AGGREGATION(OP-3, Min;)[m
[32m[08:31:13.874798] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[36m[08:31:13.874997] [D] [thread 125679] [NemoWindowPinningRule.cpp:94] [createCentralWindowOperator] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(17) old node=WINDOW AGGREGATION(OP-3, Min;)[m
[36m[08:31:13.875120] [D] [thread 125679] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[08:31:13.875153] [D] [thread 125679] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[08:31:13.875228] [I] [thread 125679] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[08:31:13.875241] [I] [thread 125679] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[08:31:13.875259] [I] [thread 125679] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[08:31:13.875334] [D] [thread 125679] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[08:31:13.875351] [D] [thread 125679] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[08:31:13.875412] [D] [thread 125679] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[08:31:13.875452] [D] [thread 125679] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[08:31:13.875517] [D] [thread 125679] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[08:31:13.875533] [D] [thread 125679] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[08:31:13.875593] [D] [thread 125679] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[08:31:13.875606] [D] [thread 125679] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[08:31:13.875674] [D] [thread 125679] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[08:31:13.875688] [D] [thread 125679] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[08:31:13.875754] [D] [thread 125679] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[08:31:13.875768] [D] [thread 125679] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[08:31:13.875840] [D] [thread 125679] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[08:31:13.875857] [D] [thread 125679] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[36m[08:31:13.876141] [D] [thread 125679] [NemoWindowPinningRule.cpp:81] [apply] NemoWindowPinningRule::apply: central op
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(17)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[08:31:13.876418] [D] [thread 125679] [NemoWindowPinningRule.cpp:87] [apply] NemoWindowPinningRule::apply: plan after replace
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(17)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[08:31:13.876736] [D] [thread 125679] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[08:31:13.876837] [D] [thread 125679] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[08:31:13.876908] [D] [thread 125679] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 6 source operators.[m
[36m[08:31:13.876970] [D] [thread 125679] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[08:31:13.877010] [D] [thread 125679] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[08:31:13.878416] [D] [thread 125679] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[08:31:13.878758] [I] [thread 125679] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[08:31:13.878897] [I] [thread 125679] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[08:31:13.879020] [D] [thread 125679] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[08:31:13.879752] [D] [thread 125679] [GlobalQueryPlanUpdatePhase.cpp:196] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[08:31:13.879824] [D] [thread 125679] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[08:31:13.880168] [D] [thread 125679] [GlobalQueryPlanUpdatePhase.cpp:203] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[08:31:13.880301] [D] [thread 125679] [GlobalQueryPlanUpdatePhase.cpp:207] [processAddQueryRequest] QueryProcessingService: Applying Query Merger Rules as Query Merging is enabled.[m
[36m[08:31:13.880387] [D] [thread 125679] [QueryMergerPhase.cpp:72] [execute] QueryMergerPhase: Executing query merger phase.[m
[32m[08:31:13.880459] [I] [thread 125679] [GlobalQueryPlan.cpp:173] [createNewSharedQueryPlan] Create new shared query plan[m
[32m[08:31:13.880508] [I] [thread 125679] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[08:31:13.880650] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[08:31:13.880855] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[32m[08:31:13.881201] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[32m[08:31:13.881445] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[32m[08:31:13.881647] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[32m[08:31:13.881840] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[32m[08:31:13.882017] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[32m[08:31:13.882194] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[32m[08:31:13.882433] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[08:31:13.882737] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[32m[08:31:13.882982] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[32m[08:31:13.883194] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[32m[08:31:13.883391] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[32m[08:31:13.883592] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[36m[08:31:13.884304] [D] [thread 125679] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[08:31:13.884401] [D] [thread 125679] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[08:31:13.884475] [D] [thread 125679] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[08:31:13.884522] [D] [thread 125679] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[08:31:13.884546] [D] [thread 125679] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[08:31:13.884568] [D] [thread 125679] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[08:31:13.884588] [D] [thread 125679] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[08:31:13.884608] [D] [thread 125679] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[08:31:13.884628] [D] [thread 125679] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[08:31:13.884650] [D] [thread 125679] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[08:31:13.884671] [D] [thread 125679] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[08:31:13.884682] [D] [thread 125679] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[08:31:13.884714] [D] [thread 125679] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[08:31:13.884726] [D] [thread 125679] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[08:31:13.884758] [D] [thread 125679] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[08:31:13.884769] [D] [thread 125679] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[08:31:13.884820] [D] [thread 125679] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[08:31:13.884838] [D] [thread 125679] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[08:31:13.884856] [D] [thread 125679] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[08:31:13.884869] [D] [thread 125679] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[08:31:13.884891] [D] [thread 125679] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[08:31:13.884903] [D] [thread 125679] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[08:31:13.886214] [D] [thread 125679] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[08:31:13.886248] [D] [thread 125679] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[08:31:13.886324] [D] [thread 125679] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[08:31:13.886345] [D] [thread 125679] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[08:31:13.886354] [D] [thread 125679] [RequestProcessorService.cpp:111] [start] QueryProcessingService: Shared Query Plan is new.[m
[36m[08:31:13.886384] [D] [thread 125679] [RequestProcessorService.cpp:115] [start] QueryProcessingService: Performing Operator placement for shared query plan[m
[32m[08:31:13.886419] [I] [thread 125679] [QueryPlacementPhase.cpp:54] [execute] QueryPlacementPhase: Perform query placement phase for shared query plan 1[m
[36m[08:31:13.886976] [D] [thread 125679] [QueryPlacementPhase.cpp:70] [execute] QueryPlacementPhase: Perform query placement for query plan
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(17)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[08:31:13.887012] [D] [thread 125679] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[08:31:13.887026] [D] [thread 125679] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[08:31:13.887091] [D] [thread 125679] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[08:31:13.887136] [D] [thread 125679] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[08:31:13.887171] [D] [thread 125679] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[08:31:13.887254] [D] [thread 125679] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[08:31:13.887280] [D] [thread 125679] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[08:31:13.887300] [D] [thread 125679] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[08:31:13.887320] [D] [thread 125679] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[08:31:13.887342] [D] [thread 125679] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[08:31:13.887363] [D] [thread 125679] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[08:31:13.887374] [D] [thread 125679] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[08:31:13.887407] [D] [thread 125679] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[08:31:13.887419] [D] [thread 125679] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[08:31:13.887444] [D] [thread 125679] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[08:31:13.887455] [D] [thread 125679] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[08:31:13.887473] [D] [thread 125679] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[08:31:13.887485] [D] [thread 125679] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[08:31:13.887500] [D] [thread 125679] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[08:31:13.887510] [D] [thread 125679] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[08:31:13.887530] [D] [thread 125679] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[08:31:13.887543] [D] [thread 125679] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[08:31:13.887796] [D] [thread 125679] [BottomUpStrategy.cpp:50] [updateGlobalExecutionPlan] Perform placement of the pinned and all their downstream operators.[m
[32m[08:31:13.887857] [I] [thread 125679] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[08:31:13.887880] [D] [thread 125679] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[08:31:13.887967] [I] [thread 125679] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[08:31:13.887979] [D] [thread 125679] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[08:31:13.888015] [I] [thread 125679] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[08:31:13.888027] [D] [thread 125679] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[08:31:13.888048] [I] [thread 125679] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[08:31:13.888058] [D] [thread 125679] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[08:31:13.888140] [I] [thread 125679] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[08:31:13.888154] [D] [thread 125679] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[08:31:13.888172] [I] [thread 125679] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[08:31:13.888183] [D] [thread 125679] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[08:31:13.888242] [I] [thread 125679] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[08:31:13.888255] [D] [thread 125679] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[32m[08:31:13.888374] [I] [thread 125679] [Topology.cpp:73] [findPathBetween] Topology: Finding path between set of start and destination nodes[m
[36m[08:31:13.888648] [D] [thread 125679] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[08:31:13.888867] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[08:31:13.889001] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[08:31:13.889098] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[08:31:13.889310] [D] [thread 125679] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[08:31:13.889384] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[08:31:13.889453] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[08:31:13.889555] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[08:31:13.889713] [D] [thread 125679] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[08:31:13.889808] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[08:31:13.889958] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[08:31:13.890045] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[08:31:13.890223] [D] [thread 125679] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[08:31:13.890314] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[08:31:13.890425] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[08:31:13.890510] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[08:31:13.890643] [D] [thread 125679] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[08:31:13.890711] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[08:31:13.890773] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[08:31:13.890841] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[08:31:13.891049] [D] [thread 125679] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[08:31:13.891152] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[08:31:13.891222] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[08:31:13.891296] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[32m[08:31:13.891354] [I] [thread 125679] [Topology.cpp:98] [mergeSubGraphs] Topology: Merge 6 sub-graphs to create a single sub-graph[m
[36m[08:31:13.891365] [D] [thread 125679] [Topology.cpp:100] [mergeSubGraphs] Topology: Compute a map storing number of times a node occurred in different sub-graphs[m
[36m[08:31:13.891732] [D] [thread 125679] [Topology.cpp:120] [mergeSubGraphs] Topology: Iterate over each sub-graph and compute a single merged sub-graph[m
[36m[08:31:13.891751] [D] [thread 125679] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[08:31:13.891839] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[08:31:13.891858] [D] [thread 125679] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[08:31:13.891894] [D] [thread 125679] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[08:31:13.891973] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[08:31:13.892156] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[08:31:13.892204] [D] [thread 125679] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[08:31:13.892254] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[08:31:13.892265] [D] [thread 125679] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[08:31:13.892291] [D] [thread 125679] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[08:31:13.892392] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[08:31:13.892464] [D] [thread 125679] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[08:31:13.892570] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[08:31:13.892593] [D] [thread 125679] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[08:31:13.892622] [D] [thread 125679] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[08:31:13.892671] [W] [thread 125679] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[08:31:13.892696] [D] [thread 125679] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[08:31:13.892775] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[08:31:13.892790] [D] [thread 125679] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[08:31:13.892808] [D] [thread 125679] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[08:31:13.892871] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[08:31:13.892926] [D] [thread 125679] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[08:31:13.892968] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[08:31:13.892979] [D] [thread 125679] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[08:31:13.893001] [D] [thread 125679] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[08:31:13.893042] [W] [thread 125679] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[08:31:13.893057] [D] [thread 125679] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[08:31:13.893099] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[08:31:13.893111] [D] [thread 125679] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[08:31:13.893124] [D] [thread 125679] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[08:31:13.893165] [W] [thread 125679] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[08:31:13.893243] [D] [thread 125679] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[08:31:13.893255] [D] [thread 125679] [Node.cpp:435] [getAllRootNodes] Node: Iterating over all parents to find more root nodes[m
[36m[08:31:13.893263] [D] [thread 125679] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[08:31:13.893269] [D] [thread 125679] [Node.cpp:426] [getAllRootNodes] Node: Inserting this node to the collection[m
[36m[08:31:13.893287] [D] [thread 125679] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[08:31:13.893296] [D] [thread 125679] [Node.cpp:438] [getAllRootNodes] Node: inserting parent nodes into the collection of parent nodes[m
[36m[08:31:13.893319] [D] [thread 125679] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[08:31:13.893481] [D] [thread 125679] [BottomUpStrategy.cpp:74] [pinOperators] BottomUpStrategy: Get the all source operators for performing the placement.[m
[36m[08:31:13.893551] [D] [thread 125679] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4)) placement.[m
[36m[08:31:13.893622] [D] [thread 125679] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))[m
[36m[08:31:13.893656] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[08:31:13.893709] [D] [thread 125679] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(6)[m
[36m[08:31:13.893724] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[08:31:13.893794] [D] [thread 125679] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(17)[m
[36m[08:31:13.893809] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[08:31:13.893827] [D] [thread 125679] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[08:31:13.893875] [W] [thread 125679] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[08:31:13.893892] [W] [thread 125679] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[08:31:13.893926] [D] [thread 125679] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5)) placement.[m
[36m[08:31:13.893961] [D] [thread 125679] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))[m
[36m[08:31:13.893976] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[08:31:13.894011] [D] [thread 125679] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(8)[m
[36m[08:31:13.894025] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[08:31:13.894069] [D] [thread 125679] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(17)[m
[36m[08:31:13.894084] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[08:31:13.894095] [D] [thread 125679] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[08:31:13.894159] [W] [thread 125679] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[08:31:13.894177] [W] [thread 125679] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[08:31:13.894213] [D] [thread 125679] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6)) placement.[m
[36m[08:31:13.894262] [D] [thread 125679] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))[m
[36m[08:31:13.894280] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[08:31:13.894319] [D] [thread 125679] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(10)[m
[36m[08:31:13.894334] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[08:31:13.894382] [D] [thread 125679] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(17)[m
[36m[08:31:13.894398] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[08:31:13.894409] [D] [thread 125679] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[08:31:13.894467] [W] [thread 125679] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[08:31:13.894495] [W] [thread 125679] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[08:31:13.894531] [D] [thread 125679] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7)) placement.[m
[36m[08:31:13.894568] [D] [thread 125679] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))[m
[36m[08:31:13.894584] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[08:31:13.894619] [D] [thread 125679] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(12)[m
[36m[08:31:13.894634] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[08:31:13.894679] [D] [thread 125679] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(17)[m
[36m[08:31:13.894694] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[08:31:13.894705] [D] [thread 125679] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[08:31:13.894771] [W] [thread 125679] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[08:31:13.894833] [W] [thread 125679] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[08:31:13.894874] [D] [thread 125679] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8)) placement.[m
[36m[08:31:13.894913] [D] [thread 125679] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))[m
[36m[08:31:13.894930] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[08:31:13.894968] [D] [thread 125679] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(14)[m
[36m[08:31:13.894983] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[08:31:13.895029] [D] [thread 125679] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(17)[m
[36m[08:31:13.895044] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[08:31:13.895056] [D] [thread 125679] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[08:31:13.895127] [W] [thread 125679] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[08:31:13.895144] [W] [thread 125679] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[08:31:13.895176] [D] [thread 125679] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9)) placement.[m
[36m[08:31:13.895210] [D] [thread 125679] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))[m
[36m[08:31:13.895286] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[08:31:13.895327] [D] [thread 125679] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(16)[m
[36m[08:31:13.895351] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[08:31:13.895405] [D] [thread 125679] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(17)[m
[36m[08:31:13.895421] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[08:31:13.895434] [D] [thread 125679] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[08:31:13.895512] [D] [thread 125679] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[08:31:13.895555] [D] [thread 125679] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[08:31:13.895569] [D] [thread 125679] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[08:31:13.895828] [D] [thread 125679] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[08:31:13.895855] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[08:31:13.895879] [D] [thread 125679] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[08:31:13.895922] [D] [thread 125679] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[08:31:13.895963] [D] [thread 125679] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[08:31:13.895974] [D] [thread 125679] [BottomUpStrategy.cpp:103] [pinOperators] BottomUpStrategy: Finished placing query operators into the global execution plan[m
[36m[08:31:13.895986] [D] [thread 125679] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[08:31:13.896037] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[08:31:13.896073] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[08:31:13.896302] [D] [thread 125679] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4)) on execution node with id 5[m
[36m[08:31:13.896354] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[08:31:13.896388] [W] [thread 125679] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[08:31:13.896619] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[36m[08:31:13.896830] [D] [thread 125679] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4)) as new root of the plan.[m
[36m[08:31:13.896849] [D] [thread 125679] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:13.896857] [D] [thread 125679] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[08:31:13.896886] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.896900] [D] [thread 125679] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[08:31:13.897035] [D] [thread 125679] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[08:31:13.897123] [D] [thread 125679] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[08:31:13.897160] [W] [thread 125679] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[08:31:13.897172] [D] [thread 125679] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[08:31:13.897265] [D] [thread 125679] [GlobalExecutionPlan.cpp:188] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Query Id 1 does not exists adding a new entry with execution node 5[m
[36m[08:31:13.897444] [D] [thread 125679] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[08:31:13.897467] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[08:31:13.897494] [I] [thread 125679] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[08:31:13.897518] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[08:31:13.897578] [D] [thread 125679] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[08:31:13.897663] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[08:31:13.897683] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[08:31:13.897744] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[08:31:13.897757] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[08:31:13.897794] [D] [thread 125679] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(6) on execution node with id 5[m
[36m[08:31:13.897806] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.897823] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.897854] [D] [thread 125679] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[08:31:13.897866] [D] [thread 125679] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[08:31:13.897902] [D] [thread 125679] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[08:31:13.897913] [D] [thread 125679] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[08:31:13.897981] [D] [thread 125679] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[08:31:13.897993] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.898023] [D] [thread 125679] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[08:31:13.898117] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[36m[08:31:13.898305] [D] [thread 125679] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[08:31:13.898336] [D] [thread 125679] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[08:31:13.898354] [D] [thread 125679] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[08:31:13.898364] [D] [thread 125679] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[08:31:13.898494] [D] [thread 125679] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4)) as root operator.[m
[36m[08:31:13.898560] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.898576] [D] [thread 125679] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[08:31:13.898614] [D] [thread 125679] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[08:31:13.898633] [D] [thread 125679] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[08:31:13.898648] [W] [thread 125679] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[08:31:13.898657] [D] [thread 125679] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[08:31:13.898762] [D] [thread 125679] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[08:31:13.898819] [D] [thread 125679] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[08:31:13.898837] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[08:31:13.898853] [I] [thread 125679] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[08:31:13.898873] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[08:31:13.898924] [D] [thread 125679] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[08:31:13.898995] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[08:31:13.899014] [W] [thread 125679] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[08:31:13.899022] [D] [thread 125679] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[08:31:13.899036] [D] [thread 125679] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[08:31:13.899084] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[08:31:13.899102] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[08:31:13.899194] [D] [thread 125679] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5)) on execution node with id 6[m
[36m[08:31:13.899209] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[08:31:13.899222] [W] [thread 125679] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[08:31:13.899315] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[36m[08:31:13.899484] [D] [thread 125679] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5)) as new root of the plan.[m
[36m[08:31:13.899500] [D] [thread 125679] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:13.899508] [D] [thread 125679] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[08:31:13.899530] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.899542] [D] [thread 125679] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[08:31:13.899593] [D] [thread 125679] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[08:31:13.899620] [D] [thread 125679] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[08:31:13.899635] [W] [thread 125679] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[08:31:13.899644] [D] [thread 125679] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[08:31:13.899699] [D] [thread 125679] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 6 to the query Id 1[m
[36m[08:31:13.899781] [D] [thread 125679] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[08:31:13.899799] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[08:31:13.899815] [I] [thread 125679] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[08:31:13.899833] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[08:31:13.899881] [D] [thread 125679] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[08:31:13.899946] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[08:31:13.899964] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[08:31:13.900013] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[08:31:13.900025] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[08:31:13.900054] [D] [thread 125679] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(8) on execution node with id 6[m
[36m[08:31:13.900066] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.900078] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.900101] [D] [thread 125679] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[08:31:13.900112] [D] [thread 125679] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[08:31:13.900140] [D] [thread 125679] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[08:31:13.900151] [D] [thread 125679] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[08:31:13.900197] [D] [thread 125679] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[08:31:13.900209] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.900226] [D] [thread 125679] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[08:31:13.900292] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[36m[08:31:13.900494] [D] [thread 125679] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[08:31:13.900518] [D] [thread 125679] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[08:31:13.900532] [D] [thread 125679] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 7 exists in the query plan or not[m
[36m[08:31:13.900541] [D] [thread 125679] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 7 in the query plan[m
[36m[08:31:13.900661] [D] [thread 125679] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5)) as root operator.[m
[36m[08:31:13.900707] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.900724] [D] [thread 125679] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[08:31:13.900759] [D] [thread 125679] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[08:31:13.900776] [D] [thread 125679] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[08:31:13.900791] [W] [thread 125679] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[08:31:13.900801] [D] [thread 125679] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[08:31:13.900853] [D] [thread 125679] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[08:31:13.900889] [D] [thread 125679] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[08:31:13.900904] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[08:31:13.900919] [I] [thread 125679] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[08:31:13.900938] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[08:31:13.901003] [D] [thread 125679] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[08:31:13.901071] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[08:31:13.901092] [W] [thread 125679] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[08:31:13.901101] [D] [thread 125679] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[08:31:13.901113] [D] [thread 125679] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[08:31:13.901158] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[08:31:13.901177] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[08:31:13.901320] [D] [thread 125679] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6)) on execution node with id 7[m
[36m[08:31:13.901336] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[08:31:13.901349] [W] [thread 125679] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[08:31:13.901445] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[36m[08:31:13.901647] [D] [thread 125679] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6)) as new root of the plan.[m
[36m[08:31:13.901668] [D] [thread 125679] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:13.901678] [D] [thread 125679] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[08:31:13.901701] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.901714] [D] [thread 125679] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[08:31:13.901769] [D] [thread 125679] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[08:31:13.901800] [D] [thread 125679] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[08:31:13.901815] [W] [thread 125679] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[08:31:13.901825] [D] [thread 125679] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[08:31:13.901880] [D] [thread 125679] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 7 to the query Id 1[m
[36m[08:31:13.901928] [D] [thread 125679] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[08:31:13.901945] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[08:31:13.901960] [I] [thread 125679] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[08:31:13.901980] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[08:31:13.902029] [D] [thread 125679] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[08:31:13.902097] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[08:31:13.902116] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[08:31:13.902168] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[08:31:13.902180] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[08:31:13.902210] [D] [thread 125679] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(10) on execution node with id 7[m
[36m[08:31:13.902222] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.902247] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.902272] [D] [thread 125679] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[08:31:13.902284] [D] [thread 125679] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[08:31:13.902314] [D] [thread 125679] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[08:31:13.902324] [D] [thread 125679] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[08:31:13.902375] [D] [thread 125679] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[08:31:13.902386] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.902403] [D] [thread 125679] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[08:31:13.902471] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[36m[08:31:13.902638] [D] [thread 125679] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[08:31:13.902656] [D] [thread 125679] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[08:31:13.902670] [D] [thread 125679] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 9 exists in the query plan or not[m
[36m[08:31:13.902691] [D] [thread 125679] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 9 in the query plan[m
[36m[08:31:13.902815] [D] [thread 125679] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6)) as root operator.[m
[36m[08:31:13.902864] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.902881] [D] [thread 125679] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[08:31:13.902920] [D] [thread 125679] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[08:31:13.902938] [D] [thread 125679] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[08:31:13.902953] [W] [thread 125679] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[08:31:13.902963] [D] [thread 125679] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[08:31:13.903018] [D] [thread 125679] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[08:31:13.903059] [D] [thread 125679] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[08:31:13.903075] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[08:31:13.903090] [I] [thread 125679] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[08:31:13.903110] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[08:31:13.903158] [D] [thread 125679] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[08:31:13.903223] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[08:31:13.903245] [W] [thread 125679] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[08:31:13.903253] [D] [thread 125679] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[08:31:13.903266] [D] [thread 125679] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[08:31:13.903309] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[08:31:13.903326] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[08:31:13.903439] [D] [thread 125679] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7)) on execution node with id 8[m
[36m[08:31:13.903455] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[08:31:13.903475] [W] [thread 125679] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[08:31:13.903568] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[36m[08:31:13.903750] [D] [thread 125679] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7)) as new root of the plan.[m
[36m[08:31:13.903767] [D] [thread 125679] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:13.903775] [D] [thread 125679] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[08:31:13.903802] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.903815] [D] [thread 125679] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[08:31:13.903865] [D] [thread 125679] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[08:31:13.903892] [D] [thread 125679] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[08:31:13.903908] [W] [thread 125679] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[08:31:13.903964] [D] [thread 125679] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[08:31:13.904024] [D] [thread 125679] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 8 to the query Id 1[m
[36m[08:31:13.904088] [D] [thread 125679] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[08:31:13.904106] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[08:31:13.904121] [I] [thread 125679] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[08:31:13.904141] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[08:31:13.904193] [D] [thread 125679] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[08:31:13.904271] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[08:31:13.904291] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[08:31:13.904383] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[08:31:13.904399] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[08:31:13.904436] [D] [thread 125679] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(12) on execution node with id 8[m
[36m[08:31:13.904448] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.904463] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.904494] [D] [thread 125679] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[08:31:13.904507] [D] [thread 125679] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[08:31:13.904541] [D] [thread 125679] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[08:31:13.904551] [D] [thread 125679] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[08:31:13.904602] [D] [thread 125679] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[08:31:13.904612] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.904630] [D] [thread 125679] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[08:31:13.904702] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[36m[08:31:13.904878] [D] [thread 125679] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[08:31:13.904895] [D] [thread 125679] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[08:31:13.904915] [D] [thread 125679] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 11 exists in the query plan or not[m
[36m[08:31:13.904925] [D] [thread 125679] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 11 in the query plan[m
[36m[08:31:13.905033] [D] [thread 125679] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7)) as root operator.[m
[36m[08:31:13.905076] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.905090] [D] [thread 125679] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[08:31:13.905122] [D] [thread 125679] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[08:31:13.905146] [D] [thread 125679] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[08:31:13.905161] [W] [thread 125679] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[08:31:13.905171] [D] [thread 125679] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[08:31:13.905226] [D] [thread 125679] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[08:31:13.905264] [D] [thread 125679] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[08:31:13.905281] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[08:31:13.905296] [I] [thread 125679] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[08:31:13.905315] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[08:31:13.905358] [D] [thread 125679] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[08:31:13.905408] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[08:31:13.905430] [W] [thread 125679] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[08:31:13.905439] [D] [thread 125679] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[08:31:13.905452] [D] [thread 125679] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[08:31:13.905504] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[08:31:13.905525] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[08:31:13.905605] [D] [thread 125679] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8)) on execution node with id 9[m
[36m[08:31:13.905619] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[08:31:13.905630] [W] [thread 125679] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[08:31:13.905713] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[36m[08:31:13.905880] [D] [thread 125679] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8)) as new root of the plan.[m
[36m[08:31:13.905896] [D] [thread 125679] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:13.905904] [D] [thread 125679] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[08:31:13.905922] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.905933] [D] [thread 125679] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[08:31:13.905977] [D] [thread 125679] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[08:31:13.905998] [D] [thread 125679] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[08:31:13.906012] [W] [thread 125679] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[08:31:13.906021] [D] [thread 125679] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[08:31:13.906065] [D] [thread 125679] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 9 to the query Id 1[m
[36m[08:31:13.906107] [D] [thread 125679] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[08:31:13.906122] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[08:31:13.906136] [I] [thread 125679] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[08:31:13.906152] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[08:31:13.906193] [D] [thread 125679] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[08:31:13.906242] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[08:31:13.906257] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[08:31:13.906309] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[08:31:13.906321] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[08:31:13.906411] [D] [thread 125679] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(14) on execution node with id 9[m
[36m[08:31:13.906434] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.906447] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.906469] [D] [thread 125679] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[08:31:13.906484] [D] [thread 125679] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[08:31:13.906513] [D] [thread 125679] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[08:31:13.906524] [D] [thread 125679] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[08:31:13.906569] [D] [thread 125679] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[08:31:13.906580] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.906597] [D] [thread 125679] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[08:31:13.906656] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[36m[08:31:13.906794] [D] [thread 125679] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[08:31:13.906809] [D] [thread 125679] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[08:31:13.906821] [D] [thread 125679] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 13 exists in the query plan or not[m
[36m[08:31:13.906830] [D] [thread 125679] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 13 in the query plan[m
[36m[08:31:13.906929] [D] [thread 125679] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8)) as root operator.[m
[36m[08:31:13.906972] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.906985] [D] [thread 125679] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[08:31:13.907012] [D] [thread 125679] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[08:31:13.907026] [D] [thread 125679] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[08:31:13.907039] [W] [thread 125679] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[08:31:13.907048] [D] [thread 125679] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[08:31:13.907094] [D] [thread 125679] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[08:31:13.907124] [D] [thread 125679] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[08:31:13.907139] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[08:31:13.907153] [I] [thread 125679] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[08:31:13.907170] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[08:31:13.907206] [D] [thread 125679] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[08:31:13.907252] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[08:31:13.907273] [W] [thread 125679] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[08:31:13.907281] [D] [thread 125679] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[08:31:13.907293] [D] [thread 125679] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[08:31:13.907348] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[08:31:13.907373] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[08:31:13.907450] [D] [thread 125679] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9)) on execution node with id 10[m
[36m[08:31:13.907463] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[08:31:13.907474] [W] [thread 125679] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[08:31:13.907548] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[36m[08:31:13.907673] [D] [thread 125679] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9)) as new root of the plan.[m
[36m[08:31:13.907686] [D] [thread 125679] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:13.907693] [D] [thread 125679] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[08:31:13.907711] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.907722] [D] [thread 125679] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[08:31:13.907769] [D] [thread 125679] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[08:31:13.907791] [D] [thread 125679] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[08:31:13.907805] [W] [thread 125679] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[08:31:13.907814] [D] [thread 125679] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[08:31:13.907854] [D] [thread 125679] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 10 to the query Id 1[m
[36m[08:31:13.907895] [D] [thread 125679] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[08:31:13.907910] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[08:31:13.907923] [I] [thread 125679] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[08:31:13.907938] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[08:31:13.907978] [D] [thread 125679] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[08:31:13.908025] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[08:31:13.908040] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[08:31:13.908083] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[08:31:13.908095] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[08:31:13.908121] [D] [thread 125679] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(16) on execution node with id 10[m
[36m[08:31:13.908132] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.908142] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.908160] [D] [thread 125679] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[08:31:13.908175] [D] [thread 125679] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[08:31:13.908200] [D] [thread 125679] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[08:31:13.908211] [D] [thread 125679] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[08:31:13.908263] [D] [thread 125679] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[08:31:13.908279] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.908297] [D] [thread 125679] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[08:31:13.908430] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[36m[08:31:13.908629] [D] [thread 125679] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[08:31:13.908650] [D] [thread 125679] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[08:31:13.908664] [D] [thread 125679] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 15 exists in the query plan or not[m
[36m[08:31:13.908673] [D] [thread 125679] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 15 in the query plan[m
[36m[08:31:13.908788] [D] [thread 125679] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9)) as root operator.[m
[36m[08:31:13.908834] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.908849] [D] [thread 125679] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[08:31:13.908889] [D] [thread 125679] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[08:31:13.908906] [D] [thread 125679] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[08:31:13.908920] [W] [thread 125679] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[08:31:13.908929] [D] [thread 125679] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[08:31:13.908983] [D] [thread 125679] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[08:31:13.909025] [D] [thread 125679] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[08:31:13.909042] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[08:31:13.909058] [I] [thread 125679] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[08:31:13.909078] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[08:31:13.909129] [D] [thread 125679] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[08:31:13.909188] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[08:31:13.909216] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[08:31:13.909301] [D] [thread 125679] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(17) on execution node with id 1[m
[36m[08:31:13.909315] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[08:31:13.909327] [W] [thread 125679] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[08:31:13.909443] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[36m[08:31:13.909662] [D] [thread 125679] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator CENTRALWINDOW(17) as new root of the plan.[m
[36m[08:31:13.909691] [D] [thread 125679] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:13.909700] [D] [thread 125679] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[08:31:13.909725] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.909737] [D] [thread 125679] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[08:31:13.909793] [D] [thread 125679] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[08:31:13.909831] [D] [thread 125679] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[08:31:13.909847] [W] [thread 125679] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 1 already scheduled[m
[36m[08:31:13.909863] [D] [thread 125679] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 1 to the query Id index.[m
[36m[08:31:13.909921] [D] [thread 125679] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 1 to the query Id 1[m
[36m[08:31:13.909981] [D] [thread 125679] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[08:31:13.909999] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[08:31:13.910015] [I] [thread 125679] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 1[m
[36m[08:31:13.910036] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[08:31:13.910089] [D] [thread 125679] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[08:31:13.910164] [D] [thread 125679] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[08:31:13.910186] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[08:31:13.910240] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[08:31:13.910252] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[08:31:13.910287] [D] [thread 125679] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SINK(4: {FileSinkDescriptor()}) on execution node with id 1[m
[36m[08:31:13.910299] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.910312] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.910337] [D] [thread 125679] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[08:31:13.910348] [D] [thread 125679] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[08:31:13.910378] [D] [thread 125679] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[08:31:13.910389] [D] [thread 125679] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[08:31:13.910429] [D] [thread 125679] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[08:31:13.910440] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.910457] [D] [thread 125679] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[08:31:13.910564] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[08:31:13.910735] [D] [thread 125679] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[08:31:13.910754] [D] [thread 125679] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[08:31:13.910766] [D] [thread 125679] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[08:31:13.910775] [D] [thread 125679] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 17 in the query plan[m
[36m[08:31:13.910881] [D] [thread 125679] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(17) as root operator.[m
[36m[08:31:13.910923] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.910939] [D] [thread 125679] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[08:31:13.910974] [D] [thread 125679] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[08:31:13.910991] [D] [thread 125679] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[08:31:13.911005] [W] [thread 125679] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 1 already scheduled[m
[36m[08:31:13.911015] [D] [thread 125679] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 1 to the query Id index.[m
[36m[08:31:13.911072] [D] [thread 125679] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 1 already mapped to the query Id 1[m
[36m[08:31:13.911110] [D] [thread 125679] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[08:31:13.911127] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[08:31:13.911142] [I] [thread 125679] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 1[m
[36m[08:31:13.911160] [D] [thread 125679] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[08:31:13.911182] [D] [thread 125679] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[08:31:13.911197] [D] [thread 125679] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[08:31:13.911206] [D] [thread 125679] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[08:31:13.911215] [D] [thread 125679] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[08:31:13.911230] [D] [thread 125679] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[32m[08:31:13.911272] [I] [thread 125679] [BasePlacementStrategy.cpp:361] [addNetworkSourceAndSinkOperators] [m
[36m[08:31:13.911295] [D] [thread 125679] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[08:31:13.911352] [D] [thread 125679] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 6 exists in the query plan or not[m
[36m[08:31:13.911366] [D] [thread 125679] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 6 in the query plan[m
[36m[08:31:13.911392] [D] [thread 125679] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[08:31:13.911515] [D] [thread 125679] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[08:31:13.911558] [D] [thread 125679] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[08:31:13.911578] [D] [thread 125679] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[08:31:13.911625] [D] [thread 125679] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[08:31:13.911697] [D] [thread 125679] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[08:31:13.911714] [D] [thread 125679] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[08:31:13.911739] [D] [thread 125679] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[08:31:13.911772] [D] [thread 125679] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[08:31:13.911781] [D] [thread 125679] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[08:31:13.911905] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[08:31:13.911987] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[08:31:13.912007] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[08:31:13.912087] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.912105] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.912136] [D] [thread 125679] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 6 exists in the query plan or not[m
[36m[08:31:13.912150] [D] [thread 125679] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 6 in the query plan[m
[32m[08:31:13.912296] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[36m[08:31:13.912535] [D] [thread 125679] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(6) as root operator.[m
[36m[08:31:13.912618] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[32m[08:31:13.912888] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[36m[08:31:13.913019] [D] [thread 125679] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(18,,NetworkSourceDescriptor{tcp://192.168.2.32:34279 1::18::0::0}) as new root of the plan.[m
[36m[08:31:13.913039] [D] [thread 125679] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:13.913047] [D] [thread 125679] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[08:31:13.913132] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[36m[08:31:13.913198] [D] [thread 125679] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(23: {NetworkSinkDescriptor(partition=1::21::0::0;nodeLocation=tcp://192.168.2.11:43687)}) as new root of the plan.[m
[36m[08:31:13.913325] [D] [thread 125679] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:13.913338] [D] [thread 125679] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[08:31:13.913366] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.913381] [D] [thread 125679] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[08:31:13.913439] [D] [thread 125679] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[08:31:13.913475] [D] [thread 125679] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[08:31:13.913492] [W] [thread 125679] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[08:31:13.913502] [D] [thread 125679] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[08:31:13.913561] [D] [thread 125679] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 2 to the query Id 1[m
[36m[08:31:13.913614] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[08:31:13.913628] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[08:31:13.913640] [D] [thread 125679] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[08:31:13.913653] [D] [thread 125679] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[08:31:13.913692] [D] [thread 125679] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[08:31:13.913710] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[08:31:13.913766] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[08:31:13.913778] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[08:31:13.913792] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.913805] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[08:31:13.913912] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[08:31:13.913958] [D] [thread 125679] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[08:31:13.914117] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[08:31:13.914135] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[08:31:13.914148] [D] [thread 125679] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[08:31:13.914157] [D] [thread 125679] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[08:31:13.914179] [D] [thread 125679] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[08:31:13.914209] [D] [thread 125679] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[08:31:13.914254] [D] [thread 125679] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[08:31:13.914267] [D] [thread 125679] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[36m[08:31:13.914291] [D] [thread 125679] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[08:31:13.914401] [D] [thread 125679] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[08:31:13.914444] [D] [thread 125679] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[08:31:13.914477] [D] [thread 125679] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[08:31:13.914516] [D] [thread 125679] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[08:31:13.914578] [D] [thread 125679] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[08:31:13.914593] [D] [thread 125679] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[08:31:13.914617] [D] [thread 125679] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[08:31:13.914629] [D] [thread 125679] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[08:31:13.914635] [D] [thread 125679] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[08:31:13.914705] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[08:31:13.914787] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[08:31:13.914800] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[08:31:13.914865] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.914883] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.914911] [D] [thread 125679] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[08:31:13.914923] [D] [thread 125679] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[32m[08:31:13.914996] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[36m[08:31:13.915156] [D] [thread 125679] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(8) as root operator.[m
[36m[08:31:13.915241] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[08:31:13.915287] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[08:31:13.915299] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[08:31:13.915455] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[36m[08:31:13.915547] [D] [thread 125679] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(24,,NetworkSourceDescriptor{tcp://192.168.2.33:42341 1::24::0::0}) as new root of the plan.[m
[36m[08:31:13.915570] [D] [thread 125679] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:13.915628] [D] [thread 125679] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[08:31:13.915721] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 29[m
[36m[08:31:13.915800] [D] [thread 125679] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(29: {NetworkSinkDescriptor(partition=1::27::0::0;nodeLocation=tcp://192.168.2.11:43687)}) as new root of the plan.[m
[36m[08:31:13.915918] [D] [thread 125679] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:13.915931] [D] [thread 125679] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[08:31:13.915955] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.915972] [D] [thread 125679] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[08:31:13.916038] [D] [thread 125679] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[08:31:13.916059] [D] [thread 125679] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[08:31:13.916074] [W] [thread 125679] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[08:31:13.916084] [D] [thread 125679] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[08:31:13.916154] [D] [thread 125679] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[08:31:13.916190] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[08:31:13.916203] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[08:31:13.916224] [D] [thread 125679] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  6[m
[36m[08:31:13.916235] [D] [thread 125679] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[08:31:13.916289] [D] [thread 125679] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[08:31:13.916310] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[08:31:13.916407] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[08:31:13.916422] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[08:31:13.916438] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.916452] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[08:31:13.916576] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 27[m
[36m[08:31:13.916628] [D] [thread 125679] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[08:31:13.916808] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[08:31:13.916827] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[08:31:13.916839] [D] [thread 125679] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[08:31:13.916849] [D] [thread 125679] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[08:31:13.916863] [D] [thread 125679] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[08:31:13.916891] [D] [thread 125679] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[08:31:13.916938] [D] [thread 125679] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[08:31:13.916950] [D] [thread 125679] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 10 in the query plan[m
[36m[08:31:13.916975] [D] [thread 125679] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[08:31:13.917086] [D] [thread 125679] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[08:31:13.917137] [D] [thread 125679] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[08:31:13.917176] [D] [thread 125679] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[08:31:13.917217] [D] [thread 125679] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[08:31:13.917283] [D] [thread 125679] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[08:31:13.917299] [D] [thread 125679] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[08:31:13.917323] [D] [thread 125679] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[08:31:13.917335] [D] [thread 125679] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[08:31:13.917342] [D] [thread 125679] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[08:31:13.917416] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[08:31:13.917487] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[08:31:13.917500] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[08:31:13.917517] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.917532] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.917573] [D] [thread 125679] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[08:31:13.917586] [D] [thread 125679] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 10 in the query plan[m
[32m[08:31:13.917659] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 32[m
[36m[08:31:13.917812] [D] [thread 125679] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(10) as root operator.[m
[36m[08:31:13.917882] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[32m[08:31:13.918089] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 30[m
[36m[08:31:13.918181] [D] [thread 125679] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.34:34019 1::30::0::0}) as new root of the plan.[m
[36m[08:31:13.918197] [D] [thread 125679] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:13.918205] [D] [thread 125679] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[08:31:13.918282] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 35[m
[36m[08:31:13.918351] [D] [thread 125679] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:43687)}) as new root of the plan.[m
[36m[08:31:13.918463] [D] [thread 125679] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:13.918475] [D] [thread 125679] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[08:31:13.918504] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.918518] [D] [thread 125679] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[08:31:13.918575] [D] [thread 125679] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[08:31:13.918616] [D] [thread 125679] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[08:31:13.918633] [W] [thread 125679] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[08:31:13.918643] [D] [thread 125679] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[08:31:13.918703] [D] [thread 125679] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 3 to the query Id 1[m
[36m[08:31:13.918752] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[08:31:13.918765] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[08:31:13.918776] [D] [thread 125679] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  7[m
[36m[08:31:13.918786] [D] [thread 125679] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[08:31:13.918817] [D] [thread 125679] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[08:31:13.918846] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[08:31:13.918905] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[08:31:13.918917] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[08:31:13.918931] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.918944] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[08:31:13.919051] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 33[m
[36m[08:31:13.919159] [D] [thread 125679] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[08:31:13.919343] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[08:31:13.919363] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[08:31:13.919376] [D] [thread 125679] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[08:31:13.919386] [D] [thread 125679] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[08:31:13.919415] [D] [thread 125679] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[08:31:13.919444] [D] [thread 125679] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[08:31:13.919487] [D] [thread 125679] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[08:31:13.919500] [D] [thread 125679] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 12 in the query plan[m
[36m[08:31:13.919525] [D] [thread 125679] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[08:31:13.919632] [D] [thread 125679] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[08:31:13.919683] [D] [thread 125679] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[08:31:13.919724] [D] [thread 125679] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 3 source operators.[m
[36m[08:31:13.919765] [D] [thread 125679] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[08:31:13.919828] [D] [thread 125679] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[08:31:13.919895] [D] [thread 125679] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[08:31:13.919930] [D] [thread 125679] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[08:31:13.919942] [D] [thread 125679] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[08:31:13.919949] [D] [thread 125679] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[08:31:13.920023] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[08:31:13.920094] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[08:31:13.920107] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[08:31:13.920126] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.920142] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.920171] [D] [thread 125679] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[08:31:13.920184] [D] [thread 125679] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 12 in the query plan[m
[32m[08:31:13.920291] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 38[m
[36m[08:31:13.920500] [D] [thread 125679] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(12) as root operator.[m
[36m[08:31:13.920583] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[08:31:13.920629] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[08:31:13.920641] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[32m[08:31:13.920778] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 36[m
[36m[08:31:13.920867] [D] [thread 125679] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.35:42353 1::36::0::0}) as new root of the plan.[m
[36m[08:31:13.920880] [D] [thread 125679] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:13.920888] [D] [thread 125679] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[08:31:13.920964] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 41[m
[36m[08:31:13.921030] [D] [thread 125679] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.11:43687)}) as new root of the plan.[m
[36m[08:31:13.921140] [D] [thread 125679] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:13.921153] [D] [thread 125679] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[08:31:13.921175] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.921192] [D] [thread 125679] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[08:31:13.921241] [D] [thread 125679] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[08:31:13.921257] [D] [thread 125679] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[08:31:13.921272] [W] [thread 125679] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[08:31:13.921281] [D] [thread 125679] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[08:31:13.921343] [D] [thread 125679] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 3 already mapped to the query Id 1[m
[36m[08:31:13.921373] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[08:31:13.921385] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[08:31:13.921396] [D] [thread 125679] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  8[m
[36m[08:31:13.921405] [D] [thread 125679] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[08:31:13.921439] [D] [thread 125679] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[08:31:13.921456] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[08:31:13.921507] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[08:31:13.921519] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[08:31:13.921532] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.921544] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[08:31:13.921633] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 39[m
[36m[08:31:13.921678] [D] [thread 125679] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[08:31:13.921894] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[08:31:13.921918] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[08:31:13.921931] [D] [thread 125679] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[08:31:13.921942] [D] [thread 125679] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[08:31:13.921958] [D] [thread 125679] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  3[m
[36m[08:31:13.921986] [D] [thread 125679] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[08:31:13.922032] [D] [thread 125679] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[08:31:13.922061] [D] [thread 125679] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[36m[08:31:13.922090] [D] [thread 125679] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[08:31:13.922206] [D] [thread 125679] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[08:31:13.922258] [D] [thread 125679] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[08:31:13.922300] [D] [thread 125679] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 4 source operators.[m
[36m[08:31:13.922343] [D] [thread 125679] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[08:31:13.922410] [D] [thread 125679] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[08:31:13.922425] [D] [thread 125679] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[08:31:13.922450] [D] [thread 125679] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[08:31:13.922462] [D] [thread 125679] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[08:31:13.922469] [D] [thread 125679] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[08:31:13.922542] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[08:31:13.922615] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[08:31:13.922628] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[08:31:13.922646] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.922661] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.922691] [D] [thread 125679] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[08:31:13.922702] [D] [thread 125679] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[32m[08:31:13.922771] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 44[m
[36m[08:31:13.922924] [D] [thread 125679] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(14) as root operator.[m
[36m[08:31:13.922996] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[32m[08:31:13.923175] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 42[m
[36m[08:31:13.923262] [D] [thread 125679] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.37:42547 1::42::0::0}) as new root of the plan.[m
[36m[08:31:13.923277] [D] [thread 125679] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:13.923285] [D] [thread 125679] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[08:31:13.923359] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 47[m
[36m[08:31:13.923426] [D] [thread 125679] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.11:43687)}) as new root of the plan.[m
[36m[08:31:13.923538] [D] [thread 125679] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:13.923551] [D] [thread 125679] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[08:31:13.923574] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.923588] [D] [thread 125679] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[08:31:13.923644] [D] [thread 125679] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[08:31:13.923674] [D] [thread 125679] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[08:31:13.923690] [W] [thread 125679] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[08:31:13.923699] [D] [thread 125679] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[08:31:13.923757] [D] [thread 125679] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 4 to the query Id 1[m
[36m[08:31:13.923817] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[08:31:13.923832] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[08:31:13.923844] [D] [thread 125679] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  9[m
[36m[08:31:13.923853] [D] [thread 125679] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[08:31:13.923908] [D] [thread 125679] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[08:31:13.923929] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[08:31:13.923988] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[08:31:13.924000] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[08:31:13.924014] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.924026] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[08:31:13.924128] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 45[m
[36m[08:31:13.924175] [D] [thread 125679] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[08:31:13.924381] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[08:31:13.924405] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[08:31:13.924431] [D] [thread 125679] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[08:31:13.924442] [D] [thread 125679] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[08:31:13.924474] [D] [thread 125679] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[08:31:13.924503] [D] [thread 125679] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[08:31:13.924551] [D] [thread 125679] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[08:31:13.924564] [D] [thread 125679] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 16 in the query plan[m
[36m[08:31:13.924589] [D] [thread 125679] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[08:31:13.924705] [D] [thread 125679] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[08:31:13.924764] [D] [thread 125679] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[08:31:13.924806] [D] [thread 125679] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 5 source operators.[m
[36m[08:31:13.924846] [D] [thread 125679] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[08:31:13.924911] [D] [thread 125679] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[08:31:13.924928] [D] [thread 125679] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[08:31:13.924953] [D] [thread 125679] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[08:31:13.924965] [D] [thread 125679] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[08:31:13.924972] [D] [thread 125679] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[08:31:13.925058] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[08:31:13.925133] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[08:31:13.925146] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[08:31:13.925164] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.925181] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.925210] [D] [thread 125679] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[08:31:13.925222] [D] [thread 125679] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 16 in the query plan[m
[32m[08:31:13.925290] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 50[m
[36m[08:31:13.925459] [D] [thread 125679] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(16) as root operator.[m
[36m[08:31:13.925529] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[08:31:13.925573] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[08:31:13.925585] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[32m[08:31:13.925717] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 48[m
[36m[08:31:13.925799] [D] [thread 125679] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.38:39237 1::48::0::0}) as new root of the plan.[m
[36m[08:31:13.925813] [D] [thread 125679] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:13.925821] [D] [thread 125679] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[08:31:13.925894] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 53[m
[36m[08:31:13.926005] [D] [thread 125679] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:43687)}) as new root of the plan.[m
[36m[08:31:13.926124] [D] [thread 125679] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:13.926137] [D] [thread 125679] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[08:31:13.926164] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.926180] [D] [thread 125679] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[08:31:13.926228] [D] [thread 125679] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[08:31:13.926245] [D] [thread 125679] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[08:31:13.926259] [W] [thread 125679] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[08:31:13.926269] [D] [thread 125679] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[08:31:13.926331] [D] [thread 125679] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 4 already mapped to the query Id 1[m
[36m[08:31:13.926364] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[08:31:13.926376] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[08:31:13.926387] [D] [thread 125679] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  10[m
[36m[08:31:13.926395] [D] [thread 125679] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[08:31:13.926431] [D] [thread 125679] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[08:31:13.926448] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[08:31:13.926498] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[08:31:13.926511] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[08:31:13.926526] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.926539] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[08:31:13.926637] [I] [thread 125679] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 51[m
[36m[08:31:13.926681] [D] [thread 125679] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[08:31:13.926844] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[08:31:13.926862] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[08:31:13.926875] [D] [thread 125679] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[08:31:13.926884] [D] [thread 125679] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[08:31:13.926898] [D] [thread 125679] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  4[m
[36m[08:31:13.926933] [D] [thread 125679] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[08:31:13.926964] [D] [thread 125679] [GlobalExecutionPlan.cpp:33] [checkIfExecutionNodeIsARoot] GlobalExecutionPlan: Checking if Execution node with id 1 is a root node[m
[36m[08:31:13.926998] [D] [thread 125679] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[08:31:13.927010] [D] [thread 125679] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[08:31:13.927026] [D] [thread 125679] [GlobalExecutionPlan.cpp:68] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node as root node[m
[36m[08:31:13.927045] [D] [thread 125679] [GlobalExecutionPlan.cpp:72] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[08:31:13.927077] [D] [thread 125679] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[08:31:13.927089] [D] [thread 125679] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[08:31:13.927120] [D] [thread 125679] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[08:31:13.927182] [D] [thread 125679] [BasePlacementStrategy.cpp:337] [runTypeInferencePhase] BasePlacementStrategy: Run type inference phase for all the query sub plans to be deployed.[m
[36m[08:31:13.927205] [D] [thread 125679] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[08:31:13.927226] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.927241] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.927454] [D] [thread 125679] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[08:31:13.927502] [D] [thread 125679] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[08:31:13.927550] [D] [thread 125679] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[08:31:13.927594] [D] [thread 125679] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[08:31:13.927620] [D] [thread 125679] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[08:31:13.928046] [D] [thread 125679] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[08:31:13.928096] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.928112] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.928253] [D] [thread 125679] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[08:31:13.928289] [D] [thread 125679] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[08:31:13.928338] [D] [thread 125679] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[08:31:13.928386] [D] [thread 125679] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[08:31:13.928426] [D] [thread 125679] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[08:31:13.928813] [D] [thread 125679] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[08:31:13.928860] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.928876] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.929012] [D] [thread 125679] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[08:31:13.929048] [D] [thread 125679] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[08:31:13.929076] [D] [thread 125679] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[08:31:13.929109] [D] [thread 125679] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[08:31:13.929196] [D] [thread 125679] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[08:31:13.929580] [D] [thread 125679] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[08:31:13.929626] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.929643] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.929780] [D] [thread 125679] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[08:31:13.929816] [D] [thread 125679] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[08:31:13.929844] [D] [thread 125679] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[08:31:13.929880] [D] [thread 125679] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[08:31:13.929900] [D] [thread 125679] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[08:31:13.930288] [D] [thread 125679] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[08:31:13.930329] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.930386] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.930529] [D] [thread 125679] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[08:31:13.930566] [D] [thread 125679] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[08:31:13.930594] [D] [thread 125679] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[08:31:13.930662] [D] [thread 125679] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[08:31:13.930687] [D] [thread 125679] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[08:31:13.931066] [D] [thread 125679] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[08:31:13.931110] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.931126] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.931254] [D] [thread 125679] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[08:31:13.931289] [D] [thread 125679] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[08:31:13.931316] [D] [thread 125679] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[08:31:13.931406] [D] [thread 125679] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[08:31:13.931435] [D] [thread 125679] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[08:31:13.931804] [D] [thread 125679] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[08:31:13.931849] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.931865] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.932085] [D] [thread 125679] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[08:31:13.932150] [D] [thread 125679] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[08:31:13.932189] [D] [thread 125679] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 6 source operators.[m
[36m[08:31:13.932227] [D] [thread 125679] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[08:31:13.932249] [D] [thread 125679] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[08:31:13.932773] [D] [thread 125679] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[08:31:13.933081] [I] [thread 125679] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[08:31:13.933187] [I] [thread 125679] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[08:31:13.933287] [D] [thread 125679] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[08:31:13.933338] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.933356] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.933504] [D] [thread 125679] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[08:31:13.933543] [D] [thread 125679] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[08:31:13.933586] [D] [thread 125679] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[08:31:13.933624] [D] [thread 125679] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[08:31:13.933644] [D] [thread 125679] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[08:31:13.933778] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:13.933838] [D] [thread 125679] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[08:31:13.933950] [D] [thread 125679] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[08:31:13.933979] [D] [thread 125679] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[08:31:13.934002] [D] [thread 125679] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[08:31:13.934027] [D] [thread 125679] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[08:31:13.934045] [D] [thread 125679] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[08:31:13.934266] [D] [thread 125679] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[08:31:13.934303] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.934318] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.934419] [D] [thread 125679] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[08:31:13.934446] [D] [thread 125679] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[08:31:13.934470] [D] [thread 125679] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[08:31:13.934495] [D] [thread 125679] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[08:31:13.934512] [D] [thread 125679] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[08:31:13.934689] [D] [thread 125679] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[08:31:13.934775] [D] [thread 125679] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[08:31:13.934798] [D] [thread 125679] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[08:31:13.934819] [D] [thread 125679] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[08:31:13.934840] [D] [thread 125679] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[08:31:13.934858] [D] [thread 125679] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[08:31:13.935064] [D] [thread 125679] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[08:31:13.935097] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.935112] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.935203] [D] [thread 125679] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[08:31:13.935229] [D] [thread 125679] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[08:31:13.935251] [D] [thread 125679] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[08:31:13.935273] [D] [thread 125679] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[08:31:13.935291] [D] [thread 125679] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[08:31:13.935500] [D] [thread 125679] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[08:31:13.935602] [D] [thread 125679] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[08:31:13.935629] [D] [thread 125679] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[08:31:13.935652] [D] [thread 125679] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[08:31:13.935676] [D] [thread 125679] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[08:31:13.935694] [D] [thread 125679] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[08:31:13.935865] [D] [thread 125679] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[08:31:13.935913] [D] [thread 125679] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[36m[08:31:13.937815] [D] [thread 125679] [QueryPlacementPhase.cpp:140] [execute] QueryPlacementPhase: Update Global Execution Plan:
ExecutionNode(id:1, ip:192.168.2.11, topologyId:1)
| QuerySubPlan(queryId:1, querySubPlanId:7)
|  SINK(4: {FileSinkDescriptor()})
|    CENTRALWINDOW(17)
|      SOURCE(21,,NetworkSourceDescriptor{tcp://192.168.2.12:37941 1::21::0::0})
|      SOURCE(27,,NetworkSourceDescriptor{tcp://192.168.2.12:37941 1::27::0::0})
|      SOURCE(33,,NetworkSourceDescriptor{tcp://192.168.2.30:46877 1::33::0::0})
|      SOURCE(39,,NetworkSourceDescriptor{tcp://192.168.2.30:46877 1::39::0::0})
|      SOURCE(45,,NetworkSourceDescriptor{tcp://192.168.2.31:40151 1::45::0::0})
|      SOURCE(51,,NetworkSourceDescriptor{tcp://192.168.2.31:40151 1::51::0::0})
|--ExecutionNode(id:2, ip:192.168.2.12, topologyId:2)
|  | QuerySubPlan(queryId:1, querySubPlanId:8)
|  |  SINK(23: {NetworkSinkDescriptor(partition=1::21::0::0;nodeLocation=tcp://192.168.2.11:43687)})
|  |    SOURCE(18,,NetworkSourceDescriptor{tcp://192.168.2.32:34279 1::18::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:9)
|  |  SINK(29: {NetworkSinkDescriptor(partition=1::27::0::0;nodeLocation=tcp://192.168.2.11:43687)})
|  |    SOURCE(24,,NetworkSourceDescriptor{tcp://192.168.2.33:42341 1::24::0::0})
|  |--ExecutionNode(id:5, ip:192.168.2.32, topologyId:5)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:1)
|  |  |  SINK(20: {NetworkSinkDescriptor(partition=1::18::0::0;nodeLocation=tcp://192.168.2.12:37941)})
|  |  |    WATERMARKASSIGNER(6)
|  |  |      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
|  |--ExecutionNode(id:6, ip:192.168.2.33, topologyId:6)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:2)
|  |  |  SINK(26: {NetworkSinkDescriptor(partition=1::24::0::0;nodeLocation=tcp://192.168.2.12:37941)})
|  |  |    WATERMARKASSIGNER(8)
|  |  |      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
|--ExecutionNode(id:3, ip:192.168.2.30, topologyId:3)
|  | QuerySubPlan(queryId:1, querySubPlanId:10)
|  |  SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:43687)})
|  |    SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.34:34019 1::30::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:11)
|  |  SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.11:43687)})
|  |    SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.35:42353 1::36::0::0})
|  |--ExecutionNode(id:7, ip:192.168.2.34, topologyId:7)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:3)
|  |  |  SINK(32: {NetworkSinkDescriptor(partition=1::30::0::0;nodeLocation=tcp://192.168.2.30:46877)})
|  |  |    WATERMARKASSIGNER(10)
|  |  |      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
|  |--ExecutionNode(id:8, ip:192.168.2.35, topologyId:8)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:4)
|  |  |  SINK(38: {NetworkSinkDescriptor(partition=1::36::0::0;nodeLocation=tcp://192.168.2.30:46877)})
|  |  |    WATERMARKASSIGNER(12)
|  |  |      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
|--ExecutionNode(id:4, ip:192.168.2.31, topologyId:4)
|  | QuerySubPlan(queryId:1, querySubPlanId:12)
|  |  SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.11:43687)})
|  |    SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.37:42547 1::42::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:13)
|  |  SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:43687)})
|  |    SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.38:39237 1::48::0::0})
|  |--ExecutionNode(id:9, ip:192.168.2.37, topologyId:9)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:5)
|  |  |  SINK(44: {NetworkSinkDescriptor(partition=1::42::0::0;nodeLocation=tcp://192.168.2.31:40151)})
|  |  |    WATERMARKASSIGNER(14)
|  |  |      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
|  |--ExecutionNode(id:10, ip:192.168.2.38, topologyId:10)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:6)
|  |  |  SINK(50: {NetworkSinkDescriptor(partition=1::48::0::0;nodeLocation=tcp://192.168.2.31:40151)})
|  |  |    WATERMARKASSIGNER(16)
|  |  |      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[08:31:13.937957] [D] [thread 125679] [QueryDeploymentPhase.cpp:54] [execute] QueryDeploymentPhase: deploy the query[m
[36m[08:31:13.937989] [D] [thread 125679] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[08:31:13.938259] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.938284] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.938503] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.938536] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.938612] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.938626] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.938685] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.938698] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.938732] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.938744] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.938778] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.938789] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.938821] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.938833] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.938869] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.938880] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.938930] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.938942] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.938997] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.939009] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.939179] [D] [thread 125679] [QueryDeploymentPhase.cpp:106] [deployQuery] QueryDeploymentPhase::deployQuery queryId= 1[m
[36m[08:31:13.939209] [D] [thread 125679] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=5[m
[36m[08:31:13.939218] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.939297] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.939526] [D] [thread 125679] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.32:36981[m
[36m[08:31:13.939569] [D] [thread 125679] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:36981 queryId=1 querySubPlanId = 1[m
[36m[08:31:13.939841] [D] [thread 125679] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(20: {NetworkSinkDescriptor(partition=1::18::0::0;nodeLocation=tcp://192.168.2.12:37941)})
  WATERMARKASSIGNER(6)
    SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
[m
[36m[08:31:13.939878] [D] [thread 125679] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[08:31:13.940154] [D] [thread 125679] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[08:31:13.944104] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.945193] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:13.945638] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.945971] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:13.946762] [D] [thread 125679] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[08:31:13.947781] [D] [thread 125679] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[08:31:13.948168] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.948561] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:13.948828] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.949135] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:13.949591] [D] [thread 125679] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream4)[m
[36m[08:31:13.949867] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.950219] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:13.950754] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.951087] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:13.951351] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.951667] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:13.964030] [D] [thread 125679] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=6[m
[36m[08:31:13.964064] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.964081] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.964213] [D] [thread 125679] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.33:46475[m
[36m[08:31:13.964245] [D] [thread 125679] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:46475 queryId=1 querySubPlanId = 2[m
[36m[08:31:13.964487] [D] [thread 125679] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(26: {NetworkSinkDescriptor(partition=1::24::0::0;nodeLocation=tcp://192.168.2.12:37941)})
  WATERMARKASSIGNER(8)
    SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
[m
[36m[08:31:13.964525] [D] [thread 125679] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[08:31:13.964679] [D] [thread 125679] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[08:31:13.965012] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.965363] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:13.965626] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.965933] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:13.966506] [D] [thread 125679] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[08:31:13.966606] [D] [thread 125679] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[08:31:13.966855] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.967176] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:13.967425] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.967732] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:13.968132] [D] [thread 125679] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream5)[m
[36m[08:31:13.968396] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.968750] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:13.969159] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.969489] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:13.969731] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.970038] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:13.978934] [D] [thread 125679] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=7[m
[36m[08:31:13.978977] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.978996] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.979125] [D] [thread 125679] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.34:34507[m
[36m[08:31:13.979155] [D] [thread 125679] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.34:34507 queryId=1 querySubPlanId = 3[m
[36m[08:31:13.979352] [D] [thread 125679] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(32: {NetworkSinkDescriptor(partition=1::30::0::0;nodeLocation=tcp://192.168.2.30:46877)})
  WATERMARKASSIGNER(10)
    SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
[m
[36m[08:31:13.979387] [D] [thread 125679] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[08:31:13.979539] [D] [thread 125679] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[08:31:13.979864] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.980211] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:13.980538] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.980885] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:13.981383] [D] [thread 125679] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[08:31:13.981472] [D] [thread 125679] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[08:31:13.981711] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.982034] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:13.982281] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.982583] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:13.982981] [D] [thread 125679] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream6)[m
[36m[08:31:13.983177] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.983505] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:13.983893] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.984209] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:13.984481] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.984818] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:13.993896] [D] [thread 125679] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=8[m
[36m[08:31:13.993931] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:13.993949] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:13.994074] [D] [thread 125679] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.35:41727[m
[36m[08:31:13.994103] [D] [thread 125679] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.35:41727 queryId=1 querySubPlanId = 4[m
[36m[08:31:13.994319] [D] [thread 125679] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(38: {NetworkSinkDescriptor(partition=1::36::0::0;nodeLocation=tcp://192.168.2.30:46877)})
  WATERMARKASSIGNER(12)
    SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
[m
[36m[08:31:13.994353] [D] [thread 125679] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[08:31:13.994503] [D] [thread 125679] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[08:31:13.994829] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.995182] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:13.995448] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.995762] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:13.996245] [D] [thread 125679] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[08:31:13.996365] [D] [thread 125679] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[08:31:13.996631] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.996981] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:13.997238] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.997548] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:13.997965] [D] [thread 125679] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream7)[m
[36m[08:31:13.998165] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.998502] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:13.998879] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.999199] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:13.999433] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:13.999772] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.009013] [D] [thread 125679] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=9[m
[36m[08:31:14.009048] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:14.009066] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:14.009197] [D] [thread 125679] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.37:36655[m
[36m[08:31:14.009227] [D] [thread 125679] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.37:36655 queryId=1 querySubPlanId = 5[m
[36m[08:31:14.009426] [D] [thread 125679] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(44: {NetworkSinkDescriptor(partition=1::42::0::0;nodeLocation=tcp://192.168.2.31:40151)})
  WATERMARKASSIGNER(14)
    SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
[m
[36m[08:31:14.009459] [D] [thread 125679] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[08:31:14.009675] [D] [thread 125679] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[08:31:14.010003] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.010366] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.010636] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.010947] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.011441] [D] [thread 125679] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[08:31:14.011529] [D] [thread 125679] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[08:31:14.011772] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.012095] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.012384] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.012725] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.013150] [D] [thread 125679] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream8)[m
[36m[08:31:14.013350] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.013677] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.014063] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.014388] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.014626] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.014937] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.023219] [D] [thread 125679] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=10[m
[36m[08:31:14.023346] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:14.023369] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:14.023492] [D] [thread 125679] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.38:43257[m
[36m[08:31:14.023532] [D] [thread 125679] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.38:43257 queryId=1 querySubPlanId = 6[m
[36m[08:31:14.023732] [D] [thread 125679] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(50: {NetworkSinkDescriptor(partition=1::48::0::0;nodeLocation=tcp://192.168.2.31:40151)})
  WATERMARKASSIGNER(16)
    SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[08:31:14.023767] [D] [thread 125679] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[08:31:14.023923] [D] [thread 125679] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[08:31:14.024274] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.024682] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.024977] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.025318] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.025832] [D] [thread 125679] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[08:31:14.025942] [D] [thread 125679] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[08:31:14.026182] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.026539] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.026803] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.027131] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.027553] [D] [thread 125679] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream9)[m
[36m[08:31:14.027769] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.028124] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.028566] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.028917] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.029179] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.029511] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.037683] [D] [thread 125679] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=1[m
[36m[08:31:14.037769] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:14.037789] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:14.037908] [D] [thread 125679] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.11:39877[m
[36m[08:31:14.037939] [D] [thread 125679] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.11:39877 queryId=1 querySubPlanId = 7[m
[36m[08:31:14.038261] [D] [thread 125679] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(17)
    SOURCE(21,,NetworkSourceDescriptor{tcp://192.168.2.12:37941 1::21::0::0})
    SOURCE(27,,NetworkSourceDescriptor{tcp://192.168.2.12:37941 1::27::0::0})
    SOURCE(33,,NetworkSourceDescriptor{tcp://192.168.2.30:46877 1::33::0::0})
    SOURCE(39,,NetworkSourceDescriptor{tcp://192.168.2.30:46877 1::39::0::0})
    SOURCE(45,,NetworkSourceDescriptor{tcp://192.168.2.31:40151 1::45::0::0})
    SOURCE(51,,NetworkSourceDescriptor{tcp://192.168.2.31:40151 1::51::0::0})
[m
[36m[08:31:14.038296] [D] [thread 125679] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[08:31:14.038433] [D] [thread 125679] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[08:31:14.038717] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[08:31:14.038912] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.039061] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[08:31:14.039214] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.039616] [D] [thread 125679] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[08:31:14.039764] [D] [thread 125679] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[08:31:14.040024] [D] [thread 125679] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[08:31:14.040137] [D] [thread 125679] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[08:31:14.040176] [D] [thread 125679] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[08:31:14.040238] [D] [thread 125679] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[08:31:14.040819] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.041198] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.041409] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[08:31:14.041558] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.041981] [D] [thread 125679] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:37941 1::21::0::0}[m
[36m[08:31:14.042223] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.042582] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.043105] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.043461] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.043725] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.044060] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.044578] [D] [thread 125679] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:37941 1::27::0::0}[m
[36m[08:31:14.044779] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.045134] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.045557] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.045900] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.046155] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.046485] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.046957] [D] [thread 125679] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:46877 1::33::0::0}[m
[36m[08:31:14.047196] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.047547] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.047960] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.048305] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.048592] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.048931] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.049406] [D] [thread 125679] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:46877 1::39::0::0}[m
[36m[08:31:14.049608] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.049958] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.050373] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.050720] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.050988] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.051322] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.051802] [D] [thread 125679] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:40151 1::45::0::0}[m
[36m[08:31:14.052005] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.052421] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.052854] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.053201] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.053456] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.053780] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.054233] [D] [thread 125679] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:40151 1::51::0::0}[m
[36m[08:31:14.054431] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.054774] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.055189] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.055536] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.055794] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.056123] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.070655] [D] [thread 125679] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=2[m
[36m[08:31:14.070801] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:14.070825] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:14.070966] [D] [thread 125679] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.12:32805[m
[36m[08:31:14.070999] [D] [thread 125679] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:32805 queryId=1 querySubPlanId = 8[m
[36m[08:31:14.071209] [D] [thread 125679] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(23: {NetworkSinkDescriptor(partition=1::21::0::0;nodeLocation=tcp://192.168.2.11:43687)})
  SOURCE(18,,NetworkSourceDescriptor{tcp://192.168.2.32:34279 1::18::0::0})
[m
[36m[08:31:14.071267] [D] [thread 125679] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[08:31:14.071432] [D] [thread 125679] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[08:31:14.071778] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.072148] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.072457] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.072796] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.073255] [D] [thread 125679] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:34279 1::18::0::0}[m
[36m[08:31:14.073457] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.073806] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.074348] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.074711] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.074980] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.075314] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.082533] [D] [thread 125679] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:32805 queryId=1 querySubPlanId = 9[m
[36m[08:31:14.082862] [D] [thread 125679] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(29: {NetworkSinkDescriptor(partition=1::27::0::0;nodeLocation=tcp://192.168.2.11:43687)})
  SOURCE(24,,NetworkSourceDescriptor{tcp://192.168.2.33:42341 1::24::0::0})
[m
[36m[08:31:14.082914] [D] [thread 125679] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[08:31:14.083074] [D] [thread 125679] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[08:31:14.083410] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.083777] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.084048] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.084472] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.084975] [D] [thread 125679] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:42341 1::24::0::0}[m
[36m[08:31:14.085183] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.085543] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.085992] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.086332] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.086587] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.086920] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.094088] [D] [thread 125679] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=3[m
[36m[08:31:14.094217] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:14.094239] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:14.094359] [D] [thread 125679] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.30:41695[m
[36m[08:31:14.094388] [D] [thread 125679] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:41695 queryId=1 querySubPlanId = 10[m
[36m[08:31:14.094595] [D] [thread 125679] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:43687)})
  SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.34:34019 1::30::0::0})
[m
[36m[08:31:14.094658] [D] [thread 125679] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[08:31:14.094821] [D] [thread 125679] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[08:31:14.095158] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.095538] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.095810] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.096143] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.096696] [D] [thread 125679] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.34:34019 1::30::0::0}[m
[36m[08:31:14.096909] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.097269] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.097723] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.098132] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.098468] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.098864] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.106286] [D] [thread 125679] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:41695 queryId=1 querySubPlanId = 11[m
[36m[08:31:14.106569] [D] [thread 125679] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.11:43687)})
  SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.35:42353 1::36::0::0})
[m
[36m[08:31:14.106625] [D] [thread 125679] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[08:31:14.106792] [D] [thread 125679] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[08:31:14.107133] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.107504] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.107777] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.108105] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.108658] [D] [thread 125679] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.35:42353 1::36::0::0}[m
[36m[08:31:14.108873] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.109237] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.109676] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.110013] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.110269] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.110591] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.117767] [D] [thread 125679] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=4[m
[36m[08:31:14.117851] [D] [thread 125679] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[08:31:14.117933] [D] [thread 125679] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[08:31:14.118057] [D] [thread 125679] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.31:41615[m
[36m[08:31:14.118115] [D] [thread 125679] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:41615 queryId=1 querySubPlanId = 12[m
[36m[08:31:14.118311] [D] [thread 125679] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.11:43687)})
  SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.37:42547 1::42::0::0})
[m
[36m[08:31:14.118360] [D] [thread 125679] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[08:31:14.118526] [D] [thread 125679] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[08:31:14.118871] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.119236] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.119515] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.119854] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.120365] [D] [thread 125679] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.37:42547 1::42::0::0}[m
[36m[08:31:14.120572] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.120929] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.121363] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.121708] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.121961] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.122286] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.129589] [D] [thread 125679] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:41615 queryId=1 querySubPlanId = 13[m
[36m[08:31:14.129867] [D] [thread 125679] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:43687)})
  SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.38:39237 1::48::0::0})
[m
[36m[08:31:14.129917] [D] [thread 125679] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[08:31:14.130083] [D] [thread 125679] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[08:31:14.130422] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.130792] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.131069] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.131408] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.131878] [D] [thread 125679] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.38:39237 1::48::0::0}[m
[36m[08:31:14.132080] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.132500] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.132939] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.133292] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.133614] [D] [thread 125679] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:14.134010] [D] [thread 125679] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[08:31:14.141602] [D] [thread 125679] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Register for 10 queues[m
[36m[08:31:14.203107] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:14.203464] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:15.204660] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:15.433932] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:15.434586] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:15.653589] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:15.654122] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:16.655557] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:16.824991] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:16.825560] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:17.303945] [D] [thread 125695] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[08:31:17.304177] [D] [thread 125695] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[08:31:17.305441] [D] [thread 125695] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[08:31:17.305693] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 54[m
[36m[08:31:17.305790] [D] [thread 125695] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[08:31:17.306765] [D] [thread 125695] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[08:31:17.306837] [D] [thread 125695] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[08:31:17.307722] [D] [thread 125695] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[08:31:17.311000] [D] [thread 125695] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[08:31:17.311216] [D] [thread 125695] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[08:31:17.312452] [D] [thread 125695] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[08:31:17.312677] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 55[m
[36m[08:31:17.312748] [D] [thread 125695] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[08:31:17.313822] [D] [thread 125695] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[08:31:17.313932] [D] [thread 125695] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[08:31:17.314940] [D] [thread 125695] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[08:31:17.317089] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 56[m
[36m[08:31:17.317219] [D] [thread 125695] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[08:31:17.317744] [D] [thread 125695] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[08:31:17.317839] [D] [thread 125695] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[08:31:17.318261] [D] [thread 125695] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[08:31:17.320564] [D] [thread 125695] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[08:31:17.320731] [D] [thread 125695] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[08:31:17.321747] [D] [thread 125695] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[08:31:17.321967] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 57[m
[36m[08:31:17.322037] [D] [thread 125695] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[08:31:17.323186] [D] [thread 125695] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[08:31:17.323287] [D] [thread 125695] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[08:31:17.324308] [D] [thread 125695] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[08:31:17.327673] [D] [thread 125695] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[08:31:17.327885] [D] [thread 125695] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[08:31:17.329019] [D] [thread 125695] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[08:31:17.329219] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 58[m
[36m[08:31:17.329279] [D] [thread 125695] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[08:31:17.330247] [D] [thread 125695] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[08:31:17.330350] [D] [thread 125695] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[08:31:17.331339] [D] [thread 125695] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[08:31:17.334577] [D] [thread 125695] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[08:31:17.334818] [D] [thread 125695] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[08:31:17.336064] [D] [thread 125695] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[08:31:17.336314] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 59[m
[36m[08:31:17.336438] [D] [thread 125695] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[08:31:17.337641] [D] [thread 125695] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[08:31:17.337761] [D] [thread 125695] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[08:31:17.338919] [D] [thread 125695] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[08:31:17.341095] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 0:1::51::0::0[m
[32m[08:31:17.341250] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) Data[m
[33m[1m[08:31:17.341374] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[08:31:17.341480] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::51::0::0[m
[33m[1m[08:31:17.341714] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::51::0::0[m
[36m[08:31:17.341921] [D] [thread 125695] [ExpressionSerializationUtil.cpp:170] [deserializeExpression] ExpressionSerializationUtil:: deserialize expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[08:31:17.341959] [D] [thread 125695] [ExpressionSerializationUtil.cpp:691] [deserializeLogicalExpressions] ExpressionSerializationUtil:: de-serialize logical expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[08:31:17.342128] [D] [thread 125695] [ExpressionSerializationUtil.cpp:762] [deserializeGeographyExpressions] ExpressionSerializationUtil:: de-serialize geography expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[08:31:17.342176] [D] [thread 125695] [ExpressionSerializationUtil.cpp:830] [deserializeUDFCallExpressions] ExpressionSerializationUtil:: de-serialize udf call expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[08:31:17.342619] [D] [thread 125695] [ExpressionSerializationUtil.cpp:284] [deserializeExpression] ExpressionSerializationUtil:: deserialized expression node to the following node: FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[08:31:17.342678] [D] [thread 125695] [ExpressionSerializationUtil.cpp:170] [deserializeExpression] ExpressionSerializationUtil:: deserialize expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[08:31:17.342690] [D] [thread 125695] [ExpressionSerializationUtil.cpp:691] [deserializeLogicalExpressions] ExpressionSerializationUtil:: de-serialize logical expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[08:31:17.342739] [D] [thread 125695] [ExpressionSerializationUtil.cpp:762] [deserializeGeographyExpressions] ExpressionSerializationUtil:: de-serialize geography expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[08:31:17.342757] [D] [thread 125695] [ExpressionSerializationUtil.cpp:830] [deserializeUDFCallExpressions] ExpressionSerializationUtil:: de-serialize udf call expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[08:31:17.343064] [D] [thread 125695] [ExpressionSerializationUtil.cpp:284] [deserializeExpression] ExpressionSerializationUtil:: deserialized expression node to the following node: FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[08:31:17.343194] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 2:1::51::0::0[m
[32m[08:31:17.343248] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) Data[m
[33m[1m[08:31:17.343395] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[08:31:17.343501] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::51::0::0[m
[36m[08:31:17.343577] [D] [thread 125695] [OperatorSerializationUtil.cpp:783] [deserializeWindowOperator] OperatorSerializationUtil::deserializeWindowOperator: SerializableOperator_WindowDetails_DistributionCharacteristic_Distribution_Complete[m
[36m[08:31:17.343644] [D] [thread 125695] [ExpressionSerializationUtil.cpp:170] [deserializeExpression] ExpressionSerializationUtil:: deserialize expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[08:31:17.343656] [D] [thread 125695] [ExpressionSerializationUtil.cpp:691] [deserializeLogicalExpressions] ExpressionSerializationUtil:: de-serialize logical expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[33m[1m[08:31:17.343664] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::51::0::0[m
[36m[08:31:17.343704] [D] [thread 125695] [ExpressionSerializationUtil.cpp:762] [deserializeGeographyExpressions] ExpressionSerializationUtil:: de-serialize geography expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[08:31:17.343723] [D] [thread 125695] [ExpressionSerializationUtil.cpp:830] [deserializeUDFCallExpressions] ExpressionSerializationUtil:: de-serialize udf call expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[08:31:17.344063] [D] [thread 125695] [ExpressionSerializationUtil.cpp:284] [deserializeExpression] ExpressionSerializationUtil:: deserialized expression node to the following node: FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[32m[08:31:17.344291] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 60[m
[36m[08:31:17.344512] [D] [thread 125695] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[08:31:17.345185] [D] [thread 125695] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[08:31:17.345640] [D] [thread 125695] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[08:31:17.346894] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 3:1::51::0::0[m
[36m[08:31:17.346918] [D] [thread 125695] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[08:31:17.346963] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) Data[m
[33m[1m[08:31:17.347015] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[08:31:17.347051] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::51::0::0[m
[33m[1m[08:31:17.347184] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::51::0::0[m
[36m[08:31:17.347319] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 1:1::51::0::0[m
[32m[08:31:17.347361] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) Data[m
[33m[1m[08:31:17.347401] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[08:31:17.347431] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::51::0::0[m
[33m[1m[08:31:17.347529] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::51::0::0[m
[36m[08:31:17.349191] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 0:1::21::0::0[m
[32m[08:31:17.349288] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=0) Data[m
[33m[1m[08:31:17.349340] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[08:31:17.349375] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::21::0::0[m
[33m[1m[08:31:17.349470] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::21::0::0[m
[36m[08:31:17.349591] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 1:1::21::0::0[m
[32m[08:31:17.349631] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=1) Data[m
[33m[1m[08:31:17.349670] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[08:31:17.349698] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::21::0::0[m
[33m[1m[08:31:17.349780] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::21::0::0[m
[36m[08:31:17.350006] [D] [thread 125695] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[08:31:17.350173] [D] [thread 125695] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[08:31:17.351565] [D] [thread 125695] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[08:31:17.351774] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 61[m
[36m[08:31:17.351852] [D] [thread 125695] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[08:31:17.353210] [D] [thread 125695] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[08:31:17.353272] [D] [thread 125695] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[08:31:17.354397] [D] [thread 125695] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[08:31:17.355105] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 3:1::21::0::0[m
[32m[08:31:17.355177] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=3) Data[m
[33m[1m[08:31:17.355227] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[08:31:17.355260] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::21::0::0[m
[33m[1m[08:31:17.355374] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::21::0::0[m
[36m[08:31:17.355492] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 2:1::21::0::0[m
[32m[08:31:17.355535] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=2) Data[m
[33m[1m[08:31:17.355574] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[08:31:17.355603] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::21::0::0[m
[33m[1m[08:31:17.355706] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::21::0::0[m
[36m[08:31:17.357870] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 3:1::33::0::0[m
[32m[08:31:17.357955] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=3) Data[m
[33m[1m[08:31:17.358005] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[08:31:17.358043] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::33::0::0[m
[36m[08:31:17.358056] [D] [thread 125695] [WorkerRPCServer.cpp:45] [RegisterQuery] WorkerRPCServer::RegisterQuery: got request for queryId: 1 plan=SINK(56: {FileSinkDescriptor()})
  CENTRALWINDOW(60)
    SOURCE(57,,NetworkSourceDescriptor{tcp://192.168.2.12:37941 1::21::0::0})
    SOURCE(61,,NetworkSourceDescriptor{tcp://192.168.2.12:37941 1::27::0::0})
    SOURCE(55,,NetworkSourceDescriptor{tcp://192.168.2.30:46877 1::33::0::0})
    SOURCE(59,,NetworkSourceDescriptor{tcp://192.168.2.30:46877 1::39::0::0})
    SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.31:40151 1::45::0::0})
    SOURCE(58,,NetworkSourceDescriptor{tcp://192.168.2.31:40151 1::51::0::0})
[m
Dumping queryPlan: [32m[08:31:17.358094] [I] [thread 125695] [NodeEngine.cpp:112] [registerQueryInNodeEngine] Creating ExecutableQueryPlan for 1 7 [m
[33m[1m[08:31:17.358172] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::33::0::0[m
[32m[08:31:17.358229] [I] [thread 125695] [NautilusQueryCompiler.cpp:59] [compileQuery] Compile Query with Nautilus[m
[36m[08:31:17.358569] [D] [thread 125695] [NautilusQueryCompiler.cpp:70] [compileQuery] compile query with id: 1 subPlanId: 7[m
[36m[08:31:17.358632] [D] [thread 125695] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-7-2023-11-13 08:31:17 - 1. LogicalQueryPlan[m
[36m[08:31:17.358729] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 1:1::33::0::0[m
SINK(56: {FileSinkDescriptor()})
  CENTRALWINDOW(60)
    SOURCE(57,,NetworkSourceDescriptor{tcp://192.168.2.12:37941 1::21::0::0})
    SOURCE(61,,NetworkSourceDescriptor{tcp://192.168.2.12:37941 1::27::0::0})
    SOURCE(55,,NetworkSourceDescriptor{tcp://192.168.2.30:46877 1::33::0::0})
    SOURCE(59,,NetworkSourceDescriptor{tcp://192.168.2.30:46877 1::39::0::0})
    SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.31:40151 1::45::0::0})
    SOURCE(58,,NetworkSourceDescriptor{tcp://192.168.2.31:40151 1::51::0::0})

[32m[08:31:17.358784] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=1) Data[m
[33m[1m[08:31:17.358835] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[08:31:17.358870] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::33::0::0[m
[33m[1m[08:31:17.358975] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::33::0::0[m
[36m[08:31:17.359034] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 2:1::51::0::0[m
[32m[08:31:17.359070] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) Data[m
[33m[1m[08:31:17.359108] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[08:31:17.359134] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::51::0::0[m
[33m[1m[08:31:17.359190] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::51::0::0[m
[36m[08:31:17.359327] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 0:1::51::0::0[m
[32m[08:31:17.359367] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) Data[m
[33m[1m[08:31:17.359404] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[08:31:17.359434] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::51::0::0[m
[33m[1m[08:31:17.359514] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::51::0::0[m
[36m[08:31:17.360073] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 2:1::33::0::0[m
[32m[08:31:17.360134] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=2) Data[m
[33m[1m[08:31:17.360180] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[08:31:17.360212] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::33::0::0[m
[36m[08:31:17.360477] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 0:1::33::0::0[m
[32m[08:31:17.360529] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=0) Data[m
[33m[1m[08:31:17.360573] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=0) NOT REGISTERED[m
[32m[08:31:17.360588] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 62[m
[33m[1m[08:31:17.360602] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::33::0::0[m
[33m[1m[08:31:17.360673] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::33::0::0[m
[36m[08:31:17.360726] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 1:1::51::0::0[m
[32m[08:31:17.360756] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) Data[m
[36m[08:31:17.360770] [D] [thread 125695] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[33m[1m[08:31:17.360789] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) NOT REGISTERED[m
[32m[08:31:17.360802] [I] [thread 125695] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[08:31:17.360811] [I] [thread 125695] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[33m[1m[08:31:17.360815] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::51::0::0[m
[33m[1m[08:31:17.360864] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::51::0::0[m
[36m[08:31:17.360914] [D] [thread 125695] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[08:31:17.360933] [D] [thread 125695] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[33m[1m[08:31:17.360940] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::33::0::0[m
[36m[08:31:17.360991] [D] [thread 125695] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[08:31:17.360993] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 3:1::51::0::0[m
[36m[08:31:17.361023] [D] [thread 125695] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[08:31:17.361036] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) Data[m
[33m[1m[08:31:17.361076] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[08:31:17.361104] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::51::0::0[m
[33m[1m[08:31:17.361161] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::51::0::0[m
[32m[08:31:17.361167] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 63[m
[32m[08:31:17.361264] [I] [thread 125695] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[32m[08:31:17.361282] [I] [thread 125695] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[08:31:17.361291] [I] [thread 125695] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[08:31:17.361320] [I] [thread 125695] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[08:31:17.361331] [I] [thread 125695] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[08:31:17.361341] [I] [thread 125695] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[08:31:17.361350] [I] [thread 125695] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[08:31:17.362483] [I] [thread 125695] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[08:31:17.362514] [I] [thread 125695] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[08:31:17.362721] [I] [thread 125695] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[36m[08:31:17.363758] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 1:1::21::0::0[m
[36m[08:31:17.363774] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 0:1::21::0::0[m
[32m[08:31:17.363874] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=1) Data[m
[32m[08:31:17.363874] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=0) Data[m
[33m[1m[08:31:17.363940] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=1) NOT REGISTERED[m
[36m[08:31:17.363888] [D] [thread 125695] [DefaultPhysicalOperatorProvider.cpp:853] [lowerWindowOperator] DefaultPhysicalOperatorProvider::lowerWindowOperator: Plan before
PhysicalSinkOperator
  CENTRALWINDOW(60)
    PhysicalMultiplexOperator
      SOURCE(57,,NetworkSourceDescriptor{tcp://192.168.2.12:37941 1::21::0::0})
      SOURCE(61,,NetworkSourceDescriptor{tcp://192.168.2.12:37941 1::27::0::0})
      SOURCE(55,,NetworkSourceDescriptor{tcp://192.168.2.30:46877 1::33::0::0})
      SOURCE(59,,NetworkSourceDescriptor{tcp://192.168.2.30:46877 1::39::0::0})
      SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.31:40151 1::45::0::0})
      SOURCE(58,,NetworkSourceDescriptor{tcp://192.168.2.31:40151 1::51::0::0})
[m
[33m[1m[08:31:17.363952] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[08:31:17.363984] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::21::0::0[m
[33m[1m[08:31:17.363984] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::21::0::0[m
[36m[08:31:17.364128] [D] [thread 125695] [DefaultPhysicalOperatorProvider.cpp:784] [lowerThreadLocalWindowOperator] Create Thread local window aggregation[m
[33m[1m[08:31:17.364137] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::21::0::0[m
[33m[1m[08:31:17.364217] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::21::0::0[m
[36m[08:31:17.367483] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 3:1::21::0::0[m
[32m[08:31:17.367626] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=3) Data[m
[33m[1m[08:31:17.367687] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[08:31:17.367726] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::21::0::0[m
[32m[08:31:17.367776] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 64[m
[33m[1m[08:31:17.367879] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::21::0::0[m
[32m[08:31:17.368006] [I] [thread 125695] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[32m[08:31:17.368034] [I] [thread 125695] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[08:31:17.368042] [I] [thread 125695] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[08:31:17.368060] [I] [thread 125695] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[08:31:17.368189] [I] [thread 125695] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[08:31:17.368674] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 65[m
[36m[08:31:17.368810] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 2:1::21::0::0[m
[32m[08:31:17.368840] [I] [thread 125695] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[32m[08:31:17.368861] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=2) Data[m
[32m[08:31:17.368864] [I] [thread 125695] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[08:31:17.368879] [I] [thread 125695] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[08:31:17.368897] [I] [thread 125695] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[33m[1m[08:31:17.368912] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[08:31:17.368947] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::21::0::0[m
[32m[08:31:17.369000] [I] [thread 125695] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[33m[1m[08:31:17.369121] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::21::0::0[m
[32m[08:31:17.369144] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 66[m
[36m[08:31:17.369236] [D] [thread 125695] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[08:31:17.369264] [D] [thread 125695] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[08:31:17.369314] [I] [thread 125695] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[08:31:17.369324] [I] [thread 125695] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[08:31:17.369336] [I] [thread 125695] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[08:31:17.369397] [D] [thread 125695] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[08:31:17.369410] [D] [thread 125695] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[08:31:17.369454] [D] [thread 125695] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[08:31:17.369476] [D] [thread 125695] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[36m[08:31:17.369843] [D] [thread 125695] [DefaultPhysicalOperatorProvider.cpp:937] [lowerWindowOperator] DefaultPhysicalOperatorProvider::lowerWindowOperator: Plan after
PhysicalSinkOperator
  PhysicalKeyedTumblingWindowSink
    PhysicalKeyedSliceMergingOperator
      PhysicalKeyedThreadLocalPreAggregationOperator
        PhysicalMultiplexOperator
          SOURCE(57,,NetworkSourceDescriptor{tcp://192.168.2.12:37941 1::21::0::0})
          SOURCE(61,,NetworkSourceDescriptor{tcp://192.168.2.12:37941 1::27::0::0})
          SOURCE(55,,NetworkSourceDescriptor{tcp://192.168.2.30:46877 1::33::0::0})
          SOURCE(59,,NetworkSourceDescriptor{tcp://192.168.2.30:46877 1::39::0::0})
          SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.31:40151 1::45::0::0})
          SOURCE(58,,NetworkSourceDescriptor{tcp://192.168.2.31:40151 1::51::0::0})
[m
[36m[08:31:17.370072] [D] [thread 125695] [WindowOperatorHandler.hpp:95] [~WindowOperatorHandler] ~WindowOperatorHandler() 0[m
[32m[08:31:17.370409] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 67[m
[36m[08:31:17.370720] [D] [thread 125695] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[08:31:17.370768] [D] [thread 125695] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[36m[08:31:17.370769] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 3:1::33::0::0[m
[32m[08:31:17.370822] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=3) Data[m
[32m[08:31:17.370831] [I] [thread 125695] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[08:31:17.370841] [I] [thread 125695] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[08:31:17.370856] [I] [thread 125695] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[33m[1m[08:31:17.370872] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[08:31:17.370907] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::33::0::0[m
[36m[08:31:17.370956] [D] [thread 125695] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[08:31:17.370972] [D] [thread 125695] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[33m[1m[08:31:17.371004] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::33::0::0[m
[32m[08:31:17.371049] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 68[m
[36m[08:31:17.371136] [D] [thread 125695] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[08:31:17.371153] [D] [thread 125695] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[08:31:17.371191] [I] [thread 125695] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[08:31:17.371199] [I] [thread 125695] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[08:31:17.371209] [I] [thread 125695] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[08:31:17.371288] [D] [thread 125695] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[08:31:17.371305] [D] [thread 125695] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[08:31:17.371358] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 69[m
[36m[08:31:17.371486] [D] [thread 125695] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[08:31:17.371517] [D] [thread 125695] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[08:31:17.371566] [I] [thread 125695] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[08:31:17.371575] [I] [thread 125695] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[08:31:17.371588] [I] [thread 125695] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[08:31:17.371827] [D] [thread 125695] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[08:31:17.371856] [D] [thread 125695] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[08:31:17.372066] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 70[m
[36m[08:31:17.372284] [D] [thread 125695] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[08:31:17.372404] [D] [thread 125695] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[08:31:17.372772] [I] [thread 125695] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[08:31:17.372903] [I] [thread 125695] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[08:31:17.372959] [I] [thread 125695] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[08:31:17.373223] [D] [thread 125695] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[08:31:17.373286] [D] [thread 125695] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[08:31:17.373473] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 71[m
[36m[08:31:17.373781] [D] [thread 125695] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[08:31:17.373914] [D] [thread 125695] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[08:31:17.374039] [I] [thread 125695] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[08:31:17.374057] [I] [thread 125695] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
Dumping queryPlan: [32m[08:31:17.374072] [I] [thread 125695] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[08:31:17.374204] [D] [thread 125695] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
PhysicalSinkOperator
  PhysicalKeyedTumblingWindowSink
    PhysicalKeyedSliceMergingOperator
      PhysicalKeyedThreadLocalPreAggregationOperator
        PhysicalMultiplexOperator
          PhysicalSourceOperator
          PhysicalSourceOperator
          PhysicalSourceOperator
          PhysicalSourceOperator
          PhysicalSourceOperator
          PhysicalSourceOperator

[36m[08:31:17.374250] [D] [thread 125695] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[08:31:17.374345] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 72[m
[36m[08:31:17.374345] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 1:1::33::0::0[m
[36m[08:31:17.374378] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 2:1::33::0::0[m
[32m[08:31:17.374413] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=2) Data[m
[32m[08:31:17.374413] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=1) Data[m
[33m[1m[08:31:17.374500] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[08:31:17.374508] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[08:31:17.374538] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::33::0::0[m
[33m[1m[08:31:17.374539] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::33::0::0[m
[36m[08:31:17.374569] [D] [thread 125695] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[08:31:17.374595] [D] [thread 125695] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[33m[1m[08:31:17.374642] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::33::0::0[m
[32m[08:31:17.374657] [I] [thread 125695] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[08:31:17.374666] [I] [thread 125695] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[33m[1m[08:31:17.374663] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::33::0::0[m
[32m[08:31:17.374686] [I] [thread 125695] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[08:31:17.374728] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 0:1::33::0::0[m
[32m[08:31:17.374762] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=0) Data[m
[36m[08:31:17.374787] [D] [thread 125695] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[33m[1m[08:31:17.374799] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=0) NOT REGISTERED[m
[36m[08:31:17.374804] [D] [thread 125695] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[33m[1m[08:31:17.374826] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::33::0::0[m
[33m[1m[08:31:17.374913] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::33::0::0[m
[36m[08:31:17.374997] [D] [thread 125695] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-7-2023-11-13 08:31:17 - 2. PhysicalQueryPlan[m
[36m[08:31:17.375236] [D] [thread 125695] [DefaultPipeliningPhase.cpp:42] [apply] Pipeline: query id: 1 - 7[m
[32m[08:31:17.375811] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 62[m
[36m[08:31:17.376127] [D] [thread 125695] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSinkOperator as new root of the plan.[m
[36m[08:31:17.376164] [D] [thread 125695] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:17.376178] [D] [thread 125695] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[08:31:17.377094] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 73[m
[36m[08:31:17.377263] [D] [thread 125695] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalKeyedTumblingWindowSink as new root of the plan.[m
[36m[08:31:17.377284] [D] [thread 125695] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:17.377295] [D] [thread 125695] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[08:31:17.377508] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 74[m
[36m[08:31:17.377707] [D] [thread 125695] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalKeyedSliceMergingOperator as new root of the plan.[m
[36m[08:31:17.377859] [D] [thread 125695] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:17.377902] [D] [thread 125695] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[08:31:17.378288] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 75[m
[36m[08:31:17.378439] [D] [thread 125695] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalKeyedThreadLocalPreAggregationOperator as new root of the plan.[m
[36m[08:31:17.378456] [D] [thread 125695] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:17.378464] [D] [thread 125695] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[08:31:17.378833] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 67[m
[36m[08:31:17.379097] [D] [thread 125695] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[08:31:17.379135] [D] [thread 125695] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:17.379146] [D] [thread 125695] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[08:31:17.379436] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 68[m
[36m[08:31:17.379645] [D] [thread 125695] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[08:31:17.379677] [D] [thread 125695] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:17.379689] [D] [thread 125695] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[08:31:17.379873] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 69[m
[36m[08:31:17.380116] [D] [thread 125695] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[08:31:17.380176] [D] [thread 125695] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:17.380190] [D] [thread 125695] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[08:31:17.380347] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 70[m
[36m[08:31:17.380558] [D] [thread 125695] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[08:31:17.380617] [D] [thread 125695] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:17.380630] [D] [thread 125695] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[08:31:17.380815] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 71[m
[36m[08:31:17.381043] [D] [thread 125695] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[08:31:17.381107] [D] [thread 125695] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:17.381120] [D] [thread 125695] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[08:31:17.381260] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 72[m
[36m[08:31:17.381453] [D] [thread 125695] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[08:31:17.381510] [D] [thread 125695] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:17.381521] [D] [thread 125695] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
Dumping pipelineQueryPlan: [36m[08:31:17.381608] [D] [thread 125695] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-7-2023-11-13 08:31:17 - 3. AfterPipelinedQueryPlan[m
PipelineQueryPlan: 
- queryId: 1, subPlanId: 7, no. pipelines: 9
- pipeline: - Id: 1, Type: SinkPipelineType, Successors: , Predecessors: 2
- Queryplan: PhysicalSinkOperator

- pipeline: - Id: 2, Type: OperatorPipelineType, Successors: 1, Predecessors: 3
- Queryplan: PhysicalKeyedSliceMergingOperator
  PhysicalKeyedTumblingWindowSink

- pipeline: - Id: 3, Type: OperatorPipelineType, Successors: 2, Predecessors: 4, 5, 6, 7, 8, 9
- Queryplan: PhysicalKeyedThreadLocalPreAggregationOperator

- pipeline: - Id: 4, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 5, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 6, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 7, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 8, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 9, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator


[36m[08:31:17.382386] [D] [thread 125695] [Node.cpp:448] [getAllLeafNodes] Node: Get all leaf nodes for this node[m
[36m[08:31:17.382444] [D] [thread 125695] [Node.cpp:458] [getAllLeafNodes] Node: Inserting leaf node to the collection[m
[36m[08:31:17.382474] [D] [thread 125695] [Node.cpp:469] [getAllLeafNodes] Node: Found 1 leaf nodes[m
[32m[08:31:17.382592] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 76[m
Dumping pipelineQueryPlan: [36m[08:31:17.383080] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 2:1::51::0::0[m
[36m[08:31:17.383080] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 0:1::51::0::0[m
[32m[08:31:17.383166] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) Data[m
PipelineQueryPlan: 
- queryId: 1, subPlanId: 7, no. pipelines: 9
- pipeline: - Id: 1, Type: SinkPipelineType, Successors: , Predecessors: 2
- Queryplan: PhysicalSinkOperator

- pipeline: - Id: 2, Type: OperatorPipelineType, Successors: 1, Predecessors: 3
- Queryplan: PhysicalKeyedSliceMergingOperator
  PhysicalKeyedTumblingWindowSink
    PhysicalEmitOperator

- pipeline: - Id: 3, Type: OperatorPipelineType, Successors: 2, Predecessors: 4, 5, 6, 7, 8, 9
- Queryplan: PhysicalScanOperator
  PhysicalKeyedThreadLocalPreAggregationOperator

- pipeline: - Id: 4, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 5, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 6, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 7, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 8, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 9, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator


[32m[08:31:17.383166] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) Data[m
[33m[1m[08:31:17.383240] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[08:31:17.383281] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::51::0::0[m
[32m[08:31:17.383353] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 77[m
[33m[1m[08:31:17.383373] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::51::0::0[m
[33m[1m[08:31:17.383452] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) NOT REGISTERED[m
[36m[08:31:17.383457] [D] [thread 125695] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalScanOperator as new root of the plan.[m
[33m[1m[08:31:17.383483] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::51::0::0[m
[36m[08:31:17.383536] [D] [thread 125695] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[08:31:17.383550] [D] [thread 125695] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[33m[1m[08:31:17.383555] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::51::0::0[m
[36m[08:31:17.383567] [D] [thread 125695] [Node.cpp:448] [getAllLeafNodes] Node: Get all leaf nodes for this node[m
[36m[08:31:17.383577] [D] [thread 125695] [Node.cpp:452] [getAllLeafNodes] Node: found no children. Returning itself as leaf.[m
[36m[08:31:17.383610] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 3:1::51::0::0[m
[36m[08:31:17.383599] [D] [thread 125695] [Node.cpp:469] [getAllLeafNodes] Node: Found 1 leaf nodes[m
[32m[08:31:17.383644] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) Data[m
[33m[1m[08:31:17.383677] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) NOT REGISTERED[m
[36m[08:31:17.383681] [D] [thread 125695] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-7-2023-11-13 08:31:17 - 4. AfterAddScanAndEmitPhase[m
[33m[1m[08:31:17.383706] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::51::0::0[m
[36m[08:31:17.383722] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 1:1::51::0::0[m
[32m[08:31:17.383755] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) Data[m
[33m[1m[08:31:17.383782] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::51::0::0[m
[33m[1m[08:31:17.383787] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[08:31:17.383813] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::51::0::0[m
[33m[1m[08:31:17.383861] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::51::0::0[m
[32m[08:31:17.384489] [I] [thread 125695] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalKeyedSliceMergingOperator[m
[32m[08:31:17.384559] [I] [thread 125695] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalKeyedSliceMergingOperator to NautilusOperator.[m
[32m[08:31:17.384975] [I] [thread 125695] [LowerPhysicalToNautilusOperators.cpp:877] [lowerAggregations] Lower Window Aggregations to Nautilus Operator[m
[32m[08:31:17.385360] [I] [thread 125695] [ExpressionProvider.cpp:54] [lowerExpression] Lower Expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[08:31:17.386564] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 1:1::21::0::0[m
[36m[08:31:17.386579] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 0:1::21::0::0[m
[32m[08:31:17.386675] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=1) Data[m
[32m[08:31:17.386675] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=0) Data[m
[33m[1m[08:31:17.386741] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[08:31:17.386751] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[08:31:17.386781] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::21::0::0[m
[33m[1m[08:31:17.386782] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::21::0::0[m
[33m[1m[08:31:17.386921] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::21::0::0[m
[33m[1m[08:31:17.386921] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::21::0::0[m
[32m[08:31:17.386930] [I] [thread 125695] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalKeyedTumblingWindowSink[m
[32m[08:31:17.386976] [I] [thread 125695] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalKeyedTumblingWindowSink to NautilusOperator.[m
[32m[08:31:17.387016] [I] [thread 125695] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalEmitOperator[m
[32m[08:31:17.387042] [I] [thread 125695] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalEmitOperator to NautilusOperator.[m
[36m[08:31:17.388087] [D] [thread 125695] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PhysicalKeyedSliceMergingOperator as root operator.[m
[32m[08:31:17.388266] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7953757509803730293[m
[32m[08:31:17.388787] [I] [thread 125695] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalScanOperator[m
[32m[08:31:17.388853] [I] [thread 125695] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalScanOperator to NautilusOperator.[m
[32m[08:31:17.389498] [I] [thread 125695] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalKeyedThreadLocalPreAggregationOperator[m
[36m[08:31:17.389529] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 3:1::21::0::0[m
[32m[08:31:17.389567] [I] [thread 125695] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalKeyedThreadLocalPreAggregationOperator to NautilusOperator.[m
[32m[08:31:17.389579] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=3) Data[m
[33m[1m[08:31:17.389627] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=3) NOT REGISTERED[m
[32m[08:31:17.389640] [I] [thread 125695] [LowerPhysicalToNautilusOperators.cpp:877] [lowerAggregations] Lower Window Aggregations to Nautilus Operator[m
[33m[1m[08:31:17.389661] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::21::0::0[m
[32m[08:31:17.389716] [I] [thread 125695] [ExpressionProvider.cpp:54] [lowerExpression] Lower Expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[33m[1m[08:31:17.389765] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::21::0::0[m
[32m[08:31:17.390362] [I] [thread 125695] [ExpressionProvider.cpp:54] [lowerExpression] Lower Expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[08:31:17.390930] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 2:1::21::0::0[m
[32m[08:31:17.391021] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=2) Data[m
[33m[1m[08:31:17.391072] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[08:31:17.391109] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::21::0::0[m
[33m[1m[08:31:17.391246] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::21::0::0[m
[36m[08:31:17.391345] [D] [thread 125695] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PhysicalScanOperator as root operator.[m
[32m[08:31:17.391506] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 281473475442704[m
[36m[08:31:17.391903] [D] [thread 125695] [NautilusCompilationPhase.cpp:38] [apply] Generate code for query plan 1 - 7[m
[32m[08:31:17.392595] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 78[m
[36m[08:31:17.392748] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 3:1::33::0::0[m
[32m[08:31:17.392796] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=3) Data[m
[33m[1m[08:31:17.392844] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[08:31:17.392877] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::33::0::0[m
[33m[1m[08:31:17.392985] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::33::0::0[m
[32m[08:31:17.393071] [I] [thread 125695] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 79[m
[36m[08:31:17.393838] [D] [thread 125695] [ConvertLogicalToPhysicalSink.cpp:43] [createDataSink] Convert sink  62[m
[32m[08:31:17.393934] [I] [thread 125695] [ConvertLogicalToPhysicalSink.cpp:157] [createDataSink] ConvertLogicalToPhysicalSink: Creating file sink for format=CSV_FORMAT[m
[36m[08:31:17.394340] [D] [thread 125695] [FileSink.cpp:56] [FileSink] FileSink: open file= /home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out[m
[36m[08:31:17.395591] [D] [thread 125695] [LowerToExecutableQueryPlanPhase.cpp:291] [processOperatorPipeline] Adding current pipeline: 3 as a predecessor to its child pipeline: 2[m
[32m[08:31:17.396020] [I] [thread 125695] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[08:31:17.396698] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 2:1::33::0::0[m
[36m[08:31:17.396698] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 1:1::33::0::0[m
[32m[08:31:17.396804] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=2) Data[m
[32m[08:31:17.396804] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=1) Data[m
[33m[1m[08:31:17.396874] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[08:31:17.396884] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[08:31:17.396912] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::33::0::0[m
[33m[1m[08:31:17.396915] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::33::0::0[m
[36m[08:31:17.397036] [D] [thread 125695] [DataSource.cpp:75] [DataSource] DataSource  21 : Init Data Source with schema  debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[33m[1m[08:31:17.397041] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::33::0::0[m
[33m[1m[08:31:17.397041] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::33::0::0[m
[36m[08:31:17.397361] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 0:1::33::0::0[m
[32m[08:31:17.397407] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=0) Data[m
[33m[1m[08:31:17.397466] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[08:31:17.397502] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::33::0::0[m
[33m[1m[08:31:17.397604] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::33::0::0[m
[36m[08:31:17.397791] [D] [thread 125695] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 21 as a predecessor to its child pipeline: 3[m
[32m[08:31:17.398139] [I] [thread 125695] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[08:31:17.398537] [D] [thread 125695] [DataSource.cpp:75] [DataSource] DataSource  27 : Init Data Source with schema  debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:17.398950] [D] [thread 125695] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 27 as a predecessor to its child pipeline: 3[m
[32m[08:31:17.399253] [I] [thread 125695] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[08:31:17.399618] [D] [thread 125695] [DataSource.cpp:75] [DataSource] DataSource  33 : Init Data Source with schema  debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:17.399988] [D] [thread 125695] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 33 as a predecessor to its child pipeline: 3[m
[32m[08:31:17.400197] [I] [thread 125695] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[08:31:17.400586] [D] [thread 125695] [DataSource.cpp:75] [DataSource] DataSource  39 : Init Data Source with schema  debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:17.400961] [D] [thread 125695] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 39 as a predecessor to its child pipeline: 3[m
[32m[08:31:17.401136] [I] [thread 125695] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[08:31:17.401481] [D] [thread 125695] [DataSource.cpp:75] [DataSource] DataSource  45 : Init Data Source with schema  debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:17.401816] [D] [thread 125695] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 45 as a predecessor to its child pipeline: 3[m
[32m[08:31:17.402019] [I] [thread 125695] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[08:31:17.402340] [D] [thread 125695] [DataSource.cpp:75] [DataSource] DataSource  51 : Init Data Source with schema  debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[08:31:17.402678] [D] [thread 125695] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 51 as a predecessor to its child pipeline: 3[m
[36m[08:31:17.403609] [D] [thread 125695] [NodeEngine.cpp:131] [registerQueryInNodeEngine] Runtime: registerQueryInNodeEngine query with queryId= 1 querySubPlanId = 7[m
[36m[08:31:17.403801] [D] [thread 125695] [NodeEngine.cpp:137] [registerQueryInNodeEngine] Runtime: register of QEP  7  as a singleton[m
[36m[08:31:17.403821] [D] [thread 125695] [QueryManagerLifecycle.cpp:38] [registerQuery] AbstractQueryManager::registerQueryInNodeEngine: query 1 subquery=7[m
[36m[08:31:17.403866] [D] [thread 125695] [QueryManagerLifecycle.cpp:48] [registerQuery] AbstractQueryManager: resolving sources for query  1  with sources= 6[m
[36m[08:31:17.403893] [D] [thread 125695] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  21  not found. Creating new element with with qep [m
[36m[08:31:17.404137] [D] [thread 125695] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  27  not found. Creating new element with with qep [m
[36m[08:31:17.404216] [D] [thread 125695] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  33  not found. Creating new element with with qep [m
[36m[08:31:17.404240] [D] [thread 125695] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  39  not found. Creating new element with with qep [m
[36m[08:31:17.404259] [D] [thread 125695] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  45  not found. Creating new element with with qep [m
[36m[08:31:17.404281] [D] [thread 125695] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  51  not found. Creating new element with with qep [m
[36m[08:31:17.404343] [D] [thread 125695] [QueryManagerLifecycle.cpp:68] [registerQuery] queryToStatisticsMap add for= 7  pair queryId= 1  subplanId= 7[m
2023-11-13 08:31:17.404 setup: queryId=1, querySubPlanId=7; 
[36m[08:31:17.404759] [D] [thread 125695] [ExecutableQueryPlan.cpp:126] [setup] QueryExecutionPlan: setup queryId=1 querySubPlanId=7[m
[36m[08:31:17.411710] [D] [thread 125695] [KeyedSliceMerging.cpp:115] [combineThreadLocalSlices] combine 0 slices[m
[36m[08:31:17.419546] [D] [thread 125695] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff4803dbc0[m
[36m[08:31:17.420947] [D] [thread 125695] [KeyedSliceMerging.cpp:115] [combineThreadLocalSlices] combine 0 slices[m
[36m[08:31:17.425183] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 0:1::51::0::0[m
[32m[08:31:17.425289] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) Data[m
[36m[08:31:17.425295] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 2:1::51::0::0[m
[32m[08:31:17.425331] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) Data[m
[33m[1m[08:31:17.425343] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[08:31:17.425362] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[08:31:17.425379] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::51::0::0[m
[33m[1m[08:31:17.425388] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::51::0::0[m
[33m[1m[08:31:17.425477] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::51::0::0[m
[33m[1m[08:31:17.425492] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::51::0::0[m
[36m[08:31:17.426126] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 1:1::51::0::0[m
[32m[08:31:17.426215] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) Data[m
[33m[1m[08:31:17.426265] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[08:31:17.426303] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::51::0::0[m
[33m[1m[08:31:17.426408] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::51::0::0[m
[36m[08:31:17.426539] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 3:1::51::0::0[m
[32m[08:31:17.426582] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) Data[m
[33m[1m[08:31:17.426621] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[08:31:17.426655] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::51::0::0[m
[33m[1m[08:31:17.426731] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::51::0::0[m
[36m[08:31:17.428614] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 1:1::21::0::0[m
[36m[08:31:17.428614] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 0:1::21::0::0[m
[32m[08:31:17.428716] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=1) Data[m
[32m[08:31:17.428716] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=0) Data[m
[33m[1m[08:31:17.428784] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[08:31:17.428793] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[08:31:17.428823] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::21::0::0[m
[33m[1m[08:31:17.428825] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::21::0::0[m
[33m[1m[08:31:17.428974] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::21::0::0[m
[33m[1m[08:31:17.428974] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::21::0::0[m
[36m[08:31:17.431238] [D] [thread 125695] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[08:31:17.431466] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 3:1::21::0::0[m
[32m[08:31:17.431522] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=3) Data[m
[33m[1m[08:31:17.431575] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[08:31:17.431610] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::21::0::0[m
[33m[1m[08:31:17.431735] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::21::0::0[m
[36m[08:31:17.432991] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 2:1::21::0::0[m
[32m[08:31:17.433086] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=2) Data[m
[36m[08:31:17.433122] [D] [thread 125695] [KeyedSliceMerging.cpp:115] [combineThreadLocalSlices] combine 0 slices[m
[33m[1m[08:31:17.433134] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[08:31:17.433169] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::21::0::0[m
[33m[1m[08:31:17.433300] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::21::0::0[m
[36m[08:31:17.434646] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 3:1::33::0::0[m
[32m[08:31:17.434745] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=3) Data[m
[33m[1m[08:31:17.434791] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[08:31:17.434832] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::33::0::0[m
[33m[1m[08:31:17.434972] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::33::0::0[m
[36m[08:31:17.438678] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 2:1::33::0::0[m
[36m[08:31:17.438678] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 1:1::33::0::0[m
[32m[08:31:17.438789] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=1) Data[m
[33m[1m[08:31:17.438841] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=1) NOT REGISTERED[m
[32m[08:31:17.438867] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=2) Data[m
[33m[1m[08:31:17.438878] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::33::0::0[m
[33m[1m[08:31:17.438903] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[08:31:17.438932] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::33::0::0[m
[33m[1m[08:31:17.439010] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::33::0::0[m
[33m[1m[08:31:17.439050] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::33::0::0[m
[36m[08:31:17.439784] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 0:1::33::0::0[m
[32m[08:31:17.439864] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=0) Data[m
[33m[1m[08:31:17.439912] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[08:31:17.439946] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::33::0::0[m
[33m[1m[08:31:17.440142] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::33::0::0[m
[36m[08:31:17.446907] [D] [thread 125695] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[08:31:17.448207] [D] [thread 125695] [KeyedSliceMerging.cpp:115] [combineThreadLocalSlices] combine 0 slices[m
[36m[08:31:17.452132] [D] [thread 125695] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[08:31:17.453300] [D] [thread 125695] [KeyedSliceMerging.cpp:115] [combineThreadLocalSlices] combine 0 slices[m
[36m[08:31:17.455949] [D] [thread 125695] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[08:31:17.456356] [D] [thread 125695] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff4805a010[m
[36m[08:31:17.456415] [D] [thread 125695] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff4805e010[m
[36m[08:31:17.457284] [D] [thread 125695] [KeyedSliceMerging.cpp:115] [combineThreadLocalSlices] combine 0 slices[m
[36m[08:31:17.461292] [D] [thread 125695] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[08:31:17.461626] [D] [thread 125695] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff4806e780[m
[36m[08:31:17.461691] [D] [thread 125695] [TraceContext.cpp:231] [apply] Iterations: 6[m
[36m[08:31:17.478506] [D] [thread 125695] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 0 JMP	$0_0	Block5($0_125,$0_124,$0_4,$0_5,$0_19,$0_18,$0_15,$0_9,$0_22,$0_21,$0_20,$0_12,$0_6,)	[m
[36m[08:31:17.480611] [D] [thread 125695] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 1 JMP	$0_0	Block16($1_116,$1_117,$1_118,$1_119,$1_120,$1_121,$1_122,$1_123,$1_124,$1_125,$1_4,$1_11,$1_0,$1_8,$1_3,$1_5,$1_126,$1_7,$1_127,$1_128,)	[m
[36m[08:31:17.482039] [D] [thread 125695] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 3 JMP	$0_0	Block5($3_103,$3_104,$3_105,$3_106,$3_107,$3_108,$3_109,$3_110,$3_1,$3_111,$3_113,$3_114,$3_115,)	[m
[36m[08:31:17.483743] [D] [thread 125695] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 4 JMP	$0_0	Block25($4_108,$4_109,$4_110,$4_111,$4_112,$4_113,$4_114,$4_115,$4_116,$4_117,$4_118,$4_119,$4_120,$4_121,$4_122,$4_123,$4_2,$4_124,$4_6,$4_125,$4_126,$4_127,)	[m
[36m[08:31:17.487010] [D] [thread 125695] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 10 JMP	$0_0	Block22($10_119,$10_120,$10_121,$10_122,$10_123,$10_124,$10_125,$10_126,$10_127,$10_128,$10_129,$10_130,$10_131,$10_132,$10_133,$10_134,$10_135,$10_136,$10_137,$10_138,$10_139,$10_140,)	[m
[36m[08:31:17.489173] [D] [thread 125695] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 12 JMP	$0_0	Block23($12_111,$12_112,$12_113,$12_114,$12_115,$12_116,$12_117,$12_118,$12_119,$12_120,$12_121,$12_122,$12_123,$12_124,$12_125,$12_126,$12_128,$12_129,$12_130,$12_131,)	[m
[36m[08:31:17.490877] [D] [thread 125695] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 14 JMP	$0_0	Block24($14_105,$14_106,$14_107,$14_108,$14_109,$14_110,$14_111,$14_112,$14_113,$14_114,$14_115,$14_116,$14_117,$14_3,$14_119,$14_0,$14_120,$14_5,$14_121,$14_122,)	[m
[36m[08:31:17.492033] [D] [thread 125695] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 24 JMP	$0_0	Block16($24_103,$24_104,$24_105,$24_106,$24_107,$24_108,$24_109,$24_110,$24_111,$24_112,$14_8,$24_113,$24_115,$24_116,$24_117,$24_118,$24_119,$24_120,$24_121,$24_122,)	[m
[36m[08:31:17.493525] [D] [thread 125695] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 15 JMP	$0_0	Block24($15_101,$15_102,$15_103,$15_104,$15_105,$15_106,$15_107,$15_108,$15_109,$15_110,$15_111,$15_112,$15_113,$15_114,$15_115,$15_116,$15_117,$15_118,$15_119,$15_120,)	[m
[36m[08:31:17.495256] [D] [thread 125695] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 13 JMP	$0_0	Block23($13_101,$13_102,$13_103,$13_104,$13_105,$13_106,$13_107,$13_108,$13_109,$13_110,$13_111,$13_112,$13_113,$13_114,$13_115,$13_116,$13_117,$13_118,$13_119,$13_120,)	[m
[36m[08:31:17.497261] [D] [thread 125695] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 11 JMP	$0_0	Block25($11_104,$11_105,$11_106,$11_107,$11_108,$11_109,$11_110,$11_111,$11_112,$11_113,$11_114,$11_115,$11_116,$11_117,$11_118,$11_119,$11_120,$11_121,$11_2,$11_123,$11_124,$11_125,)	[m
[36m[08:31:17.498933] [D] [thread 125695] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 9 JMP	$0_0	Block22($9_101,$9_102,$9_103,$9_104,$9_105,$9_106,$9_107,$9_108,$9_109,$9_110,$9_111,$9_112,$9_113,$9_114,$9_115,$9_116,$9_117,$9_118,$9_119,$9_120,$9_121,$9_122,)	[m
[36m[08:31:17.501580] [D] [thread 125695] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 2 JMP	$0_0	Block21($2_118,$2_119,$2_120,$2_123,$2_2,$2_124,$2_121,$2_122,$2_9,$2_16,$2_5,$2_13,$2_8,$2_10,$2_124,$2_126,$2_127,$2_12,)	[m
[36m[08:31:17.505836] [D] [thread 125695] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 17 JMP	$0_0	Block26($17_109,$17_110,$17_5,$17_111,$17_112,$17_113,$17_9,$17_114,$17_115,$17_116,$17_117,$17_118,$17_119,$17_120,$17_123,$17_124,$17_7,$17_125,)	[m
[36m[08:31:17.507465] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 2:1::51::0::0[m
[36m[08:31:17.507478] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 0:1::51::0::0[m
[32m[08:31:17.507567] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) Data[m
[32m[08:31:17.507568] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) Data[m
[33m[1m[08:31:17.507635] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[08:31:17.507645] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[08:31:17.507677] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::51::0::0[m
[33m[1m[08:31:17.507677] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::51::0::0[m
[36m[08:31:17.507711] [D] [thread 125695] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 19 JMP	$0_0	Block27($19_105,$19_106,$19_107,$19_108,$19_109,$19_110,$19_111,$19_112,$19_113,$19_114,$19_115,$19_3,$19_117,$19_0,$19_118,$19_119,$19_120,$19_5,)	[m
[33m[1m[08:31:17.507819] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::51::0::0[m
[33m[1m[08:31:17.507818] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::51::0::0[m
[36m[08:31:17.508574] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 1:1::51::0::0[m
[36m[08:31:17.508598] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 3:1::51::0::0[m
[32m[08:31:17.508642] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) Data[m
[32m[08:31:17.508641] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) Data[m
[33m[1m[08:31:17.508724] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[08:31:17.508738] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[08:31:17.508765] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::51::0::0[m
[33m[1m[08:31:17.508770] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::51::0::0[m
[33m[1m[08:31:17.508853] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::51::0::0[m
[33m[1m[08:31:17.508870] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::51::0::0[m
[36m[08:31:17.508975] [D] [thread 125695] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 27 JMP	$0_0	Block21($27_103,$27_104,$27_105,$27_106,$27_107,$27_108,$27_109,$27_110,$19_8,$27_111,$27_113,$27_114,$27_115,$27_116,$27_117,$27_118,$27_119,$27_120,)	[m
[36m[08:31:17.510533] [D] [thread 125695] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 20 JMP	$0_0	Block27($20_101,$20_102,$20_103,$20_104,$20_105,$20_106,$20_107,$20_108,$20_109,$20_110,$20_111,$20_112,$20_113,$20_114,$20_115,$20_116,$20_117,$20_118,)	[m
[36m[08:31:17.510694] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 0:1::21::0::0[m
[36m[08:31:17.510729] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 1:1::21::0::0[m
[32m[08:31:17.510740] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=0) Data[m
[32m[08:31:17.510762] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=1) Data[m
[33m[1m[08:31:17.510785] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[08:31:17.510791] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[08:31:17.510816] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::21::0::0[m
[33m[1m[08:31:17.510818] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::21::0::0[m
[33m[1m[08:31:17.510903] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::21::0::0[m
[33m[1m[08:31:17.510916] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::21::0::0[m
[36m[08:31:17.512456] [D] [thread 125695] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 18 JMP	$0_0	Block26($18_101,$18_102,$18_103,$18_104,$18_105,$18_106,$18_107,$18_108,$18_109,$18_110,$18_111,$18_112,$18_113,$18_114,$18_115,$18_116,$18_117,$18_118,)	[m
[36m[08:31:17.513368] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 3:1::21::0::0[m
[32m[08:31:17.513446] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=3) Data[m
[33m[1m[08:31:17.513493] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[08:31:17.513526] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::21::0::0[m
[33m[1m[08:31:17.513631] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::21::0::0[m
[36m[08:31:17.514926] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 2:1::21::0::0[m
[32m[08:31:17.515024] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=2) Data[m
[33m[1m[08:31:17.515075] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[08:31:17.515110] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::21::0::0[m
[33m[1m[08:31:17.515223] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::21::0::0[m
[36m[08:31:17.516518] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 3:1::33::0::0[m
[32m[08:31:17.516604] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=3) Data[m
[33m[1m[08:31:17.516650] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[08:31:17.516681] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::33::0::0[m
[33m[1m[08:31:17.516787] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::33::0::0[m
[36m[08:31:17.520966] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 1:1::33::0::0[m
[36m[08:31:17.520965] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 2:1::33::0::0[m
[32m[08:31:17.521055] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=1) Data[m
[32m[08:31:17.521055] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=2) Data[m
[33m[1m[08:31:17.521117] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[08:31:17.521128] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[08:31:17.521154] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::33::0::0[m
[33m[1m[08:31:17.521159] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::33::0::0[m
[33m[1m[08:31:17.521241] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::33::0::0[m
[33m[1m[08:31:17.521252] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::33::0::0[m
[36m[08:31:17.521948] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 0:1::33::0::0[m
[32m[08:31:17.522034] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=0) Data[m
[33m[1m[08:31:17.522078] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[08:31:17.522109] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::33::0::0[m
[33m[1m[08:31:17.522211] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::33::0::0[m
[36m[08:31:17.644610] [D] [thread 125695] [MLIRLoweringProvider.cpp:170] [~MLIRLoweringProvider] ~MLIRLoweringProvider[m
[32m[08:31:17.646020] [I] [thread 125695] [CompiledExecutablePipelineStage.cpp:97] [compilePipeline] overall runtime: 239.286 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-2_Trace Generation:	69.3522 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-2_IR Generation:	38.5634 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-2_Compilation:	131.37 ms[m
[36m[08:31:17.669777] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 2:1::51::0::0[m
[36m[08:31:17.669777] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 0:1::51::0::0[m
[32m[08:31:17.669895] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) Data[m
[32m[08:31:17.669895] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) Data[m
[33m[1m[08:31:17.669967] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[08:31:17.669979] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[08:31:17.670007] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::51::0::0[m
[33m[1m[08:31:17.670013] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::51::0::0[m
[33m[1m[08:31:17.670180] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::51::0::0[m
[33m[1m[08:31:17.670180] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::51::0::0[m
[36m[08:31:17.670637] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 3:1::51::0::0[m
[32m[08:31:17.670690] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) Data[m
[33m[1m[08:31:17.670737] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[08:31:17.670768] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::51::0::0[m
[33m[1m[08:31:17.670860] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::51::0::0[m
[36m[08:31:17.671010] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 1:1::51::0::0[m
[32m[08:31:17.671050] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) Data[m
[33m[1m[08:31:17.671087] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[08:31:17.671116] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::51::0::0[m
[33m[1m[08:31:17.671176] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::51::0::0[m
[36m[08:31:17.672657] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 1:1::21::0::0[m
[36m[08:31:17.672657] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 0:1::21::0::0[m
[32m[08:31:17.672765] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=1) Data[m
[32m[08:31:17.672765] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=0) Data[m
[33m[1m[08:31:17.672836] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[08:31:17.672847] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[08:31:17.672877] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::21::0::0[m
[33m[1m[08:31:17.672880] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::21::0::0[m
[33m[1m[08:31:17.672964] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::21::0::0[m
[33m[1m[08:31:17.672980] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::21::0::0[m
[36m[08:31:17.675330] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 3:1::21::0::0[m
[32m[08:31:17.675445] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=3) Data[m
[33m[1m[08:31:17.675500] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[08:31:17.675537] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::21::0::0[m
[33m[1m[08:31:17.675673] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::21::0::0[m
[36m[08:31:17.676843] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 2:1::21::0::0[m
[32m[08:31:17.676941] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=2) Data[m
[33m[1m[08:31:17.676993] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[08:31:17.677029] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::21::0::0[m
[33m[1m[08:31:17.677155] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::21::0::0[m
[36m[08:31:17.678376] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 3:1::33::0::0[m
[32m[08:31:17.678487] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=3) Data[m
[33m[1m[08:31:17.678539] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[08:31:17.678575] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::33::0::0[m
[33m[1m[08:31:17.678714] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::33::0::0[m
[36m[08:31:17.683096] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 1:1::33::0::0[m
[36m[08:31:17.683096] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 2:1::33::0::0[m
[32m[08:31:17.683216] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=1) Data[m
[32m[08:31:17.683216] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=2) Data[m
[33m[1m[08:31:17.683288] [W] [thread 125688] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[08:31:17.683297] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[08:31:17.683328] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::33::0::0[m
[33m[1m[08:31:17.683330] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::33::0::0[m
[33m[1m[08:31:17.683493] [W] [thread 125688] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::33::0::0[m
[33m[1m[08:31:17.683493] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::33::0::0[m
[36m[08:31:17.684052] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 0:1::33::0::0[m
[32m[08:31:17.684115] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=0) Data[m
[33m[1m[08:31:17.684228] [W] [thread 125689] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[08:31:17.684269] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::33::0::0[m
[33m[1m[08:31:17.684404] [W] [thread 125689] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::33::0::0[m
[36m[08:31:17.710937] [D] [thread 125695] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff480528b0[m
[36m[08:31:17.715281] [D] [thread 125695] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[08:31:17.719111] [D] [thread 125695] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[08:31:17.719524] [D] [thread 125695] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff48044b70[m
[36m[08:31:17.719585] [D] [thread 125695] [TraceContext.cpp:231] [apply] Iterations: 3[m
[36m[08:31:17.725335] [D] [thread 125695] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 0 JMP	$0_0	Block9($0_116,$0_115,$0_6,$0_8,$0_4,$0_16,$0_14,$0_13,$0_15,)	[m
[36m[08:31:17.727968] [D] [thread 125695] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 1 JMP	$0_0	Block12($1_147,$1_148,$1_149,$1_150,$1_151,$1_152,$1_153,$1_20,$1_5,$1_43,$1_45,$1_47,$1_154,$1_155,)	[m
[36m[08:31:17.730155] [D] [thread 125695] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 5 JMP	$0_0	Block10($5_101,$5_102,$5_103,$5_104,$5_105,$5_106,$5_107,$5_108,$5_109,$5_110,$5_111,$5_112,$5_113,$5_114,)	[m
[36m[08:31:17.731858] [D] [thread 125695] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 7 JMP	$0_0	Block11($7_113,$7_114,$7_115,$7_116,$7_117,$7_118,$7_119,$7_120,$7_0,$7_124,$7_125,)	[m
[36m[08:31:17.733048] [D] [thread 125695] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 11 JMP	$0_0	Block9($11_110,$11_111,$11_112,$11_113,$11_114,$7_24,$11_115,$11_119,$11_120,)	[m
[36m[08:31:17.734067] [D] [thread 125695] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 8 JMP	$0_0	Block11($8_101,$8_102,$8_103,$8_104,$8_105,$8_106,$8_107,$8_108,$8_109,$8_110,$8_111,)	[m
[36m[08:31:17.735436] [D] [thread 125695] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 6 JMP	$0_0	Block12($6_104,$6_105,$6_106,$6_107,$6_108,$6_109,$6_110,$6_111,$6_112,$6_113,$6_114,$6_2,$6_115,$6_116,)	[m
[36m[08:31:17.736720] [D] [thread 125695] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 4 JMP	$0_0	Block10($4_101,$4_102,$4_103,$4_104,$4_105,$4_106,$4_107,$4_108,$4_109,$4_110,$4_111,$4_112,$4_113,$4_114,)	[m
[36m[08:31:17.789877] [D] [thread 125695] [MLIRLoweringProvider.cpp:170] [~MLIRLoweringProvider] ~MLIRLoweringProvider[m
[32m[08:31:17.790895] [I] [thread 125695] [CompiledExecutablePipelineStage.cpp:97] [compilePipeline] overall runtime: 97.2326 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-3_Trace Generation:	30.973 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-3_IR Generation:	13.9428 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-3_Compilation:	52.3168 ms[m
2023-11-13 08:31:17.816 start: queryId=1, querySubPlanId=7; 
[36m[08:31:17.817059] [D] [thread 125695] [ExecutableQueryPlan.cpp:144] [start] QueryExecutionPlan: start query=1 subplan=7[m
[36m[08:31:17.817153] [D] [thread 125695] [ExecutableQueryPlan.cpp:148] [start] ExecutableQueryPlan::start qep=7 pipe=2[m
[36m[08:31:17.817282] [D] [thread 125695] [KeyedSliceMergingHandler.cpp:33] [start] start GlobalSliceMergingHandler[m
[36m[08:31:17.817349] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[08:31:17.817710] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[08:31:17.818476] [D] [thread 125691] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 2 belonging to query id: 7 stage id: 2[m
[36m[08:31:17.818476] [D] [thread 125692] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 2 belonging to query id: 7 stage id: 2[m
[36m[08:31:17.818476] [D] [thread 125690] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 2 belonging to query id: 7 stage id: 2[m
[36m[08:31:17.818476] [D] [thread 125693] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 2 belonging to query id: 7 stage id: 2[m
[36m[08:31:17.818816] [D] [thread 125695] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 7 stage id: 2[m
[36m[08:31:17.818892] [D] [thread 125695] [ExecutableQueryPlan.cpp:148] [start] ExecutableQueryPlan::start qep=7 pipe=3[m
[36m[08:31:17.818963] [D] [thread 125695] [AbstractSlicePreAggregationHandler.cpp:110] [start] start AbstractSlicePreAggregationHandler[m
[36m[08:31:17.819004] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[08:31:17.819184] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[08:31:17.819738] [D] [thread 125693] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[08:31:17.819738] [D] [thread 125691] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[08:31:17.819783] [D] [thread 125692] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[08:31:17.819738] [D] [thread 125690] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[08:31:17.819945] [D] [thread 125695] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 7 stage id: 3[m
[36m[08:31:17.820296] [D] [thread 125695] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::21::0::0 from 192.168.2.12[m
[36m[08:31:17.820645] [D] [thread 125695] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::21::0::0=1[m
[36m[08:31:17.820702] [D] [thread 125695] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff48033fe0  started successfully[m
[36m[08:31:17.820761] [D] [thread 125695] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::27::0::0 from 192.168.2.12[m
[36m[08:31:17.820822] [D] [thread 125695] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::27::0::0=1[m
[36m[08:31:17.820838] [D] [thread 125695] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff48034520  started successfully[m
[36m[08:31:17.820869] [D] [thread 125695] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::33::0::0 from 192.168.2.30[m
[36m[08:31:17.820904] [D] [thread 125695] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::33::0::0=1[m
[36m[08:31:17.820929] [D] [thread 125695] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff48034b90  started successfully[m
[36m[08:31:17.820961] [D] [thread 125695] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::39::0::0 from 192.168.2.30[m
[36m[08:31:17.821006] [D] [thread 125695] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::39::0::0=1[m
[36m[08:31:17.821021] [D] [thread 125695] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff48035200  started successfully[m
[36m[08:31:17.821060] [D] [thread 125695] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::45::0::0 from 192.168.2.31[m
[36m[08:31:17.821097] [D] [thread 125695] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::45::0::0=1[m
[36m[08:31:17.821112] [D] [thread 125695] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff480358a0  started successfully[m
[36m[08:31:17.821141] [D] [thread 125695] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::51::0::0 from 192.168.2.31[m
[36m[08:31:17.821178] [D] [thread 125695] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::51::0::0=1[m
[36m[08:31:17.821191] [D] [thread 125695] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff480368d0  started successfully[m
[36m[08:31:17.821254] [D] [thread 125695] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:21 PartitionId: 0 SubpartitionID: 0[m
[36m[08:31:17.821339] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[08:31:17.821471] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[08:31:17.822269] [D] [thread 125691] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::21::0::0[m
[36m[08:31:17.822269] [D] [thread 125690] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::21::0::0[m
[36m[08:31:17.822269] [D] [thread 125693] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::21::0::0[m
[36m[08:31:17.822269] [D] [thread 125692] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::21::0::0[m
[36m[08:31:17.822502] [D] [thread 125695] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::21::0::0[m
[36m[08:31:17.822556] [D] [thread 125695] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:21 PartitionId: 0 SubpartitionID: 0[m
[36m[08:31:17.822574] [D] [thread 125695] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff48033fe0  started successfully[m
[36m[08:31:17.822603] [D] [thread 125695] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:27 PartitionId: 0 SubpartitionID: 0[m
[36m[08:31:17.822662] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[08:31:17.822828] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[08:31:17.823226] [D] [thread 125692] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::27::0::0[m
[36m[08:31:17.823226] [D] [thread 125691] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::27::0::0[m
[36m[08:31:17.823270] [D] [thread 125690] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::27::0::0[m
[36m[08:31:17.823226] [D] [thread 125693] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::27::0::0[m
[36m[08:31:17.823411] [D] [thread 125695] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::27::0::0[m
[36m[08:31:17.823464] [D] [thread 125695] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:27 PartitionId: 0 SubpartitionID: 0[m
[36m[08:31:17.823480] [D] [thread 125695] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff48034520  started successfully[m
[36m[08:31:17.823508] [D] [thread 125695] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[08:31:17.823576] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[08:31:17.823699] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[08:31:17.824106] [D] [thread 125690] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[08:31:17.824106] [D] [thread 125692] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[08:31:17.824167] [D] [thread 125691] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[08:31:17.824223] [D] [thread 125693] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[08:31:17.824378] [D] [thread 125695] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::33::0::0[m
[36m[08:31:17.824428] [D] [thread 125695] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[08:31:17.824445] [D] [thread 125695] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff48034b90  started successfully[m
[36m[08:31:17.824473] [D] [thread 125695] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[08:31:17.824529] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[08:31:17.824676] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[08:31:17.825052] [D] [thread 125693] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[08:31:17.825052] [D] [thread 125691] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[08:31:17.825101] [D] [thread 125690] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[08:31:17.825052] [D] [thread 125692] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[08:31:17.825210] [D] [thread 125695] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::39::0::0[m
[36m[08:31:17.825255] [D] [thread 125695] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[08:31:17.825270] [D] [thread 125695] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff48035200  started successfully[m
[36m[08:31:17.825296] [D] [thread 125695] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[36m[08:31:17.825359] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[08:31:17.825441] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[08:31:17.825755] [D] [thread 125692] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[08:31:17.825755] [D] [thread 125690] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[08:31:17.825756] [D] [thread 125693] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[08:31:17.825846] [D] [thread 125691] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[08:31:17.825924] [D] [thread 125695] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::45::0::0[m
[36m[08:31:17.825961] [D] [thread 125695] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[36m[08:31:17.825980] [D] [thread 125695] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff480358a0  started successfully[m
[36m[08:31:17.826007] [D] [thread 125695] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[08:31:17.826050] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[08:31:17.826127] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[08:31:17.826423] [D] [thread 125691] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[08:31:17.826423] [D] [thread 125692] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[08:31:17.826423] [D] [thread 125690] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[08:31:17.826513] [D] [thread 125693] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[08:31:17.826582] [D] [thread 125695] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::51::0::0[m
[36m[08:31:17.826621] [D] [thread 125695] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[08:31:17.826635] [D] [thread 125695] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff480368d0  started successfully[m
[36m[08:31:17.826686] [D] [thread 125695] [QueryManagerLifecycle.cpp:158] [registerQuery] AbstractQueryManager: start sink  FileSink()[m
[36m[08:31:17.826785] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:17.826965] [D] [thread 125695] [NodeEngine.cpp:144] [registerQueryInNodeEngine] Runtime: register of subqep  7  succeeded[m
[36m[08:31:17.827057] [D] [thread 125695] [WorkerRPCServer.cpp:54] [RegisterQuery] WorkerRPCServer::RegisterQuery: success[m
[36m[08:31:17.992999] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 2:1::51::0::0[m
[36m[08:31:17.993019] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 0:1::51::0::0[m
[32m[08:31:17.993190] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) Data[m
[32m[08:31:17.993191] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) Data[m
[36m[08:31:17.993472] [D] [thread 125689] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=0) REGISTERED[m
[36m[08:31:17.993493] [D] [thread 125688] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=2) REGISTERED[m
[36m[08:31:17.993838] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 3:1::51::0::0[m
[32m[08:31:17.993924] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) Data[m
[36m[08:31:17.993938] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 1:1::51::0::0[m
[36m[08:31:17.994018] [D] [thread 125688] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=3) REGISTERED[m
[32m[08:31:17.994110] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) Data[m
[36m[08:31:17.994414] [D] [thread 125689] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=1) REGISTERED[m
[36m[08:31:17.995507] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 0:1::21::0::0[m
[36m[08:31:17.995547] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 1:1::21::0::0[m
[32m[08:31:17.995645] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=0) Data[m
[32m[08:31:17.995668] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=1) Data[m
[36m[08:31:17.995817] [D] [thread 125688] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::21::0::0(threadId=1) REGISTERED[m
[36m[08:31:17.995836] [D] [thread 125689] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::21::0::0(threadId=0) REGISTERED[m
[36m[08:31:17.997987] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 3:1::21::0::0[m
[32m[08:31:17.998122] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=3) Data[m
[36m[08:31:17.998225] [D] [thread 125688] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::21::0::0(threadId=3) REGISTERED[m
[36m[08:31:17.999631] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 2:1::21::0::0[m
[32m[08:31:17.999760] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=2) Data[m
[36m[08:31:17.999856] [D] [thread 125689] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::21::0::0(threadId=2) REGISTERED[m
[36m[08:31:18.001147] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 3:1::33::0::0[m
[32m[08:31:18.001278] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=3) Data[m
[36m[08:31:18.001377] [D] [thread 125688] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=3) REGISTERED[m
[36m[08:31:18.006628] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 1:1::33::0::0[m
[36m[08:31:18.006621] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 2:1::33::0::0[m
[32m[08:31:18.006803] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=1) Data[m
[32m[08:31:18.006805] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=2) Data[m
[36m[08:31:18.006950] [D] [thread 125688] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=1) REGISTERED[m
[36m[08:31:18.006962] [D] [thread 125689] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=2) REGISTERED[m
[36m[08:31:18.007495] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 0:1::33::0::0[m
[32m[08:31:18.007567] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=0) Data[m
[36m[08:31:18.007629] [D] [thread 125689] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=0) REGISTERED[m
[36m[08:31:18.012580] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 2:1::45::0::0[m
[32m[08:31:18.012696] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=2) Data[m
[36m[08:31:18.012773] [D] [thread 125688] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::45::0::0(threadId=2) REGISTERED[m
[36m[08:31:18.014047] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 3:1::45::0::0[m
[32m[08:31:18.014149] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=3) Data[m
[36m[08:31:18.014220] [D] [thread 125689] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::45::0::0(threadId=3) REGISTERED[m
[36m[08:31:18.017156] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 0:1::45::0::0[m
[36m[08:31:18.017157] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 1:1::45::0::0[m
[32m[08:31:18.017279] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) Data[m
[32m[08:31:18.017279] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=1) Data[m
[36m[08:31:18.017382] [D] [thread 125689] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::45::0::0(threadId=0) REGISTERED[m
[36m[08:31:18.017396] [D] [thread 125688] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::45::0::0(threadId=1) REGISTERED[m
[36m[08:31:18.019421] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 1:1::27::0::0[m
[36m[08:31:18.019504] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 0:1::27::0::0[m
[32m[08:31:18.019522] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=1) Data[m
[32m[08:31:18.019537] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=0) Data[m
[36m[08:31:18.019613] [D] [thread 125688] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::27::0::0(threadId=1) REGISTERED[m
[36m[08:31:18.019628] [D] [thread 125689] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::27::0::0(threadId=0) REGISTERED[m
[36m[08:31:18.021676] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 3:1::27::0::0[m
[32m[08:31:18.021772] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=3) Data[m
[36m[08:31:18.021786] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 2:1::27::0::0[m
[32m[08:31:18.021821] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=2) Data[m
[36m[08:31:18.021836] [D] [thread 125688] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::27::0::0(threadId=3) REGISTERED[m
[36m[08:31:18.021858] [D] [thread 125689] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::27::0::0(threadId=2) REGISTERED[m
[36m[08:31:18.023701] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 0:1::39::0::0[m
[36m[08:31:18.023743] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 1:1::39::0::0[m
[32m[08:31:18.023791] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) Data[m
[32m[08:31:18.023792] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) Data[m
[36m[08:31:18.023872] [D] [thread 125689] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::39::0::0(threadId=1) REGISTERED[m
[36m[08:31:18.023882] [D] [thread 125688] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::39::0::0(threadId=0) REGISTERED[m
[36m[08:31:18.024663] [D] [thread 125688] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 3:1::39::0::0[m
[32m[08:31:18.024755] [I] [thread 125688] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) Data[m
[36m[08:31:18.024823] [D] [thread 125688] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::39::0::0(threadId=3) REGISTERED[m
[36m[08:31:18.025106] [D] [thread 125689] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): ClientAnnouncement received for channel 2:1::39::0::0[m
[32m[08:31:18.025164] [I] [thread 125689] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) Data[m
[36m[08:31:18.025211] [D] [thread 125689] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::39::0::0(threadId=2) REGISTERED[m
[36m[08:31:18.366835] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:18.367159] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:19.368428] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:19.435657] [D] [thread 125679] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Register succeed[m
[36m[08:31:19.435768] [D] [thread 125679] [QueryDeploymentPhase.cpp:215] [deployQuery] QueryDeploymentPhase: Finished deploying execution plan for query with Id 1 [m
[36m[08:31:19.436456] [D] [thread 125679] [QueryDeploymentPhase.cpp:94] [execute] QueryDeploymentPhase: deployment for shared query 1 successful[m
[36m[08:31:19.436625] [D] [thread 125679] [QueryDeploymentPhase.cpp:101] [execute] QueryService: start query[m
[36m[08:31:19.436659] [D] [thread 125679] [QueryDeploymentPhase.cpp:219] [startQuery] QueryDeploymentPhase::startQuery queryId= 1[m
[36m[08:31:19.436876] [D] [thread 125679] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=5 and IP=192.168.2.32[m
[36m[08:31:19.436927] [D] [thread 125679] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.32:36981 queryId=1[m
[36m[08:31:19.441943] [D] [thread 125679] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=6 and IP=192.168.2.33[m
[36m[08:31:19.442024] [D] [thread 125679] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.33:46475 queryId=1[m
[36m[08:31:19.446747] [D] [thread 125679] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=7 and IP=192.168.2.34[m
[36m[08:31:19.446833] [D] [thread 125679] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.34:34507 queryId=1[m
[36m[08:31:19.451465] [D] [thread 125679] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=8 and IP=192.168.2.35[m
[36m[08:31:19.451549] [D] [thread 125679] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.35:41727 queryId=1[m
[36m[08:31:19.456472] [D] [thread 125679] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=9 and IP=192.168.2.37[m
[36m[08:31:19.456544] [D] [thread 125679] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.37:36655 queryId=1[m
[36m[08:31:19.461202] [D] [thread 125679] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=10 and IP=192.168.2.38[m
[36m[08:31:19.461285] [D] [thread 125679] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.38:43257 queryId=1[m
[36m[08:31:19.466161] [D] [thread 125679] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=1 and IP=192.168.2.11[m
[36m[08:31:19.466287] [D] [thread 125679] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.11:39877 queryId=1[m
[36m[08:31:19.471039] [D] [thread 125679] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=2 and IP=192.168.2.12[m
[36m[08:31:19.471134] [D] [thread 125679] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.12:32805 queryId=1[m
[36m[08:31:19.475689] [D] [thread 125679] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=3 and IP=192.168.2.30[m
[36m[08:31:19.475776] [D] [thread 125679] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.30:41695 queryId=1[m
[36m[08:31:19.480422] [D] [thread 125679] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=4 and IP=192.168.2.31[m
[36m[08:31:19.480494] [D] [thread 125679] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.31:41615 queryId=1[m
[36m[08:31:19.485064] [D] [thread 125679] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Start for 10 queues[m
[36m[08:31:19.527950] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:19.528283] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:19.577164] [D] [thread 125754] [WorkerRPCServer.cpp:77] [StartQuery] WorkerRPCServer::StartQuery: got request for 1[m
[36m[08:31:19.577267] [D] [thread 125754] [NodeEngine.cpp:158] [startQuery] Runtime: startQuery= 1[m
[36m[08:31:19.577400] [D] [thread 125754] [QueryManagerLifecycle.cpp:183] [startQuery] AbstractQueryManager::startQuery: query id  7   1[m
[36m[08:31:19.577528] [D] [thread 125754] [QueryStatistics.cpp:48] [setTimestampQueryStart] QueryStatistics::setTimestampQueryStart called with  1699864279577[m
[36m[08:31:19.577546] [D] [thread 125754] [NodeEngine.cpp:170] [startQuery] Runtime: start of QEP  7  succeeded[m
[36m[08:31:19.577567] [D] [thread 125754] [WorkerRPCServer.cpp:80] [StartQuery] WorkerRPCServer::StartQuery: success[m
[36m[08:31:19.639413] [D] [thread 125679] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Start succeed[m
[36m[08:31:19.639886] [D] [thread 125679] [QueryDeploymentPhase.cpp:238] [startQuery] QueryDeploymentPhase: Finished starting execution plan for query with Id 1[m
[32m[08:31:19.640857] [I] [thread 125679] [GlobalQueryPlan.cpp:124] [removeFailedOrStoppedSharedQueryPlans] GlobalQueryPlan: remove empty metadata information.[m
[36m[08:31:19.641059] [D] [thread 125679] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[08:31:20.065438] [D] [thread 125693] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10620000-10680000[m
[36m[08:31:20.067836] [D] [thread 125693] [QueryStatistics.cpp:54] [setTimestampFirstProcessedTask] QueryStatistics::setTimestampFirstProcessedTask called with  1699864280067[m
[36m[08:31:20.072131] [D] [thread 125691] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10620000-10680000[m
[36m[08:31:20.096094] [D] [thread 125692] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10620000-10680000[m
[36m[08:31:20.122013] [D] [thread 125690] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10620000-10680000[m
[36m[08:31:20.529519] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:21.464423] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:21.464813] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:21.466107] [D] [thread 125769] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:31:21.466233] [I] [thread 125769] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:21.466256] [I] [thread 125769] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:31:21.466437] [I] [thread 125769] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:21.466486] [I] [thread 125769] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:31:21.684948] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:21.685299] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:22.686539] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:23.687809] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:23.689950] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:23.690327] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:23.691445] [D] [thread 125774] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:31:23.691539] [I] [thread 125774] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:23.691559] [I] [thread 125774] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:31:23.691676] [I] [thread 125774] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:23.691690] [I] [thread 125774] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:31:23.904182] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:23.904574] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:24.905867] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:25.882575] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:25.882931] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:25.884019] [D] [thread 125779] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:31:25.884120] [I] [thread 125779] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:25.884139] [I] [thread 125779] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:31:25.884255] [I] [thread 125779] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:25.884292] [I] [thread 125779] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:31:26.052370] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:26.052931] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:27.054171] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:27.981713] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:27.982360] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:27.983107] [D] [thread 125784] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:31:27.983200] [I] [thread 125784] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:27.983219] [I] [thread 125784] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:31:27.983336] [I] [thread 125784] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:27.983349] [I] [thread 125784] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:31:28.197827] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:28.198422] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:29.199764] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:30.132404] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:30.132917] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:30.133958] [D] [thread 125789] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:31:30.134065] [I] [thread 125789] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:30.134125] [I] [thread 125789] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:31:30.134255] [I] [thread 125789] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:30.134269] [I] [thread 125789] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:31:30.344817] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:30.345359] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:31.346707] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:32.319057] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:32.319447] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:32.320676] [D] [thread 125794] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:31:32.320837] [I] [thread 125794] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:32.320860] [I] [thread 125794] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:31:32.321078] [I] [thread 125794] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:32.321107] [I] [thread 125794] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:31:32.535136] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:32.535485] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:33.536642] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:34.439466] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:34.439805] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:34.440917] [D] [thread 125799] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:31:34.441016] [I] [thread 125799] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:34.441036] [I] [thread 125799] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:31:34.441155] [I] [thread 125799] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:34.441168] [I] [thread 125799] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:31:34.701005] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:34.701363] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:35.702610] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:36.694976] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:36.695315] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:36.696428] [D] [thread 125804] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:31:36.696521] [I] [thread 125804] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:36.696540] [I] [thread 125804] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:31:36.696656] [I] [thread 125804] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:36.696669] [I] [thread 125804] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:31:36.908972] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:36.909314] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:37.910531] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:38.851187] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:38.851543] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:38.852674] [D] [thread 125809] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:31:38.852772] [I] [thread 125809] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:38.852791] [I] [thread 125809] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:31:38.852908] [I] [thread 125809] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:38.852974] [I] [thread 125809] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:31:39.061504] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:39.061854] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:40.063050] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:41.031680] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:41.032002] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:41.033126] [D] [thread 125814] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:31:41.033226] [I] [thread 125814] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:41.033246] [I] [thread 125814] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:31:41.033364] [I] [thread 125814] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:41.033377] [I] [thread 125814] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:31:41.199190] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:41.199518] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:42.200660] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:43.201918] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:43.208414] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:43.208743] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:43.210051] [D] [thread 125819] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:31:43.210149] [I] [thread 125819] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:43.210167] [I] [thread 125819] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:31:43.210285] [I] [thread 125819] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:43.210298] [I] [thread 125819] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:31:43.476087] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:43.476490] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:44.477724] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:45.444926] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:45.445264] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:45.446384] [D] [thread 125824] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:31:45.446589] [I] [thread 125824] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:45.446611] [I] [thread 125824] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:31:45.446751] [I] [thread 125824] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:45.446774] [I] [thread 125824] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:31:45.614652] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:45.615012] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:46.616228] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:47.551032] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:47.551612] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:47.552570] [D] [thread 125830] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:31:47.552679] [I] [thread 125830] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:47.552700] [I] [thread 125830] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:31:47.552826] [I] [thread 125830] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:47.552842] [I] [thread 125830] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:31:47.741410] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:47.741998] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:48.743368] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:49.726588] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:49.727245] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:49.728000] [D] [thread 125835] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:31:49.728090] [I] [thread 125835] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:49.728110] [I] [thread 125835] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:31:49.728226] [I] [thread 125835] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:49.728259] [I] [thread 125835] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:31:49.893851] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:49.894385] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:50.895817] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:51.871714] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:51.872256] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:51.873101] [D] [thread 125841] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:31:51.873197] [I] [thread 125841] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:51.873215] [I] [thread 125841] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:31:51.873333] [I] [thread 125841] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:51.873346] [I] [thread 125841] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:31:52.132681] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:52.133285] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:53.134606] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:54.129668] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:54.130248] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:54.130961] [D] [thread 125846] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:31:54.131057] [I] [thread 125846] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:54.131075] [I] [thread 125846] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:31:54.131192] [I] [thread 125846] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:54.131206] [I] [thread 125846] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:31:54.317206] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:54.317793] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:55.319070] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:56.287116] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:56.287677] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:56.288563] [D] [thread 125851] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:31:56.288639] [I] [thread 125851] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:56.288656] [I] [thread 125851] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:31:56.288764] [I] [thread 125851] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:56.288777] [I] [thread 125851] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:31:56.455017] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:56.455482] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:57.456811] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:58.458262] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:58.479518] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:58.480091] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:58.480911] [D] [thread 125856] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:31:58.481009] [I] [thread 125856] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:58.481028] [I] [thread 125856] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:31:58.481146] [I] [thread 125856] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:31:58.481159] [I] [thread 125856] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:31:58.745889] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:58.746575] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:31:59.747869] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:00.715060] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:00.715663] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:00.716511] [D] [thread 125861] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:32:00.716605] [I] [thread 125861] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:00.716624] [I] [thread 125861] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:32:00.716741] [I] [thread 125861] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:00.716754] [I] [thread 125861] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:32:00.937758] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:00.938086] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:01.939317] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:02.909890] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:02.910223] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:02.911309] [D] [thread 125866] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:32:02.911407] [I] [thread 125866] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:02.911427] [I] [thread 125866] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:32:02.911545] [I] [thread 125866] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:02.911570] [I] [thread 125866] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:32:03.126780] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:03.127352] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:04.128503] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:05.063374] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:05.063782] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:05.064940] [D] [thread 125871] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:32:05.065039] [I] [thread 125871] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:05.065057] [I] [thread 125871] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:32:05.065176] [I] [thread 125871] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:05.065189] [I] [thread 125871] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:32:05.209083] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:05.209445] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:06.210626] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:07.157494] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:07.157837] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:07.158836] [D] [thread 125876] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:32:07.158916] [I] [thread 125876] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:07.158932] [I] [thread 125876] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:32:07.159040] [I] [thread 125876] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:07.159052] [I] [thread 125876] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:32:07.368443] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:07.368769] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:08.370001] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:09.302827] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:09.303171] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:09.304840] [D] [thread 125881] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:32:09.304937] [I] [thread 125881] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:09.304955] [I] [thread 125881] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:32:09.305072] [I] [thread 125881] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:09.305085] [I] [thread 125881] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:32:09.471043] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:09.471395] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:10.472631] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:11.451203] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:11.451552] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:11.453266] [D] [thread 125886] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:32:11.453363] [I] [thread 125886] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:11.453381] [I] [thread 125886] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:32:11.453500] [I] [thread 125886] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:11.453513] [I] [thread 125886] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:32:11.673417] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:11.673745] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:12.675032] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:13.676298] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:13.742104] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:13.742436] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:13.743891] [D] [thread 125891] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:32:13.743985] [I] [thread 125891] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:13.744003] [I] [thread 125891] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:32:13.744120] [I] [thread 125891] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:13.744133] [I] [thread 125891] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:32:13.914375] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:13.914738] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:14.915964] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:15.895364] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:15.895685] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:15.896769] [D] [thread 125896] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:32:15.896873] [I] [thread 125896] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:15.896891] [I] [thread 125896] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:32:15.897008] [I] [thread 125896] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:15.897067] [I] [thread 125896] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:32:16.118252] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:16.118645] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:17.119909] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:18.062062] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:18.062436] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:18.063470] [D] [thread 125901] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:32:18.063568] [I] [thread 125901] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:18.063588] [I] [thread 125901] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:32:18.063707] [I] [thread 125901] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:18.063722] [I] [thread 125901] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:32:18.258886] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:18.259244] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:19.260522] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:20.191238] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:20.191582] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:20.193253] [D] [thread 125906] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:32:20.193351] [I] [thread 125906] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:20.193370] [I] [thread 125906] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:32:20.193490] [I] [thread 125906] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:20.193503] [I] [thread 125906] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:32:20.404521] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:20.404882] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:21.406151] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:22.350365] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:22.350737] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:22.351856] [D] [thread 125911] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:32:22.351953] [I] [thread 125911] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:22.351971] [I] [thread 125911] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:32:22.352088] [I] [thread 125911] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:22.352104] [I] [thread 125911] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:32:22.514614] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:22.514984] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:23.516230] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:24.505876] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:24.506235] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:24.507390] [D] [thread 125916] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:32:24.507485] [I] [thread 125916] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:24.507504] [I] [thread 125916] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:32:24.507623] [I] [thread 125916] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:24.507636] [I] [thread 125916] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:32:24.728257] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:24.728638] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:25.729842] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:26.694849] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:26.695188] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:26.696524] [D] [thread 125921] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:32:26.696637] [I] [thread 125921] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:26.696657] [I] [thread 125921] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:32:26.696784] [I] [thread 125921] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:26.696824] [I] [thread 125921] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:32:26.961321] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:26.961694] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:26.986084] [D] [thread 125692] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10680000-10740000[m
[36m[08:32:27.962928] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:28.484699] [D] [thread 125691] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10680000-10740000[m
[36m[08:32:28.902613] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:28.902966] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:28.904010] [D] [thread 125926] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:32:28.904112] [I] [thread 125926] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:28.904130] [I] [thread 125926] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:32:28.904249] [I] [thread 125926] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:28.904308] [I] [thread 125926] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:32:29.071077] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:29.071438] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:30.072633] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:31.070013] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:31.070356] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:31.071366] [D] [thread 125931] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:32:31.071446] [I] [thread 125931] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:31.071463] [I] [thread 125931] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:32:31.071573] [I] [thread 125931] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:31.071585] [I] [thread 125931] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:32:31.289789] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:31.290146] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:31.343801] [D] [thread 125690] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10680000-10740000[m
[36m[08:32:32.229086] [D] [thread 125693] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10680000-10740000[m
[36m[08:32:32.291451] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:33.216018] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:33.216605] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:33.217507] [D] [thread 125937] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:32:33.217608] [I] [thread 125937] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:33.217626] [I] [thread 125937] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:32:33.217745] [I] [thread 125937] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:33.217757] [I] [thread 125937] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:32:33.434348] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:33.434713] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:34.319690] [D] [thread 125692] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 60000 Deploy merge task for slice 10620000-10680000 [m
[36m[08:32:34.320492] [D] [thread 125690] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 10620000-10680000-1[m
[36m[08:32:34.320608] [D] [thread 125690] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10620000-10680000[m
[36m[08:32:34.320777] [D] [thread 125690] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10620000-10680000[m
[36m[08:32:34.320830] [D] [thread 125690] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10620000-10680000[m
[36m[08:32:34.320866] [D] [thread 125690] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10620000-10680000[m
[36m[08:32:34.320907] [D] [thread 125690] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10620000-10680000[m
[36m[08:32:34.321072] [D] [thread 125690] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[08:32:34.325050] [D] [thread 125690] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out following content 10620000,10680000,63,1699864279621,1699864354321
10620000,10680000,54,1699864279596,1699864354321
10620000,10680000,100,1699864279517,1699864354321
10620000,10680000,13,1699864279644,1699864354321
10620000,10680000,24,1699864279545,1699864354321
10620000,10680000,47,1699864279565,1699864354321
[m
[36m[08:32:34.435934] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:35.374837] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:35.375162] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:35.376250] [D] [thread 125942] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:32:35.376385] [I] [thread 125942] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:35.376406] [I] [thread 125942] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:32:35.376524] [I] [thread 125942] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:35.376556] [I] [thread 125942] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:32:35.567000] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:35.567340] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:36.568692] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:37.561566] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:37.561890] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:37.563342] [D] [thread 125947] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:32:37.563465] [I] [thread 125947] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:37.563484] [I] [thread 125947] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:32:37.563609] [I] [thread 125947] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:37.563681] [I] [thread 125947] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:32:37.777672] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:37.778041] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:38.779230] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:39.717641] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:39.717978] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:39.719601] [D] [thread 125952] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:32:39.719698] [I] [thread 125952] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:39.719716] [I] [thread 125952] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:32:39.719833] [I] [thread 125952] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:39.719846] [I] [thread 125952] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:32:39.885584] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:39.885930] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:40.887163] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:41.790579] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:41.790933] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:41.791991] [D] [thread 125957] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:32:41.792069] [I] [thread 125957] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:41.792085] [I] [thread 125957] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:32:41.792193] [I] [thread 125957] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:41.792204] [I] [thread 125957] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:32:42.010026] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:42.010389] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:43.011748] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:43.931965] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:43.932564] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:43.933422] [D] [thread 125962] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:32:43.933517] [I] [thread 125962] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:43.933535] [I] [thread 125962] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:32:43.933652] [I] [thread 125962] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:43.933692] [I] [thread 125962] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:32:44.149732] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:44.150306] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:45.151565] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:46.150063] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:46.150730] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:46.151387] [D] [thread 125967] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:32:46.151476] [I] [thread 125967] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:46.151494] [I] [thread 125967] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:32:46.151608] [I] [thread 125967] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:46.151621] [I] [thread 125967] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:32:46.317345] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:46.317668] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:47.318884] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:48.297747] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:48.298361] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:48.299052] [D] [thread 125972] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:32:48.299148] [I] [thread 125972] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:48.299166] [I] [thread 125972] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:32:48.299282] [I] [thread 125972] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:48.299295] [I] [thread 125972] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:32:48.525419] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:48.526047] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:49.527371] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:50.528562] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:50.547415] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:50.547963] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:50.548793] [D] [thread 125979] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:32:50.548891] [I] [thread 125979] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:50.548911] [I] [thread 125979] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:32:50.549029] [I] [thread 125979] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:50.549042] [I] [thread 125979] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:32:50.717944] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:50.718360] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:51.719614] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:52.720585] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:52.758595] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:52.758964] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:52.759901] [D] [thread 125985] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:32:52.759998] [I] [thread 125985] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:52.760016] [I] [thread 125985] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:32:52.760134] [I] [thread 125985] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:52.760147] [I] [thread 125985] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:32:52.945364] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:52.945699] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:53.946893] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:54.948129] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:55.052806] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:55.053517] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:55.054554] [D] [thread 125991] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:32:55.054785] [I] [thread 125991] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:55.054813] [I] [thread 125991] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:32:55.054968] [I] [thread 125991] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:55.055015] [I] [thread 125991] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:32:55.324240] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:55.324840] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:56.326083] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:57.285460] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:57.286096] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:57.286979] [D] [thread 125996] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:32:57.287079] [I] [thread 125996] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:57.287099] [I] [thread 125996] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:32:57.287220] [I] [thread 125996] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:57.287237] [I] [thread 125996] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:32:57.503549] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:57.503877] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:58.504481] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:59.505719] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:59.506489] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:59.506776] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:59.508641] [D] [thread 126001] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:32:59.508719] [I] [thread 126001] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:59.508735] [I] [thread 126001] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:32:59.508844] [I] [thread 126001] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:32:59.508857] [I] [thread 126001] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:32:59.726430] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:32:59.726757] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:00.728001] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:01.713683] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:01.714032] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:01.715842] [D] [thread 126006] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:33:01.715954] [I] [thread 126006] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:01.715977] [I] [thread 126006] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:33:01.716115] [I] [thread 126006] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:01.716132] [I] [thread 126006] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:33:01.883625] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:01.883960] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:02.885204] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:03.886502] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:03.932919] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:03.933328] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:03.934874] [D] [thread 126012] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:33:03.934970] [I] [thread 126012] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:03.934989] [I] [thread 126012] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:33:03.935107] [I] [thread 126012] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:03.935121] [I] [thread 126012] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:33:04.125375] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:04.125735] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:05.126978] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:06.115285] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:06.115626] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:06.116655] [D] [thread 126018] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:33:06.116752] [I] [thread 126018] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:06.116771] [I] [thread 126018] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:33:06.116889] [I] [thread 126018] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:06.116903] [I] [thread 126018] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:33:06.337424] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:06.337793] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:07.339035] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:08.321643] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:08.322029] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:08.323186] [D] [thread 126023] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:33:08.323307] [I] [thread 126023] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:08.323327] [I] [thread 126023] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:33:08.323413] [I] [thread 126023] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:08.323427] [I] [thread 126023] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:33:08.490004] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:08.490370] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:09.491788] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:10.493095] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:10.614326] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:10.615024] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:10.615860] [D] [thread 126028] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:33:10.615953] [I] [thread 126028] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:10.615972] [I] [thread 126028] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:33:10.616086] [I] [thread 126028] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:10.616099] [I] [thread 126028] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:33:10.829707] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:10.830298] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:11.831644] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:12.808954] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:12.809549] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:12.810370] [D] [thread 126034] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:33:12.810463] [I] [thread 126034] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:12.810482] [I] [thread 126034] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:33:12.810600] [I] [thread 126034] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:12.810633] [I] [thread 126034] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:33:12.981291] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:12.981806] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:13.983082] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:14.984374] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:15.003809] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:15.004133] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:15.005812] [D] [thread 126039] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:33:15.005911] [I] [thread 126039] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:15.005931] [I] [thread 126039] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:33:15.006047] [I] [thread 126039] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:15.006061] [I] [thread 126039] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:33:15.220203] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:15.220586] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:16.221804] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:17.196160] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:17.197202] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:17.197943] [D] [thread 126044] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:33:17.198029] [I] [thread 126044] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:17.198046] [I] [thread 126044] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:33:17.198166] [I] [thread 126044] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:17.198179] [I] [thread 126044] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:33:17.356877] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:17.357335] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:18.358689] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:19.360077] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:19.381371] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:19.382404] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:19.383624] [D] [thread 126049] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:33:19.383805] [I] [thread 126049] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:19.383829] [I] [thread 126049] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:33:19.384028] [I] [thread 126049] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:19.384043] [I] [thread 126049] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:33:19.575984] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:19.576346] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:20.577524] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:21.529606] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:21.530018] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:21.531598] [D] [thread 126054] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:33:21.531696] [I] [thread 126054] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:21.531715] [I] [thread 126054] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:33:21.531832] [I] [thread 126054] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:21.531845] [I] [thread 126054] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:33:21.697119] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:21.697469] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:22.698696] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:23.628670] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:23.629030] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:23.629988] [D] [thread 126059] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:33:23.630082] [I] [thread 126059] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:23.630099] [I] [thread 126059] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:33:23.630217] [I] [thread 126059] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:23.630230] [I] [thread 126059] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:33:23.881463] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:23.881823] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:24.883022] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:25.884272] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:25.890773] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:25.891085] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:25.892080] [D] [thread 126064] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:33:25.892173] [I] [thread 126064] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:25.892190] [I] [thread 126064] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:33:25.892307] [I] [thread 126064] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:25.892349] [I] [thread 126064] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:33:26.164214] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:26.164566] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:27.165824] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:28.167226] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:28.185977] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:28.186331] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:28.187282] [D] [thread 126069] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:33:28.187378] [I] [thread 126069] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:28.187396] [I] [thread 126069] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:33:28.187514] [I] [thread 126069] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:28.187527] [I] [thread 126069] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:33:28.395148] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:28.395480] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:29.396671] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:30.397914] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:30.414412] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:30.414765] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:30.415773] [D] [thread 126074] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:33:30.415867] [I] [thread 126074] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:30.415884] [I] [thread 126074] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:33:30.416004] [I] [thread 126074] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:30.416018] [I] [thread 126074] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:33:30.637669] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:30.638033] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:31.639295] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:32.615561] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:32.615890] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:32.616929] [D] [thread 126080] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:33:32.617027] [I] [thread 126080] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:32.617045] [I] [thread 126080] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:33:32.617162] [I] [thread 126080] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:32.617175] [I] [thread 126080] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:33:32.832280] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:32.832635] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:33.833948] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:34.757415] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:34.757743] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:34.758828] [D] [thread 126086] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:33:34.758928] [I] [thread 126086] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:34.758948] [I] [thread 126086] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:33:34.759064] [I] [thread 126086] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:34.759090] [I] [thread 126086] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:33:34.967022] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:34.967456] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:35.968473] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:36.950975] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:36.951722] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:36.952381] [D] [thread 126092] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:33:36.952467] [I] [thread 126092] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:36.952484] [I] [thread 126092] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:33:36.952600] [I] [thread 126092] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:36.952614] [I] [thread 126092] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:33:37.137116] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:37.137646] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:38.138873] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:39.069504] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:39.070086] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:39.070830] [D] [thread 126097] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:33:39.070926] [I] [thread 126097] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:39.070943] [I] [thread 126097] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:33:39.071059] [I] [thread 126097] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:39.071072] [I] [thread 126097] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:33:39.237997] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:39.238392] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:40.239604] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:41.169760] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:41.170108] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:41.171170] [D] [thread 126102] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:33:41.171269] [I] [thread 126102] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:41.171287] [I] [thread 126102] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:33:41.171403] [I] [thread 126102] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:41.171427] [I] [thread 126102] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:33:41.389183] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:41.389555] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:42.390752] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:43.366428] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:43.366808] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:43.367737] [D] [thread 126107] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:33:43.367831] [I] [thread 126107] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:43.367848] [I] [thread 126107] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:33:43.367965] [I] [thread 126107] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:43.367979] [I] [thread 126107] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:33:43.533197] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:43.533530] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:44.534809] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:45.536124] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:45.559668] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:45.559994] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:45.561104] [D] [thread 126112] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:33:45.561209] [I] [thread 126112] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:45.561228] [I] [thread 126112] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:33:45.561345] [I] [thread 126112] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:45.561359] [I] [thread 126112] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:33:45.778709] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:45.779054] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:46.780390] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:47.750514] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:47.751056] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:47.751970] [D] [thread 126117] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:33:47.752065] [I] [thread 126117] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:47.752083] [I] [thread 126117] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:33:47.752200] [I] [thread 126117] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:47.752213] [I] [thread 126117] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:33:47.968473] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:47.969009] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:48.388540] [D] [thread 125693] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10740000-10800000[m
[36m[08:33:48.970272] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:49.893491] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:49.893849] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:49.895444] [D] [thread 126122] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:33:49.895540] [I] [thread 126122] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:49.895558] [I] [thread 126122] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:33:49.895675] [I] [thread 126122] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:49.895689] [I] [thread 126122] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:33:49.944518] [D] [thread 125690] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10740000-10800000[m
[36m[08:33:50.108524] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:50.109034] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:51.110275] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:52.097119] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:52.097495] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:52.099712] [D] [thread 126127] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:33:52.099847] [I] [thread 126127] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:52.099869] [I] [thread 126127] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:33:52.100003] [I] [thread 126127] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:52.100022] [I] [thread 126127] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:33:52.314258] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:52.314634] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:52.961559] [D] [thread 125691] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10740000-10800000[m
[36m[08:33:53.315918] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:54.253672] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:54.254002] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:54.255157] [D] [thread 126132] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:33:54.255256] [I] [thread 126132] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:54.255275] [I] [thread 126132] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:33:54.255392] [I] [thread 126132] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:54.255405] [I] [thread 126132] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:33:54.420698] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:54.421235] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:55.422509] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:56.423742] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:56.424961] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:56.425506] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:56.426294] [D] [thread 126137] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:33:56.426423] [I] [thread 126137] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:56.426442] [I] [thread 126137] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:33:56.426558] [I] [thread 126137] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:56.426571] [I] [thread 126137] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:33:56.685729] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:56.686421] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:57.687769] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:58.688530] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:58.831438] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:58.831766] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:58.832797] [D] [thread 126142] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:33:58.832892] [I] [thread 126142] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:58.832910] [I] [thread 126142] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:33:58.833029] [I] [thread 126142] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:33:58.833042] [I] [thread 126142] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:33:59.046192] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:33:59.046571] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:00.047832] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:00.960095] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:00.960474] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:00.961555] [D] [thread 126147] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:34:00.961658] [I] [thread 126147] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:00.961676] [I] [thread 126147] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:34:00.961794] [I] [thread 126147] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:00.961826] [I] [thread 126147] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:34:01.129716] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:01.130082] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:02.131308] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:03.114059] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:03.114721] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:03.115443] [D] [thread 126152] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:34:03.115533] [I] [thread 126152] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:03.115553] [I] [thread 126152] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:34:03.115670] [I] [thread 126152] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:03.115682] [I] [thread 126152] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:34:03.330780] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:03.331244] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:04.282240] [D] [thread 125692] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10740000-10800000[m
[36m[08:34:04.332573] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:05.333871] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:05.354175] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:05.354703] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:05.355525] [D] [thread 126157] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:34:05.355622] [I] [thread 126157] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:05.355640] [I] [thread 126157] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:34:05.355757] [I] [thread 126157] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:05.355770] [I] [thread 126157] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:34:05.520282] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:05.520843] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:06.522154] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:07.523404] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:07.540834] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:07.541459] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:07.542160] [D] [thread 126162] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:34:07.542255] [I] [thread 126162] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:07.542273] [I] [thread 126162] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:34:07.542388] [I] [thread 126162] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:07.542401] [I] [thread 126162] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:34:07.760829] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:07.761466] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:08.762873] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:09.739073] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:09.739411] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:09.741038] [D] [thread 126167] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:34:09.741133] [I] [thread 126167] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:09.741152] [I] [thread 126167] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:34:09.741271] [I] [thread 126167] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:09.741284] [I] [thread 126167] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:34:09.961004] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:09.961360] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:10.962592] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:11.921646] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:11.921995] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:11.923091] [D] [thread 126172] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:34:11.923193] [I] [thread 126172] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:11.923211] [I] [thread 126172] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:34:11.923329] [I] [thread 126172] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:11.923352] [I] [thread 126172] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:34:12.108962] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:12.109326] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:13.110594] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:13.297863] [D] [thread 125693] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 60000 Deploy merge task for slice 10680000-10740000 [m
[36m[08:34:13.298361] [D] [thread 125692] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 10680000-10740000-2[m
[36m[08:34:13.298435] [D] [thread 125692] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10680000-10740000[m
[36m[08:34:13.298484] [D] [thread 125692] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10680000-10740000[m
[36m[08:34:13.298514] [D] [thread 125692] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10680000-10740000[m
[36m[08:34:13.298538] [D] [thread 125692] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10680000-10740000[m
[36m[08:34:13.298565] [D] [thread 125692] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10680000-10740000[m
[36m[08:34:13.298655] [D] [thread 125692] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[08:34:13.298689] [D] [thread 125692] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[08:34:13.300791] [D] [thread 125692] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out following content 10680000,10740000,63,1699864349232,1699864453298
10680000,10740000,47,1699864352123,1699864453298
10680000,10740000,24,1699864351675,1699864453298
10680000,10740000,54,1699864348793,1699864453298
10680000,10740000,100,1699864346515,1699864453298
10680000,10740000,13,1699864353884,1699864453298
[m
[36m[08:34:14.045172] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:14.045509] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:14.046625] [D] [thread 126177] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:34:14.046823] [I] [thread 126177] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:14.046845] [I] [thread 126177] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:34:14.046982] [I] [thread 126177] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:14.047083] [I] [thread 126177] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:34:14.216623] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:14.217173] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:15.218556] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:16.162408] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:16.163019] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:16.163717] [D] [thread 126182] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:34:16.163812] [I] [thread 126182] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:16.163830] [I] [thread 126182] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:34:16.163948] [I] [thread 126182] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:16.163961] [I] [thread 126182] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:34:16.376492] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:16.376909] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:17.378127] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:18.371214] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:18.371597] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:18.372561] [D] [thread 126187] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:34:18.372656] [I] [thread 126187] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:18.372674] [I] [thread 126187] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:34:18.372793] [I] [thread 126187] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:18.372808] [I] [thread 126187] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:34:18.582273] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:18.582661] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:19.583870] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:20.578909] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:20.579249] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:20.581054] [D] [thread 126192] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:34:20.581152] [I] [thread 126192] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:20.581170] [I] [thread 126192] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:34:20.581286] [I] [thread 126192] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:20.581299] [I] [thread 126192] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:34:20.844522] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:20.844844] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:21.846043] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:22.785883] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:22.786487] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:22.787194] [D] [thread 126197] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:34:22.787287] [I] [thread 126197] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:22.787304] [I] [thread 126197] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:34:22.787421] [I] [thread 126197] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:22.787435] [I] [thread 126197] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:34:22.954071] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:22.954608] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:23.955951] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:24.938449] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:24.939088] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:24.939816] [D] [thread 126202] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:34:24.939909] [I] [thread 126202] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:24.939928] [I] [thread 126202] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:34:24.940044] [I] [thread 126202] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:24.940056] [I] [thread 126202] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:34:25.159802] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:25.160137] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:26.161355] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:27.137579] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:27.137912] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:27.139099] [D] [thread 126207] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:34:27.139180] [I] [thread 126207] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:27.139196] [I] [thread 126207] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:34:27.139303] [I] [thread 126207] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:27.139315] [I] [thread 126207] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:34:27.328994] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:27.329361] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:28.330617] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:29.255332] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:29.255979] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:29.256995] [D] [thread 126212] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:34:29.257114] [I] [thread 126212] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:29.257133] [I] [thread 126212] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:34:29.257263] [I] [thread 126212] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:29.257285] [I] [thread 126212] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:34:29.426174] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:29.427396] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:30.428603] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:31.361686] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:31.362116] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:31.363754] [D] [thread 126217] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:34:31.363852] [I] [thread 126217] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:31.363870] [I] [thread 126217] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:34:31.363987] [I] [thread 126217] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:31.363999] [I] [thread 126217] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:34:31.574017] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:31.574375] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:32.575637] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:33.477191] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:33.477525] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:33.479165] [D] [thread 126222] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:34:33.479263] [I] [thread 126222] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:33.479281] [I] [thread 126222] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:34:33.479398] [I] [thread 126222] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:33.479411] [I] [thread 126222] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:34:33.690561] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:33.690885] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:34.692237] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:35.649357] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:35.649708] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:35.650698] [D] [thread 126227] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:34:35.650796] [I] [thread 126227] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:35.650814] [I] [thread 126227] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:34:35.650931] [I] [thread 126227] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:35.650944] [I] [thread 126227] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:34:35.815356] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:35.815704] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:36.816956] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:37.789489] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:37.789850] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:37.790950] [D] [thread 126232] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:34:37.791055] [I] [thread 126232] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:37.791073] [I] [thread 126232] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:34:37.791193] [I] [thread 126232] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:37.791205] [I] [thread 126232] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:34:38.010000] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:38.010353] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:39.011702] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:39.978029] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:39.978428] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:39.979324] [D] [thread 126237] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:34:39.979422] [I] [thread 126237] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:39.979440] [I] [thread 126237] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:34:39.979557] [I] [thread 126237] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:39.979570] [I] [thread 126237] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:34:40.197666] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:40.198037] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:41.199291] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:42.194038] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:42.194398] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:42.195562] [D] [thread 126242] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:34:42.195658] [I] [thread 126242] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:42.195676] [I] [thread 126242] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:34:42.195791] [I] [thread 126242] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:42.195805] [I] [thread 126242] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:34:42.421752] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:42.422084] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:43.423337] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:44.399381] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:44.399720] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:44.400759] [D] [thread 126247] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:34:44.400864] [I] [thread 126247] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:44.400882] [I] [thread 126247] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:34:44.401000] [I] [thread 126247] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:44.401013] [I] [thread 126247] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:34:44.635611] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:44.635986] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:45.637282] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:46.638655] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:46.682082] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:46.682412] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:46.683717] [D] [thread 126252] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:34:46.683840] [I] [thread 126252] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:46.683859] [I] [thread 126252] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:34:46.684015] [I] [thread 126252] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:46.684033] [I] [thread 126252] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:34:46.902661] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:46.903018] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:47.904302] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:48.876912] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:48.877318] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:48.878391] [D] [thread 126257] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:34:48.878487] [I] [thread 126257] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:48.878505] [I] [thread 126257] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:34:48.878622] [I] [thread 126257] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:48.878635] [I] [thread 126257] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:34:49.094316] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:49.094928] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:50.096192] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:51.097487] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:51.131266] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:51.131598] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:51.132649] [D] [thread 126262] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:34:51.132749] [I] [thread 126262] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:51.132768] [I] [thread 126262] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:34:51.132876] [I] [thread 126262] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:51.132890] [I] [thread 126262] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:34:51.303387] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:51.303718] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:52.304976] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:53.286134] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:53.286500] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:53.287559] [D] [thread 126267] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:34:53.287660] [I] [thread 126267] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:53.287680] [I] [thread 126267] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:34:53.287798] [I] [thread 126267] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:53.287811] [I] [thread 126267] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:34:53.501549] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:53.501881] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:54.503080] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:55.504561] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:55.526223] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:55.526582] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:55.528214] [D] [thread 126273] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:34:55.528311] [I] [thread 126273] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:55.528364] [I] [thread 126273] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:34:55.528484] [I] [thread 126273] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:55.528497] [I] [thread 126273] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:34:55.720781] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:55.721356] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:56.722781] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:57.692630] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:57.693216] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:57.693927] [D] [thread 126278] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:34:57.694023] [I] [thread 126278] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:57.694042] [I] [thread 126278] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:34:57.694157] [I] [thread 126278] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:57.694171] [I] [thread 126278] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:34:57.870857] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:57.871324] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:58.872620] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:59.845652] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:59.846260] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:34:59.847111] [D] [thread 126283] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:34:59.847207] [I] [thread 126283] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:59.847225] [I] [thread 126283] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:34:59.847342] [I] [thread 126283] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:34:59.847356] [I] [thread 126283] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:35:00.065876] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:00.066488] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:01.067749] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:02.068504] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:02.074254] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:02.074881] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:02.075641] [D] [thread 126288] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:35:02.075735] [I] [thread 126288] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:02.075754] [I] [thread 126288] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:35:02.075873] [I] [thread 126288] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:02.075886] [I] [thread 126288] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:35:02.337483] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:02.337984] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:03.339252] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:03.542445] [D] [thread 125692] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10800000-10860000[m
[36m[08:35:04.326650] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:04.326988] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:04.328196] [D] [thread 126293] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:35:04.328292] [I] [thread 126293] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:04.328311] [I] [thread 126293] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:35:04.328465] [I] [thread 126293] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:04.328481] [I] [thread 126293] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:35:04.494675] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:04.495019] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:05.072209] [D] [thread 125690] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10800000-10860000[m
[36m[08:35:05.496296] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:06.437283] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:06.437614] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:06.438769] [D] [thread 126300] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:35:06.438915] [I] [thread 126300] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:06.438936] [I] [thread 126300] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:35:06.439099] [I] [thread 126300] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:06.439125] [I] [thread 126300] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:35:06.652542] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:06.652896] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:07.654077] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:08.655432] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:08.664423] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:08.665002] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:08.665734] [D] [thread 126305] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:35:08.665830] [I] [thread 126305] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:08.665848] [I] [thread 126305] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:35:08.665966] [I] [thread 126305] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:08.665979] [I] [thread 126305] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:35:08.831168] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:08.831755] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:09.833046] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:10.834309] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:10.839745] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:10.840281] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:10.841107] [D] [thread 126310] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:35:10.841201] [I] [thread 126310] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:10.841220] [I] [thread 126310] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:35:10.841336] [I] [thread 126310] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:10.841349] [I] [thread 126310] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:35:11.113996] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:11.114440] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:12.115821] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:13.041839] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:13.042511] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:13.043286] [D] [thread 126315] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:35:13.043361] [I] [thread 126315] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:13.043377] [I] [thread 126315] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:35:13.043485] [I] [thread 126315] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:13.043497] [I] [thread 126315] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:35:13.253277] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:13.253894] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:14.255157] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:15.185324] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:15.185792] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:15.186651] [D] [thread 126320] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:35:15.186776] [I] [thread 126320] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:15.186795] [I] [thread 126320] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:35:15.186911] [I] [thread 126320] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:15.186931] [I] [thread 126320] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:35:15.351054] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:15.351539] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:15.917306] [D] [thread 125691] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10800000-10860000[m
[36m[08:35:16.352788] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:17.327159] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:17.327732] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:17.328558] [D] [thread 126325] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:35:17.328653] [I] [thread 126325] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:17.328672] [I] [thread 126325] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:35:17.328789] [I] [thread 126325] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:17.328802] [I] [thread 126325] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:35:17.415190] [D] [thread 125693] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10800000-10860000[m
[36m[08:35:17.518023] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:17.518629] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:18.519866] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:19.498497] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:19.498831] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:19.499908] [D] [thread 126330] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:35:19.500014] [I] [thread 126330] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:19.500033] [I] [thread 126330] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:35:19.500149] [I] [thread 126330] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:19.500174] [I] [thread 126330] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:35:19.718754] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:19.719089] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:20.720404] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:21.692418] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:21.692753] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:21.693998] [D] [thread 126335] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:35:21.694119] [I] [thread 126335] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:21.694139] [I] [thread 126335] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:35:21.694265] [I] [thread 126335] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:21.694291] [I] [thread 126335] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:35:21.955610] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:21.955973] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:22.957263] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:23.891891] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:23.892470] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:23.895026] [D] [thread 126340] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:35:23.895162] [I] [thread 126340] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:23.895184] [I] [thread 126340] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:35:23.895321] [I] [thread 126340] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:23.895342] [I] [thread 126340] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:35:24.100150] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:24.100537] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:25.101511] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:26.071621] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:26.071969] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:26.073103] [D] [thread 126346] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:35:26.073205] [I] [thread 126346] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:26.073223] [I] [thread 126346] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:35:26.073342] [I] [thread 126346] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:26.073399] [I] [thread 126346] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:35:26.292831] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:26.293192] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:27.294433] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:28.266198] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:28.266588] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:28.267508] [D] [thread 126351] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:35:28.267601] [I] [thread 126351] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:28.267619] [I] [thread 126351] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:35:28.267735] [I] [thread 126351] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:28.267748] [I] [thread 126351] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:35:28.477962] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:28.478293] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:29.479519] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:30.430343] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:30.430792] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:30.431679] [D] [thread 126357] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:35:30.431777] [I] [thread 126357] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:30.431794] [I] [thread 126357] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:35:30.431910] [I] [thread 126357] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:30.431923] [I] [thread 126357] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:35:30.646948] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:30.647453] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:31.648707] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:32.583383] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:32.583975] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:32.584784] [D] [thread 126363] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:35:32.584881] [I] [thread 126363] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:32.584899] [I] [thread 126363] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:35:32.585018] [I] [thread 126363] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:32.585030] [I] [thread 126363] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:35:32.773176] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:32.773506] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:33.774748] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:34.697273] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:34.697605] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:34.698753] [D] [thread 126368] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:35:34.698954] [I] [thread 126368] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:34.698974] [I] [thread 126368] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:35:34.699112] [I] [thread 126368] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:34.699163] [I] [thread 126368] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:35:34.905844] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:34.906192] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:35.907448] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:36.825357] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:36.825685] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:36.826824] [D] [thread 126373] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:35:36.826918] [I] [thread 126373] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:36.826934] [I] [thread 126373] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:35:36.827047] [I] [thread 126373] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:36.827060] [I] [thread 126373] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:35:37.013812] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:37.014240] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:38.015439] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:38.983385] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:38.983923] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:38.984770] [D] [thread 126378] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:35:38.984866] [I] [thread 126378] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:38.984884] [I] [thread 126378] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:35:38.984999] [I] [thread 126378] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:38.985012] [I] [thread 126378] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:35:39.194142] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:39.194474] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:40.195982] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:41.135068] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:41.135673] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:41.136409] [D] [thread 126383] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:35:41.136501] [I] [thread 126383] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:41.136520] [I] [thread 126383] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:35:41.136635] [I] [thread 126383] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:41.136648] [I] [thread 126383] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:35:41.301862] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:41.302277] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:42.303532] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:43.290415] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:43.290814] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:43.291709] [D] [thread 126388] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:35:43.291804] [I] [thread 126388] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:43.291822] [I] [thread 126388] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:35:43.291939] [I] [thread 126388] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:43.291953] [I] [thread 126388] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:35:43.480756] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:43.481157] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:44.482402] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:45.442472] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:45.442796] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:45.443764] [D] [thread 126394] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:35:45.443857] [I] [thread 126394] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:45.443876] [I] [thread 126394] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:35:45.443993] [I] [thread 126394] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:45.444006] [I] [thread 126394] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:35:45.655150] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:45.655476] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:46.656840] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:47.629621] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:47.629983] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:47.630939] [D] [thread 126399] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:35:47.631039] [I] [thread 126399] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:47.631058] [I] [thread 126399] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:35:47.631177] [I] [thread 126399] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:47.631189] [I] [thread 126399] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:35:47.849606] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:47.849976] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:48.851279] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:48.943953] [D] [thread 125693] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 60000 Deploy merge task for slice 10740000-10800000 [m
[36m[08:35:48.944594] [D] [thread 125692] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 10740000-10800000-3[m
[36m[08:35:48.944706] [D] [thread 125692] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10740000-10800000[m
[36m[08:35:48.944780] [D] [thread 125692] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10740000-10800000[m
[36m[08:35:48.944829] [D] [thread 125692] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10740000-10800000[m
[36m[08:35:48.944869] [D] [thread 125692] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10740000-10800000[m
[36m[08:35:48.944915] [D] [thread 125692] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10740000-10800000[m
[36m[08:35:48.945128] [D] [thread 125692] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[08:35:48.945165] [D] [thread 125692] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[08:35:48.947944] [D] [thread 125692] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out following content 10740000,10800000,100,1699864428119,1699864548945
10740000,10800000,54,1699864442358,1699864548945
10740000,10800000,63,1699864441923,1699864548945
10740000,10800000,24,1699864447965,1699864548945
10740000,10800000,47,1699864446669,1699864548945
10740000,10800000,13,1699864452720,1699864548945
[m
[36m[08:35:49.852504] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:49.853689] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:49.854308] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:49.855072] [D] [thread 126404] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:35:49.855167] [I] [thread 126404] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:49.855186] [I] [thread 126404] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:35:49.855303] [I] [thread 126404] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:49.855316] [I] [thread 126404] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:35:50.067020] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:50.067518] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:51.068869] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:52.051847] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:52.052500] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:52.053292] [D] [thread 126409] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:35:52.053383] [I] [thread 126409] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:52.053401] [I] [thread 126409] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:35:52.053517] [I] [thread 126409] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:52.053530] [I] [thread 126409] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:35:52.239886] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:52.240228] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:53.241485] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:54.205446] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:54.205780] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:54.206810] [D] [thread 126415] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:35:54.206902] [I] [thread 126415] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:54.206920] [I] [thread 126415] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:35:54.207030] [I] [thread 126415] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:54.207044] [I] [thread 126415] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:35:54.344969] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:54.345310] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:55.346566] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:56.296679] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:56.297034] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:56.298714] [D] [thread 126420] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:35:56.298813] [I] [thread 126420] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:56.298832] [I] [thread 126420] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:35:56.298948] [I] [thread 126420] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:56.298961] [I] [thread 126420] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:35:56.516839] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:56.517177] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:57.518407] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:58.503052] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:58.503393] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:58.504444] [D] [thread 126425] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:35:58.504539] [I] [thread 126425] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:58.504558] [I] [thread 126425] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:35:58.504676] [I] [thread 126425] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:35:58.504688] [I] [thread 126425] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:35:58.714450] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:58.714866] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:35:59.716099] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:00.649026] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:00.649370] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:00.650514] [D] [thread 126431] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:36:00.650610] [I] [thread 126431] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:36:00.650628] [I] [thread 126431] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:36:00.650745] [I] [thread 126431] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:36:00.650757] [I] [thread 126431] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:36:00.859171] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:00.859538] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:01.860851] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:02.790625] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:02.790986] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:02.792033] [D] [thread 126436] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:36:02.792185] [I] [thread 126436] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:36:02.792205] [I] [thread 126436] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:36:02.792357] [I] [thread 126436] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:36:02.792379] [I] [thread 126436] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:36:03.006857] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:03.007218] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:04.008466] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:04.983768] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:04.984105] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:04.985150] [D] [thread 126441] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:36:04.985232] [I] [thread 126441] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:36:04.985247] [I] [thread 126441] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:36:04.985357] [I] [thread 126441] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:36:04.985369] [I] [thread 126441] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:36:05.200456] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:05.200816] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:06.202119] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:07.180488] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:07.180966] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:07.181941] [D] [thread 126446] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:36:07.182036] [I] [thread 126446] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:36:07.182054] [I] [thread 126446] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:36:07.182172] [I] [thread 126446] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:36:07.182185] [I] [thread 126446] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:36:07.377613] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:07.378184] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:08.380206] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:09.350203] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:09.350792] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:09.351856] [D] [thread 126452] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:36:09.351972] [I] [thread 126452] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:36:09.351993] [I] [thread 126452] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:36:09.352122] [I] [thread 126452] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:36:09.352139] [I] [thread 126452] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:36:09.514259] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:09.514768] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:10.515948] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:11.460048] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:11.460438] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:11.461636] [D] [thread 126457] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:36:11.461732] [I] [thread 126457] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:36:11.461750] [I] [thread 126457] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:36:11.461868] [I] [thread 126457] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:36:11.461882] [I] [thread 126457] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:36:11.681272] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:11.681650] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:12.682925] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:13.662064] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:13.662420] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:13.663379] [D] [thread 126462] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:36:13.663476] [I] [thread 126462] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:36:13.663494] [I] [thread 126462] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:36:13.663613] [I] [thread 126462] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:36:13.663627] [I] [thread 126462] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:36:13.877416] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:13.877792] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:14.879035] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:15.817260] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:15.817622] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:15.818548] [D] [thread 126467] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:36:15.818674] [I] [thread 126467] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:36:15.818692] [I] [thread 126467] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:36:15.818814] [I] [thread 126467] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:36:15.818828] [I] [thread 126467] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:36:15.986987] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:15.987353] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:16.988610] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:17.965398] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:17.965740] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:17.966741] [D] [thread 126472] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:36:17.966832] [I] [thread 126472] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:36:17.966850] [I] [thread 126472] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:36:17.966966] [I] [thread 126472] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:36:17.966980] [I] [thread 126472] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:36:18.230238] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:18.230584] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:19.231935] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:20.192981] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:20.193617] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:20.194442] [D] [thread 126477] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[08:36:20.194518] [I] [thread 126477] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:36:20.194535] [I] [thread 126477] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[08:36:20.194653] [I] [thread 126477] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[08:36:20.194667] [I] [thread 126477] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[08:36:20.360654] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:20.361205] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:20.573121] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[08:36:20.573452] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[08:36:20.574521] [I] [thread 126481] [QueryCatalogService.cpp:65] [checkAndMarkForHardStop] QueryCatalogService: Handle hard stop request.[m
[36m[08:36:20.574655] [D] [thread 126481] [QueryCatalogService.cpp:83] [checkAndMarkForHardStop] QueryCatalog: Changing query status to Mark query for stop.[m
[32m[08:36:20.574795] [I] [thread 126481] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : StopQueryRequest { QueryId: 1}[m
[32m[08:36:20.574819] [I] [thread 126481] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[08:36:20.574878] [I] [thread 125679] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[08:36:20.574924] [I] [thread 125679] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[08:36:20.574943] [I] [thread 125679] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[08:36:20.574986] [I] [thread 125679] [GlobalQueryPlanUpdatePhase.cpp:133] [processStopQueryRequest] QueryProcessingService: Request received for stopping the query 1[m
[36m[08:36:20.575001] [D] [thread 125679] [GlobalQueryPlan.cpp:45] [removeQuery] GlobalQueryPlan: Removing query information from the meta data[m
[36m[08:36:20.575047] [D] [thread 125679] [SharedQueryPlan.cpp:194] [removeQuery] SharedQueryPlan: Remove the Query Id 1 and associated Global Query Nodes with sink operators.[m
[36m[08:36:20.575201] [D] [thread 125679] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SINK(4: {FileSinkDescriptor()}) as root operator.[m
[36m[08:36:20.575659] [D] [thread 125679] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[08:36:20.575719] [D] [thread 125679] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[08:36:20.575820] [D] [thread 125679] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[08:36:20.575842] [D] [thread 125679] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[08:36:20.575852] [D] [thread 125679] [RequestProcessorService.cpp:162] [start] QueryProcessingService: Shared Query Plan is empty and an older version is already running.[m
[36m[08:36:20.575885] [D] [thread 125679] [QueryUndeploymentPhase.cpp:44] [execute] QueryUndeploymentPhase::stopAndUndeployQuery : queryId= 1[m
[36m[08:36:20.575954] [D] [thread 125679] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[08:36:20.575984] [D] [thread 125679] [QueryUndeploymentPhase.cpp:54] [execute] QueryUndeploymentPhase:removeQuery: stop query[m
[36m[08:36:20.575996] [D] [thread 125679] [QueryUndeploymentPhase.cpp:80] [stopQuery] QueryUndeploymentPhase:markQueryForStop queryId= 1[m
[36m[08:36:20.576120] [D] [thread 125679] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=5 and IP=192.168.2.32:36981[m
[36m[08:36:20.576145] [D] [thread 125679] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.32:36981 queryId=1[m
[36m[08:36:20.581465] [D] [thread 125679] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=6 and IP=192.168.2.33:46475[m
[36m[08:36:20.581552] [D] [thread 125679] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.33:46475 queryId=1[m
[36m[08:36:20.585855] [D] [thread 125679] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=7 and IP=192.168.2.34:34507[m
[36m[08:36:20.585979] [D] [thread 125679] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.34:34507 queryId=1[m
[36m[08:36:20.590579] [D] [thread 125679] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=8 and IP=192.168.2.35:41727[m
[36m[08:36:20.590665] [D] [thread 125679] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.35:41727 queryId=1[m
[36m[08:36:20.594933] [D] [thread 125679] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=9 and IP=192.168.2.37:36655[m
[36m[08:36:20.595019] [D] [thread 125679] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.37:36655 queryId=1[m
[36m[08:36:20.599287] [D] [thread 125679] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=10 and IP=192.168.2.38:43257[m
[36m[08:36:20.599373] [D] [thread 125679] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.38:43257 queryId=1[m
[36m[08:36:20.603582] [D] [thread 125679] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=1 and IP=192.168.2.11:39877[m
[36m[08:36:20.603668] [D] [thread 125679] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.11:39877 queryId=1[m
[36m[08:36:20.608166] [D] [thread 125679] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=2 and IP=192.168.2.12:32805[m
[36m[08:36:20.608257] [D] [thread 125679] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.12:32805 queryId=1[m
[36m[08:36:20.612509] [D] [thread 125679] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=3 and IP=192.168.2.30:41695[m
[36m[08:36:20.612584] [D] [thread 125679] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.30:41695 queryId=1[m
[36m[08:36:20.616781] [D] [thread 125679] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=4 and IP=192.168.2.31:41615[m
[36m[08:36:20.616862] [D] [thread 125679] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.31:41615 queryId=1[m
[36m[08:36:20.621024] [D] [thread 125679] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Stop for 10 queues[m
[36m[08:36:20.624194] [D] [thread 125695] [WorkerRPCServer.cpp:90] [StopQuery] WorkerRPCServer::StopQuery: got request for 1[m
[36m[08:36:20.624309] [D] [thread 125695] [NodeEngine.cpp:250] [stopQuery] Runtime:stopQuery for qep= 1  termination= HardStop[m
[36m[08:36:20.624434] [D] [thread 125695] [QueryManagerLifecycle.cpp:312] [stopQuery] AbstractQueryManager::stopQuery: query sub-plan id  7  type= HardStop[m
[36m[08:36:20.624476] [D] [thread 125695] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:21 PartitionId: 0 SubpartitionID: 0[m
[36m[08:36:20.624536] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[08:36:20.624722] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[08:36:20.625277] [D] [thread 125695] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 21 is notifying completion: HardStop[m
[36m[08:36:20.625366] [D] [thread 125695] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 21 is terminated; tokens left = 9[m
[36m[08:36:20.625364] [D] [thread 125693] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::21::0::0[m
[36m[08:36:20.625365] [D] [thread 125692] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::21::0::0[m
[36m[08:36:20.625406] [D] [thread 125691] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::21::0::0[m
[36m[08:36:20.625424] [D] [thread 125695] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 21 terminationType=HardStop[m
[36m[08:36:20.625500] [D] [thread 125691] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::21::0::0 Thread 3[m
[36m[08:36:20.625499] [D] [thread 125693] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::21::0::0 Thread 1[m
[36m[08:36:20.625517] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[08:36:20.625500] [D] [thread 125692] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::21::0::0 Thread 2[m
[36m[08:36:20.625365] [D] [thread 125690] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::21::0::0[m
[36m[08:36:20.625628] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[08:36:20.625649] [D] [thread 125690] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::21::0::0 Thread 0[m
[36m[08:36:20.625674] [D] [thread 125690] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::21::0::0[m
[36m[08:36:20.625691] [D] [thread 125690] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::21::0::0[m
[36m[08:36:20.625713] [D] [thread 125690] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::21::0::0[m
[32m[08:36:20.625785] [I] [thread 125690] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::21::0::0; newCnt(4)[m
[36m[08:36:20.625905] [D] [thread 125695] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=21 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[08:36:20.625957] [D] [thread 125695] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:21 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[08:36:20.626011] [D] [thread 125695] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:27 PartitionId: 0 SubpartitionID: 0[m
[36m[08:36:20.626063] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[08:36:20.626250] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[08:36:20.626584] [D] [thread 125695] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 27 is notifying completion: HardStop[m
[36m[08:36:20.626678] [D] [thread 125695] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 27 is terminated; tokens left = 8[m
[36m[08:36:20.626750] [D] [thread 125695] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 27 terminationType=HardStop[m
[36m[08:36:20.626825] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[08:36:20.627010] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[08:36:20.627261] [D] [thread 125695] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=27 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[08:36:20.627318] [D] [thread 125695] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:27 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[08:36:20.627382] [D] [thread 125695] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[08:36:20.627428] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[08:36:20.627562] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[08:36:20.627886] [D] [thread 125695] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 33 is notifying completion: HardStop[m
[36m[08:36:20.627937] [D] [thread 125695] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 33 is terminated; tokens left = 7[m
[36m[08:36:20.627964] [D] [thread 125695] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 33 terminationType=HardStop[m
[36m[08:36:20.628020] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[08:36:20.628130] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[08:36:20.628450] [D] [thread 125695] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=33 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[08:36:20.628515] [D] [thread 125695] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[08:36:20.628540] [D] [thread 125695] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[08:36:20.628572] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[08:36:20.628675] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[08:36:20.628967] [D] [thread 125695] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 39 is notifying completion: HardStop[m
[36m[08:36:20.629017] [D] [thread 125695] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 39 is terminated; tokens left = 6[m
[36m[08:36:20.629043] [D] [thread 125695] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 39 terminationType=HardStop[m
[36m[08:36:20.629127] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[08:36:20.629240] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[08:36:20.629464] [D] [thread 125695] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=39 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[08:36:20.629561] [D] [thread 125695] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[08:36:20.629586] [D] [thread 125695] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[36m[08:36:20.629617] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[08:36:20.629734] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[08:36:20.630026] [D] [thread 125695] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 45 is notifying completion: HardStop[m
[36m[08:36:20.630077] [D] [thread 125695] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 45 is terminated; tokens left = 5[m
[36m[08:36:20.630102] [D] [thread 125695] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 45 terminationType=HardStop[m
[36m[08:36:20.630158] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[08:36:20.630285] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[08:36:20.630527] [D] [thread 125695] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=45 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[08:36:20.630619] [D] [thread 125695] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[08:36:20.630645] [D] [thread 125695] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[08:36:20.630677] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[08:36:20.630781] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[08:36:20.631045] [D] [thread 125695] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 51 is notifying completion: HardStop[m
[36m[08:36:20.631096] [D] [thread 125695] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 51 is terminated; tokens left = 4[m
[36m[08:36:20.631134] [D] [thread 125695] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 51 terminationType=HardStop[m
[36m[08:36:20.631241] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[08:36:20.631363] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[08:36:20.631631] [D] [thread 125695] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=51 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[08:36:20.631728] [D] [thread 125692] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[08:36:20.631729] [D] [thread 125691] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[08:36:20.631739] [D] [thread 125695] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[08:36:20.631929] [D] [thread 125693] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[08:36:20.632038] [D] [thread 125690] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[08:36:20.632089] [D] [thread 125690] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 7 stage id: 3[m
[36m[08:36:20.632123] [D] [thread 125690] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 7 stage id: 3 but refCount was 6 and now is 5[m
[36m[08:36:20.632437] [D] [thread 125690] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::27::0::0[m
[36m[08:36:20.632501] [D] [thread 125690] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::27::0::0 Thread 0[m
[36m[08:36:20.632443] [D] [thread 125691] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::27::0::0[m
[36m[08:36:20.632609] [D] [thread 125691] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::27::0::0 Thread 3[m
[36m[08:36:20.632643] [D] [thread 125692] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::27::0::0[m
[36m[08:36:20.632676] [D] [thread 125692] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::27::0::0 Thread 2[m
[36m[08:36:20.632792] [D] [thread 125693] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::27::0::0[m
[36m[08:36:20.632866] [D] [thread 125693] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::27::0::0 Thread 1[m
[36m[08:36:20.632891] [D] [thread 125693] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::27::0::0[m
[36m[08:36:20.632909] [D] [thread 125693] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::27::0::0[m
[36m[08:36:20.632929] [D] [thread 125693] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::27::0::0[m
[32m[08:36:20.632980] [I] [thread 125693] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::27::0::0; newCnt(4)[m
[36m[08:36:20.633216] [D] [thread 125693] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[08:36:20.633217] [D] [thread 125690] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[08:36:20.633393] [D] [thread 125692] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[08:36:20.633507] [D] [thread 125691] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[08:36:20.633536] [D] [thread 125691] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 7 stage id: 3[m
[36m[08:36:20.633557] [D] [thread 125691] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 7 stage id: 3 but refCount was 5 and now is 4[m
[36m[08:36:20.633763] [D] [thread 125691] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[08:36:20.633775] [D] [thread 125693] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[08:36:20.633824] [D] [thread 125691] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 3[m
[36m[08:36:20.633834] [D] [thread 125693] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 1[m
[36m[08:36:20.633961] [D] [thread 125692] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[08:36:20.633999] [D] [thread 125692] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 2[m
[36m[08:36:20.634105] [D] [thread 125690] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[08:36:20.634139] [D] [thread 125690] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 0[m
[36m[08:36:20.634163] [D] [thread 125690] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::33::0::0[m
[36m[08:36:20.634181] [D] [thread 125690] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::33::0::0[m
[36m[08:36:20.634200] [D] [thread 125690] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::33::0::0[m
[32m[08:36:20.634247] [I] [thread 125690] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(4)[m
[36m[08:36:20.634463] [D] [thread 125690] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[08:36:20.634477] [D] [thread 125691] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[08:36:20.634591] [D] [thread 125692] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[08:36:20.634704] [D] [thread 125693] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[08:36:20.634732] [D] [thread 125693] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 7 stage id: 3[m
[36m[08:36:20.634753] [D] [thread 125693] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 7 stage id: 3 but refCount was 4 and now is 3[m
[36m[08:36:20.634941] [D] [thread 125693] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[08:36:20.634950] [D] [thread 125690] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[08:36:20.634987] [D] [thread 125693] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::39::0::0 Thread 1[m
[36m[08:36:20.634987] [D] [thread 125690] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::39::0::0 Thread 0[m
[36m[08:36:20.635105] [D] [thread 125692] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[08:36:20.635139] [D] [thread 125692] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::39::0::0 Thread 2[m
[36m[08:36:20.635240] [D] [thread 125691] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[08:36:20.635273] [D] [thread 125691] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::39::0::0 Thread 3[m
[36m[08:36:20.635296] [D] [thread 125691] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::39::0::0[m
[36m[08:36:20.635314] [D] [thread 125691] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::39::0::0[m
[36m[08:36:20.635332] [D] [thread 125691] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::39::0::0[m
[32m[08:36:20.635373] [I] [thread 125691] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(4)[m
[36m[08:36:20.635558] [D] [thread 125691] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[08:36:20.635562] [D] [thread 125693] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[08:36:20.635694] [D] [thread 125692] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[08:36:20.635807] [D] [thread 125690] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[08:36:20.635877] [D] [thread 125690] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 7 stage id: 3[m
[36m[08:36:20.635902] [D] [thread 125690] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 7 stage id: 3 but refCount was 3 and now is 2[m
[36m[08:36:20.636251] [D] [thread 125691] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[08:36:20.636251] [D] [thread 125693] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[08:36:20.636275] [D] [thread 125690] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[08:36:20.636251] [D] [thread 125692] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[08:36:20.636348] [D] [thread 125693] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::45::0::0 Thread 1[m
[36m[08:36:20.636352] [D] [thread 125691] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::45::0::0 Thread 3[m
[36m[08:36:20.636352] [D] [thread 125690] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::45::0::0 Thread 0[m
[36m[08:36:20.636382] [D] [thread 125692] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::45::0::0 Thread 2[m
[36m[08:36:20.636411] [D] [thread 125692] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::45::0::0[m
[36m[08:36:20.636431] [D] [thread 125692] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::45::0::0[m
[36m[08:36:20.636450] [D] [thread 125692] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::45::0::0[m
[32m[08:36:20.636499] [I] [thread 125692] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(4)[m
[36m[08:36:20.636711] [D] [thread 125690] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[08:36:20.636711] [D] [thread 125692] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[08:36:20.636712] [D] [thread 125691] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[08:36:20.636876] [D] [thread 125693] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[08:36:20.636971] [D] [thread 125693] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 7 stage id: 3[m
[36m[08:36:20.636996] [D] [thread 125693] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 7 stage id: 3 but refCount was 2 and now is 1[m
[36m[08:36:20.637265] [D] [thread 125692] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[08:36:20.637265] [D] [thread 125691] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[08:36:20.637276] [D] [thread 125693] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[08:36:20.637318] [D] [thread 125692] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 2[m
[36m[08:36:20.637318] [D] [thread 125691] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 3[m
[36m[08:36:20.637365] [D] [thread 125690] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[08:36:20.637396] [D] [thread 125690] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 0[m
[36m[08:36:20.637319] [D] [thread 125693] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 1[m
[36m[08:36:20.637465] [D] [thread 125693] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::51::0::0[m
[36m[08:36:20.637488] [D] [thread 125693] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::51::0::0[m
[36m[08:36:20.637506] [D] [thread 125693] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::51::0::0[m
[32m[08:36:20.637554] [I] [thread 125693] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(4)[m
[36m[08:36:20.637761] [D] [thread 125693] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[08:36:20.637763] [D] [thread 125691] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[08:36:20.637992] [D] [thread 125692] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[08:36:20.638105] [D] [thread 125690] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[08:36:20.638147] [D] [thread 125690] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 7 stage id: 3[m
[36m[08:36:20.638163] [D] [thread 125690] [ExecutablePipeline.cpp:259] [postReconfigurationCallback] Reconfiguration of pipeline belonging to subplanId:7 stage id:3 reached prev=1[m
[36m[08:36:20.638203] [D] [thread 125690] [AbstractSlicePreAggregationHandler.cpp:116] [stop] shutdown AbstractSlicePreAggregationHandler: HardStop[m
[36m[08:36:20.638334] [D] [thread 125690] [ExecutableQueryPlan.cpp:330] [notifyPipelineCompletion] QEP 7 Pipeline 3 is terminated; tokens left = 3[m
[36m[08:36:20.638385] [D] [thread 125690] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[08:36:20.638500] [D] [thread 125690] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[08:36:20.638797] [D] [thread 125690] [ExecutablePipeline.cpp:286] [postReconfigurationCallback] Going to reconfigure next pipeline belonging to subplanId: 7 stage id: 2 got EndOfStream  with nextPipeline[m
[36m[08:36:20.639135] [D] [thread 125691] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 2 belonging to query id: 7 stage id: 2[m
[36m[08:36:20.639136] [D] [thread 125693] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 2 belonging to query id: 7 stage id: 2[m
[36m[08:36:20.639313] [D] [thread 125692] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 2 belonging to query id: 7 stage id: 2[m
[36m[08:36:20.639416] [D] [thread 125690] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 2 belonging to query id: 7 stage id: 2[m
[36m[08:36:20.639473] [D] [thread 125690] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 7 stage id: 2[m
[36m[08:36:20.639490] [D] [thread 125690] [ExecutablePipeline.cpp:259] [postReconfigurationCallback] Reconfiguration of pipeline belonging to subplanId:7 stage id:2 reached prev=1[m
[36m[08:36:20.639513] [D] [thread 125690] [KeyedSliceMergingHandler.cpp:38] [stop] stop GlobalSliceMergingHandler: HardStop[m
[36m[08:36:20.639573] [D] [thread 125690] [ExecutableQueryPlan.cpp:330] [notifyPipelineCompletion] QEP 7 Pipeline 2 is terminated; tokens left = 2[m
[36m[08:36:20.639628] [D] [thread 125690] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[08:36:20.639733] [D] [thread 125690] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[08:36:20.640028] [D] [thread 125690] [ExecutablePipeline.cpp:293] [postReconfigurationCallback] Going to reconfigure next sink belonging to subplanId: 7 sink id: FileSink() got EndOfStream  with nextPipeline[m
[36m[08:36:20.640424] [D] [thread 125692] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[08:36:20.640589] [D] [thread 125692] [ExecutableQueryPlan.cpp:352] [notifySinkCompletion] QEP 7 Sink FileSink() is terminated; tokens left = 1[m
[36m[08:36:20.640654] [D] [thread 125692] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[08:36:20.640788] [D] [thread 125692] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[08:36:20.641100] [D] [thread 125692] [SinkMedium.cpp:136] [postReconfigurationCallback] Sink [ FileSink() ] is completed with  HardStop[m
2023-11-13 08:36:20.641 postReconfigurationCallback: queryId=1, querySubPlanId=7; queryId=1 subPlanId=7 processedTasks=1187 processedTuple=236803 processedBuffers=1187 processedWatermarks=0 latencyAVG=1699864430048 queueSizeAVG=0 availableGlobalBufferAVG=510 availableFixedBufferAVG=0
[36m[08:36:20.641597] [D] [thread 125691] [ExecutableQueryPlan.cpp:231] [postReconfigurationCallback] Executing HardEndOfStream on qep queryId=1 querySubPlanId=7[m
[36m[08:36:20.641671] [D] [thread 125691] [ExecutableQueryPlan.cpp:172] [stop] QueryExecutionPlan: stop queryId=1 querySubPlanId=7[m
[36m[08:36:20.641688] [D] [thread 125691] [ExecutableQueryPlan.cpp:174] [stop] QueryExecutionPlan: stop 1-7 is marked as stopped now[m
[36m[08:36:20.641971] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Destroy[m
[36m[08:36:20.642132] [D] [thread 125695] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Destroy[m
[36m[08:36:20.642732] [D] [thread 125695] [QueryManager.cpp:312] [postReconfigurationCallback] AbstractQueryManager: removed running QEP  7[m
[36m[08:36:20.642895] [D] [thread 125695] [QueryManagerLifecycle.cpp:380] [stopQuery] AbstractQueryManager::stopQuery: query 7 was successful[m
[36m[08:36:20.642920] [D] [thread 125695] [NodeEngine.cpp:265] [stopQuery] Runtime: stop of QEP  7  succeeded[m
[36m[08:36:20.642978] [D] [thread 125695] [WorkerRPCServer.cpp:97] [StopQuery] WorkerRPCServer::StopQuery: success[m
[33m[1m[08:36:20.664471] [W] [thread 125688] [QueryManagerTaskScheduler.cpp:183] [addWorkForNextPipeline] Pushed task for non running executable pipeline id=3[m
[36m[08:36:20.888285] [D] [thread 125689] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): EndOfStream received for channel [m
[36m[08:36:20.888309] [D] [thread 125688] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): EndOfStream received for channel [m
[36m[08:36:20.888548] [D] [thread 125689] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::21::0::0(threadId=1)[m
[36m[08:36:20.888589] [D] [thread 125688] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::21::0::0(threadId=2)[m
[32m[08:36:20.888779] [I] [thread 125688] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::21::0::0; newCnt(3)[m
[36m[08:36:20.888896] [D] [thread 125688] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::21::0::0(threadId=2) but there is still some active subpartition: 3[m
[36m[08:36:20.888987] [D] [thread 125688] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): EndOfStream received for channel [m
[36m[08:36:20.889056] [D] [thread 125688] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::21::0::0(threadId=3)[m
[32m[08:36:20.889137] [I] [thread 125688] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::21::0::0; newCnt(2)[m
[36m[08:36:20.889211] [D] [thread 125688] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::21::0::0(threadId=3) but there is still some active subpartition: 2[m
[32m[08:36:20.889364] [I] [thread 125689] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::21::0::0; newCnt(1)[m
[36m[08:36:20.889421] [D] [thread 125689] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::21::0::0, counter is at 1.[m
[36m[08:36:20.889550] [D] [thread 125689] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:21 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[08:36:20.889614] [W] [thread 125689] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:21 PartitionId: 0 SubpartitionID: 0[m
[36m[08:36:20.889694] [D] [thread 125689] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): EndOfStream received for channel [m
[36m[08:36:20.889769] [D] [thread 125689] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::21::0::0(threadId=0)[m
[32m[08:36:20.889854] [I] [thread 125689] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::21::0::0; newCnt(0)[m
[36m[08:36:20.889935] [D] [thread 125689] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::21::0::0(threadId=0) but there is still some active subpartition: 0[m
[36m[08:36:20.893960] [D] [thread 125689] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): EndOfStream received for channel [m
[36m[08:36:20.894133] [D] [thread 125689] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::27::0::0(threadId=1)[m
[32m[08:36:20.894257] [I] [thread 125689] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::27::0::0; newCnt(3)[m
[36m[08:36:20.894342] [D] [thread 125689] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::27::0::0(threadId=1) but there is still some active subpartition: 3[m
[36m[08:36:20.894276] [D] [thread 125688] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): EndOfStream received for channel [m
[36m[08:36:20.894419] [D] [thread 125689] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): EndOfStream received for channel [m
[36m[08:36:20.894472] [D] [thread 125688] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::27::0::0(threadId=0)[m
[36m[08:36:20.894483] [D] [thread 125689] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::27::0::0(threadId=3)[m
[32m[08:36:20.894661] [I] [thread 125689] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::27::0::0; newCnt(2)[m
[32m[08:36:20.894801] [I] [thread 125688] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::27::0::0; newCnt(1)[m
[36m[08:36:20.894864] [D] [thread 125688] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::27::0::0, counter is at 1.[m
[36m[08:36:20.895001] [D] [thread 125688] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:27 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[08:36:20.895059] [W] [thread 125688] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:27 PartitionId: 0 SubpartitionID: 0[m
[36m[08:36:20.895178] [D] [thread 125688] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): EndOfStream received for channel [m
[36m[08:36:20.895238] [D] [thread 125689] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::27::0::0(threadId=3) but there is still some active subpartition: 1[m
[36m[08:36:20.895406] [D] [thread 125688] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::27::0::0(threadId=2)[m
[32m[08:36:20.895740] [I] [thread 125688] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::27::0::0; newCnt(0)[m
[36m[08:36:20.895844] [D] [thread 125688] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::27::0::0(threadId=2) but there is still some active subpartition: 0[m
[36m[08:36:21.005194] [D] [thread 125689] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): EndOfStream received for channel [m
[36m[08:36:21.005194] [D] [thread 125688] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): EndOfStream received for channel [m
[36m[08:36:21.005331] [D] [thread 125688] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=1)[m
[36m[08:36:21.005331] [D] [thread 125689] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=2)[m
[32m[08:36:21.005450] [I] [thread 125688] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(3)[m
[32m[08:36:21.005538] [I] [thread 125689] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(2)[m
[36m[08:36:21.005613] [D] [thread 125689] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::33::0::0(threadId=2) but there is still some active subpartition: 2[m
[36m[08:36:21.005678] [D] [thread 125689] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): EndOfStream received for channel [m
[36m[08:36:21.005725] [D] [thread 125689] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=0)[m
[32m[08:36:21.005793] [I] [thread 125689] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(1)[m
[36m[08:36:21.005816] [D] [thread 125688] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::33::0::0(threadId=1) but there is still some active subpartition: 2[m
[36m[08:36:21.005824] [D] [thread 125689] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::33::0::0, counter is at 1.[m
[36m[08:36:21.005953] [D] [thread 125689] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[08:36:21.005984] [W] [thread 125689] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[08:36:21.006552] [D] [thread 125688] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): EndOfStream received for channel [m
[36m[08:36:21.006632] [D] [thread 125688] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=3)[m
[32m[08:36:21.006712] [I] [thread 125688] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(0)[m
[36m[08:36:21.006770] [D] [thread 125688] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::33::0::0(threadId=3) but there is still some active subpartition: 0[m
[36m[08:36:21.016611] [D] [thread 125689] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): EndOfStream received for channel [m
[36m[08:36:21.016611] [D] [thread 125688] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): EndOfStream received for channel [m
[36m[08:36:21.016739] [D] [thread 125689] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=0)[m
[36m[08:36:21.016739] [D] [thread 125688] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=3)[m
[32m[08:36:21.016837] [I] [thread 125689] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(3)[m
[36m[08:36:21.016909] [D] [thread 125689] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::51::0::0(threadId=0) but there is still some active subpartition: 3[m
[32m[08:36:21.017014] [I] [thread 125688] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(2)[m
[36m[08:36:21.017110] [D] [thread 125688] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::51::0::0(threadId=3) but there is still some active subpartition: 2[m
[36m[08:36:21.017836] [D] [thread 125689] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): EndOfStream received for channel [m
[36m[08:36:21.017953] [D] [thread 125689] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=1)[m
[32m[08:36:21.018035] [I] [thread 125689] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(1)[m
[36m[08:36:21.018061] [D] [thread 125689] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::51::0::0, counter is at 1.[m
[36m[08:36:21.018111] [D] [thread 125689] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[08:36:21.018134] [W] [thread 125689] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[08:36:21.021239] [D] [thread 125688] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): EndOfStream received for channel [m
[36m[08:36:21.021364] [D] [thread 125688] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=2)[m
[32m[08:36:21.021443] [I] [thread 125688] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(0)[m
[36m[08:36:21.021488] [D] [thread 125688] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::51::0::0(threadId=2) but there is still some active subpartition: 0[m
[33m[1m[08:36:21.038822] [W] [thread 125689] [QueryManagerTaskScheduler.cpp:183] [addWorkForNextPipeline] Pushed task for non running executable pipeline id=3[m
[36m[08:36:21.191487] [D] [thread 125689] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): EndOfStream received for channel [m
[36m[08:36:21.191487] [D] [thread 125688] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): EndOfStream received for channel [m
[36m[08:36:21.191624] [D] [thread 125689] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::39::0::0(threadId=0)[m
[36m[08:36:21.191624] [D] [thread 125688] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::39::0::0(threadId=2)[m
[32m[08:36:21.191715] [I] [thread 125689] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(3)[m
[32m[08:36:21.191776] [I] [thread 125688] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(2)[m
[36m[08:36:21.191824] [D] [thread 125689] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::39::0::0(threadId=0) but there is still some active subpartition: 2[m
[36m[08:36:21.191827] [D] [thread 125688] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::39::0::0(threadId=2) but there is still some active subpartition: 2[m
[36m[08:36:21.191875] [D] [thread 125688] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): EndOfStream received for channel [m
[36m[08:36:21.191904] [D] [thread 125688] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::39::0::0(threadId=1)[m
[32m[08:36:21.191938] [I] [thread 125688] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(1)[m
[36m[08:36:21.191958] [D] [thread 125688] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::39::0::0, counter is at 1.[m
[36m[08:36:21.192001] [D] [thread 125688] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[08:36:21.192128] [W] [thread 125688] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[08:36:21.193300] [D] [thread 125689] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): EndOfStream received for channel [m
[36m[08:36:21.193417] [D] [thread 125689] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::39::0::0(threadId=3)[m
[32m[08:36:21.193524] [I] [thread 125689] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(0)[m
[36m[08:36:21.193601] [D] [thread 125689] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::39::0::0(threadId=3) but there is still some active subpartition: 0[m
[31m[1m[08:36:21.259019] [E] [thread 126391] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 3 Reason for failure: onFatalException: exception=[Failed assertion on metadata.count() == 0 error message: PartitionManager: Consumer Partition 1::36::0::0 is still alive: 4:: callstack:
Stack trace (most recent call last):
#8    Object "./nesWorker", at 0xaaaad8a7e13f, in 
#7    Object "/lib/aarch64-linux-gnu/libc.so.6", at 0xffffa2004d4f, in __libc_start_main
#6    Object "./nesWorker", at 0xaaaad8a7eaf7, in 
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffabe742ef, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffabc8cf23, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffa4033207, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffffa26b46e7, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffa40457e7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffa4046773, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "./nesWorker", at 0xaaaad8a7e13f, in 
#7    Object "/lib/aarch64-linux-gnu/libc.so.6", at 0xffffa2004d4f, in __libc_start_main
#6    Object "./nesWorker", at 0xaaaad8a7eaf7, in 
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffabe742ef, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffabc8cf23, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffa4033207, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffffa26b46e7, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffa40457e7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffa4046773, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[36m[08:36:21.452946] [D] [thread 125688] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): EndOfStream received for channel [m
[36m[08:36:21.453111] [D] [thread 125689] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): EndOfStream received for channel [m
[36m[08:36:21.453137] [D] [thread 125688] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::45::0::0(threadId=1)[m
[32m[08:36:21.453269] [I] [thread 125688] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(3)[m
[36m[08:36:21.453324] [D] [thread 125689] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::45::0::0(threadId=0)[m
[36m[08:36:21.453356] [D] [thread 125688] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::45::0::0(threadId=1) but there is still some active subpartition: 3[m
[32m[08:36:21.453429] [I] [thread 125689] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(2)[m
[36m[08:36:21.453435] [D] [thread 125688] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): EndOfStream received for channel [m
[36m[08:36:21.453523] [D] [thread 125688] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::45::0::0(threadId=2)[m
[36m[08:36:21.453885] [D] [thread 125689] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::45::0::0(threadId=0) but there is still some active subpartition: 2[m
[36m[08:36:21.453983] [D] [thread 125689] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:43687): EndOfStream received for channel [m
[36m[08:36:21.454081] [D] [thread 125689] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::45::0::0(threadId=3)[m
[32m[08:36:21.454178] [I] [thread 125689] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(1)[m
[36m[08:36:21.454266] [D] [thread 125689] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::45::0::0, counter is at 1.[m
[36m[08:36:21.454353] [D] [thread 125689] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[08:36:21.454513] [W] [thread 125689] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[32m[08:36:21.454780] [I] [thread 125688] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(0)[m
[36m[08:36:21.455069] [D] [thread 125688] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::45::0::0(threadId=2) but there is still some active subpartition: 0[m
[36m[08:36:21.574685] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[08:36:21.719495] [E] [thread 126429] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 2 Reason for failure: onFatalException: exception=[Failed assertion on metadata.count() == 0 error message: PartitionManager: Consumer Partition 1::24::0::0 is still alive: 4:: callstack:
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaac0b7d26f, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffffa8ec3d4f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaac0b7dc27, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb2da241f, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb2bbb053, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffaaf5f6c7, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffffa95d7b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffaaf71ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffaaf72c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaac0b7d26f, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffffa8ec3d4f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaac0b7dc27, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb2da241f, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb2bbb053, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffaaf5f6c7, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffffa95d7b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffaaf71ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffaaf72c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[1m[41m[08:36:22.078631] [C] [thread 125679] [RequestProcessorService.cpp:236] [start] QueryProcessingService: Received unexpected exception while scheduling the queryIdAndCatalogEntryMapping: [m
[32m[08:36:22.078703] [I] [thread 125679] [RequestProcessorService.cpp:255] [shutDown] Request Processor Service is shutting down! No further requests can be processed![m
[32m[08:36:22.078760] [I] [thread 125679] [RequestQueue.cpp:63] [insertPoisonPill] QueryRequestQueue: Shutdown is called. Inserting Poison pill in the query request queue.[m
[33m[1m[08:36:22.078820] [W] [thread 125679] [RequestProcessorService.cpp:240] [start] QueryProcessingService: Terminated[m
[32m[08:36:22.078828] [I] [thread 125679] [RequestProcessorService.cpp:255] [shutDown] Request Processor Service is shutting down! No further requests can be processed![m
[33m[1m[08:36:22.078835] [W] [thread 125679] [NesCoordinator.cpp:171] [operator()] NesCoordinator: finished queryRequestProcessor[m
[31m[1m[08:36:22.158903] [E] [thread 125699] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[08:36:22.159928] [W] [thread 125699] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.12:32805 went dead so we remove it[m
[32m[08:36:22.160081] [I] [thread 125699] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[32m[08:36:22.160105] [I] [thread 125699] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[08:36:22.160135] [I] [thread 125699] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[08:36:22.160143] [I] [thread 125699] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[08:36:22.160194] [I] [thread 125699] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[08:36:22.160204] [I] [thread 125699] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[08:36:22.160271] [D] [thread 125699] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[08:36:22.165537] [E] [thread 125699] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[08:36:22.166519] [W] [thread 125699] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:41695 went dead so we remove it[m
[32m[08:36:22.166774] [I] [thread 125699] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[08:36:22.166834] [I] [thread 125699] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[08:36:22.166867] [I] [thread 125699] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[08:36:22.166876] [I] [thread 125699] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[08:36:22.166886] [I] [thread 125699] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[08:36:22.166895] [I] [thread 125699] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[08:36:22.166983] [D] [thread 125699] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[08:36:22.172442] [E] [thread 125699] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[08:36:22.173479] [W] [thread 125699] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:41615 went dead so we remove it[m
[32m[08:36:22.173634] [I] [thread 125699] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[32m[08:36:22.173660] [I] [thread 125699] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[08:36:22.173682] [I] [thread 125699] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[08:36:22.173690] [I] [thread 125699] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[08:36:22.173709] [I] [thread 125699] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[08:36:22.173718] [I] [thread 125699] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[08:36:22.173742] [D] [thread 125699] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[08:36:22.575977] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[08:36:23.307832] [E] [thread 125699] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[08:36:23.308792] [W] [thread 125699] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.12:32805 went dead so we remove it[m
[32m[08:36:23.308935] [I] [thread 125699] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[33m[1m[08:36:23.308965] [W] [thread 125699] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[08:36:23.313766] [E] [thread 125699] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[08:36:23.314673] [W] [thread 125699] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:41695 went dead so we remove it[m
[32m[08:36:23.314822] [I] [thread 125699] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[33m[1m[08:36:23.314851] [W] [thread 125699] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[31m[1m[08:36:23.319683] [E] [thread 125699] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[08:36:23.320718] [W] [thread 125699] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:41615 went dead so we remove it[m
[32m[08:36:23.320864] [I] [thread 125699] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[33m[1m[08:36:23.320894] [W] [thread 125699] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[31m[1m[08:36:23.351692] [E] [thread 125699] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[08:36:23.352876] [W] [thread 125699] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.34:34507 went dead so we remove it[m
[32m[08:36:23.353038] [I] [thread 125699] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=2][m
[32m[08:36:23.353068] [I] [thread 125699] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[08:36:23.353081] [I] [thread 125699] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[08:36:23.353109] [D] [thread 125699] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[08:36:23.577316] [D] [thread 125698] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
