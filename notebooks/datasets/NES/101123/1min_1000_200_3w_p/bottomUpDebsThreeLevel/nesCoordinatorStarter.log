
███╗░░██╗███████╗██████╗░██╗░░░██╗██╗░░░░░░█████╗░░██████╗████████╗██████╗░███████╗░█████╗░███╗░░░███╗
████╗░██║██╔════╝██╔══██╗██║░░░██║██║░░░░░██╔══██╗██╔════╝╚══██╔══╝██╔══██╗██╔════╝██╔══██╗████╗░████║
██╔██╗██║█████╗░░██████╦╝██║░░░██║██║░░░░░███████║╚█████╗░░░░██║░░░██████╔╝█████╗░░███████║██╔████╔██║
██║╚████║██╔══╝░░██╔══██╗██║░░░██║██║░░░░░██╔══██║░╚═══██╗░░░██║░░░██╔══██╗██╔══╝░░██╔══██║██║╚██╔╝██║
██║░╚███║███████╗██████╦╝╚██████╔╝███████╗██║░░██║██████╔╝░░░██║░░░██║░░██║███████╗██║░░██║██║░╚═╝░██║
╚═╝░░╚══╝╚══════╝╚═════╝░░╚═════╝░╚══════╝╚═╝░░╚═╝╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝╚══════╝╚═╝░░╚═╝╚═╝░░░░░╚═╝

▒█▀▀█ █▀▀█ █▀▀█ █▀▀█ █▀▀▄ ░▀░ █▀▀▄ █▀▀█ ▀▀█▀▀ █▀▀█ █▀▀█ 
▒█░░░ █░░█ █░░█ █▄▄▀ █░░█ ▀█▀ █░░█ █▄▄█ ░░█░░ █░░█ █▄▄▀ 
▒█▄▄█ ▀▀▀▀ ▀▀▀▀ ▀░▀▀ ▀▀▀░ ▀▀▀ ▀░░▀ ▀░░▀ ░░▀░░ ▀▀▀▀ ▀░▀▀ v0.5.215-SNAPSHOT
[32m[15:47:00.093898] [I] [thread 114489] [nesCoordinatorStarter.cpp:48] [main] start coordinator with Name: restIp
Description: NES ip of the REST server.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: coordinatorIp
Description: RPC IP address of NES Coordinator.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the Coordinator
Value: 4000
Default Value: 4000

Name: restPort
Description: Port exposed for rest endpoints
Value: 8081
Default Value: 8081

Name: dataPort
Description: Data server port of the Coordinator
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_DEBUG
Default Value: LOG_INFO

Name: enableQueryReconfiguration
Description: Enable reconfiguration of running query plans. (Default: false)
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 

Name: workerId
Description: Worker id.
Value: 0
Default Value: 0

Name: localWorkerIp
Description: Worker IP.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: coordinatorIp
Description: Server IP of the NES Coordinator to which the NES Worker should connect.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the NES Worker.
Value: 0
Default Value: 0

Name: dataPort
Description: Data port of the NES Worker.
Value: 0
Default Value: 0

Name: coordinatorPort
Description: RPC server Port of the NES Coordinator to which the NES Worker should connect. Needs to be set and needs to be the same as rpcPort in Coordinator.
Value: 4000
Default Value: 4000

Name: numberOfSlots
Description: Number of computing slots for the NES Worker.
Value: 65535
Default Value: 65535

Name: numWorkerThreads
Description: Number of worker threads.
Value: 4
Default Value: 1

Name: numberOfBuffersInGlobalBufferManager
Description: Number buffers in global buffer pool.
Value: 1024
Default Value: 1024

Name: numberOfBuffersPerWorker
Description: Number buffers in task local buffer pool.
Value: 128
Default Value: 128

Name: numberOfBuffersInSourceLocalBufferPool
Description: Number buffers in source local buffer pool.
Value: 64
Default Value: 64

Name: bufferSizeInBytes
Description: BufferSizeInBytes.
Value: 32000
Default Value: 4096

Name: parentId
Description: Parent ID of this node.
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_INFO
Default Value: LOG_INFO

Name: sourcePinList
Description: comma separated list of where to map the sources
Value: 
Default Value: 

Name: workerPinList
Description: comma separated list of where to map the worker
Value: 
Default Value: 

Name: queuePinList
Description: comma separated list of where to map the worker on the queue
Value: 
Default Value: 

Name: numaAwareness
Description: Enable Numa-Aware execution
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: monitoringWaitTime
Description: Sampling period of metrics (ms).
Value: 1000
Default Value: 1000

Name: queryCompilerType
Description: Indicates the type for the query compiler [DEFAULT_QUERY_COMPILER|NAUTILUS_QUERY_COMPILER].
Value: NAUTILUS_QUERY_COMPILER
Default Value: DEFAULT_QUERY_COMPILER

Name: compilationStrategy
Description: Indicates the optimization strategy for the query compiler [FAST|DEBUG|OPTIMIZE|PROXY_INLINING].
Value: OPTIMIZE
Default Value: OPTIMIZE

Name: pipeliningStrategy
Description: Indicates the pipelining strategy for the query compiler [OPERATOR_FUSION|OPERATOR_AT_A_TIME].
Value: OPERATOR_FUSION
Default Value: OPERATOR_FUSION

Name: queryCompilerNautilusBackendConfig
Description: Indicates the nautilus backend for the nautilus query compiler [MLIR_COMPILER|INTERPRETER|BC_INTERPRETER|FLOUNDER_COMPILER].
Value: MLIR_COMPILER
Default Value: MLIR_COMPILER

Name: outputBufferOptimizationLevel
Description: Indicates the OutputBufferAllocationStrategy [ALL|NO|ONLY_INPLACE_OPERATIONS_NO_FALLBACK,|REUSE_INPUT_BUFFER_AND_OMIT_OVERFLOW_CHECK_NO_FALLBACK,|REUSE_INPUT_BUFFER_NO_FALLBACK|OMIT_OVERFLOW_CHECK_NO_FALLBACK]. 
Value: ALL
Default Value: ALL

Name: windowingStrategy
Description: Indicates the windowingStrategy [LEGACY|SLICING|BUCKETING]. 
Value: LEGACY
Default Value: LEGACY

Name: useCompilationCache
Description: Enable use compilation caching
Value: 0
Default Value: 0

Name: numberOfPartitions
Description: Partitions in the hash table
Value: 1
Default Value: 1

Name: pageSize
Description: Page size of hash table
Value: 131072
Default Value: 131072

Name: preAllocPageCnt
Description: Page count of pre allocated pages in each bucket hash table
Value: 1
Default Value: 1

Name: cudaSdkPath
Description: Path to CUDA SDK.
Value: /usr/local/cuda
Default Value: /usr/local/cuda

Name: maxHashTableSize
Description: Maximum size of hash table
Value: 2097152
Default Value: 2097152

Name: joinStrategy
Description: Indicates the windowingStrategy[HASH_JOIN_LOCAL|HASH_JOIN_GLOBAL_LOCKING|HASH_JOIN_GLOBAL_LOCK_FREE|NESTED_LOOP_JOIN]. 
Value: NESTED_LOOP_JOIN
Default Value: NESTED_LOOP_JOIN


Name: physicalSources
Description: Physical sources


Name: nodeSpatialType
Description: specifies if the worker has no known location or if it is a fixed location node or mobile node
Value: NO_LOCATION
Default Value: NO_LOCATION

Name: locationBufferSize
Description: The amount of past locations to be recorded in order to predict the future trajectory
Value: 30
Default Value: 30

Name: locationBufferSaveRate
Description: Determines after how many location updates a new location will be inserted in the location buffer
Value: 4
Default Value: 4

Name: pathDistanceDelta
Description: when deviating further than delta meters from the current predicted path, an update of the prediction will be triggered
Value: 20
Default Value: 20

Name: nodeInfoDownloadRadius
Description: The radius in meters in which nodes will be downloaded
Value: 10000
Default Value: 10000

Name: nodeIndexUpdateThreshold
Description: Trigger download of new node info when the device is less than threshold away from the boundary of the area covered by the current info
Value: 2000
Default Value: 2000

Name: defaultCoverageRadius
Description: The coverage in meters each field node is assumed to have
Value: 1000
Default Value: 1000

Name: pathPredictionLength
Description: The Length of the predicted path to be computed
Value: 10000
Default Value: 10000

Name: speedDifferenceThresholdFactor
Description: The factor by which the speed needs to change to trigger a recalculation of reconnect predictions
Value: 1e-05
Default Value: 1e-05

Name: sendDevicePositionUpdateThreshold
Description: The distance in meters after which the device will report it's new position in meters
Value: 100
Default Value: 100

Name: pushPositionUpdates
Description: determines if position updates should be sent to the coordinator
Value: 1
Default Value: 1

Name: mobilityHandlerUpdateInterval
Description: the time which the thread running at the worker mobility handler will sleep after each iteration
Value: 10000
Default Value: 10000

Name: locationProviderType
Description: the kind of interface which the  mobile worker gets its geolocation info from
Value: BASE
Default Value: BASE

Name: locationProviderConfig
Description: the configuration data for the location interface
Value: 
Default Value: 

Name: locationProviderSimulatedStartTime
Description: The start time to be simulated if device movement is simulated
Value: 0
Default Value: 0


Name: numberOfQueues
Description: Number of processing queues.
Value: 1
Default Value: 1

Name: numberOfThreadsPerQueue
Description: Number of threads per processing queue.
Value: 0
Default Value: 0

Name: numberOfBuffersPerEpoch
Description: Number of tuple buffers allowed in one epoch.
Value: 100
Default Value: 100

Name: queryManagerMode
Description: Which mode the query manager is running in. (Dynamic, Static, NumaAware, Invalid)
Value: Dynamic
Default Value: Dynamic

Name: enableSourceSharing
Description: Enable source sharing
Value: 0
Default Value: 0

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 


Name: workerConfigPath
Description: Path to a configuration file for the internal worker.
Value: 
Default Value: 

Name: queryBatchSize
Description: The number of queryIdAndCatalogEntryMapping to be processed together
Value: 1
Default Value: 1

Name: queryMergerRule
Description: The rule to be used for performing query merging
Value: DefaultQueryMergerRule
Default Value: DefaultQueryMergerRule

Name: memoryLayoutPolicy
Description: selects the memory layout selection policy can be [FORCE_ROW_LAYOUT|FORCE_COLUMN_LAYOUT]
Value: FORCE_ROW_LAYOUT
Default Value: FORCE_ROW_LAYOUT

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: performDistributedWindowOptimization
Description: Enables the distribution of window aggregations.
Value: 1
Default Value: 1

Name: distributedWindowChildThreshold
Description: Threshold for the distribution of window aggregations.
Value: 1
Default Value: 2

Name: distributedWindowCombinerThreshold
Description: Threshold for the insertion of pre-aggregation operators.
Value: 1000
Default Value: 4

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: advanceSemanticValidation
Description: Perform advance semantic validation on the incoming queryIdAndCatalogEntryMapping. (Default: false)
Value: 0
Default Value: 0

Name: enableNemoPlacement
Description: Enables NEMO distributed window rule to use central windows instead of the distributed windows. (Default: false)
Value: 1
Default Value: 0


Name: logicalSources
Description: Logical Sources

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: restServerCorsAllowedOrigin
Description: The allowed origins to be set in the header of the responses to rest requests
Value: 
Default Value: 

[m
[32m[15:47:00.094080] [I] [thread 114489] [nesCoordinatorStarter.cpp:50] [main] creating coordinator[m
[36m[15:47:00.094363] [D] [thread 114489] [NesCoordinator.cpp:81] [NesCoordinator] NesCoordinator() restIp=192.168.2.11 restPort=8081 rpcIp=192.168.2.11 rpcPort=4000[m
[36m[15:47:00.095417] [D] [thread 114489] [ExecutablePath.cpp:80] [loadRuntimePathConfig] Detected a build dir as a execution location[m
[32m[15:47:00.095788] [I] [thread 114489] [ExecutablePath.cpp:113] [loadRuntimePathConfig] RuntimePathConfig: 
clangBinaryPath: /home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16
includePaths: 
	/home/ubuntu/git/nebulastream/build/include/nebulastream
libPaths:
	/home/ubuntu/git/nebulastream/build/nes-common/
	/home/ubuntu/git/nebulastream/build/nes-runtime/
	/home/ubuntu/git/nebulastream/build/nes-core/
	/home/ubuntu/git/nebulastream/build/nes-data-types/[m
[36m[15:47:00.096605] [D] [thread 114489] [SourceCatalog.cpp:41] [SourceCatalog] SourceCatalog: construct source catalog[m
[36m[15:47:00.096676] [D] [thread 114489] [SourceCatalog.cpp:31] [addDefaultSources] Sourcecatalog addDefaultSources[m
[36m[15:47:00.097314] [D] [thread 114489] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source default_logical already exist.[m
[36m[15:47:00.097410] [D] [thread 114489] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source default_logical[m
[36m[15:47:00.097531] [D] [thread 114489] [SourceCatalog.cpp:43] [SourceCatalog] SourceCatalog: construct source catalog successfully[m
[36m[15:47:00.097900] [D] [thread 114489] [SourceCatalogService.cpp:30] [SourceCatalogService] SourceCatalogService()[m
[36m[15:47:00.098057] [D] [thread 114489] [TopologyManagerService.cpp:36] [TopologyManagerService] TopologyManagerService()[m
[36m[15:47:00.150534] [D] [thread 114489] [RequestProcessorService.cpp:62] [RequestProcessorService] QueryRequestProcessorService()[m
[36m[15:47:00.150631] [D] [thread 114489] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[15:47:00.151102] [D] [thread 114489] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[15:47:00.151525] [D] [thread 114489] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[15:47:00.151858] [D] [thread 114489] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[15:47:00.152143] [D] [thread 114489] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[15:47:00.152353] [D] [thread 114489] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[15:47:00.152756] [D] [thread 114489] [BinaryOperatorSortRule.cpp:28] [BinaryOperatorSortRule] BinaryOperatorSortRule()[m
[36m[15:47:00.153904] [D] [thread 114489] [DistributedWindowRule.cpp:36] [DistributedWindowRule] Create DistributedWindowRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1000[m
[36m[15:47:00.153977] [D] [thread 114489] [NemoWindowPinningRule.cpp:45] [NemoWindowPinningRule] Create NemoWindowPinningRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1000[m
[36m[15:47:00.154250] [D] [thread 114489] [SignatureInferencePhase.cpp:26] [SignatureInferencePhase] SignatureInferencePhase()[m
[36m[15:47:00.154548] [D] [thread 114489] [QueryPlacementPhase.cpp:39] [QueryPlacementPhase] QueryPlacementPhase()[m
[36m[15:47:00.154852] [D] [thread 114489] [QueryUndeploymentPhase.cpp:35] [QueryUndeploymentPhase] QueryUndeploymentPhase()[m
[36m[15:47:00.155838] [D] [thread 114489] [QueryService.cpp:56] [QueryService] QueryService()[m
[36m[15:47:00.156370] [D] [thread 114489] [MonitoringService.cpp:37] [MonitoringService] MonitoringService: Initializing with monitoring= false[m
[36m[15:47:00.156577] [D] [thread 114489] [LatestEntriesMetricStore.cpp:23] [LatestEntriesMetricStore] LatestEntriesMetricStore: Init NewestMetricStore[m
[36m[15:47:00.156821] [D] [thread 114489] [MonitoringManager.cpp:70] [MonitoringManager] MonitoringManager: Init with monitoring= false , storage= NewestEntry [m
[33m[1m[15:47:00.156935] [W] [thread 114489] [MonitoringManager.cpp:194] [registerLogicalMonitoringStreams] MonitoringManager: Monitoring is disabled, registering of logical monitoring streams not possible.[m
[32m[15:47:00.156982] [I] [thread 114489] [nesCoordinatorStarter.cpp:53] [main] Starting Coordinator[m
[36m[15:47:00.156994] [D] [thread 114489] [NesCoordinator.cpp:159] [startCoordinator] NesCoordinator start[m
[36m[15:47:00.157358] [D] [thread 114489] [NesCoordinator.cpp:174] [startCoordinator] NesCoordinator: startCoordinatorRPCServer: Building GRPC Server[m
[32m[15:47:00.157376] [I] [thread 114497] [NesCoordinator.cpp:169] [operator()] NesCoordinator: started queryRequestProcessor[m
[36m[15:47:00.157422] [D] [thread 114497] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[15:47:00.157838] [D] [thread 114498] [NesCoordinator.cpp:180] [operator()] NesCoordinator: buildAndStartGRPCServer[m
[36m[15:47:00.165030] [D] [thread 114489] [NesCoordinator.cpp:185] [startCoordinator] NesCoordinator:buildAndStartGRPCServer: ready[m
[36m[15:47:00.165011] [D] [thread 114498] [NesCoordinator.cpp:354] [buildAndStartGRPCServer] NesCoordinator: buildAndStartGRPCServerServer listening on address=192.168.2.11:4000[m
[36m[15:47:00.165090] [D] [thread 114489] [NesCoordinator.cpp:187] [startCoordinator] NesCoordinator: Register Logical sources[m
[36m[15:47:00.165219] [D] [thread 114489] [NesCoordinator.cpp:192] [startCoordinator] NesCoordinator: Finished Registering Logical source[m
[36m[15:47:00.165232] [D] [thread 114489] [NesCoordinator.cpp:195] [startCoordinator] NesCoordinator::startCoordinator: start nes worker[m
[36m[15:47:00.165848] [D] [thread 114489] [NesWorker.cpp:65] [NesWorker] NesWorker: constructed[m
[36m[15:47:00.166028] [D] [thread 114489] [NesWorker.cpp:138] [start] NesWorker: start with blocking false workerId=0 coordinatorIp=192.168.2.11 coordinatorPort=4000 localWorkerIp=192.168.2.11 localWorkerRpcPort=0 localWorkerZmqPort=0 windowStrategy=LEGACY[m
[36m[15:47:00.166058] [D] [thread 114489] [NesWorker.cpp:140] [start] NesWorker::start: start Runtime[m
[36m[15:47:00.166096] [D] [thread 114489] [NesWorker.cpp:147] [start] NesWorker: MonitoringAgent configured with monitoring=false[m
[36m[15:47:00.166361] [D] [thread 114489] [MonitoringPlan.cpp:21] [MonitoringPlan] MonitoringPlan: Init with metrics of size 4[m
[36m[15:47:00.166421] [D] [thread 114489] [MonitoringCatalog.cpp:36] [defaultCatalog] MonitoringCatalog: Init default catalog[m
[32m[15:47:00.166509] [I] [thread 114489] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[15:47:00.167186] [I] [thread 114489] [CpuCollector.cpp:29] [CpuCollector] CpuCollector: Init CpuCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) coreNum:INTEGER(64 bits) user:INTEGER(64 bits) nice:INTEGER(64 bits) system:INTEGER(64 bits) idle:INTEGER(64 bits) iowait:INTEGER(64 bits) irq:INTEGER(64 bits) softirq:INTEGER(64 bits) steal:INTEGER(64 bits) guest:INTEGER(64 bits) guestnice:INTEGER(64 bits)[m
[32m[15:47:00.167264] [I] [thread 114489] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[15:47:00.167515] [I] [thread 114489] [DiskCollector.cpp:30] [DiskCollector] DiskCollector: Init DiskCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) F_BSIZE:INTEGER(64 bits) F_FRSIZE:INTEGER(64 bits) F_BLOCKS:INTEGER(64 bits) F_BFREE:INTEGER(64 bits) F_BAVAIL:INTEGER(64 bits)[m
[32m[15:47:00.167565] [I] [thread 114489] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[15:47:00.168070] [I] [thread 114489] [MemoryCollector.cpp:29] [MemoryCollector] MemoryCollector: Init MemoryCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) TOTAL_RAM:INTEGER(64 bits) TOTAL_SWAP:INTEGER(64 bits) FREE_RAM:INTEGER(64 bits) SHARED_RAM:INTEGER(64 bits) BUFFER_RAM:INTEGER(64 bits) FREE_SWAP:INTEGER(64 bits) TOTAL_HIGH:INTEGER(64 bits) FREE_HIGH:INTEGER(64 bits) PROCS:INTEGER(64 bits) MEM_UNIT:INTEGER(64 bits) LOADS_1MIN:INTEGER(64 bits) LOADS_5MIN:INTEGER(64 bits) LOADS_15MIN:INTEGER(64 bits)[m
[32m[15:47:00.168123] [I] [thread 114489] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[15:47:00.169032] [I] [thread 114489] [NetworkCollector.cpp:30] [NetworkCollector] NetworkCollector: Init NetworkCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)[m
[36m[15:47:00.169424] [D] [thread 114489] [MonitoringCatalog.cpp:28] [MonitoringCatalog] MonitoringCatalog: Init with collector map of size 4[m
[36m[15:47:00.169678] [D] [thread 114489] [MonitoringAgent.cpp:43] [MonitoringAgent] MonitoringAgent: Init with monitoring plan MonitoringPlan:disk(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True); and enabled=false[m
[33m[1m[15:47:00.169763] [W] [thread 114489] [MonitoringAgent.cpp:117] [addMonitoringStreams] MonitoringAgent: Monitoring is disabled, registering of physical monitoring streams not possible.[m
[36m[15:47:00.182668] [D] [thread 114489] [BufferManager.cpp:107] [initialize] NES memory allocation requires 32768000 out of 3975450624 available bytes[m
[36m[15:47:00.194189] [D] [thread 114489] [BufferManager.cpp:160] [initialize] BufferManager configuration bufferSize=32000 numOfBuffers=1024[m
[36m[15:47:00.243542] [D] [thread 114489] [QueryManager.cpp:78] [DynamicQueryManager] QueryManger: use dynamic mode with numThreads= 4[m
[33m[1m[15:47:00.243976] [W] [thread 114489] [NodeEngineBuilder.cpp:291] [createQueryCompilationOptions] The LEGACY window strategy is not supported by Nautilus. Switch to SLICING![m
[36m[15:47:00.244111] [D] [thread 114489] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[15:47:00.244220] [D] [thread 114489] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[15:47:00.244309] [D] [thread 114489] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[15:47:00.244421] [D] [thread 114489] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[15:47:00.244641] [D] [thread 114489] [NodeEngineBuilder.cpp:238] [build] Creating default OpenCLManager[m
[36m[15:47:00.244745] [D] [thread 114489] [OpenCLManager.cpp:230] [OpenCLManager] OpenCL support was disabled at build time[m
[36m[15:47:00.245055] [D] [thread 114489] [ExchangeProtocol.cpp:30] [ExchangeProtocol] ExchangeProtocol: Initializing ExchangeProtocol()[m
[36m[15:47:00.245244] [D] [thread 114489] [ZmqServer.cpp:69] [ZmqServer] ZmqServer(192.168.2.11:0) Creating ZmqServer()[m
[36m[15:47:00.245323] [D] [thread 114489] [ZmqServer.cpp:78] [start] ZmqServer(192.168.2.11:0): Starting server..[m
[36m[15:47:00.247686] [D] [thread 114503] [ZmqServer.cpp:156] [routerLoop] ZmqServer(192.168.2.11:0):  Trying to bind on tcp://192.168.2.11:0[m
[36m[15:47:00.249389] [D] [thread 114503] [ZmqServer.cpp:161] [routerLoop] ZmqServer(192.168.2.11:0):  Created socket on 192.168.2.11: 0[m
[36m[15:47:00.249545] [D] [thread 114503] [ZmqServer.cpp:176] [routerLoop] ZmqServer: Created socket on 192.168.2.11: 35043[m
[36m[15:47:00.250817] [D] [thread 114507] [ZmqServer.cpp:254] [messageHandlerEventLoop] Created Zmq Handler Thread #1 on 192.168.2.11: 35043[m
[36m[15:47:00.250872] [D] [thread 114506] [ZmqServer.cpp:254] [messageHandlerEventLoop] Created Zmq Handler Thread #0 on 192.168.2.11: 35043[m
[32m[15:47:00.250952] [I] [thread 114489] [NetworkManager.cpp:36] [NetworkManager] NetworkManager: Server started successfully on tcp://192.168.2.11:35043[m
[36m[15:47:00.251046] [D] [thread 114489] [QueryManager.cpp:140] [startThreadPool] startThreadPool: setup thread pool for nodeEngineId= 1699737422  with numThreads= 4[m
[36m[15:47:00.251294] [D] [thread 114489] [ThreadPool.cpp:108] [start] Threadpool: Spawning 4 threads[m
[36m[15:47:00.252518] [D] [thread 114511] [ThreadPool.cpp:147] [operator()] worker 3 with workerId 1 pins to queue 0[m
[36m[15:47:00.252518] [D] [thread 114508] [ThreadPool.cpp:147] [operator()] worker 0 with workerId 0 pins to queue 0[m
[36m[15:47:00.252630] [D] [thread 114509] [ThreadPool.cpp:147] [operator()] worker 1 with workerId 3 pins to queue 0[m
[36m[15:47:00.252509] [D] [thread 114489] [ThreadPool.cpp:152] [start] Threadpool: start return from start[m
[36m[15:47:00.252795] [D] [thread 114511] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=1024 requested buffers=128[m
[36m[15:47:00.252874] [D] [thread 114489] [NodeEngine.cpp:78] [NodeEngine] NodeEngine(): thread pool successfully started[m
[36m[15:47:00.253033] [D] [thread 114489] [NesWorker.cpp:156] [start] NesWorker: Node engine started successfully[m
[36m[15:47:00.253072] [D] [thread 114489] [NesWorker.cpp:164] [start] NesWorker: request startWorkerRPCServer for accepting messages for address=192.168.2.11:0: 0[m
[36m[15:47:00.252560] [D] [thread 114510] [ThreadPool.cpp:147] [operator()] worker 2 with workerId 2 pins to queue 0[m
[36m[15:47:00.253825] [D] [thread 114508] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=896 requested buffers=128[m
[36m[15:47:00.254294] [D] [thread 114512] [NesWorker.cpp:176] [operator()] NesWorker: buildAndStartGRPCServer[m
[36m[15:47:00.254490] [D] [thread 114509] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=768 requested buffers=128[m
[36m[15:47:00.254828] [D] [thread 114512] [WorkerRPCServer.cpp:38] [WorkerRPCServer] WorkerRPCServer::WorkerRPCServer()[m
[36m[15:47:00.255214] [D] [thread 114510] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=640 requested buffers=128[m
[36m[15:47:00.258194] [D] [thread 114512] [NesWorker.cpp:117] [buildAndStartGRPCServer] NesWorker: buildAndStartGRPCServer Server listening on address 192.168.2.11:0: 40941[m
[36m[15:47:00.258226] [D] [thread 114489] [NesWorker.cpp:184] [start] NesWorker: startWorkerRPCServer ready for accepting messages for address=192.168.2.11:40941: 40941[m
[36m[15:47:00.258264] [D] [thread 114489] [NesWorker.cpp:187] [start] NesWorker: start with connect[m
[36m[15:47:00.258297] [D] [thread 114489] [NesWorker.cpp:306] [connect] NesWorker::connect() Registering worker with coordinator at 192.168.2.11:4000[m
[36m[15:47:00.258408] [D] [thread 114489] [CoordinatorRPCClient.cpp:152] [CoordinatorRPCClient] CoordinatorRPCClient(): creating channels to address =192.168.2.11:4000[m
[36m[15:47:00.260999] [D] [thread 114512] [CallData.cpp:36] [proceed] RequestInSyncInCreate=[m
[36m[15:47:00.261005] [D] [thread 114489] [CoordinatorRPCClient.cpp:156] [CoordinatorRPCClient] CoordinatorRPCClient::connecting: channel successfully created[m
[33m[1m[15:47:00.262116] [W] [thread 114489] [MonitoringAgent.cpp:96] [getRegistrationMetrics] MonitoringAgent: Metrics disabled. Return empty metric object for registration.[m
[36m[15:47:00.262181] [D] [thread 114489] [RegistrationMetrics.cpp:32] [RegistrationMetrics] RegistrationMetrics: Default ctor[m
[36m[15:47:00.264035] [D] [thread 114489] [CoordinatorRPCClient.cpp:387] [registerWorker] CoordinatorRPCClient::RegisterNodeRequest request=address: "192.168.2.11"
grpcPort: 40941
dataPort: 35043
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:47:00.276449] [D] [thread 114499] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.11"
grpcPort: 40941
dataPort: 35043
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:47:00.276744] [D] [thread 114499] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.11"
grpcPort: 40941
dataPort: 35043
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:47:00.276866] [D] [thread 114499] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[33m[1m[15:47:00.276901] [W] [thread 114499] [Topology.cpp:280] [toString] Topology: No root node found[m
[36m[15:47:00.276913] [D] [thread 114499] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[15:47:00.276925] [D] [thread 114499] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[15:47:00.276966] [D] [thread 114499] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 1 and resources 65535[m
[36m[15:47:00.277186] [D] [thread 114499] [TopologyManagerService.cpp:99] [registerWorker] TopologyManagerService::registerWorker: tree is empty so this becomes new root[m
[32m[15:47:00.277277] [I] [thread 114499] [Topology.cpp:356] [setAsRoot] Topology: Setting physical node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0] as root to the topology.[m
[36m[15:47:00.277415] [D] [thread 114499] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[15:47:00.277679] [D] [thread 114499] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
[m
[32m[15:47:00.277780] [I] [thread 114499] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[15:47:00.277812] [D] [thread 114499] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[15:47:00.277852] [D] [thread 114499] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[15:47:00.277873] [D] [thread 114499] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[15:47:00.277911] [D] [thread 114499] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[15:47:00.279206] [D] [thread 114499] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=1[m
[36m[15:47:00.280965] [D] [thread 114489] [NesWorker.cpp:334] [connect] NesWorker::connect() Worker registered successfully and got id=1[m
[36m[15:47:00.281047] [D] [thread 114489] [NesWorker.cpp:341] [connect] NesWorker::connect() Persisting workerId=1 in yaml file for the first time.[m
[36m[15:47:00.281152] [D] [thread 114489] [NesWorker.cpp:347] [connect] NesWorker::connect() Persisted workerId=1 successfully in yaml file.[m
[36m[15:47:00.281167] [D] [thread 114489] [NesWorker.cpp:362] [connect] NesWorker::registerWorker rpc register success with id 1[m
[36m[15:47:00.314263] [D] [thread 114489] [NesWorker.cpp:368] [connect] NesWorker start health check[m
[36m[15:47:00.314446] [D] [thread 114489] [WorkerHealthCheckService.cpp:39] [startHealthCheck] WorkerHealthCheckService::startHealthCheck worker id= 1[m
[36m[15:47:00.314462] [D] [thread 114489] [WorkerHealthCheckService.cpp:41] [startHealthCheck] start health checking on worker[m
[36m[15:47:00.314977] [D] [thread 114489] [NesWorker.cpp:247] [start] NesWorker: started, return[m
[36m[15:47:00.315142] [D] [thread 114489] [NesCoordinator.cpp:210] [startCoordinator] NesCoordinator starting rest server[m
[36m[15:47:00.315761] [D] [thread 114489] [NesCoordinator.cpp:239] [startCoordinator] NesCoordinator::startCoordinatorRESTServer: ready[m
[32m[15:47:00.315848] [I] [thread 114516] [RestServer.cpp:64] [start] Starting Oatpp Server on 192.168.2.11:8081[m
[32m[15:47:00.331811] [I] [thread 114516] [RestServer.cpp:166] [run] NebulaStream REST Server listening on port 8081[m
[36m[15:47:00.331953] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:00.346343] [D] [thread 114489] [NesCoordinator.cpp:244] [startCoordinator] NesCoordinator start health check[m
[36m[15:47:00.346501] [D] [thread 114489] [CoordinatortHealthCheckService.cpp:34] [startHealthCheck] CoordinatorHealthCheckService::startHealthCheck[m
[36m[15:47:00.346515] [D] [thread 114489] [CoordinatortHealthCheckService.cpp:36] [startHealthCheck] start health checking on coordinator[m
[36m[15:47:00.346951] [D] [thread 114489] [NesCoordinator.cpp:248] [startCoordinator] NesCoordinator started, join now and waiting for work[m
[36m[15:47:01.333239] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:02.334562] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:03.335847] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:03.355892] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:03.357504] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:03.359102] [D] [thread 114519] [SourceCatalogController.hpp:125] [addLogicalSource] SourceCatalogController: addLogicalSource: REST received request to add new Logical Source.[m
[36m[15:47:03.360618] [D] [thread 114519] [SourceCatalogController.hpp:144] [addLogicalSource] SourceCatalogController: addLogicalSource: Try to add new Logical Source debs and Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));[m
[36m[15:47:03.360700] [D] [thread 114519] [SourceCatalogService.cpp:92] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source=debs schema= Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));[m
[36m[15:47:03.360776] [D] [thread 114519] [QueryParsingService.cpp:53] [createSchemaFromCode] QueryParsingService : generated code= #include <API/Schema.hpp>
#include <Common/DataTypes/DataTypeFactory.hpp>
namespace NES{
Schema createSchema(){
return Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));;}
}
[m
[36m[15:47:03.362142] [D] [thread 114520] [File.cpp:27] [createFile] Create File to file:///tmp/query_10-11-2023_15-47-03_6262056.cpp[m
[36m[15:47:03.362876] [D] [thread 114520] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[15:47:03.363357] [D] [thread 114520] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DFMT_HEADER_ONLY -DNES_COMPILE_TIME_LOG_LEVEL=6 -I/home/ubuntu/git/nebulastream/build/include/nebulastream -L/home/ubuntu/git/nebulastream/build/nes-core/ -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -shared -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -Wparentheses-equality -o/tmp/query_10-11-2023_15-47-03_6262056.so -fpic -fno-trigraphs -std=c++20 -stdlib=libstdc++ /tmp/query_10-11-2023_15-47-03_6262056.cpp'[m
[36m[15:47:04.358774] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:47:05.087161] [I] [thread 114520] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 1725.081172ms[m
[36m[15:47:05.088945] [D] [thread 114519] [SourceCatalog.cpp:49] [addLogicalSource] SourceCatalog: schema successfully created[m
[36m[15:47:05.089036] [D] [thread 114519] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source debs already exist.[m
[36m[15:47:05.089068] [D] [thread 114519] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source debs[m
[36m[15:47:05.089124] [D] [thread 114519] [SourceCatalogController.hpp:146] [addLogicalSource] SourceCatalogController: addLogicalSource: Successfully added new logical Source ? true[m
[36m[15:47:05.221187] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:05.221722] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:47:05.222391] [I] [thread 114525] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:47:05.223786] [I] [thread 114525] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:47:05.431755] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:05.432258] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:47:05.432930] [I] [thread 114526] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:47:05.433515] [I] [thread 114526] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:47:05.633383] [D] [thread 114499] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.12"
grpcPort: 36563
dataPort: 36559
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:47:05.633551] [D] [thread 114499] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.12"
grpcPort: 36563
dataPort: 36559
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:47:05.633597] [D] [thread 114499] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[15:47:05.633728] [D] [thread 114499] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[15:47:05.633742] [D] [thread 114499] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[15:47:05.633771] [D] [thread 114499] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 2 and resources 65535[m
[36m[15:47:05.633887] [D] [thread 114499] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[15:47:05.633939] [I] [thread 114499] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[15:47:05.634043] [I] [thread 114499] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:47:05.634166] [D] [thread 114499] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 2[m
[36m[15:47:05.634375] [D] [thread 114499] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[15:47:05.634538] [D] [thread 114499] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[15:47:05.634577] [I] [thread 114499] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[15:47:05.634594] [D] [thread 114499] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[15:47:05.634620] [D] [thread 114499] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[15:47:05.634630] [D] [thread 114499] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[15:47:05.634644] [D] [thread 114499] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[15:47:05.635051] [D] [thread 114499] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=2[m
[36m[15:47:06.433579] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:07.434892] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:08.436176] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:08.666039] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:08.666495] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:47:08.667121] [I] [thread 114527] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:47:08.668062] [I] [thread 114527] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:47:08.847342] [D] [thread 114499] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.30"
grpcPort: 33619
dataPort: 34139
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:47:08.847507] [D] [thread 114499] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.30"
grpcPort: 33619
dataPort: 34139
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:47:08.847552] [D] [thread 114499] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[15:47:08.847716] [D] [thread 114499] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[15:47:08.847730] [D] [thread 114499] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[15:47:08.847762] [D] [thread 114499] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 3 and resources 65535[m
[36m[15:47:08.847878] [D] [thread 114499] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[15:47:08.847953] [I] [thread 114499] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[15:47:08.848024] [I] [thread 114499] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:47:08.848089] [D] [thread 114499] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 3[m
[36m[15:47:08.848153] [D] [thread 114499] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[15:47:08.848284] [D] [thread 114499] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[15:47:08.848345] [I] [thread 114499] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[15:47:08.848365] [D] [thread 114499] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[15:47:08.848392] [D] [thread 114499] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[15:47:08.848402] [D] [thread 114499] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[15:47:08.848416] [D] [thread 114499] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[15:47:08.848865] [D] [thread 114499] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=3[m
[36m[15:47:09.667797] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:10.669109] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:11.670427] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:11.958248] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:11.958562] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:47:11.959182] [I] [thread 114528] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:47:11.959881] [I] [thread 114528] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:47:12.128759] [D] [thread 114499] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.31"
grpcPort: 38857
dataPort: 39899
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:47:12.129017] [D] [thread 114499] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.31"
grpcPort: 38857
dataPort: 39899
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:47:12.129097] [D] [thread 114499] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[15:47:12.129423] [D] [thread 114499] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[15:47:12.129455] [D] [thread 114499] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[15:47:12.129515] [D] [thread 114499] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 4 and resources 65535[m
[36m[15:47:12.129674] [D] [thread 114499] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[15:47:12.129762] [I] [thread 114499] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[15:47:12.129929] [I] [thread 114499] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:47:12.130024] [D] [thread 114499] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 4[m
[36m[15:47:12.130126] [D] [thread 114499] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[15:47:12.130408] [D] [thread 114499] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[15:47:12.130467] [I] [thread 114499] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[15:47:12.130498] [D] [thread 114499] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[15:47:12.130541] [D] [thread 114499] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[15:47:12.130566] [D] [thread 114499] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[15:47:12.130593] [D] [thread 114499] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[15:47:12.131206] [D] [thread 114499] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=4[m
[36m[15:47:12.959780] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:13.961204] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:14.962623] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:15.265145] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:15.265556] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:47:15.266139] [I] [thread 114529] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:47:15.266923] [I] [thread 114529] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:47:15.410415] [D] [thread 114499] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.32"
grpcPort: 44575
dataPort: 39493
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:47:15.410674] [D] [thread 114499] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.32"
grpcPort: 44575
dataPort: 39493
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:47:15.410751] [D] [thread 114499] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[15:47:15.411114] [D] [thread 114499] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[15:47:15.411147] [D] [thread 114499] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[15:47:15.411206] [D] [thread 114499] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 5 and resources 65535[m
[36m[15:47:15.411367] [D] [thread 114499] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[15:47:15.411455] [I] [thread 114499] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[15:47:15.411598] [I] [thread 114499] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:47:15.411681] [D] [thread 114499] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 5[m
[36m[15:47:15.411782] [D] [thread 114499] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[15:47:15.412098] [D] [thread 114499] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[15:47:15.412160] [I] [thread 114499] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[15:47:15.412192] [D] [thread 114499] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[15:47:15.412234] [D] [thread 114499] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[15:47:15.412259] [D] [thread 114499] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[15:47:15.412286] [D] [thread 114499] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[15:47:15.412938] [D] [thread 114499] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=5[m
[36m[15:47:15.448300] [D] [thread 114499] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 5
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream4"
  logicalSourceName: "debs"
}
[m
[32m[15:47:15.448496] [I] [thread 114499] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[15:47:15.448539] [D] [thread 114499] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[15:47:15.448687] [D] [thread 114499] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= test_stream4 logical source= debs[m
[36m[15:47:15.449229] [D] [thread 114499] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[15:47:15.449311] [D] [thread 114499] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream4[m
[36m[15:47:15.449628] [D] [thread 114499] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream4 does not exist, try to add[m
[36m[15:47:15.449732] [D] [thread 114499] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[15:47:15.449855] [D] [thread 114499] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[15:47:15.449897] [D] [thread 114499] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[15:47:15.455281] [D] [thread 114530] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 5
oldParent: 1
newParent: 2
[m
[36m[15:47:15.455434] [D] [thread 114530] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 5  parentId= 1[m
[32m[15:47:15.455469] [I] [thread 114530] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[15:47:15.455503] [D] [thread 114530] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[15:47:15.455537] [D] [thread 114530] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  5  exists[m
[32m[15:47:15.455557] [I] [thread 114530] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[15:47:15.455578] [D] [thread 114530] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[15:47:15.455603] [D] [thread 114530] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[15:47:15.455699] [D] [thread 114530] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[15:47:15.455877] [I] [thread 114530] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:47:15.455946] [D] [thread 114530] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[15:47:15.455975] [D] [thread 114530] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[15:47:15.456012] [D] [thread 114530] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 5  parentId= 2[m
[32m[15:47:15.456035] [I] [thread 114530] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[15:47:15.456059] [D] [thread 114530] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[15:47:15.456086] [D] [thread 114530] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 5 exists[m
[32m[15:47:15.456106] [I] [thread 114530] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[15:47:15.456126] [D] [thread 114530] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[15:47:15.456151] [D] [thread 114530] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[15:47:15.456278] [I] [thread 114530] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[36m[15:47:15.456400] [D] [thread 114530] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[15:47:15.456777] [D] [thread 114530] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[15:47:15.456812] [D] [thread 114530] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[15:47:16.266863] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:17.268231] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:18.269575] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:18.548762] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:18.549204] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:47:18.549673] [I] [thread 114531] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:47:18.550532] [I] [thread 114531] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:47:18.721450] [D] [thread 114530] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.33"
grpcPort: 39511
dataPort: 34581
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:47:18.721712] [D] [thread 114530] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.33"
grpcPort: 39511
dataPort: 34581
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:47:18.721794] [D] [thread 114530] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[15:47:18.722207] [D] [thread 114530] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[15:47:18.722273] [D] [thread 114530] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[15:47:18.722359] [D] [thread 114530] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 6 and resources 65535[m
[36m[15:47:18.722527] [D] [thread 114530] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[15:47:18.722616] [I] [thread 114530] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[15:47:18.722762] [I] [thread 114530] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:47:18.722844] [D] [thread 114530] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 6[m
[36m[15:47:18.722946] [D] [thread 114530] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[15:47:18.723316] [D] [thread 114530] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[15:47:18.723377] [I] [thread 114530] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[15:47:18.723407] [D] [thread 114530] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[15:47:18.723453] [D] [thread 114530] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[15:47:18.723478] [D] [thread 114530] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[15:47:18.723506] [D] [thread 114530] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[15:47:18.724101] [D] [thread 114530] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=6[m
[36m[15:47:18.759264] [D] [thread 114530] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 6
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream5"
  logicalSourceName: "debs"
}
[m
[32m[15:47:18.759380] [I] [thread 114530] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[15:47:18.759421] [D] [thread 114530] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[15:47:18.759502] [D] [thread 114530] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= test_stream5 logical source= debs[m
[36m[15:47:18.759693] [D] [thread 114530] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[15:47:18.759737] [D] [thread 114530] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream5[m
[36m[15:47:18.759843] [D] [thread 114530] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[15:47:18.759892] [D] [thread 114530] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream5 does not exist, try to add[m
[36m[15:47:18.759921] [D] [thread 114530] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[15:47:18.759988] [D] [thread 114530] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[15:47:18.760029] [D] [thread 114530] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[15:47:18.763977] [D] [thread 114530] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 6
oldParent: 1
newParent: 2
[m
[36m[15:47:18.764089] [D] [thread 114530] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 6  parentId= 1[m
[32m[15:47:18.764125] [I] [thread 114530] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[15:47:18.764155] [D] [thread 114530] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[15:47:18.764185] [D] [thread 114530] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  6  exists[m
[32m[15:47:18.764202] [I] [thread 114530] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[15:47:18.764220] [D] [thread 114530] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[15:47:18.764241] [D] [thread 114530] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[15:47:18.764364] [D] [thread 114530] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[15:47:18.764530] [I] [thread 114530] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:47:18.764647] [D] [thread 114530] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[15:47:18.764677] [D] [thread 114530] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[15:47:18.764704] [D] [thread 114530] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 6  parentId= 2[m
[32m[15:47:18.764723] [I] [thread 114530] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[15:47:18.764746] [D] [thread 114530] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[15:47:18.764769] [D] [thread 114530] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 6 exists[m
[32m[15:47:18.764785] [I] [thread 114530] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[15:47:18.764803] [D] [thread 114530] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[15:47:18.764824] [D] [thread 114530] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[15:47:18.764948] [I] [thread 114530] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[36m[15:47:18.765004] [D] [thread 114530] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[15:47:18.765347] [D] [thread 114530] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[15:47:18.765379] [D] [thread 114530] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[15:47:19.550466] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:20.551775] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:21.553061] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:21.842618] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:21.842988] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:47:21.843750] [I] [thread 114532] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:47:21.845385] [I] [thread 114532] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:47:22.019609] [D] [thread 114530] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.34"
grpcPort: 44541
dataPort: 44283
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:47:22.019871] [D] [thread 114530] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.34"
grpcPort: 44541
dataPort: 44283
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:47:22.019954] [D] [thread 114530] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[15:47:22.020493] [D] [thread 114530] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[15:47:22.020571] [D] [thread 114530] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[15:47:22.020647] [D] [thread 114530] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 7 and resources 65535[m
[36m[15:47:22.020820] [D] [thread 114530] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[15:47:22.020910] [I] [thread 114530] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[15:47:22.021058] [I] [thread 114530] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:47:22.021142] [D] [thread 114530] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 7[m
[36m[15:47:22.021245] [D] [thread 114530] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[15:47:22.021672] [D] [thread 114530] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[15:47:22.021766] [I] [thread 114530] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[15:47:22.021802] [D] [thread 114530] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[15:47:22.021848] [D] [thread 114530] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[15:47:22.021872] [D] [thread 114530] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[15:47:22.021900] [D] [thread 114530] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[15:47:22.022534] [D] [thread 114530] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=7[m
[36m[15:47:22.058180] [D] [thread 114530] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 7
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream6"
  logicalSourceName: "debs"
}
[m
[32m[15:47:22.058306] [I] [thread 114530] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[15:47:22.058352] [D] [thread 114530] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[15:47:22.058441] [D] [thread 114530] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= test_stream6 logical source= debs[m
[36m[15:47:22.058647] [D] [thread 114530] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[15:47:22.058699] [D] [thread 114530] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream6[m
[36m[15:47:22.058774] [D] [thread 114530] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[15:47:22.058808] [D] [thread 114530] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[15:47:22.058844] [D] [thread 114530] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream6 does not exist, try to add[m
[36m[15:47:22.058874] [D] [thread 114530] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[15:47:22.058929] [D] [thread 114530] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[15:47:22.058957] [D] [thread 114530] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[15:47:22.063523] [D] [thread 114530] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 7
oldParent: 1
newParent: 3
[m
[36m[15:47:22.063648] [D] [thread 114530] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 7  parentId= 1[m
[32m[15:47:22.063683] [I] [thread 114530] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[15:47:22.063717] [D] [thread 114530] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[15:47:22.063751] [D] [thread 114530] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  7  exists[m
[32m[15:47:22.063770] [I] [thread 114530] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[15:47:22.063792] [D] [thread 114530] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[15:47:22.063816] [D] [thread 114530] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[15:47:22.063900] [D] [thread 114530] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[15:47:22.064069] [I] [thread 114530] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:47:22.064115] [D] [thread 114530] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[15:47:22.064143] [D] [thread 114530] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[15:47:22.064171] [D] [thread 114530] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 7  parentId= 3[m
[32m[15:47:22.064193] [I] [thread 114530] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[15:47:22.064218] [D] [thread 114530] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[15:47:22.064244] [D] [thread 114530] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 7 exists[m
[32m[15:47:22.064264] [I] [thread 114530] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[15:47:22.064285] [D] [thread 114530] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[15:47:22.064310] [D] [thread 114530] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[15:47:22.064506] [I] [thread 114530] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[15:47:22.064573] [D] [thread 114530] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[15:47:22.065018] [D] [thread 114530] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[15:47:22.065056] [D] [thread 114530] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[15:47:22.844233] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:23.845614] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:24.847040] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:25.150963] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:25.151304] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:47:25.151932] [I] [thread 114533] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:47:25.153267] [I] [thread 114533] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:47:25.330255] [D] [thread 114530] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.35"
grpcPort: 39721
dataPort: 43817
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:47:25.330496] [D] [thread 114530] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.35"
grpcPort: 39721
dataPort: 43817
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:47:25.330567] [D] [thread 114530] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[15:47:25.331021] [D] [thread 114530] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[15:47:25.331077] [D] [thread 114530] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[15:47:25.331153] [D] [thread 114530] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 8 and resources 65535[m
[36m[15:47:25.331301] [D] [thread 114530] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[15:47:25.331380] [I] [thread 114530] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[15:47:25.331507] [I] [thread 114530] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:47:25.331580] [D] [thread 114530] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 8[m
[36m[15:47:25.331673] [D] [thread 114530] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[15:47:25.332078] [D] [thread 114530] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[15:47:25.332182] [I] [thread 114530] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[15:47:25.332214] [D] [thread 114530] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[15:47:25.332257] [D] [thread 114530] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[15:47:25.332279] [D] [thread 114530] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[15:47:25.332303] [D] [thread 114530] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[15:47:25.332898] [D] [thread 114530] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=8[m
[36m[15:47:25.367520] [D] [thread 114530] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 8
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream7"
  logicalSourceName: "debs"
}
[m
[32m[15:47:25.367603] [I] [thread 114530] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[15:47:25.367627] [D] [thread 114530] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[15:47:25.367686] [D] [thread 114530] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= test_stream7 logical source= debs[m
[36m[15:47:25.367827] [D] [thread 114530] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[15:47:25.367858] [D] [thread 114530] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream7[m
[36m[15:47:25.367909] [D] [thread 114530] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[15:47:25.367928] [D] [thread 114530] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[15:47:25.367942] [D] [thread 114530] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[15:47:25.367961] [D] [thread 114530] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream7 does not exist, try to add[m
[36m[15:47:25.367979] [D] [thread 114530] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[15:47:25.367999] [D] [thread 114530] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[15:47:25.368012] [D] [thread 114530] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[15:47:25.372038] [D] [thread 114530] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 8
oldParent: 1
newParent: 3
[m
[36m[15:47:25.372136] [D] [thread 114530] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 8  parentId= 1[m
[32m[15:47:25.372158] [I] [thread 114530] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[15:47:25.372178] [D] [thread 114530] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[15:47:25.372198] [D] [thread 114530] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  8  exists[m
[32m[15:47:25.372209] [I] [thread 114530] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[15:47:25.372220] [D] [thread 114530] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[15:47:25.372232] [D] [thread 114530] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[15:47:25.372288] [D] [thread 114530] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[15:47:25.372435] [I] [thread 114530] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:47:25.372479] [D] [thread 114530] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[15:47:25.372498] [D] [thread 114530] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[15:47:25.372514] [D] [thread 114530] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 8  parentId= 3[m
[32m[15:47:25.372532] [I] [thread 114530] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[15:47:25.372547] [D] [thread 114530] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[15:47:25.372561] [D] [thread 114530] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 8 exists[m
[32m[15:47:25.372570] [I] [thread 114530] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[15:47:25.372581] [D] [thread 114530] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[15:47:25.372594] [D] [thread 114530] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[15:47:25.372679] [I] [thread 114530] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[15:47:25.372718] [D] [thread 114530] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[15:47:25.372981] [D] [thread 114530] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[15:47:25.373003] [D] [thread 114530] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[15:47:26.152589] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:27.153870] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:28.155160] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:28.473955] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:28.474474] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:47:28.475114] [I] [thread 114535] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:47:28.477570] [I] [thread 114535] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:47:28.642205] [D] [thread 114534] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.37"
grpcPort: 42321
dataPort: 38485
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:47:28.642379] [D] [thread 114534] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.37"
grpcPort: 42321
dataPort: 38485
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:47:28.642429] [D] [thread 114534] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[15:47:28.642712] [D] [thread 114534] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[15:47:28.642744] [D] [thread 114534] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[15:47:28.642781] [D] [thread 114534] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 9 and resources 65535[m
[36m[15:47:28.642872] [D] [thread 114534] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[15:47:28.642913] [I] [thread 114534] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[15:47:28.643017] [I] [thread 114534] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:47:28.643069] [D] [thread 114534] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 9[m
[36m[15:47:28.643136] [D] [thread 114534] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[15:47:28.643370] [D] [thread 114534] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[15:47:28.643406] [I] [thread 114534] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[15:47:28.643421] [D] [thread 114534] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[15:47:28.643447] [D] [thread 114534] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[15:47:28.643458] [D] [thread 114534] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[15:47:28.643472] [D] [thread 114534] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[15:47:28.643853] [D] [thread 114534] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=9[m
[36m[15:47:28.677609] [D] [thread 114534] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 9
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream8"
  logicalSourceName: "debs"
}
[m
[32m[15:47:28.677734] [I] [thread 114534] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[15:47:28.677781] [D] [thread 114534] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[15:47:28.677871] [D] [thread 114534] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= test_stream8 logical source= debs[m
[36m[15:47:28.678075] [D] [thread 114534] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[15:47:28.678124] [D] [thread 114534] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream8[m
[36m[15:47:28.678203] [D] [thread 114534] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[15:47:28.678237] [D] [thread 114534] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[15:47:28.678263] [D] [thread 114534] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[15:47:28.678289] [D] [thread 114534] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[15:47:28.678323] [D] [thread 114534] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream8 does not exist, try to add[m
[36m[15:47:28.678354] [D] [thread 114534] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[15:47:28.678407] [D] [thread 114534] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[15:47:28.678433] [D] [thread 114534] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[15:47:28.682549] [D] [thread 114534] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 9
oldParent: 1
newParent: 4
[m
[36m[15:47:28.682642] [D] [thread 114534] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 9  parentId= 1[m
[32m[15:47:28.682667] [I] [thread 114534] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[15:47:28.682692] [D] [thread 114534] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[15:47:28.682716] [D] [thread 114534] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  9  exists[m
[32m[15:47:28.682729] [I] [thread 114534] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[15:47:28.682743] [D] [thread 114534] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[15:47:28.682759] [D] [thread 114534] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[15:47:28.682825] [D] [thread 114534] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[15:47:28.682949] [I] [thread 114534] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:47:28.682981] [D] [thread 114534] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[15:47:28.683001] [D] [thread 114534] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[15:47:28.683019] [D] [thread 114534] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 9  parentId= 4[m
[32m[15:47:28.683033] [I] [thread 114534] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[15:47:28.683060] [D] [thread 114534] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[15:47:28.683080] [D] [thread 114534] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 9 exists[m
[32m[15:47:28.683092] [I] [thread 114534] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[15:47:28.683107] [D] [thread 114534] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[15:47:28.683123] [D] [thread 114534] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  4  exists[m
[32m[15:47:28.683211] [I] [thread 114534] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[15:47:28.683258] [D] [thread 114534] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[15:47:28.683631] [D] [thread 114534] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[15:47:28.683657] [D] [thread 114534] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[15:47:29.475766] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:30.477134] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:31.478437] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:31.777949] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:31.778469] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:47:31.779280] [I] [thread 114539] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:47:31.781976] [I] [thread 114539] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:47:31.955404] [D] [thread 114534] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.38"
grpcPort: 39609
dataPort: 39583
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:47:31.955580] [D] [thread 114534] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.38"
grpcPort: 39609
dataPort: 39583
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:47:31.955631] [D] [thread 114534] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[15:47:31.955944] [D] [thread 114534] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[15:47:31.955986] [D] [thread 114534] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[15:47:31.956042] [D] [thread 114534] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 10 and resources 65535[m
[36m[15:47:31.956148] [D] [thread 114534] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[15:47:31.956194] [I] [thread 114534] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[15:47:31.956268] [I] [thread 114534] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:47:31.956364] [D] [thread 114534] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 10[m
[36m[15:47:32.053295] [D] [thread 114534] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[15:47:32.053766] [D] [thread 114534] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[15:47:32.053847] [I] [thread 114534] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[15:47:32.053872] [D] [thread 114534] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[15:47:32.053909] [D] [thread 114534] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[15:47:32.053920] [D] [thread 114534] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[15:47:32.053936] [D] [thread 114534] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[15:47:32.054371] [D] [thread 114534] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=10[m
[36m[15:47:32.092861] [D] [thread 114537] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 10
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream9"
  logicalSourceName: "debs"
}
[m
[32m[15:47:32.093003] [I] [thread 114537] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[15:47:32.093047] [D] [thread 114537] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[15:47:32.093139] [D] [thread 114537] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= test_stream9 logical source= debs[m
[36m[15:47:32.093353] [D] [thread 114537] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[15:47:32.093403] [D] [thread 114537] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream9[m
[36m[15:47:32.093480] [D] [thread 114537] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[15:47:32.093515] [D] [thread 114537] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[15:47:32.093542] [D] [thread 114537] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[15:47:32.093568] [D] [thread 114537] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[15:47:32.093594] [D] [thread 114537] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=test_stream8[m
[36m[15:47:32.093631] [D] [thread 114537] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream9 does not exist, try to add[m
[36m[15:47:32.093662] [D] [thread 114537] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[15:47:32.093698] [D] [thread 114537] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[15:47:32.093724] [D] [thread 114537] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[15:47:32.098525] [D] [thread 114540] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 10
oldParent: 1
newParent: 4
[m
[36m[15:47:32.098648] [D] [thread 114540] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 10  parentId= 1[m
[32m[15:47:32.098683] [I] [thread 114540] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[15:47:32.098718] [D] [thread 114540] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[15:47:32.098752] [D] [thread 114540] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  10  exists[m
[32m[15:47:32.098772] [I] [thread 114540] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[15:47:32.098793] [D] [thread 114540] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[15:47:32.098818] [D] [thread 114540] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[15:47:32.098904] [D] [thread 114540] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[15:47:32.099078] [I] [thread 114540] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:47:32.099174] [D] [thread 114540] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[15:47:32.099204] [D] [thread 114540] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[15:47:32.099232] [D] [thread 114540] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 10  parentId= 4[m
[32m[15:47:32.099254] [I] [thread 114540] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[15:47:32.099278] [D] [thread 114540] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[15:47:32.099305] [D] [thread 114540] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 10 exists[m
[32m[15:47:32.099324] [I] [thread 114540] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[15:47:32.099345] [D] [thread 114540] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[15:47:32.099370] [D] [thread 114540] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  4  exists[m
[32m[15:47:32.099506] [I] [thread 114540] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[15:47:32.099571] [D] [thread 114540] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[15:47:32.100172] [D] [thread 114540] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[15:47:32.100214] [D] [thread 114540] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[15:47:32.779776] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:33.781066] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:33.888798] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:33.889255] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:47:33.889866] [I] [thread 114543] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:47:33.892803] [I] [thread 114543] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:47:34.778164] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:34.778493] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:34.888718] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:34.889190] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:34.891224] [D] [thread 114549] [QueryController.hpp:223] [submitQuery] QueryController: handlePost -execute-query: Params: userQuery= Query::from("debs").project(Attribute("sid"), Attribute("ts"), Attribute("absolute_v")).window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out","CSV_FORMAT","APPEND", true));, strategyName= BottomUp, faultTolerance= NONE, lineage= NONE[m
[32m[15:47:34.891357] [I] [thread 114549] [QueryService.cpp:69] [validateAndQueueAddQueryRequest] QueryService: Validating and registering the user query.[m
[32m[15:47:34.891390] [I] [thread 114549] [QueryService.cpp:73] [validateAndQueueAddQueryRequest] QueryService: check validation of a query.[m
[36m[15:47:34.891442] [D] [thread 114549] [SyntacticQueryValidation.cpp:40] [validate] SyntacticQueryValidation: parse C++ query from query string.[m
[36m[15:47:34.891546] [D] [thread 114549] [QueryParsingService.cpp:94] [createQueryFromCodeString]  QueryParsingService: source name = "debs"[m
[36m[15:47:34.891620] [D] [thread 114549] [QueryParsingService.cpp:100] [createQueryFromCodeString] QueryParsingService: parsed query = return Query::from("debs").project(Attribute("sid"), Attribute("ts"), Attribute("absolute_v")).window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out","CSV_FORMAT","APPEND", true));[m
[36m[15:47:34.891658] [D] [thread 114549] [QueryParsingService.cpp:104] [createQueryFromCodeString] QueryParsingService: query code
#include <API/QueryAPI.hpp>
namespace NES{
Query createQuery(){
return Query::from("debs").project(Attribute("sid"), Attribute("ts"), Attribute("absolute_v")).window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out","CSV_FORMAT","APPEND", true));
}
}
[m
[36m[15:47:34.893233] [D] [thread 114550] [File.cpp:27] [createFile] Create File to file:///tmp/query_10-11-2023_15-47-34_1924364.cpp[m
[36m[15:47:34.893798] [D] [thread 114550] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[15:47:34.893884] [D] [thread 114550] [CPPCompilerFlags.cpp:64] [enableProfilingFlags] Compilation Time tracing is activated open: chrome://tracing/[m
[36m[15:47:34.894247] [D] [thread 114550] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DNES_COMPILE_TIME_LOG_LEVEL=6 -fno-trigraphs -fpic -Wparentheses-equality -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -std=c++20 -stdlib=libstdc++ -shared -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -o/tmp/query_10-11-2023_15-47-34_1924364.so -ftime-trace -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-core/ -I/home/ubuntu/git/nebulastream/build/include/nebulastream -DFMT_HEADER_ONLY /tmp/query_10-11-2023_15-47-34_1924364.cpp'[m
[36m[15:47:35.890645] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:36.891883] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:47:37.796536] [I] [thread 114550] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 2903.425992ms[m
[36m[15:47:37.796911] [D] [thread 114549] [Query.cpp:231] [from] Query: create new Query with source debs[m
[36m[15:47:37.796972] [D] [thread 114549] [QueryPlanBuilder.cpp:43] [createQueryPlan] QueryPlanBuilder: create query plan for input source  debs[m
[32m[15:47:37.797239] [I] [thread 114549] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[15:47:37.797947] [D] [thread 114549] [Query.cpp:237] [project] Query: add projection to query[m
[36m[15:47:37.798060] [D] [thread 114549] [QueryPlanBuilder.cpp:51] [addProjection] QueryPlanBuilder: add projection operator to query plan[m
[32m[15:47:37.798166] [I] [thread 114549] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[15:47:37.798333] [D] [thread 114549] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PROJECTION(2, schema=) as new root of the plan.[m
[36m[15:47:37.798604] [D] [thread 114549] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:47:37.798632] [D] [thread 114549] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:47:37.799392] [D] [thread 114549] [WindowedQuery.cpp:122] [windowByKey] Query: add keyed window operator[m
[36m[15:47:37.799821] [D] [thread 114549] [WindowedQuery.cpp:142] [windowByKey] add default watermark strategy as non is provided[m
[32m[15:47:37.800204] [I] [thread 114549] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[15:47:37.800376] [D] [thread 114549] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WATERMARKASSIGNER(3) as new root of the plan.[m
[36m[15:47:37.800503] [D] [thread 114549] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:47:37.800534] [D] [thread 114549] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[15:47:37.800970] [I] [thread 114549] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[15:47:37.801176] [D] [thread 114549] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WINDOW AGGREGATION(OP-4, Min;) as new root of the plan.[m
[36m[15:47:37.801341] [D] [thread 114549] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:47:37.801374] [D] [thread 114549] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:47:37.801568] [D] [thread 114549] [Query.cpp:353] [sink] Query: add sink operator to query[m
[32m[15:47:37.801727] [I] [thread 114549] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[36m[15:47:37.801868] [D] [thread 114549] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(5: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[15:47:37.802016] [D] [thread 114549] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:47:37.802046] [D] [thread 114549] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:47:37.802930] [D] [thread 114549] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:47:37.803126] [D] [thread 114549] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:47:37.803247] [D] [thread 114549] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:47:37.803396] [D] [thread 114549] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:47:37.803447] [D] [thread 114549] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:47:37.803471] [D] [thread 114549] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:47:37.803556] [D] [thread 114549] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[15:47:37.803600] [D] [thread 114549] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:47:37.803627] [D] [thread 114549] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:47:37.803647] [D] [thread 114549] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:47:37.804103] [D] [thread 114549] [TypeInferencePhase.cpp:76] [execute] TypeInferencePhase: update source descriptor for source debs with schema: debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:47:37.804194] [D] [thread 114549] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:47:37.804301] [D] [thread 114549] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:47:37.805152] [D] [thread 114549] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:47:37.805677] [D] [thread 114549] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.806181] [D] [thread 114549] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[15:47:37.806691] [I] [thread 114549] [QueryCatalog.cpp:55] [createNewEntry] QueryCatalog: Creating query catalog entry for query with id 1[m
[32m[15:47:37.807434] [I] [thread 114549] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : RunQueryRequest { QueryId: 1, QueryPlan: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
, QueryPlacementStrategy: BottomUp}[m
[32m[15:47:37.807533] [I] [thread 114549] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[15:47:37.807590] [I] [thread 114497] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[15:47:37.807708] [I] [thread 114497] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[15:47:37.807743] [I] [thread 114497] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[15:47:37.808010] [I] [thread 114497] [GlobalQueryPlanUpdatePhase.cpp:150] [processAddQueryRequest] QueryProcessingService: Request received for optimizing and deploying of the query 1[m
[36m[15:47:37.808148] [D] [thread 114497] [GlobalQueryPlanUpdatePhase.cpp:156] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[15:47:37.808220] [D] [thread 114497] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:47:37.808298] [D] [thread 114497] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:47:37.808391] [D] [thread 114497] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:47:37.808451] [D] [thread 114497] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:47:37.808492] [D] [thread 114497] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:47:37.809238] [D] [thread 114497] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:47:37.809631] [D] [thread 114497] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.810070] [D] [thread 114497] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:47:37.810137] [D] [thread 114497] [GlobalQueryPlanUpdatePhase.cpp:160] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[15:47:37.810160] [D] [thread 114497] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[15:47:37.810403] [D] [thread 114497] [GlobalQueryPlanUpdatePhase.cpp:164] [processAddQueryRequest] QueryProcessingService: Performing Query rewrite phase for query:  1[m
[32m[15:47:37.810435] [I] [thread 114497] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[15:47:37.810629] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[15:47:37.810904] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[15:47:37.811179] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[15:47:37.811375] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[15:47:37.811590] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[15:47:37.811887] [D] [thread 114497] [RenameSourceToProjectOperatorRule.cpp:27] [apply] RenameSourceToProjectOperatorRule: Convert all Rename Source operator to the project operator[m
[36m[15:47:37.812275] [D] [thread 114497] [ProjectBeforeUnionOperatorRule.cpp:32] [apply] Before applying ProjectBeforeUnionOperatorRule to the query plan: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[15:47:37.812651] [D] [thread 114497] [ProjectBeforeUnionOperatorRule.cpp:52] [apply] After applying ProjectBeforeUnionOperatorRule to the query plan: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[32m[15:47:37.812842] [I] [thread 114497] [FilterSplitUpRule.cpp:30] [apply] Applying FilterSplitUpRule to query SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[15:47:37.812997] [D] [thread 114497] [FilterSplitUpRule.cpp:38] [apply] FilterSplitUpRule: Sort all filter nodes in increasing order of the operator id[m
[32m[15:47:37.813012] [I] [thread 114497] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[15:47:37.813108] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[15:47:37.813262] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[15:47:37.813458] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[15:47:37.813632] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[15:47:37.813838] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[15:47:37.814090] [D] [thread 114497] [FilterSplitUpRule.cpp:46] [apply] FilterSplitUpRule: Iterate over all the filter operators to split them[m
[32m[15:47:37.814356] [I] [thread 114497] [FilterPushDownRule.cpp:50] [apply] Applying FilterPushDownRule to query SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[15:47:37.814415] [D] [thread 114497] [FilterPushDownRule.cpp:58] [apply] FilterPushDownRule: Sort all filter nodes in increasing order of the operator id[m
[32m[15:47:37.814428] [I] [thread 114497] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[15:47:37.814517] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[15:47:37.814676] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[15:47:37.814931] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[15:47:37.815208] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[15:47:37.815476] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[15:47:37.815765] [D] [thread 114497] [FilterPushDownRule.cpp:66] [apply] FilterPushDownRule: Iterate over all the filter operators to push them down in the query plan[m
[32m[15:47:37.816012] [I] [thread 114497] [FilterPushDownRule.cpp:71] [apply] FilterPushDownRule: Return the updated query plan SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[32m[15:47:37.816249] [I] [thread 114497] [FilterMergeRule.cpp:27] [apply] Applying FilterMergeRule to query SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[15:47:37.816470] [D] [thread 114497] [FilterMergeRule.cpp:30] [apply] FilterMergeRule: Identified 0 filter nodes in the query plan[m
[36m[15:47:37.816722] [D] [thread 114497] [FilterMergeRule.cpp:31] [apply] Query before applying the rule: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[15:47:37.816887] [D] [thread 114497] [FilterMergeRule.cpp:77] [apply] Query after applying the rule: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[15:47:37.817032] [D] [thread 114497] [PredicateReorderingRule.cpp:28] [apply] PredicateReorderingRule: Identified 0 filter nodes in the query plan[m
[36m[15:47:37.817225] [D] [thread 114497] [PredicateReorderingRule.cpp:29] [apply] Query before applying the rule: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[15:47:37.817385] [D] [thread 114497] [PredicateReorderingRule.cpp:87] [apply] Query after applying the rule: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[15:47:37.817496] [D] [thread 114497] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:47:37.817550] [D] [thread 114497] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:47:37.817590] [D] [thread 114497] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:47:37.817636] [D] [thread 114497] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:47:37.817675] [D] [thread 114497] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:47:37.818380] [D] [thread 114497] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:47:37.818739] [D] [thread 114497] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.819165] [D] [thread 114497] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[15:47:37.819229] [I] [thread 114497] [SignatureInferencePhase.cpp:59] [execute] Skipping signature creation[m
[32m[15:47:37.819468] [I] [thread 114497] [LogicalSourceExpansionRule.cpp:49] [apply] LogicalSourceExpansionRule: Plan before
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[15:47:37.819488] [D] [thread 114497] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:47:37.819534] [D] [thread 114497] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:47:37.819571] [D] [thread 114497] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[32m[15:47:37.820300] [I] [thread 114497] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[15:47:37.820436] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[15:47:37.820557] [D] [thread 114497] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[15:47:37.820587] [D] [thread 114497] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:47:37.820644] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[15:47:37.820727] [D] [thread 114497] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:47:37.820768] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[15:47:37.821205] [D] [thread 114497] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[15:47:37.821835] [I] [thread 114497] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[15:47:37.821908] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[15:47:37.822017] [D] [thread 114497] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[15:47:37.822040] [D] [thread 114497] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:47:37.822095] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[15:47:37.822177] [D] [thread 114497] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:47:37.822218] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[15:47:37.822593] [D] [thread 114497] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[15:47:37.823039] [I] [thread 114497] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[15:47:37.823104] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[15:47:37.823197] [D] [thread 114497] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[15:47:37.823216] [D] [thread 114497] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:47:37.823267] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[15:47:37.823341] [D] [thread 114497] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:47:37.823376] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[15:47:37.823793] [D] [thread 114497] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[15:47:37.824200] [I] [thread 114497] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[15:47:37.824268] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[15:47:37.824392] [D] [thread 114497] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[15:47:37.824415] [D] [thread 114497] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:47:37.824463] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[15:47:37.824533] [D] [thread 114497] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:47:37.824567] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[15:47:37.824924] [D] [thread 114497] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[15:47:37.825309] [I] [thread 114497] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[15:47:37.825369] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[15:47:37.825455] [D] [thread 114497] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[15:47:37.825476] [D] [thread 114497] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:47:37.825523] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[15:47:37.825590] [D] [thread 114497] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:47:37.825654] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[15:47:37.826018] [D] [thread 114497] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[15:47:37.826411] [I] [thread 114497] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[15:47:37.826467] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[15:47:37.826550] [D] [thread 114497] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[15:47:37.826567] [D] [thread 114497] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:47:37.826613] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[15:47:37.826681] [D] [thread 114497] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:47:37.826717] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[15:47:37.827063] [D] [thread 114497] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[36m[15:47:37.828043] [D] [thread 114497] [LogicalSourceExpansionRule.cpp:151] [apply] LogicalSourceExpansionRule: Plan after
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[32m[15:47:37.828163] [I] [thread 114497] [DistributedJoinRule.cpp:31] [apply] DistributeJoinRule: Apply DistributeJoinRule.[m
[36m[15:47:37.828736] [D] [thread 114497] [DistributedJoinRule.cpp:32] [apply] DistributeJoinRule::apply: plan before replace
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[15:47:37.829054] [D] [thread 114497] [DistributedJoinRule.cpp:55] [apply] DistributeJoinRule::apply: no join operator in query[m
[36m[15:47:37.829632] [D] [thread 114497] [DistributedJoinRule.cpp:58] [apply] DistributeJoinRule::apply: plan after replace
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[15:47:37.829730] [D] [thread 114497] [NemoWindowPinningRule.cpp:58] [apply] NemoWindowPinningRule: Apply NemoWindowPinningRule.[m
[36m[15:47:37.830274] [D] [thread 114497] [NemoWindowPinningRule.cpp:59] [apply] NemoWindowPinningRule::apply: plan before replace
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[15:47:37.830650] [D] [thread 114497] [NemoWindowPinningRule.cpp:68] [apply] NemoWindowPinningRule::apply: found 1 window operators[m
[36m[15:47:37.830720] [D] [thread 114497] [NemoWindowPinningRule.cpp:70] [apply] NemoWindowPinningRule::apply: window operator WINDOW AGGREGATION(OP-4, Min;)[m
[36m[15:47:37.830766] [D] [thread 114497] [NemoWindowPinningRule.cpp:99] [pinWindowOperators] NemoWindowPinningRule::apply: introduce new distributed window operator for window WINDOW AGGREGATION(OP-4, Min;)[m
[32m[15:47:37.830890] [I] [thread 114497] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[15:47:37.830913] [D] [thread 114497] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[15:47:37.831297] [I] [thread 114497] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[15:47:37.831336] [D] [thread 114497] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[15:47:37.831519] [I] [thread 114497] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[15:47:37.831538] [D] [thread 114497] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[15:47:37.831658] [I] [thread 114497] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[15:47:37.831672] [D] [thread 114497] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[15:47:37.831754] [I] [thread 114497] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[15:47:37.831769] [D] [thread 114497] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[15:47:37.831858] [I] [thread 114497] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[15:47:37.831872] [D] [thread 114497] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[15:47:37.832400] [I] [thread 114497] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[15:47:37.832457] [I] [thread 114497] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:47:37.832468] [I] [thread 114497] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:47:37.832477] [I] [thread 114497] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:47:37.832486] [I] [thread 114497] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:47:37.832511] [I] [thread 114497] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:47:37.832521] [I] [thread 114497] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:47:37.832531] [I] [thread 114497] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[15:47:37.832541] [I] [thread 114497] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[15:47:37.832549] [I] [thread 114497] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[15:47:37.832697] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[36m[15:47:37.832975] [D] [thread 114497] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(24) old node=WINDOW AGGREGATION(OP-4, Min;)[m
[32m[15:47:37.833235] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[36m[15:47:37.833425] [D] [thread 114497] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(25) old node=WINDOW AGGREGATION(OP-4, Min;)[m
[32m[15:47:37.833607] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[36m[15:47:37.833757] [D] [thread 114497] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(26) old node=WINDOW AGGREGATION(OP-4, Min;)[m
[32m[15:47:37.833938] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 27[m
[36m[15:47:37.834086] [D] [thread 114497] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(27) old node=WINDOW AGGREGATION(OP-4, Min;)[m
[32m[15:47:37.834252] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 28[m
[36m[15:47:37.834390] [D] [thread 114497] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(28) old node=WINDOW AGGREGATION(OP-4, Min;)[m
[32m[15:47:37.834577] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 29[m
[36m[15:47:37.834717] [D] [thread 114497] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(29) old node=WINDOW AGGREGATION(OP-4, Min;)[m
[36m[15:47:37.835433] [D] [thread 114497] [NemoWindowPinningRule.cpp:121] [pinWindowOperators] DistributedWindowRule: Plan after
SINK(5: {FileSinkDescriptor()})
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
  CENTRALWINDOW(27)
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
  CENTRALWINDOW(28)
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
  CENTRALWINDOW(29)
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
[m
[36m[15:47:37.836066] [D] [thread 114497] [NemoWindowPinningRule.cpp:87] [apply] NemoWindowPinningRule::apply: plan after replace
SINK(5: {FileSinkDescriptor()})
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
  CENTRALWINDOW(27)
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
  CENTRALWINDOW(28)
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
  CENTRALWINDOW(29)
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
[m
[36m[15:47:37.836366] [D] [thread 114497] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:47:37.836489] [D] [thread 114497] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:47:37.836567] [D] [thread 114497] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 6 source operators.[m
[36m[15:47:37.836626] [D] [thread 114497] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:47:37.836665] [D] [thread 114497] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:47:37.837314] [D] [thread 114497] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:47:37.837759] [D] [thread 114497] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[15:47:37.838024] [I] [thread 114497] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[15:47:37.838168] [I] [thread 114497] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.838817] [D] [thread 114497] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:47:37.839222] [D] [thread 114497] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[15:47:37.839478] [I] [thread 114497] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[15:47:37.839614] [I] [thread 114497] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.840234] [D] [thread 114497] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:47:37.840684] [D] [thread 114497] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[15:47:37.840950] [I] [thread 114497] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[15:47:37.841088] [I] [thread 114497] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.841710] [D] [thread 114497] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:47:37.842129] [D] [thread 114497] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[15:47:37.842393] [I] [thread 114497] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[15:47:37.842528] [I] [thread 114497] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.843121] [D] [thread 114497] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:47:37.843611] [D] [thread 114497] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[15:47:37.843866] [I] [thread 114497] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[15:47:37.843981] [I] [thread 114497] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.844609] [D] [thread 114497] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:47:37.845026] [D] [thread 114497] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[15:47:37.845286] [I] [thread 114497] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[15:47:37.845426] [I] [thread 114497] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.845589] [D] [thread 114497] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:47:37.846534] [D] [thread 114497] [GlobalQueryPlanUpdatePhase.cpp:196] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[15:47:37.846612] [D] [thread 114497] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[15:47:37.847076] [D] [thread 114497] [GlobalQueryPlanUpdatePhase.cpp:203] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[15:47:37.847210] [D] [thread 114497] [GlobalQueryPlanUpdatePhase.cpp:207] [processAddQueryRequest] QueryProcessingService: Applying Query Merger Rules as Query Merging is enabled.[m
[36m[15:47:37.847233] [D] [thread 114497] [QueryMergerPhase.cpp:72] [execute] QueryMergerPhase: Executing query merger phase.[m
[32m[15:47:37.847297] [I] [thread 114497] [GlobalQueryPlan.cpp:173] [createNewSharedQueryPlan] Create new shared query plan[m
[32m[15:47:37.847343] [I] [thread 114497] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[15:47:37.847476] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[15:47:37.847678] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[32m[15:47:37.848036] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[32m[15:47:37.848361] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[32m[15:47:37.848618] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 27[m
[32m[15:47:37.848850] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 28[m
[32m[15:47:37.849085] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 29[m
[32m[15:47:37.849379] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[32m[15:47:37.849595] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[32m[15:47:37.849757] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[32m[15:47:37.849953] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[32m[15:47:37.850132] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[32m[15:47:37.850321] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[32m[15:47:37.850546] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[32m[15:47:37.850832] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[32m[15:47:37.851081] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[32m[15:47:37.851317] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[32m[15:47:37.851554] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[32m[15:47:37.851789] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[32m[15:47:37.852026] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[32m[15:47:37.852454] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[32m[15:47:37.852756] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[32m[15:47:37.853022] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[32m[15:47:37.853280] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[32m[15:47:37.853535] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[36m[15:47:37.854411] [D] [thread 114497] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[15:47:37.854487] [D] [thread 114497] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[15:47:37.854554] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.854599] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.854621] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.854641] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.854660] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.854679] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.854699] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.854721] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.854741] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.854762] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.854782] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.854801] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.854821] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.854841] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.854861] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.854882] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.854902] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.854921] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.854941] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.854972] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.854984] [D] [thread 114497] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:47:37.855016] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.855029] [D] [thread 114497] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:47:37.855064] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.855076] [D] [thread 114497] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:47:37.855097] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.855108] [D] [thread 114497] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:47:37.855125] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.855136] [D] [thread 114497] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:47:37.855156] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.855168] [D] [thread 114497] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:47:37.856612] [D] [thread 114497] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[15:47:37.856648] [D] [thread 114497] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[15:47:37.856728] [D] [thread 114497] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[15:47:37.856748] [D] [thread 114497] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[15:47:37.856766] [D] [thread 114497] [RequestProcessorService.cpp:111] [start] QueryProcessingService: Shared Query Plan is new.[m
[36m[15:47:37.856780] [D] [thread 114497] [RequestProcessorService.cpp:115] [start] QueryProcessingService: Performing Operator placement for shared query plan[m
[32m[15:47:37.856810] [I] [thread 114497] [QueryPlacementPhase.cpp:54] [execute] QueryPlacementPhase: Perform query placement phase for shared query plan 1[m
[36m[15:47:37.857744] [D] [thread 114497] [QueryPlacementPhase.cpp:70] [execute] QueryPlacementPhase: Perform query placement for query plan
SINK(5: {FileSinkDescriptor()})
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
  CENTRALWINDOW(27)
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
  CENTRALWINDOW(28)
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
  CENTRALWINDOW(29)
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
[m
[36m[15:47:37.857786] [D] [thread 114497] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[15:47:37.857798] [D] [thread 114497] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[15:47:37.857863] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.857910] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.857931] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.857950] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.857970] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.857989] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.858009] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.858030] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.858049] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.858070] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.858090] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.858110] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.858130] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.858150] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.858170] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.858189] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.858212] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.858232] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.858252] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.858273] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.858285] [D] [thread 114497] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:47:37.858318] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.858331] [D] [thread 114497] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:47:37.858357] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.858370] [D] [thread 114497] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:47:37.858389] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.858401] [D] [thread 114497] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:47:37.858417] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.858500] [D] [thread 114497] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:47:37.858539] [D] [thread 114497] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:47:37.858562] [D] [thread 114497] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:47:37.858815] [D] [thread 114497] [BottomUpStrategy.cpp:50] [updateGlobalExecutionPlan] Perform placement of the pinned and all their downstream operators.[m
[32m[15:47:37.858868] [I] [thread 114497] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[15:47:37.858891] [D] [thread 114497] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[15:47:37.858997] [I] [thread 114497] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[15:47:37.859011] [D] [thread 114497] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[15:47:37.859115] [I] [thread 114497] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[15:47:37.859128] [D] [thread 114497] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[15:47:37.859152] [I] [thread 114497] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[15:47:37.859163] [D] [thread 114497] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[15:47:37.859180] [I] [thread 114497] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[15:47:37.859191] [D] [thread 114497] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[15:47:37.859207] [I] [thread 114497] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[15:47:37.859218] [D] [thread 114497] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[15:47:37.859237] [I] [thread 114497] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[15:47:37.859248] [D] [thread 114497] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[32m[15:47:37.859334] [I] [thread 114497] [Topology.cpp:73] [findPathBetween] Topology: Finding path between set of start and destination nodes[m
[36m[15:47:37.859596] [D] [thread 114497] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[15:47:37.859784] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:47:37.859916] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:47:37.860014] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:47:37.860220] [D] [thread 114497] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[15:47:37.860291] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:47:37.860408] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:47:37.860496] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:47:37.860657] [D] [thread 114497] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[15:47:37.860759] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:47:37.860835] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:47:37.860910] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:47:37.861069] [D] [thread 114497] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[15:47:37.861190] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:47:37.861257] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:47:37.861329] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:47:37.861469] [D] [thread 114497] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[15:47:37.861529] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:47:37.861589] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:47:37.861652] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:47:37.861767] [D] [thread 114497] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[15:47:37.861819] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:47:37.861892] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:47:37.861977] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[32m[15:47:37.862029] [I] [thread 114497] [Topology.cpp:98] [mergeSubGraphs] Topology: Merge 6 sub-graphs to create a single sub-graph[m
[36m[15:47:37.862039] [D] [thread 114497] [Topology.cpp:100] [mergeSubGraphs] Topology: Compute a map storing number of times a node occurred in different sub-graphs[m
[36m[15:47:37.862385] [D] [thread 114497] [Topology.cpp:120] [mergeSubGraphs] Topology: Iterate over each sub-graph and compute a single merged sub-graph[m
[36m[15:47:37.862408] [D] [thread 114497] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[15:47:37.862480] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:47:37.862540] [D] [thread 114497] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[15:47:37.862575] [D] [thread 114497] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[15:47:37.862665] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:47:37.862750] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:47:37.862783] [D] [thread 114497] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[15:47:37.862854] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:47:37.862866] [D] [thread 114497] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[15:47:37.862891] [D] [thread 114497] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[15:47:37.862951] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:47:37.863010] [D] [thread 114497] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[15:47:37.863057] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:47:37.863069] [D] [thread 114497] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[15:47:37.863136] [D] [thread 114497] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[15:47:37.863185] [W] [thread 114497] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[15:47:37.863200] [D] [thread 114497] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[15:47:37.863259] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:47:37.863271] [D] [thread 114497] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[15:47:37.863286] [D] [thread 114497] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[15:47:37.863339] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:47:37.863390] [D] [thread 114497] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[15:47:37.863456] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:47:37.863469] [D] [thread 114497] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[15:47:37.863494] [D] [thread 114497] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[15:47:37.863541] [W] [thread 114497] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[15:47:37.863555] [D] [thread 114497] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[15:47:37.863604] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:47:37.863616] [D] [thread 114497] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[15:47:37.863630] [D] [thread 114497] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[15:47:37.863670] [W] [thread 114497] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[15:47:37.863746] [D] [thread 114497] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[15:47:37.863759] [D] [thread 114497] [Node.cpp:435] [getAllRootNodes] Node: Iterating over all parents to find more root nodes[m
[36m[15:47:37.863766] [D] [thread 114497] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[15:47:37.863773] [D] [thread 114497] [Node.cpp:426] [getAllRootNodes] Node: Inserting this node to the collection[m
[36m[15:47:37.863790] [D] [thread 114497] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[15:47:37.863797] [D] [thread 114497] [Node.cpp:438] [getAllRootNodes] Node: inserting parent nodes into the collection of parent nodes[m
[36m[15:47:37.863819] [D] [thread 114497] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[15:47:37.863984] [D] [thread 114497] [BottomUpStrategy.cpp:74] [pinOperators] BottomUpStrategy: Get the all source operators for performing the placement.[m
[36m[15:47:37.864053] [D] [thread 114497] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) placement.[m
[36m[15:47:37.864121] [D] [thread 114497] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))[m
[36m[15:47:37.864155] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.864271] [D] [thread 114497] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[15:47:37.864291] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.864403] [D] [thread 114497] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(11)[m
[36m[15:47:37.864438] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.864487] [D] [thread 114497] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(24)[m
[36m[15:47:37.864502] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.864539] [D] [thread 114497] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(5: {FileSinkDescriptor()})[m
[36m[15:47:37.864554] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:47:37.864573] [D] [thread 114497] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[15:47:37.864674] [D] [thread 114497] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[15:47:37.864716] [D] [thread 114497] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[15:47:37.864730] [D] [thread 114497] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[15:47:37.864924] [D] [thread 114497] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[15:47:37.864977] [D] [thread 114497] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4)) placement.[m
[36m[15:47:37.865012] [D] [thread 114497] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))[m
[36m[15:47:37.865030] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.865121] [D] [thread 114497] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[15:47:37.865137] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.865194] [D] [thread 114497] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(8)[m
[36m[15:47:37.865221] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.865267] [D] [thread 114497] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(25)[m
[36m[15:47:37.865282] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.865317] [D] [thread 114497] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(5: {FileSinkDescriptor()})[m
[36m[15:47:37.865339] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:47:37.865352] [D] [thread 114497] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[15:47:37.865437] [D] [thread 114497] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[15:47:37.865463] [D] [thread 114497] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[15:47:37.865474] [D] [thread 114497] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[15:47:37.865630] [D] [thread 114497] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[15:47:37.865678] [D] [thread 114497] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7)) placement.[m
[36m[15:47:37.865712] [D] [thread 114497] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))[m
[36m[15:47:37.865739] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.865824] [D] [thread 114497] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[15:47:37.865846] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.865908] [D] [thread 114497] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(17)[m
[36m[15:47:37.865925] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.865963] [D] [thread 114497] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(26)[m
[36m[15:47:37.865978] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.866012] [D] [thread 114497] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(5: {FileSinkDescriptor()})[m
[36m[15:47:37.866026] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:47:37.866038] [D] [thread 114497] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[15:47:37.866126] [D] [thread 114497] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[15:47:37.866158] [D] [thread 114497] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[15:47:37.866170] [D] [thread 114497] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[15:47:37.866335] [D] [thread 114497] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[15:47:37.866384] [D] [thread 114497] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6)) placement.[m
[36m[15:47:37.866418] [D] [thread 114497] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))[m
[36m[15:47:37.866434] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.866587] [D] [thread 114497] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[15:47:37.866607] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.866667] [D] [thread 114497] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(14)[m
[36m[15:47:37.866683] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.866723] [D] [thread 114497] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(27)[m
[36m[15:47:37.866749] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.866787] [D] [thread 114497] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(5: {FileSinkDescriptor()})[m
[36m[15:47:37.866801] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:47:37.866813] [D] [thread 114497] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[15:47:37.866902] [D] [thread 114497] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[15:47:37.866931] [D] [thread 114497] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[15:47:37.866943] [D] [thread 114497] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[15:47:37.867109] [D] [thread 114497] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[15:47:37.867159] [D] [thread 114497] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9)) placement.[m
[36m[15:47:37.867193] [D] [thread 114497] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))[m
[36m[15:47:37.867210] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.867294] [D] [thread 114497] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[15:47:37.867309] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.867361] [D] [thread 114497] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(23)[m
[36m[15:47:37.867377] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.867414] [D] [thread 114497] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(28)[m
[36m[15:47:37.867429] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.867463] [D] [thread 114497] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(5: {FileSinkDescriptor()})[m
[36m[15:47:37.867476] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:47:37.867488] [D] [thread 114497] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[15:47:37.867569] [D] [thread 114497] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[15:47:37.867592] [D] [thread 114497] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[15:47:37.867603] [D] [thread 114497] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[15:47:37.867755] [D] [thread 114497] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[15:47:37.867799] [D] [thread 114497] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8)) placement.[m
[36m[15:47:37.867832] [D] [thread 114497] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))[m
[36m[15:47:37.867849] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.867929] [D] [thread 114497] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[15:47:37.867960] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.868017] [D] [thread 114497] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(20)[m
[36m[15:47:37.868032] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.868071] [D] [thread 114497] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(29)[m
[36m[15:47:37.868085] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.868119] [D] [thread 114497] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(5: {FileSinkDescriptor()})[m
[36m[15:47:37.868133] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:47:37.868144] [D] [thread 114497] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[15:47:37.868224] [D] [thread 114497] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[15:47:37.868248] [D] [thread 114497] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[15:47:37.868259] [D] [thread 114497] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[15:47:37.868519] [D] [thread 114497] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[15:47:37.868541] [D] [thread 114497] [BottomUpStrategy.cpp:103] [pinOperators] BottomUpStrategy: Finished placing query operators into the global execution plan[m
[36m[15:47:37.868554] [D] [thread 114497] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:47:37.868621] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.868660] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[15:47:37.868892] [D] [thread 114497] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) on execution node with id 6[m
[36m[15:47:37.868963] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[15:47:37.868998] [W] [thread 114497] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[15:47:37.869253] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[36m[15:47:37.869467] [D] [thread 114497] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) as new root of the plan.[m
[36m[15:47:37.869486] [D] [thread 114497] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:47:37.869493] [D] [thread 114497] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:47:37.869524] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.869538] [D] [thread 114497] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[15:47:37.869672] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[15:47:37.869812] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.869854] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[15:47:37.869899] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[15:47:37.870001] [D] [thread 114497] [GlobalExecutionPlan.cpp:188] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Query Id 1 does not exists adding a new entry with execution node 6[m
[36m[15:47:37.870183] [D] [thread 114497] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:47:37.870206] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:47:37.870232] [I] [thread 114497] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[15:47:37.870256] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:47:37.870333] [D] [thread 114497] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:47:37.870489] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.870514] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[15:47:37.870565] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[15:47:37.870576] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[15:47:37.870654] [D] [thread 114497] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 6[m
[36m[15:47:37.870668] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.870694] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.870731] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.870746] [D] [thread 114497] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:47:37.870784] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.870795] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.870921] [D] [thread 114497] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:47:37.870934] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.870969] [D] [thread 114497] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:47:37.871083] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[36m[15:47:37.871276] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.871297] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.871312] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 9 exists in the query plan or not[m
[36m[15:47:37.871322] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 9 in the query plan[m
[36m[15:47:37.871504] [D] [thread 114497] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) as root operator.[m
[36m[15:47:37.871571] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.871589] [D] [thread 114497] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:47:37.871628] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[15:47:37.871648] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.871664] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[15:47:37.871673] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[15:47:37.871784] [D] [thread 114497] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[15:47:37.871842] [D] [thread 114497] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:47:37.871860] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:47:37.871876] [I] [thread 114497] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[15:47:37.871898] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:47:37.871951] [D] [thread 114497] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:47:37.872022] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.872041] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[15:47:37.872090] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[15:47:37.872102] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[15:47:37.872132] [D] [thread 114497] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(11) on execution node with id 6[m
[36m[15:47:37.872145] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.872158] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.872180] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.872205] [D] [thread 114497] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:47:37.872229] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.872239] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.872360] [D] [thread 114497] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:47:37.872375] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.872397] [D] [thread 114497] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:47:37.872471] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[36m[15:47:37.872656] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.872675] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.872687] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[15:47:37.872696] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 10 in the query plan[m
[36m[15:47:37.872890] [D] [thread 114497] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[15:47:37.872994] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.873013] [D] [thread 114497] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:47:37.873052] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[15:47:37.873071] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.873086] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[15:47:37.873094] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[15:47:37.873151] [D] [thread 114497] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[15:47:37.873192] [D] [thread 114497] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:47:37.873208] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:47:37.873224] [I] [thread 114497] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[15:47:37.873243] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:47:37.873311] [D] [thread 114497] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:47:37.873385] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.873405] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[15:47:37.873452] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[15:47:37.873463] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[15:47:37.873495] [D] [thread 114497] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(24) on execution node with id 6[m
[36m[15:47:37.873506] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.873519] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.873543] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.873568] [D] [thread 114497] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:47:37.873591] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.873602] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.873640] [D] [thread 114497] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:47:37.873651] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.873668] [D] [thread 114497] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:47:37.873754] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[36m[15:47:37.873949] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.873969] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.873982] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 11 exists in the query plan or not[m
[36m[15:47:37.873991] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 11 in the query plan[m
[36m[15:47:37.874090] [D] [thread 114497] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(11) as root operator.[m
[36m[15:47:37.874131] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.874149] [D] [thread 114497] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:47:37.874185] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[15:47:37.874202] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.874216] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[15:47:37.874225] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[15:47:37.874282] [D] [thread 114497] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[15:47:37.874320] [D] [thread 114497] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:47:37.874337] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:47:37.874352] [I] [thread 114497] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[15:47:37.874371] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:47:37.874415] [D] [thread 114497] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:47:37.874480] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[15:47:37.874499] [W] [thread 114497] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[15:47:37.874508] [D] [thread 114497] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:47:37.874521] [D] [thread 114497] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:47:37.874529] [D] [thread 114497] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:47:37.874537] [D] [thread 114497] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:47:37.874587] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.874606] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[15:47:37.874699] [D] [thread 114497] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4)) on execution node with id 5[m
[36m[15:47:37.874713] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[15:47:37.874725] [W] [thread 114497] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[15:47:37.874815] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[36m[15:47:37.874982] [D] [thread 114497] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4)) as new root of the plan.[m
[36m[15:47:37.875000] [D] [thread 114497] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:47:37.875008] [D] [thread 114497] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:47:37.875043] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.875056] [D] [thread 114497] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[15:47:37.875109] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[15:47:37.875143] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.875159] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[15:47:37.875168] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[15:47:37.875223] [D] [thread 114497] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 5 to the query Id 1[m
[36m[15:47:37.875303] [D] [thread 114497] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:47:37.875322] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:47:37.875337] [I] [thread 114497] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[15:47:37.875356] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:47:37.875408] [D] [thread 114497] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:47:37.875539] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.875563] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[15:47:37.875605] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[15:47:37.875616] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[15:47:37.875685] [D] [thread 114497] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 5[m
[36m[15:47:37.875711] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.875726] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.875751] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.875762] [D] [thread 114497] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:47:37.875792] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.875803] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.875855] [D] [thread 114497] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:47:37.875865] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.875884] [D] [thread 114497] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:47:37.875968] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[36m[15:47:37.876157] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.876180] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.876192] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 6 exists in the query plan or not[m
[36m[15:47:37.876201] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 6 in the query plan[m
[36m[15:47:37.876412] [D] [thread 114497] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4)) as root operator.[m
[36m[15:47:37.876477] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.876496] [D] [thread 114497] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:47:37.876535] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[15:47:37.876553] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.876568] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[15:47:37.876578] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[15:47:37.876633] [D] [thread 114497] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[15:47:37.876681] [D] [thread 114497] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:47:37.876699] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:47:37.876714] [I] [thread 114497] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[15:47:37.876735] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:47:37.876797] [D] [thread 114497] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:47:37.876868] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.876886] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[15:47:37.876934] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[15:47:37.876946] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[15:47:37.876976] [D] [thread 114497] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(8) on execution node with id 5[m
[36m[15:47:37.876987] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.877000] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.877024] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.877045] [D] [thread 114497] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:47:37.877069] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.877079] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.877168] [D] [thread 114497] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:47:37.877179] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.877252] [D] [thread 114497] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:47:37.877329] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[36m[15:47:37.877512] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.877531] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.877543] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 7 exists in the query plan or not[m
[36m[15:47:37.877552] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 7 in the query plan[m
[36m[15:47:37.877744] [D] [thread 114497] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[15:47:37.877825] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.877844] [D] [thread 114497] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:47:37.877884] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[15:47:37.877902] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.877917] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[15:47:37.877927] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[15:47:37.877982] [D] [thread 114497] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[15:47:37.878022] [D] [thread 114497] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:47:37.878038] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:47:37.878052] [I] [thread 114497] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[15:47:37.878072] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:47:37.878138] [D] [thread 114497] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:47:37.878208] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.878228] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[15:47:37.878275] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[15:47:37.878331] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[15:47:37.878371] [D] [thread 114497] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(25) on execution node with id 5[m
[36m[15:47:37.878384] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.878397] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.878423] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.878448] [D] [thread 114497] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:47:37.878475] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.878486] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.878525] [D] [thread 114497] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:47:37.878535] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.878554] [D] [thread 114497] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:47:37.878623] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[36m[15:47:37.878821] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.878842] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.878854] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[15:47:37.878863] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[36m[15:47:37.878959] [D] [thread 114497] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(8) as root operator.[m
[36m[15:47:37.879000] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.879016] [D] [thread 114497] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:47:37.879051] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[15:47:37.879068] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.879083] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[15:47:37.879092] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[15:47:37.879148] [D] [thread 114497] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[15:47:37.879187] [D] [thread 114497] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:47:37.879203] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:47:37.879217] [I] [thread 114497] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[15:47:37.879237] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:47:37.879282] [D] [thread 114497] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:47:37.879349] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[15:47:37.879371] [W] [thread 114497] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[15:47:37.879393] [D] [thread 114497] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:47:37.879407] [D] [thread 114497] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:47:37.879416] [D] [thread 114497] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:47:37.879424] [D] [thread 114497] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:47:37.879479] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.879508] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[15:47:37.879604] [D] [thread 114497] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7)) on execution node with id 8[m
[36m[15:47:37.879619] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[15:47:37.879631] [W] [thread 114497] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[15:47:37.879727] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[36m[15:47:37.879897] [D] [thread 114497] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7)) as new root of the plan.[m
[36m[15:47:37.879914] [D] [thread 114497] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:47:37.879922] [D] [thread 114497] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:47:37.879945] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.879956] [D] [thread 114497] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[15:47:37.880008] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[15:47:37.880036] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.880051] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[15:47:37.880060] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[15:47:37.880109] [D] [thread 114497] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 8 to the query Id 1[m
[36m[15:47:37.880219] [D] [thread 114497] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:47:37.880239] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:47:37.880254] [I] [thread 114497] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[15:47:37.880280] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:47:37.880363] [D] [thread 114497] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:47:37.880502] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.880525] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[15:47:37.880567] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[15:47:37.880579] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[15:47:37.880647] [D] [thread 114497] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 8[m
[36m[15:47:37.880661] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.880675] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.880700] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.880712] [D] [thread 114497] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:47:37.880743] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.880754] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.880805] [D] [thread 114497] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:47:37.880815] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.880834] [D] [thread 114497] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:47:37.880919] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[36m[15:47:37.881089] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.881109] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.881171] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 15 exists in the query plan or not[m
[36m[15:47:37.881184] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 15 in the query plan[m
[36m[15:47:37.881369] [D] [thread 114497] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7)) as root operator.[m
[36m[15:47:37.881419] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.881442] [D] [thread 114497] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:47:37.881485] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[15:47:37.881505] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.881520] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[15:47:37.881529] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[15:47:37.881586] [D] [thread 114497] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[15:47:37.881630] [D] [thread 114497] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:47:37.881647] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:47:37.881661] [I] [thread 114497] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[15:47:37.881693] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:47:37.881743] [D] [thread 114497] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:47:37.881813] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.881831] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[15:47:37.881877] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[15:47:37.881889] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[15:47:37.881918] [D] [thread 114497] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(17) on execution node with id 8[m
[36m[15:47:37.881930] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.881942] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.881964] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.881985] [D] [thread 114497] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:47:37.882011] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.882021] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.882108] [D] [thread 114497] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:47:37.882121] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.882139] [D] [thread 114497] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:47:37.882233] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[36m[15:47:37.882410] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.882433] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.882445] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[15:47:37.882454] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 16 in the query plan[m
[36m[15:47:37.882643] [D] [thread 114497] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[15:47:37.882726] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.882744] [D] [thread 114497] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:47:37.882782] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[15:47:37.882800] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.882814] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[15:47:37.882823] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[15:47:37.882878] [D] [thread 114497] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[15:47:37.882919] [D] [thread 114497] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:47:37.882936] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:47:37.882951] [I] [thread 114497] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[15:47:37.882971] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:47:37.883083] [D] [thread 114497] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:47:37.883161] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.883181] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[15:47:37.883229] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[15:47:37.883241] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[15:47:37.883271] [D] [thread 114497] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(26) on execution node with id 8[m
[36m[15:47:37.883283] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.883296] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.883320] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.883346] [D] [thread 114497] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:47:37.883371] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.883381] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.883468] [D] [thread 114497] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:47:37.883480] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.883500] [D] [thread 114497] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:47:37.883570] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[36m[15:47:37.883769] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.883793] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.883854] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[15:47:37.883866] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 17 in the query plan[m
[36m[15:47:37.883975] [D] [thread 114497] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(17) as root operator.[m
[36m[15:47:37.884020] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.884048] [D] [thread 114497] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:47:37.884091] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[15:47:37.884111] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.884125] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[15:47:37.884134] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[15:47:37.884202] [D] [thread 114497] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[15:47:37.884246] [D] [thread 114497] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:47:37.884263] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:47:37.884282] [I] [thread 114497] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[15:47:37.884303] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:47:37.884383] [D] [thread 114497] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:47:37.884468] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[15:47:37.884492] [W] [thread 114497] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[15:47:37.884501] [D] [thread 114497] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:47:37.884514] [D] [thread 114497] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:47:37.884523] [D] [thread 114497] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:47:37.884531] [D] [thread 114497] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:47:37.884584] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.884602] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[15:47:37.884698] [D] [thread 114497] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6)) on execution node with id 7[m
[36m[15:47:37.884712] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[15:47:37.884779] [W] [thread 114497] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[15:47:37.884888] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[36m[15:47:37.885074] [D] [thread 114497] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6)) as new root of the plan.[m
[36m[15:47:37.885090] [D] [thread 114497] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:47:37.885098] [D] [thread 114497] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:47:37.885121] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.885134] [D] [thread 114497] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[15:47:37.885189] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[15:47:37.885221] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.885237] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[15:47:37.885246] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[15:47:37.885301] [D] [thread 114497] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 7 to the query Id 1[m
[36m[15:47:37.885351] [D] [thread 114497] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:47:37.885370] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:47:37.885385] [I] [thread 114497] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[15:47:37.885404] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:47:37.885453] [D] [thread 114497] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:47:37.885583] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.885605] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[15:47:37.885645] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[15:47:37.885656] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[15:47:37.885723] [D] [thread 114497] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 7[m
[36m[15:47:37.885736] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.885749] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.885786] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.885799] [D] [thread 114497] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:47:37.885829] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.885840] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.885892] [D] [thread 114497] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:47:37.885905] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.885923] [D] [thread 114497] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:47:37.886037] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[36m[15:47:37.886257] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.886278] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.886290] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[15:47:37.886300] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 12 in the query plan[m
[36m[15:47:37.886477] [D] [thread 114497] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6)) as root operator.[m
[36m[15:47:37.886589] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.886610] [D] [thread 114497] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:47:37.886650] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[15:47:37.886670] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.886685] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[15:47:37.886694] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[15:47:37.886750] [D] [thread 114497] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[15:47:37.886794] [D] [thread 114497] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:47:37.886811] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:47:37.886826] [I] [thread 114497] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[15:47:37.886859] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:47:37.886912] [D] [thread 114497] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:47:37.886984] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.887003] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[15:47:37.887050] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[15:47:37.887062] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[15:47:37.887093] [D] [thread 114497] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(14) on execution node with id 7[m
[36m[15:47:37.887104] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.887117] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.887152] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.887175] [D] [thread 114497] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:47:37.887200] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.887211] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.887297] [D] [thread 114497] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:47:37.887310] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.887329] [D] [thread 114497] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:47:37.887433] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[36m[15:47:37.887613] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.887632] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.887645] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 13 exists in the query plan or not[m
[36m[15:47:37.887654] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 13 in the query plan[m
[36m[15:47:37.887840] [D] [thread 114497] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[15:47:37.887957] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.887977] [D] [thread 114497] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:47:37.888013] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[15:47:37.888032] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.888047] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[15:47:37.888056] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[15:47:37.888111] [D] [thread 114497] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[15:47:37.888150] [D] [thread 114497] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:47:37.888168] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:47:37.888183] [I] [thread 114497] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[15:47:37.888203] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:47:37.888250] [D] [thread 114497] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:47:37.888313] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.888371] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[15:47:37.888424] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[15:47:37.888437] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[15:47:37.888469] [D] [thread 114497] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(27) on execution node with id 7[m
[36m[15:47:37.888481] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.888505] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.888530] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.888556] [D] [thread 114497] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:47:37.888580] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.888591] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.888640] [D] [thread 114497] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:47:37.888651] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.888669] [D] [thread 114497] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:47:37.888739] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 27[m
[36m[15:47:37.888930] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.888951] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.888963] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[15:47:37.888972] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[36m[15:47:37.889066] [D] [thread 114497] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(14) as root operator.[m
[36m[15:47:37.889106] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.889123] [D] [thread 114497] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:47:37.889157] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[15:47:37.889174] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.889188] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[15:47:37.889197] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[15:47:37.889249] [D] [thread 114497] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[15:47:37.889287] [D] [thread 114497] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:47:37.889304] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:47:37.889319] [I] [thread 114497] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[15:47:37.889338] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:47:37.889382] [D] [thread 114497] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:47:37.889449] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[15:47:37.889474] [W] [thread 114497] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[15:47:37.889482] [D] [thread 114497] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:47:37.889495] [D] [thread 114497] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:47:37.889504] [D] [thread 114497] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:47:37.889511] [D] [thread 114497] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:47:37.889564] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.889582] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[15:47:37.889671] [D] [thread 114497] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9)) on execution node with id 10[m
[36m[15:47:37.889686] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[15:47:37.889698] [W] [thread 114497] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[15:47:37.889789] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[15:47:37.889958] [D] [thread 114497] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9)) as new root of the plan.[m
[36m[15:47:37.889977] [D] [thread 114497] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:47:37.889985] [D] [thread 114497] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:47:37.890006] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.890018] [D] [thread 114497] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[15:47:37.890071] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[15:47:37.890098] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.890113] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[15:47:37.890123] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[15:47:37.890174] [D] [thread 114497] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 10 to the query Id 1[m
[36m[15:47:37.890222] [D] [thread 114497] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:47:37.890239] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:47:37.890253] [I] [thread 114497] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[15:47:37.890272] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:47:37.890317] [D] [thread 114497] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:47:37.890442] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.890462] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[15:47:37.890503] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[15:47:37.890514] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[15:47:37.890592] [D] [thread 114497] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 10[m
[36m[15:47:37.890606] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.890619] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.890642] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.890662] [D] [thread 114497] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:47:37.890694] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.890705] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.890756] [D] [thread 114497] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:47:37.890767] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.890785] [D] [thread 114497] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:47:37.890867] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[36m[15:47:37.891039] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.891057] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.891069] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 21 exists in the query plan or not[m
[36m[15:47:37.891078] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 21 in the query plan[m
[36m[15:47:37.891245] [D] [thread 114497] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9)) as root operator.[m
[36m[15:47:37.891293] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.891309] [D] [thread 114497] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:47:37.891344] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[15:47:37.891362] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.891377] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[15:47:37.891386] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[15:47:37.891439] [D] [thread 114497] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[15:47:37.891480] [D] [thread 114497] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:47:37.891497] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:47:37.891511] [I] [thread 114497] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[15:47:37.891542] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:47:37.891591] [D] [thread 114497] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:47:37.891655] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.891673] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[15:47:37.891719] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[15:47:37.891736] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[15:47:37.891815] [D] [thread 114497] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(23) on execution node with id 10[m
[36m[15:47:37.891829] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.891842] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.891864] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.891886] [D] [thread 114497] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:47:37.891919] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.891931] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.892024] [D] [thread 114497] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:47:37.892036] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.892056] [D] [thread 114497] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:47:37.892149] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[36m[15:47:37.892442] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:37.892505] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.892525] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.892541] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[15:47:37.892551] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 22 in the query plan[m
[36m[15:47:37.892764] [D] [thread 114497] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[15:47:37.892850] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.892869] [D] [thread 114497] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:47:37.892913] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[15:47:37.892933] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.892961] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[15:47:37.892972] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[15:47:37.893032] [D] [thread 114497] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[15:47:37.893080] [D] [thread 114497] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:47:37.893097] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:47:37.893113] [I] [thread 114497] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[15:47:37.893134] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:47:37.893187] [D] [thread 114497] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:47:37.893261] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.893286] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[15:47:37.893333] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[15:47:37.893345] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[15:47:37.893374] [D] [thread 114497] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(28) on execution node with id 10[m
[36m[15:47:37.893386] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.893400] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.893424] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.893449] [D] [thread 114497] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:47:37.893474] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.893486] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.893539] [D] [thread 114497] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:47:37.893550] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.893569] [D] [thread 114497] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:47:37.893640] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 28[m
[36m[15:47:37.893834] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.893855] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.893867] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[15:47:37.893876] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[36m[15:47:37.893975] [D] [thread 114497] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(23) as root operator.[m
[36m[15:47:37.894018] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.894035] [D] [thread 114497] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:47:37.894071] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[15:47:37.894090] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.894104] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[15:47:37.894113] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[15:47:37.894168] [D] [thread 114497] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[15:47:37.894209] [D] [thread 114497] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:47:37.894226] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:47:37.894242] [I] [thread 114497] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[15:47:37.894270] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:47:37.894317] [D] [thread 114497] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:47:37.894386] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[15:47:37.894412] [W] [thread 114497] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[15:47:37.894420] [D] [thread 114497] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:47:37.894433] [D] [thread 114497] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:47:37.894441] [D] [thread 114497] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:47:37.894449] [D] [thread 114497] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:47:37.894501] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.894519] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[15:47:37.894611] [D] [thread 114497] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8)) on execution node with id 9[m
[36m[15:47:37.894627] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[15:47:37.894639] [W] [thread 114497] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[15:47:37.894728] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[36m[15:47:37.894896] [D] [thread 114497] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8)) as new root of the plan.[m
[36m[15:47:37.894923] [D] [thread 114497] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:47:37.894980] [D] [thread 114497] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:47:37.895005] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.895017] [D] [thread 114497] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[15:47:37.895073] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[15:47:37.895106] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.895121] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[15:47:37.895130] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[15:47:37.895195] [D] [thread 114497] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 9 to the query Id 1[m
[36m[15:47:37.895249] [D] [thread 114497] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:47:37.895266] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:47:37.895281] [I] [thread 114497] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[15:47:37.895299] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:47:37.895352] [D] [thread 114497] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:47:37.895493] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.895513] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[15:47:37.895555] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[15:47:37.895567] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[15:47:37.895633] [D] [thread 114497] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 9[m
[36m[15:47:37.895656] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.895670] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.895693] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.895704] [D] [thread 114497] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:47:37.895735] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.895745] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.895797] [D] [thread 114497] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:47:37.895807] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.895825] [D] [thread 114497] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:47:37.895911] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[36m[15:47:37.896085] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.896104] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.896118] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 18 exists in the query plan or not[m
[36m[15:47:37.896126] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 18 in the query plan[m
[36m[15:47:37.896298] [D] [thread 114497] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8)) as root operator.[m
[36m[15:47:37.896396] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.896419] [D] [thread 114497] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:47:37.896459] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[15:47:37.896478] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.896507] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[15:47:37.896518] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[15:47:37.896576] [D] [thread 114497] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[15:47:37.896620] [D] [thread 114497] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:47:37.896637] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:47:37.896652] [I] [thread 114497] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[15:47:37.896672] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:47:37.896719] [D] [thread 114497] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:47:37.896786] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.896804] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[15:47:37.896852] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[15:47:37.896864] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[15:47:37.896895] [D] [thread 114497] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(20) on execution node with id 9[m
[36m[15:47:37.896906] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.896919] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.896940] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.896961] [D] [thread 114497] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:47:37.896986] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.896997] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.897088] [D] [thread 114497] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:47:37.897103] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.897123] [D] [thread 114497] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:47:37.897219] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[36m[15:47:37.897396] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.897416] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.897428] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 19 exists in the query plan or not[m
[36m[15:47:37.897437] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 19 in the query plan[m
[36m[15:47:37.897626] [D] [thread 114497] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[15:47:37.897704] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.897723] [D] [thread 114497] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:47:37.897760] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[15:47:37.897779] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.897794] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[15:47:37.897803] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[15:47:37.897857] [D] [thread 114497] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[15:47:37.897901] [D] [thread 114497] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:47:37.897917] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:47:37.897932] [I] [thread 114497] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[15:47:37.897966] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:47:37.898016] [D] [thread 114497] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:47:37.898081] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:47:37.898099] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[15:47:37.898143] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[15:47:37.898155] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[15:47:37.898186] [D] [thread 114497] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(29) on execution node with id 9[m
[36m[15:47:37.898198] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.898212] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.898235] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.898262] [D] [thread 114497] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:47:37.898289] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.898300] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.898344] [D] [thread 114497] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:47:37.898357] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.898391] [D] [thread 114497] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:47:37.898469] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 29[m
[36m[15:47:37.898693] [D] [thread 114497] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:47:37.898716] [D] [thread 114497] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:47:37.898729] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[15:47:37.898738] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[36m[15:47:37.898842] [D] [thread 114497] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(20) as root operator.[m
[36m[15:47:37.898885] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.898902] [D] [thread 114497] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:47:37.898942] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[15:47:37.898962] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.898977] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[15:47:37.899031] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[15:47:37.899095] [D] [thread 114497] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[15:47:37.899139] [D] [thread 114497] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:47:37.899157] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:47:37.899173] [I] [thread 114497] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[15:47:37.899195] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:47:37.899275] [D] [thread 114497] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:47:37.899353] [D] [thread 114497] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:47:37.899384] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:47:37.899499] [D] [thread 114497] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SINK(5: {FileSinkDescriptor()}) on execution node with id 1[m
[36m[15:47:37.899523] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[15:47:37.899536] [W] [thread 114497] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[15:47:37.899633] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[36m[15:47:37.899806] [D] [thread 114497] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(5: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[15:47:37.899824] [D] [thread 114497] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:47:37.899831] [D] [thread 114497] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:47:37.899854] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.899877] [D] [thread 114497] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[15:47:37.899933] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[15:47:37.899963] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.899979] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 1 already scheduled[m
[36m[15:47:37.899988] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 1 to the query Id index.[m
[36m[15:47:37.900042] [D] [thread 114497] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 1 to the query Id 1[m
[36m[15:47:37.900094] [D] [thread 114497] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:47:37.900112] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:47:37.900128] [I] [thread 114497] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 1[m
[36m[15:47:37.900146] [D] [thread 114497] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:47:37.900167] [D] [thread 114497] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:47:37.900181] [D] [thread 114497] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:47:37.900189] [D] [thread 114497] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:47:37.900197] [D] [thread 114497] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:47:37.900206] [D] [thread 114497] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:47:37.900223] [D] [thread 114497] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[32m[15:47:37.900265] [I] [thread 114497] [BasePlacementStrategy.cpp:361] [addNetworkSourceAndSinkOperators] [m
[36m[15:47:37.900289] [D] [thread 114497] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:47:37.900388] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[15:47:37.900444] [D] [thread 114497] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:47:37.900474] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 11 exists in the query plan or not[m
[36m[15:47:37.900498] [D] [thread 114497] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:47:37.900524] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[15:47:37.900535] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[36m[15:47:37.900585] [D] [thread 114497] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:47:37.900736] [D] [thread 114497] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:47:37.900759] [D] [thread 114497] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:47:37.900779] [D] [thread 114497] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[15:47:37.900828] [D] [thread 114497] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:47:37.900898] [D] [thread 114497] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[15:47:37.900914] [D] [thread 114497] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:47:37.900938] [D] [thread 114497] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[15:47:37.900949] [D] [thread 114497] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:47:37.900956] [D] [thread 114497] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[15:47:37.901075] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[15:47:37.901156] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[15:47:37.901169] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[15:47:37.901189] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.901205] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.901235] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[15:47:37.901248] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[32m[15:47:37.901419] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 32[m
[36m[15:47:37.901610] [D] [thread 114497] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(24) as root operator.[m
[36m[15:47:37.901690] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[32m[15:47:37.901995] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 30[m
[36m[15:47:37.902108] [D] [thread 114497] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.33:34581 1::30::0::0}) as new root of the plan.[m
[36m[15:47:37.902126] [D] [thread 114497] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:47:37.902134] [D] [thread 114497] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[15:47:37.902223] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 35[m
[36m[15:47:37.902297] [D] [thread 114497] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:35043)}) as new root of the plan.[m
[36m[15:47:37.902432] [D] [thread 114497] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:47:37.902447] [D] [thread 114497] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:47:37.902477] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.902491] [D] [thread 114497] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[15:47:37.902549] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[15:47:37.902581] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.902597] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[15:47:37.902606] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[15:47:37.902668] [D] [thread 114497] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 2 to the query Id 1[m
[36m[15:47:37.902722] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[15:47:37.902781] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[15:47:37.902795] [D] [thread 114497] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  6[m
[36m[15:47:37.902809] [D] [thread 114497] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[15:47:37.902841] [D] [thread 114497] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[15:47:37.902858] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:47:37.902914] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:47:37.902926] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[15:47:37.902940] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.902952] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[15:47:37.903058] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 33[m
[36m[15:47:37.903105] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[15:47:37.903120] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[15:47:37.903266] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[15:47:37.903285] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[15:47:37.903296] [D] [thread 114497] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[15:47:37.903305] [D] [thread 114497] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[15:47:37.903327] [D] [thread 114497] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[15:47:37.903357] [D] [thread 114497] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:47:37.903400] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 7 exists in the query plan or not[m
[36m[15:47:37.903442] [D] [thread 114497] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:47:37.903469] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[15:47:37.903492] [D] [thread 114497] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:47:37.903518] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 25 exists in the query plan or not[m
[36m[15:47:37.903528] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 25 in the query plan[m
[36m[15:47:37.903544] [D] [thread 114497] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:47:37.903671] [D] [thread 114497] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:47:37.903713] [D] [thread 114497] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:47:37.903748] [D] [thread 114497] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:47:37.903787] [D] [thread 114497] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:47:37.903867] [D] [thread 114497] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[15:47:37.903917] [D] [thread 114497] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:47:37.903946] [D] [thread 114497] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[15:47:37.903957] [D] [thread 114497] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:47:37.903964] [D] [thread 114497] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[15:47:37.904038] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[15:47:37.904111] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[15:47:37.904124] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[15:47:37.904141] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.904157] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.904186] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 25 exists in the query plan or not[m
[36m[15:47:37.904199] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 25 in the query plan[m
[32m[15:47:37.904349] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 38[m
[36m[15:47:37.904539] [D] [thread 114497] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(25) as root operator.[m
[36m[15:47:37.904648] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[15:47:37.904697] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[15:47:37.904710] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[15:47:37.904844] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 36[m
[36m[15:47:37.904939] [D] [thread 114497] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.32:39493 1::36::0::0}) as new root of the plan.[m
[36m[15:47:37.904955] [D] [thread 114497] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:47:37.904963] [D] [thread 114497] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[15:47:37.905039] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 41[m
[36m[15:47:37.905101] [D] [thread 114497] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.11:35043)}) as new root of the plan.[m
[36m[15:47:37.905213] [D] [thread 114497] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:47:37.905236] [D] [thread 114497] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:47:37.905261] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.905278] [D] [thread 114497] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:47:37.905336] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[15:47:37.905353] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.905368] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[15:47:37.905378] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[15:47:37.905439] [D] [thread 114497] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[15:47:37.905470] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[15:47:37.905482] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[15:47:37.905492] [D] [thread 114497] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[15:47:37.905501] [D] [thread 114497] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[15:47:37.905549] [D] [thread 114497] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[15:47:37.905567] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:47:37.905622] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:47:37.905634] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[15:47:37.905648] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.905660] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[15:47:37.905759] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 39[m
[36m[15:47:37.905807] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[15:47:37.905822] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[15:47:37.905973] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[15:47:37.905990] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[15:47:37.906002] [D] [thread 114497] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[15:47:37.906011] [D] [thread 114497] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[15:47:37.906024] [D] [thread 114497] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[15:47:37.906053] [D] [thread 114497] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:47:37.906096] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[15:47:37.906135] [D] [thread 114497] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:47:37.906160] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[15:47:37.906183] [D] [thread 114497] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:47:37.906209] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 26 exists in the query plan or not[m
[36m[15:47:37.906220] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 26 in the query plan[m
[36m[15:47:37.906236] [D] [thread 114497] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:47:37.906363] [D] [thread 114497] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:47:37.906423] [D] [thread 114497] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:47:37.906462] [D] [thread 114497] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[15:47:37.906544] [D] [thread 114497] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:47:37.906613] [D] [thread 114497] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[15:47:37.906630] [D] [thread 114497] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:47:37.906654] [D] [thread 114497] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[15:47:37.906666] [D] [thread 114497] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:47:37.906673] [D] [thread 114497] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[15:47:37.906747] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[15:47:37.906816] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[15:47:37.906829] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[15:47:37.906846] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.906861] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.906889] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 26 exists in the query plan or not[m
[36m[15:47:37.906902] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 26 in the query plan[m
[32m[15:47:37.907014] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 44[m
[36m[15:47:37.907189] [D] [thread 114497] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(26) as root operator.[m
[36m[15:47:37.907264] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[32m[15:47:37.907440] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 42[m
[36m[15:47:37.907531] [D] [thread 114497] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.35:43817 1::42::0::0}) as new root of the plan.[m
[36m[15:47:37.907545] [D] [thread 114497] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:47:37.907552] [D] [thread 114497] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[15:47:37.907623] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 47[m
[36m[15:47:37.907687] [D] [thread 114497] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.11:35043)}) as new root of the plan.[m
[36m[15:47:37.907795] [D] [thread 114497] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:47:37.907807] [D] [thread 114497] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:47:37.907831] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.907845] [D] [thread 114497] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[15:47:37.907901] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[15:47:37.907932] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.907958] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[15:47:37.907970] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[15:47:37.908029] [D] [thread 114497] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 3 to the query Id 1[m
[36m[15:47:37.908078] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[15:47:37.908091] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[15:47:37.908101] [D] [thread 114497] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  8[m
[36m[15:47:37.908110] [D] [thread 114497] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[15:47:37.908140] [D] [thread 114497] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[15:47:37.908169] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:47:37.908228] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:47:37.908240] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[15:47:37.908253] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.908266] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[15:47:37.908403] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 45[m
[36m[15:47:37.908457] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[15:47:37.908475] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[15:47:37.908695] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[15:47:37.908718] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[15:47:37.908731] [D] [thread 114497] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[15:47:37.908741] [D] [thread 114497] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[15:47:37.908771] [D] [thread 114497] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[15:47:37.908850] [D] [thread 114497] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:47:37.908903] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 13 exists in the query plan or not[m
[36m[15:47:37.908944] [D] [thread 114497] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:47:37.908970] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[15:47:37.908993] [D] [thread 114497] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:47:37.909018] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 27 exists in the query plan or not[m
[36m[15:47:37.909029] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 27 in the query plan[m
[36m[15:47:37.909057] [D] [thread 114497] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:47:37.909188] [D] [thread 114497] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:47:37.909239] [D] [thread 114497] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:47:37.909280] [D] [thread 114497] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 3 source operators.[m
[36m[15:47:37.909322] [D] [thread 114497] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:47:37.909389] [D] [thread 114497] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[15:47:37.909404] [D] [thread 114497] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:47:37.909428] [D] [thread 114497] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[15:47:37.909439] [D] [thread 114497] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:47:37.909446] [D] [thread 114497] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[15:47:37.909518] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[15:47:37.909591] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[15:47:37.909604] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[15:47:37.909622] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.909637] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.909666] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 27 exists in the query plan or not[m
[36m[15:47:37.909679] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 27 in the query plan[m
[32m[15:47:37.909748] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 50[m
[36m[15:47:37.909906] [D] [thread 114497] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(27) as root operator.[m
[36m[15:47:37.909979] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[15:47:37.910021] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[15:47:37.910033] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[32m[15:47:37.910157] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 48[m
[36m[15:47:37.910240] [D] [thread 114497] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.34:44283 1::48::0::0}) as new root of the plan.[m
[36m[15:47:37.910310] [D] [thread 114497] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:47:37.910320] [D] [thread 114497] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[15:47:37.910401] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 53[m
[36m[15:47:37.910474] [D] [thread 114497] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:35043)}) as new root of the plan.[m
[36m[15:47:37.910584] [D] [thread 114497] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:47:37.910597] [D] [thread 114497] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:47:37.910620] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.910637] [D] [thread 114497] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:47:37.910685] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[15:47:37.910702] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.910717] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[15:47:37.910726] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[15:47:37.910787] [D] [thread 114497] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 3 already mapped to the query Id 1[m
[36m[15:47:37.910817] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[15:47:37.910829] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[15:47:37.910840] [D] [thread 114497] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  7[m
[36m[15:47:37.910849] [D] [thread 114497] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[15:47:37.910882] [D] [thread 114497] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[15:47:37.910899] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:47:37.910950] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:47:37.910962] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[15:47:37.910975] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.910987] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[15:47:37.911078] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 51[m
[36m[15:47:37.911120] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[15:47:37.911134] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[15:47:37.911334] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[15:47:37.911371] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[15:47:37.911384] [D] [thread 114497] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[15:47:37.911394] [D] [thread 114497] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[15:47:37.911408] [D] [thread 114497] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  3[m
[36m[15:47:37.911438] [D] [thread 114497] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:47:37.911490] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[15:47:37.911530] [D] [thread 114497] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:47:37.911556] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[15:47:37.911579] [D] [thread 114497] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:47:37.911606] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 28 exists in the query plan or not[m
[36m[15:47:37.911671] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 28 in the query plan[m
[36m[15:47:37.911696] [D] [thread 114497] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:47:37.911832] [D] [thread 114497] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:47:37.911884] [D] [thread 114497] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:47:37.911926] [D] [thread 114497] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 4 source operators.[m
[36m[15:47:37.911978] [D] [thread 114497] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:47:37.912046] [D] [thread 114497] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[15:47:37.912061] [D] [thread 114497] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:47:37.912086] [D] [thread 114497] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[15:47:37.912097] [D] [thread 114497] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:47:37.912104] [D] [thread 114497] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[15:47:37.912175] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[15:47:37.912246] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[15:47:37.912260] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[15:47:37.912277] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.912293] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.912349] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 28 exists in the query plan or not[m
[36m[15:47:37.912367] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 28 in the query plan[m
[32m[15:47:37.912439] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 56[m
[36m[15:47:37.912601] [D] [thread 114497] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(28) as root operator.[m
[36m[15:47:37.912676] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[32m[15:47:37.912866] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 54[m
[36m[15:47:37.912957] [D] [thread 114497] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.38:39583 1::54::0::0}) as new root of the plan.[m
[36m[15:47:37.912972] [D] [thread 114497] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:47:37.912980] [D] [thread 114497] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[15:47:37.913057] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 59[m
[36m[15:47:37.913136] [D] [thread 114497] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(59: {NetworkSinkDescriptor(partition=1::57::0::0;nodeLocation=tcp://192.168.2.11:35043)}) as new root of the plan.[m
[36m[15:47:37.913244] [D] [thread 114497] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:47:37.913256] [D] [thread 114497] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:47:37.913280] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.913293] [D] [thread 114497] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[15:47:37.913352] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[15:47:37.913383] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.913399] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[15:47:37.913408] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[15:47:37.913469] [D] [thread 114497] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 4 to the query Id 1[m
[36m[15:47:37.913519] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[15:47:37.913533] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[15:47:37.913544] [D] [thread 114497] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  10[m
[36m[15:47:37.913553] [D] [thread 114497] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[15:47:37.913582] [D] [thread 114497] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[15:47:37.913598] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:47:37.913649] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:47:37.913661] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[15:47:37.913675] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.913687] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[15:47:37.913826] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 57[m
[36m[15:47:37.913877] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[15:47:37.913894] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[15:47:37.914059] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[15:47:37.914079] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[15:47:37.914092] [D] [thread 114497] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[15:47:37.914102] [D] [thread 114497] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[15:47:37.914131] [D] [thread 114497] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[15:47:37.914163] [D] [thread 114497] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:47:37.914207] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 19 exists in the query plan or not[m
[36m[15:47:37.914248] [D] [thread 114497] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:47:37.914275] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[15:47:37.914317] [D] [thread 114497] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:47:37.914347] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 29 exists in the query plan or not[m
[36m[15:47:37.914358] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 29 in the query plan[m
[36m[15:47:37.914374] [D] [thread 114497] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:47:37.914498] [D] [thread 114497] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:47:37.914556] [D] [thread 114497] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:47:37.914598] [D] [thread 114497] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 5 source operators.[m
[36m[15:47:37.914640] [D] [thread 114497] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:47:37.914708] [D] [thread 114497] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[15:47:37.914725] [D] [thread 114497] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:47:37.914749] [D] [thread 114497] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[15:47:37.914761] [D] [thread 114497] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:47:37.914767] [D] [thread 114497] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[15:47:37.914839] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[15:47:37.914913] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[15:47:37.914926] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[15:47:37.914944] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.914959] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.914989] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 29 exists in the query plan or not[m
[36m[15:47:37.915001] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 29 in the query plan[m
[32m[15:47:37.915069] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 62[m
[36m[15:47:37.915221] [D] [thread 114497] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(29) as root operator.[m
[36m[15:47:37.915293] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[15:47:37.915334] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[15:47:37.915359] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[32m[15:47:37.915484] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 60[m
[36m[15:47:37.915566] [D] [thread 114497] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(60,,NetworkSourceDescriptor{tcp://192.168.2.37:38485 1::60::0::0}) as new root of the plan.[m
[36m[15:47:37.915586] [D] [thread 114497] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:47:37.915649] [D] [thread 114497] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[15:47:37.915735] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 65[m
[36m[15:47:37.915812] [D] [thread 114497] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(65: {NetworkSinkDescriptor(partition=1::63::0::0;nodeLocation=tcp://192.168.2.11:35043)}) as new root of the plan.[m
[36m[15:47:37.915929] [D] [thread 114497] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:47:37.915942] [D] [thread 114497] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:47:37.915970] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.915986] [D] [thread 114497] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:47:37.916033] [D] [thread 114497] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[15:47:37.916090] [D] [thread 114497] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:47:37.916109] [W] [thread 114497] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[15:47:37.916118] [D] [thread 114497] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[15:47:37.916184] [D] [thread 114497] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 4 already mapped to the query Id 1[m
[36m[15:47:37.916217] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[15:47:37.916230] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[15:47:37.916240] [D] [thread 114497] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  9[m
[36m[15:47:37.916249] [D] [thread 114497] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[15:47:37.916287] [D] [thread 114497] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[15:47:37.916315] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:47:37.916415] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:47:37.916429] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[15:47:37.916446] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.916458] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[15:47:37.916615] [I] [thread 114497] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 63[m
[36m[15:47:37.916714] [D] [thread 114497] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[15:47:37.916732] [D] [thread 114497] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[15:47:37.916925] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[15:47:37.916958] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[15:47:37.916971] [D] [thread 114497] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[15:47:37.916982] [D] [thread 114497] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[15:47:37.916997] [D] [thread 114497] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  4[m
[36m[15:47:37.917049] [D] [thread 114497] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:47:37.917122] [D] [thread 114497] [GlobalExecutionPlan.cpp:33] [checkIfExecutionNodeIsARoot] GlobalExecutionPlan: Checking if Execution node with id 1 is a root node[m
[36m[15:47:37.917135] [D] [thread 114497] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:47:37.917145] [D] [thread 114497] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[15:47:37.917163] [D] [thread 114497] [GlobalExecutionPlan.cpp:68] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node as root node[m
[36m[15:47:37.917183] [D] [thread 114497] [GlobalExecutionPlan.cpp:72] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[15:47:37.917258] [D] [thread 114497] [BasePlacementStrategy.cpp:337] [runTypeInferencePhase] BasePlacementStrategy: Run type inference phase for all the query sub plans to be deployed.[m
[36m[15:47:37.917282] [D] [thread 114497] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[15:47:37.917306] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.917322] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.917571] [D] [thread 114497] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:47:37.917621] [D] [thread 114497] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:47:37.917658] [D] [thread 114497] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:47:37.917716] [D] [thread 114497] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:47:37.917743] [D] [thread 114497] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:47:37.918415] [D] [thread 114497] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:47:37.918755] [D] [thread 114497] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[15:47:37.918967] [I] [thread 114497] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[15:47:37.919071] [I] [thread 114497] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.919174] [D] [thread 114497] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:47:37.919224] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.919242] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.919417] [D] [thread 114497] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:47:37.919460] [D] [thread 114497] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:47:37.919491] [D] [thread 114497] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:47:37.919528] [D] [thread 114497] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:47:37.919563] [D] [thread 114497] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:47:37.920199] [D] [thread 114497] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:47:37.920578] [D] [thread 114497] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[15:47:37.920791] [I] [thread 114497] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[15:47:37.920889] [I] [thread 114497] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.920987] [D] [thread 114497] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:47:37.921037] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.921055] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.921229] [D] [thread 114497] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:47:37.921272] [D] [thread 114497] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:47:37.921305] [D] [thread 114497] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:47:37.921344] [D] [thread 114497] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:47:37.921365] [D] [thread 114497] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:47:37.921982] [D] [thread 114497] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:47:37.922292] [D] [thread 114497] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[15:47:37.922476] [I] [thread 114497] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[15:47:37.922584] [I] [thread 114497] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.922678] [D] [thread 114497] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:47:37.922725] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.922742] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.922904] [D] [thread 114497] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:47:37.922944] [D] [thread 114497] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:47:37.922975] [D] [thread 114497] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:47:37.923010] [D] [thread 114497] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:47:37.923032] [D] [thread 114497] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:47:37.923653] [D] [thread 114497] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:47:37.923991] [D] [thread 114497] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[15:47:37.924191] [I] [thread 114497] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[15:47:37.924281] [I] [thread 114497] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.924414] [D] [thread 114497] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:47:37.924469] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.924486] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.924660] [D] [thread 114497] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:47:37.924702] [D] [thread 114497] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:47:37.924732] [D] [thread 114497] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:47:37.924773] [D] [thread 114497] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:47:37.924796] [D] [thread 114497] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:47:37.925381] [D] [thread 114497] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:47:37.925741] [D] [thread 114497] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[15:47:37.925940] [I] [thread 114497] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[15:47:37.926034] [I] [thread 114497] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.926128] [D] [thread 114497] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:47:37.926175] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.926190] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.926356] [D] [thread 114497] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:47:37.926398] [D] [thread 114497] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:47:37.926429] [D] [thread 114497] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:47:37.926469] [D] [thread 114497] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:47:37.926491] [D] [thread 114497] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:47:37.927101] [D] [thread 114497] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:47:37.927440] [D] [thread 114497] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[15:47:37.927651] [I] [thread 114497] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[15:47:37.927763] [I] [thread 114497] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.927865] [D] [thread 114497] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:47:37.927915] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.927932] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.928119] [D] [thread 114497] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:47:37.928175] [D] [thread 114497] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:47:37.928218] [D] [thread 114497] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 6 source operators.[m
[36m[15:47:37.928259] [D] [thread 114497] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:47:37.928281] [D] [thread 114497] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:47:37.928495] [D] [thread 114497] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:47:37.928535] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.928604] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.928733] [D] [thread 114497] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:47:37.928777] [D] [thread 114497] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:47:37.928804] [D] [thread 114497] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:47:37.928833] [D] [thread 114497] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:47:37.928853] [D] [thread 114497] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:47:37.928976] [D] [thread 114497] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:47:37.929071] [D] [thread 114497] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:47:37.929099] [D] [thread 114497] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:47:37.929119] [D] [thread 114497] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:47:37.929142] [D] [thread 114497] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:47:37.929160] [D] [thread 114497] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:47:37.929320] [D] [thread 114497] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:47:37.929358] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.929373] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.929471] [D] [thread 114497] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:47:37.929501] [D] [thread 114497] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:47:37.929522] [D] [thread 114497] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:47:37.929548] [D] [thread 114497] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:47:37.929566] [D] [thread 114497] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:47:37.929676] [D] [thread 114497] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:47:37.929766] [D] [thread 114497] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:47:37.929805] [D] [thread 114497] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:47:37.929827] [D] [thread 114497] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:47:37.929850] [D] [thread 114497] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:47:37.929868] [D] [thread 114497] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:47:37.929973] [D] [thread 114497] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:47:37.930003] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.930017] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.930104] [D] [thread 114497] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:47:37.930131] [D] [thread 114497] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:47:37.930150] [D] [thread 114497] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:47:37.930172] [D] [thread 114497] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:47:37.930189] [D] [thread 114497] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:47:37.930296] [D] [thread 114497] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:47:37.930383] [D] [thread 114497] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:47:37.930408] [D] [thread 114497] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:47:37.930429] [D] [thread 114497] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:47:37.930449] [D] [thread 114497] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:47:37.930467] [D] [thread 114497] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:47:37.930567] [D] [thread 114497] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:47:37.930613] [D] [thread 114497] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[36m[15:47:37.932973] [D] [thread 114497] [QueryPlacementPhase.cpp:140] [execute] QueryPlacementPhase: Update Global Execution Plan:
ExecutionNode(id:1, ip:192.168.2.11, topologyId:1)
| QuerySubPlan(queryId:1, querySubPlanId:7)
|  SINK(5: {FileSinkDescriptor()})
|    SOURCE(33,,NetworkSourceDescriptor{tcp://192.168.2.12:36559 1::33::0::0})
|    SOURCE(39,,NetworkSourceDescriptor{tcp://192.168.2.12:36559 1::39::0::0})
|    SOURCE(45,,NetworkSourceDescriptor{tcp://192.168.2.30:34139 1::45::0::0})
|    SOURCE(51,,NetworkSourceDescriptor{tcp://192.168.2.30:34139 1::51::0::0})
|    SOURCE(57,,NetworkSourceDescriptor{tcp://192.168.2.31:39899 1::57::0::0})
|    SOURCE(63,,NetworkSourceDescriptor{tcp://192.168.2.31:39899 1::63::0::0})
|--ExecutionNode(id:2, ip:192.168.2.12, topologyId:2)
|  | QuerySubPlan(queryId:1, querySubPlanId:8)
|  |  SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:35043)})
|  |    SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.33:34581 1::30::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:9)
|  |  SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.11:35043)})
|  |    SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.32:39493 1::36::0::0})
|  |--ExecutionNode(id:6, ip:192.168.2.33, topologyId:6)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:1)
|  |  |  SINK(32: {NetworkSinkDescriptor(partition=1::30::0::0;nodeLocation=tcp://192.168.2.12:36559)})
|  |  |    CENTRALWINDOW(24)
|  |  |      WATERMARKASSIGNER(11)
|  |  |        PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |          SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
|  |--ExecutionNode(id:5, ip:192.168.2.32, topologyId:5)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:2)
|  |  |  SINK(38: {NetworkSinkDescriptor(partition=1::36::0::0;nodeLocation=tcp://192.168.2.12:36559)})
|  |  |    CENTRALWINDOW(25)
|  |  |      WATERMARKASSIGNER(8)
|  |  |        PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |          SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
|--ExecutionNode(id:3, ip:192.168.2.30, topologyId:3)
|  | QuerySubPlan(queryId:1, querySubPlanId:10)
|  |  SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.11:35043)})
|  |    SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.35:43817 1::42::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:11)
|  |  SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:35043)})
|  |    SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.34:44283 1::48::0::0})
|  |--ExecutionNode(id:8, ip:192.168.2.35, topologyId:8)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:3)
|  |  |  SINK(44: {NetworkSinkDescriptor(partition=1::42::0::0;nodeLocation=tcp://192.168.2.30:34139)})
|  |  |    CENTRALWINDOW(26)
|  |  |      WATERMARKASSIGNER(17)
|  |  |        PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |          SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
|  |--ExecutionNode(id:7, ip:192.168.2.34, topologyId:7)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:4)
|  |  |  SINK(50: {NetworkSinkDescriptor(partition=1::48::0::0;nodeLocation=tcp://192.168.2.30:34139)})
|  |  |    CENTRALWINDOW(27)
|  |  |      WATERMARKASSIGNER(14)
|  |  |        PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |          SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
|--ExecutionNode(id:4, ip:192.168.2.31, topologyId:4)
|  | QuerySubPlan(queryId:1, querySubPlanId:12)
|  |  SINK(59: {NetworkSinkDescriptor(partition=1::57::0::0;nodeLocation=tcp://192.168.2.11:35043)})
|  |    SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.38:39583 1::54::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:13)
|  |  SINK(65: {NetworkSinkDescriptor(partition=1::63::0::0;nodeLocation=tcp://192.168.2.11:35043)})
|  |    SOURCE(60,,NetworkSourceDescriptor{tcp://192.168.2.37:38485 1::60::0::0})
|  |--ExecutionNode(id:10, ip:192.168.2.38, topologyId:10)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:5)
|  |  |  SINK(56: {NetworkSinkDescriptor(partition=1::54::0::0;nodeLocation=tcp://192.168.2.31:39899)})
|  |  |    CENTRALWINDOW(28)
|  |  |      WATERMARKASSIGNER(23)
|  |  |        PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |          SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
|  |--ExecutionNode(id:9, ip:192.168.2.37, topologyId:9)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:6)
|  |  |  SINK(62: {NetworkSinkDescriptor(partition=1::60::0::0;nodeLocation=tcp://192.168.2.31:39899)})
|  |  |    CENTRALWINDOW(29)
|  |  |      WATERMARKASSIGNER(20)
|  |  |        PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |          SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
[m
[36m[15:47:37.933111] [D] [thread 114497] [QueryDeploymentPhase.cpp:54] [execute] QueryDeploymentPhase: deploy the query[m
[36m[15:47:37.933142] [D] [thread 114497] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[15:47:37.933415] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.933441] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.933660] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.933694] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.933761] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.933783] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.933822] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.933834] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.933867] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.933890] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.933933] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.933945] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.933977] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.933989] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.934024] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.934035] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.934085] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.934097] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.934145] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.934158] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.934328] [D] [thread 114497] [QueryDeploymentPhase.cpp:106] [deployQuery] QueryDeploymentPhase::deployQuery queryId= 1[m
[36m[15:47:37.934359] [D] [thread 114497] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=6[m
[36m[15:47:37.934369] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.934378] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.934597] [D] [thread 114497] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.33:39511[m
[36m[15:47:37.934639] [D] [thread 114497] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:39511 queryId=1 querySubPlanId = 1[m
[36m[15:47:37.935003] [D] [thread 114497] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(32: {NetworkSinkDescriptor(partition=1::30::0::0;nodeLocation=tcp://192.168.2.12:36559)})
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
[m
[36m[15:47:37.935044] [D] [thread 114497] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:47:37.935297] [D] [thread 114497] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:47:37.939134] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.939986] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.940401] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.940581] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.941230] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[15:47:37.942343] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:37.942697] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:47:37.942840] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:37.942895] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:47:37.942976] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:37.943509] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.943680] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.943871] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.944030] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.944546] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[15:47:37.944642] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:37.944847] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.944976] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.945103] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.945203] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.945604] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[15:47:37.945718] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:37.945752] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[15:47:37.945810] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:37.945839] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:47:37.945896] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:37.946131] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:47:37.946453] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.946609] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.946706] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.947085] [D] [thread 114497] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream5)[m
[36m[15:47:37.947335] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:47:37.947675] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.948153] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:47:37.948539] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.948853] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:47:37.949174] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.963195] [D] [thread 114497] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=5[m
[36m[15:47:37.963237] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.963256] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.963417] [D] [thread 114497] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.32:44575[m
[36m[15:47:37.963455] [D] [thread 114497] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:44575 queryId=1 querySubPlanId = 2[m
[36m[15:47:37.963764] [D] [thread 114497] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(38: {NetworkSinkDescriptor(partition=1::36::0::0;nodeLocation=tcp://192.168.2.12:36559)})
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
[m
[36m[15:47:37.963822] [D] [thread 114497] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:47:37.964023] [D] [thread 114497] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:47:37.964305] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.964541] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.964729] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.964883] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.965391] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[15:47:37.965549] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:37.965751] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:47:37.965867] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:37.965910] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:47:37.965979] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:37.966257] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.966421] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.966620] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.966780] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.967231] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[15:47:37.967333] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:37.967507] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.967650] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.967792] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.967907] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.968378] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[15:47:37.968526] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:37.968570] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[15:47:37.968638] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:37.968673] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:47:37.968738] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:37.968994] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:47:37.969357] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.969565] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.969726] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.970302] [D] [thread 114497] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream4)[m
[36m[15:47:37.970522] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:47:37.970901] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.971428] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:47:37.971841] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.972205] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:47:37.972630] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.982454] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:37.982668] [D] [thread 114497] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=8[m
[36m[15:47:37.982692] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:37.982710] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:37.982732] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:37.982841] [D] [thread 114497] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.35:39721[m
[36m[15:47:37.982871] [D] [thread 114497] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.35:39721 queryId=1 querySubPlanId = 3[m
[36m[15:47:37.983139] [D] [thread 114497] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(44: {NetworkSinkDescriptor(partition=1::42::0::0;nodeLocation=tcp://192.168.2.30:34139)})
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
[m
[36m[15:47:37.983184] [D] [thread 114497] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:47:37.983332] [D] [thread 114497] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:47:37.983579] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.983775] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.983927] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.984057] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.984554] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[15:47:37.984708] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:37.984874] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:47:37.984980] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:37.985021] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:47:37.985091] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:37.985354] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.985508] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.985653] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.985774] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.986165] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[15:47:37.986269] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:37.986460] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.986611] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.986766] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.986872] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.987288] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[15:47:37.987440] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:37.987479] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[15:47:37.987536] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:37.987567] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:47:37.987625] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:37.987881] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:47:37.988255] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.988514] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:37.988651] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.989070] [D] [thread 114497] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream7)[m
[36m[15:47:37.989277] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:47:37.989618] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.990017] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:47:37.990341] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:37.990579] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:47:37.990887] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.000037] [D] [thread 114497] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=7[m
[36m[15:47:38.000073] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:38.000106] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:38.000235] [D] [thread 114497] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.34:44541[m
[36m[15:47:38.000265] [D] [thread 114497] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.34:44541 queryId=1 querySubPlanId = 4[m
[36m[15:47:38.000569] [D] [thread 114497] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(50: {NetworkSinkDescriptor(partition=1::48::0::0;nodeLocation=tcp://192.168.2.30:34139)})
  CENTRALWINDOW(27)
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
[m
[36m[15:47:38.000608] [D] [thread 114497] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:47:38.000764] [D] [thread 114497] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:47:38.001016] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.001176] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.001318] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.001437] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.001814] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[15:47:38.001930] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:38.002073] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:47:38.002148] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:38.002182] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:47:38.002238] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:38.002457] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.002570] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.002706] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.002825] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.003151] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[15:47:38.003226] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:38.003379] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.003497] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.003605] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.003699] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.004045] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[15:47:38.004153] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:38.004187] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[15:47:38.004252] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:38.004283] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:47:38.004369] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:38.004594] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:47:38.004914] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.005072] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.005189] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.005563] [D] [thread 114497] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream6)[m
[36m[15:47:38.005752] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:47:38.006073] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.006454] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:47:38.006769] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.007022] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:47:38.007330] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.016525] [D] [thread 114497] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=10[m
[36m[15:47:38.016561] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:38.016579] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:38.016711] [D] [thread 114497] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.38:39609[m
[36m[15:47:38.016742] [D] [thread 114497] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.38:39609 queryId=1 querySubPlanId = 5[m
[36m[15:47:38.017019] [D] [thread 114497] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(56: {NetworkSinkDescriptor(partition=1::54::0::0;nodeLocation=tcp://192.168.2.31:39899)})
  CENTRALWINDOW(28)
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[15:47:38.017057] [D] [thread 114497] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:47:38.017214] [D] [thread 114497] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:47:38.017449] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.017610] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.017753] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.017872] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.018245] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[15:47:38.018362] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:38.018514] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:47:38.018613] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:38.018646] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:47:38.018707] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:38.018930] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.019043] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.019165] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.019280] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.019609] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[15:47:38.019755] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:38.019910] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.020028] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.020143] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.020239] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.020669] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[15:47:38.020791] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:38.020826] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[15:47:38.020883] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:38.020913] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:47:38.021019] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:38.021246] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:47:38.021561] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.021717] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.021817] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.022170] [D] [thread 114497] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream9)[m
[36m[15:47:38.022355] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:47:38.022675] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.023047] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:47:38.023363] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.023602] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:47:38.023904] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.033004] [D] [thread 114497] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=9[m
[36m[15:47:38.033039] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:38.033057] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:38.033183] [D] [thread 114497] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.37:42321[m
[36m[15:47:38.033213] [D] [thread 114497] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.37:42321 queryId=1 querySubPlanId = 6[m
[36m[15:47:38.033484] [D] [thread 114497] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(62: {NetworkSinkDescriptor(partition=1::60::0::0;nodeLocation=tcp://192.168.2.31:39899)})
  CENTRALWINDOW(29)
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
[m
[36m[15:47:38.033523] [D] [thread 114497] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:47:38.033678] [D] [thread 114497] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:47:38.033910] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.034068] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.034225] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.034346] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.034721] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[15:47:38.034836] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:38.034982] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:47:38.035058] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:38.035091] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:47:38.035154] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:38.035375] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.035486] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.035606] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.035721] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.036053] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[15:47:38.036126] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:38.036264] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.036414] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.036537] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.036635] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.036974] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[15:47:38.037082] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:38.037117] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[15:47:38.037173] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:38.037203] [D] [thread 114497] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:47:38.037259] [D] [thread 114497] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:47:38.037480] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:47:38.037791] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.037942] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.038037] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.038375] [D] [thread 114497] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream8)[m
[36m[15:47:38.038560] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:47:38.038888] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.039271] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:47:38.039589] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.039826] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:47:38.040136] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.049435] [D] [thread 114497] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=1[m
[36m[15:47:38.049471] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:38.049489] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:38.049616] [D] [thread 114497] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.11:40941[m
[36m[15:47:38.049647] [D] [thread 114497] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.11:40941 queryId=1 querySubPlanId = 7[m
[36m[15:47:38.049950] [D] [thread 114497] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(5: {FileSinkDescriptor()})
  SOURCE(33,,NetworkSourceDescriptor{tcp://192.168.2.12:36559 1::33::0::0})
  SOURCE(39,,NetworkSourceDescriptor{tcp://192.168.2.12:36559 1::39::0::0})
  SOURCE(45,,NetworkSourceDescriptor{tcp://192.168.2.30:34139 1::45::0::0})
  SOURCE(51,,NetworkSourceDescriptor{tcp://192.168.2.30:34139 1::51::0::0})
  SOURCE(57,,NetworkSourceDescriptor{tcp://192.168.2.31:39899 1::57::0::0})
  SOURCE(63,,NetworkSourceDescriptor{tcp://192.168.2.31:39899 1::63::0::0})
[m
[36m[15:47:38.049985] [D] [thread 114497] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:47:38.050119] [D] [thread 114497] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:47:38.050396] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.050560] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.050717] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.050839] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.051192] [D] [thread 114497] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:36559 1::33::0::0}[m
[36m[15:47:38.051327] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.051476] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.051782] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.051914] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.052028] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.052141] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.052518] [D] [thread 114497] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:36559 1::39::0::0}[m
[36m[15:47:38.052617] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.052765] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.053000] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.053131] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.053249] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.053362] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.053685] [D] [thread 114497] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:34139 1::45::0::0}[m
[36m[15:47:38.053787] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.053922] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.054149] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.054269] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.054375] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.054488] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.054785] [D] [thread 114497] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:34139 1::51::0::0}[m
[36m[15:47:38.054876] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.055010] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.055222] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.055342] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.055447] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.055575] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.055864] [D] [thread 114497] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:39899 1::57::0::0}[m
[36m[15:47:38.055953] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.056081] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.056303] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.056462] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.056575] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.056691] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.057052] [D] [thread 114497] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:39899 1::63::0::0}[m
[36m[15:47:38.057149] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.057289] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.057514] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.057633] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.057826] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.057948] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.066305] [D] [thread 114497] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=2[m
[36m[15:47:38.066401] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:38.066465] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:38.066592] [D] [thread 114497] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.12:36563[m
[36m[15:47:38.066629] [D] [thread 114497] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:36563 queryId=1 querySubPlanId = 8[m
[36m[15:47:38.066849] [D] [thread 114497] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:35043)})
  SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.33:34581 1::30::0::0})
[m
[36m[15:47:38.066886] [D] [thread 114497] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:47:38.067043] [D] [thread 114497] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:47:38.067313] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.067490] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.067645] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.067786] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.068168] [D] [thread 114497] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:34581 1::30::0::0}[m
[36m[15:47:38.068290] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.068466] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.068729] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.068875] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.068998] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.069127] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.074806] [D] [thread 114497] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:36563 queryId=1 querySubPlanId = 9[m
[36m[15:47:38.075125] [D] [thread 114497] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.11:35043)})
  SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.32:39493 1::36::0::0})
[m
[36m[15:47:38.075174] [D] [thread 114497] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:47:38.075337] [D] [thread 114497] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:47:38.075595] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.075772] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.075926] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.076059] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.076464] [D] [thread 114497] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:39493 1::36::0::0}[m
[36m[15:47:38.076586] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.076733] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.076987] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.077129] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.077244] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.077377] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.083038] [D] [thread 114497] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=3[m
[36m[15:47:38.083121] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:38.083153] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:38.083265] [D] [thread 114497] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.30:33619[m
[36m[15:47:38.083295] [D] [thread 114497] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:33619 queryId=1 querySubPlanId = 10[m
[36m[15:47:38.083486] [D] [thread 114497] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.11:35043)})
  SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.35:43817 1::42::0::0})
[m
[36m[15:47:38.083519] [D] [thread 114497] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:47:38.083669] [D] [thread 114497] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:47:38.083933] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.084109] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.084263] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.084436] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.084826] [D] [thread 114497] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.35:43817 1::42::0::0}[m
[36m[15:47:38.084948] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.085088] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.085345] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.085488] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.085616] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.085743] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.091397] [D] [thread 114497] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:33619 queryId=1 querySubPlanId = 11[m
[36m[15:47:38.091670] [D] [thread 114497] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:35043)})
  SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.34:44283 1::48::0::0})
[m
[36m[15:47:38.091717] [D] [thread 114497] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:47:38.091872] [D] [thread 114497] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:47:38.092120] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.092298] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.092483] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.092631] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.092997] [D] [thread 114497] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.34:44283 1::48::0::0}[m
[36m[15:47:38.093120] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.093261] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.093513] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.093657] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.093781] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.093912] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.099704] [D] [thread 114497] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=4[m
[36m[15:47:38.099783] [D] [thread 114497] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:47:38.099805] [D] [thread 114497] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:47:38.099918] [D] [thread 114497] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.31:38857[m
[36m[15:47:38.099949] [D] [thread 114497] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:38857 queryId=1 querySubPlanId = 12[m
[36m[15:47:38.100156] [D] [thread 114497] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(59: {NetworkSinkDescriptor(partition=1::57::0::0;nodeLocation=tcp://192.168.2.11:35043)})
  SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.38:39583 1::54::0::0})
[m
[36m[15:47:38.100191] [D] [thread 114497] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:47:38.100380] [D] [thread 114497] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:47:38.100681] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.100864] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.101023] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.101162] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.101529] [D] [thread 114497] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.38:39583 1::54::0::0}[m
[36m[15:47:38.101647] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.101786] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.102031] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.102171] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.102290] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.102420] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.108240] [D] [thread 114497] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:38857 queryId=1 querySubPlanId = 13[m
[36m[15:47:38.108575] [D] [thread 114497] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(65: {NetworkSinkDescriptor(partition=1::63::0::0;nodeLocation=tcp://192.168.2.11:35043)})
  SOURCE(60,,NetworkSourceDescriptor{tcp://192.168.2.37:38485 1::60::0::0})
[m
[36m[15:47:38.108626] [D] [thread 114497] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:47:38.108792] [D] [thread 114497] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:47:38.109052] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.109235] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.109390] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.109528] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.109891] [D] [thread 114497] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.37:38485 1::60::0::0}[m
[36m[15:47:38.110015] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.110158] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.110416] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.110561] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.110684] [D] [thread 114497] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:38.110812] [D] [thread 114497] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:47:38.116670] [D] [thread 114497] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Register for 10 queues[m
[36m[15:47:38.983902] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:39.000754] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:39.001078] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:39.164685] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:39.165012] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:40.166235] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:40.275067] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:40.275593] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:40.282444] [D] [thread 114513] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[15:47:40.282673] [D] [thread 114513] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:47:40.283319] [D] [thread 114513] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[15:47:40.283535] [I] [thread 114513] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 66[m
[36m[15:47:40.283642] [D] [thread 114513] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:47:40.284167] [D] [thread 114513] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[15:47:40.284241] [D] [thread 114513] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:47:40.284784] [D] [thread 114513] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[15:47:40.286201] [I] [thread 114513] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 67[m
[36m[15:47:40.286310] [D] [thread 114513] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:47:40.286884] [D] [thread 114513] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[15:47:40.286955] [D] [thread 114513] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:47:40.287373] [D] [thread 114513] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[15:47:40.288726] [D] [thread 114513] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[15:47:40.288834] [D] [thread 114513] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:47:40.289395] [D] [thread 114513] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[15:47:40.289565] [I] [thread 114513] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 68[m
[36m[15:47:40.289650] [D] [thread 114513] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:47:40.290135] [D] [thread 114513] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[15:47:40.290199] [D] [thread 114513] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:47:40.290560] [D] [thread 114513] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[15:47:40.291918] [D] [thread 114513] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[15:47:40.292024] [D] [thread 114513] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:47:40.292480] [D] [thread 114513] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[15:47:40.292637] [I] [thread 114513] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 69[m
[36m[15:47:40.292725] [D] [thread 114513] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:47:40.293185] [D] [thread 114513] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[15:47:40.293427] [D] [thread 114513] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:47:40.293863] [D] [thread 114513] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[15:47:40.295424] [D] [thread 114513] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[15:47:40.295527] [D] [thread 114513] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:47:40.295950] [D] [thread 114513] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[15:47:40.296100] [I] [thread 114513] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 70[m
[36m[15:47:40.296237] [D] [thread 114513] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:47:40.296794] [D] [thread 114513] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[15:47:40.296858] [D] [thread 114513] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:47:40.297240] [D] [thread 114513] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[15:47:40.298609] [D] [thread 114513] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[15:47:40.298714] [D] [thread 114513] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:47:40.299129] [D] [thread 114513] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[15:47:40.299282] [I] [thread 114513] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 71[m
[36m[15:47:40.299413] [D] [thread 114513] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:47:40.299905] [D] [thread 114513] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[15:47:40.299964] [D] [thread 114513] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:47:40.300312] [D] [thread 114513] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[15:47:40.301924] [D] [thread 114513] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[15:47:40.302035] [D] [thread 114513] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:47:40.303707] [D] [thread 114513] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[15:47:40.304006] [I] [thread 114513] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 72[m
[36m[15:47:40.304746] [D] [thread 114513] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:47:40.305626] [D] [thread 114513] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[15:47:40.305737] [D] [thread 114513] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:47:40.306535] [D] [thread 114513] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[15:47:40.307760] [D] [thread 114506] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 0:1::57::0::0[m
[36m[15:47:40.307760] [D] [thread 114507] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 2:1::57::0::0[m
[32m[15:47:40.307933] [I] [thread 114507] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=2) Data[m
[33m[1m[15:47:40.308061] [W] [thread 114507] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=2) NOT REGISTERED[m
[32m[15:47:40.308071] [I] [thread 114506] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=0) Data[m
[33m[1m[15:47:40.308117] [W] [thread 114506] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[15:47:40.308152] [W] [thread 114507] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::57::0::0[m
[33m[1m[15:47:40.308163] [W] [thread 114506] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::57::0::0[m
[33m[1m[15:47:40.308373] [W] [thread 114507] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::57::0::0[m
[33m[1m[15:47:40.308570] [W] [thread 114506] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::57::0::0[m
[36m[15:47:40.308806] [D] [thread 114506] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 1:1::57::0::0[m
[32m[15:47:40.308864] [I] [thread 114506] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=1) Data[m
[33m[1m[15:47:40.308912] [W] [thread 114506] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=1) NOT REGISTERED[m
[36m[15:47:40.308933] [D] [thread 114507] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 3:1::57::0::0[m
Dumping queryPlan: SINK(67: {FileSinkDescriptor()})
  SOURCE(70,,NetworkSourceDescriptor{tcp://192.168.2.12:36559 1::33::0::0})
  SOURCE(66,,NetworkSourceDescriptor{tcp://192.168.2.12:36559 1::39::0::0})
  SOURCE(69,,NetworkSourceDescriptor{tcp://192.168.2.30:34139 1::45::0::0})
  SOURCE(72,,NetworkSourceDescriptor{tcp://192.168.2.30:34139 1::51::0::0})
  SOURCE(68,,NetworkSourceDescriptor{tcp://192.168.2.31:39899 1::57::0::0})
  SOURCE(71,,NetworkSourceDescriptor{tcp://192.168.2.31:39899 1::63::0::0})
[33m[1m
[15:47:40.308946] [W] [thread 114506] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::57::0::0[m
[32m[15:47:40.308969] [I] [thread 114507] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=3) Data[m
[33m[1m[15:47:40.309002] [W] [thread 114507] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[15:47:40.309028] [W] [thread 114507] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::57::0::0[m
[33m[1m[15:47:40.309037] [W] [thread 114506] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::57::0::0[m
[33m[1m[15:47:40.309074] [W] [thread 114507] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::57::0::0[m
[36m[15:47:40.309087] [D] [thread 114506] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 1:1::39::0::0[m
[32m[15:47:40.309114] [I] [thread 114506] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) Data[m
[33m[1m[15:47:40.309145] [W] [thread 114506] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[15:47:40.309169] [W] [thread 114506] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::39::0::0[m
[33m[1m[15:47:40.309211] [W] [thread 114506] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::39::0::0[m
[36m[15:47:40.309892] [D] [thread 114513] [WorkerRPCServer.cpp:45] [RegisterQuery] WorkerRPCServer::RegisterQuery: got request for queryId: 1 plan=SINK(67: {FileSinkDescriptor()})
  SOURCE(70,,NetworkSourceDescriptor{tcp://192.168.2.12:36559 1::33::0::0})
  SOURCE(66,,NetworkSourceDescriptor{tcp://192.168.2.12:36559 1::39::0::0})
  SOURCE(69,,NetworkSourceDescriptor{tcp://192.168.2.30:34139 1::45::0::0})
  SOURCE(72,,NetworkSourceDescriptor{tcp://192.168.2.30:34139 1::51::0::0})
  SOURCE(68,,NetworkSourceDescriptor{tcp://192.168.2.31:39899 1::57::0::0})
  SOURCE(71,,NetworkSourceDescriptor{tcp://192.168.2.31:39899 1::63::0::0})
[m
[32m[15:47:40.309940] [I] [thread 114513] [NodeEngine.cpp:112] [registerQueryInNodeEngine] Creating ExecutableQueryPlan for 1 7 [m
[32m[15:47:40.310080] [I] [thread 114513] [NautilusQueryCompiler.cpp:59] [compileQuery] Compile Query with Nautilus[m
[36m[15:47:40.310295] [D] [thread 114507] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 3:1::39::0::0[m
[32m[15:47:40.310354] [I] [thread 114507] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) Data[m
[33m[1m[15:47:40.310404] [W] [thread 114507] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[15:47:40.310554] [W] [thread 114507] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::39::0::0[m
[36m[15:47:40.310400] [D] [thread 114513] [NautilusQueryCompiler.cpp:70] [compileQuery] compile query with id: 1 subPlanId: 7[m
[33m[1m[15:47:40.310672] [W] [thread 114507] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::39::0::0[m
[36m[15:47:40.310915] [D] [thread 114513] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-7-2023-11-10 15:47:40 - 1. LogicalQueryPlan[m
[32m[15:47:40.311732] [I] [thread 114513] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 73[m
[36m[15:47:40.311769] [D] [thread 114506] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 2:1::39::0::0[m
[32m[15:47:40.311818] [I] [thread 114506] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) Data[m
[33m[1m[15:47:40.311867] [W] [thread 114506] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) NOT REGISTERED[m
[32m[15:47:40.311868] [I] [thread 114513] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[32m[15:47:40.311901] [I] [thread 114513] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[15:47:40.311909] [I] [thread 114513] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[33m[1m[15:47:40.311910] [W] [thread 114506] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::39::0::0[m
[32m[15:47:40.311932] [I] [thread 114513] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:47:40.311942] [I] [thread 114513] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:47:40.311951] [I] [thread 114513] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
Dumping queryPlan: [32m[15:47:40.311960] [I] [thread 114513] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:47:40.311969] [I] [thread 114513] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
PhysicalSinkOperator
  PhysicalMultiplexOperator
    PhysicalSourceOperator
    PhysicalSourceOperator
    PhysicalSourceOperator
    PhysicalSourceOperator
    PhysicalSourceOperator
    PhysicalSourceOperator

[32m[15:47:40.311977] [I] [thread 114513] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[15:47:40.312062] [D] [thread 114507] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 0:1::39::0::0[m
[32m[15:47:40.312078] [I] [thread 114513] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[33m[1m[15:47:40.312103] [W] [thread 114506] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::39::0::0[m
[32m[15:47:40.312110] [I] [thread 114507] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) Data[m
[33m[1m[15:47:40.312149] [W] [thread 114507] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[15:47:40.312176] [W] [thread 114507] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::39::0::0[m
[33m[1m[15:47:40.312249] [W] [thread 114507] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::39::0::0[m
[32m[15:47:40.312621] [I] [thread 114513] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 74[m
[36m[15:47:40.312829] [D] [thread 114513] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[32m[15:47:40.312857] [I] [thread 114513] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[15:47:40.312865] [I] [thread 114513] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[36m[15:47:40.312966] [D] [thread 114513] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[15:47:40.312984] [D] [thread 114513] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[15:47:40.313031] [D] [thread 114513] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[15:47:40.313055] [D] [thread 114513] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[15:47:40.313203] [I] [thread 114513] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 75[m
[36m[15:47:40.313336] [D] [thread 114513] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[15:47:40.313366] [D] [thread 114513] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[15:47:40.313413] [I] [thread 114513] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[15:47:40.313424] [I] [thread 114513] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[15:47:40.313439] [I] [thread 114513] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[15:47:40.313542] [D] [thread 114513] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[15:47:40.313565] [D] [thread 114513] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[15:47:40.313643] [I] [thread 114513] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 76[m
[36m[15:47:40.313746] [D] [thread 114513] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[15:47:40.313768] [D] [thread 114513] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[15:47:40.313810] [I] [thread 114513] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[15:47:40.313819] [I] [thread 114513] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[15:47:40.313830] [I] [thread 114513] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[15:47:40.313915] [D] [thread 114513] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[15:47:40.313933] [D] [thread 114513] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[36m[15:47:40.313942] [D] [thread 114506] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 1:1::45::0::0[m
[32m[15:47:40.313989] [I] [thread 114513] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 77[m
[32m[15:47:40.313992] [I] [thread 114506] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=1) Data[m
[33m[1m[15:47:40.314042] [W] [thread 114506] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[15:47:40.314078] [W] [thread 114506] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::45::0::0[m
[36m[15:47:40.314082] [D] [thread 114513] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[15:47:40.314104] [D] [thread 114513] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[15:47:40.314151] [I] [thread 114513] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[15:47:40.314160] [I] [thread 114513] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
Dumping pipelineQueryPlan: [32m[15:47:40.314172] [I] [thread 114513] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[33m[1m[15:47:40.314174] [W] [thread 114506] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::45::0::0[m
[36m[15:47:40.314271] [D] [thread 114513] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[15:47:40.314291] [D] [thread 114513] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[15:47:40.314352] [I] [thread 114513] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 78[m
[36m[15:47:40.314446] [D] [thread 114513] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[15:47:40.314468] [D] [thread 114513] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
PipelineQueryPlan: 
- queryId: 1, subPlanId: 7, no. pipelines: 7
- pipeline: - Id: 1, Type: SinkPipelineType, Successors: , Predecessors: 3, 4, 5, 6, 7, 8
- Queryplan: PhysicalSinkOperator

- pipeline: - Id: 3, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 4, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 5, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 6, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 7, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 8, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator


[32m[15:47:40.314510] [I] [thread 114513] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[15:47:40.314519] [I] [thread 114513] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[15:47:40.314530] [I] [thread 114513] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
Dumping pipelineQueryPlan: [36m[15:47:40.314609] [D] [thread 114513] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[15:47:40.314630] [D] [thread 114513] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[15:47:40.314681] [I] [thread 114513] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 79[m
PipelineQueryPlan: 
- queryId: 1, subPlanId: 7, no. pipelines: 7
- pipeline: - Id: 1, Type: SinkPipelineType, Successors: , Predecessors: 3, 4, 5, 6, 7, 8
- Queryplan: PhysicalSinkOperator

- pipeline: - Id: 3, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 4, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 5, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 6, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 7, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 8, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator


[36m[15:47:40.314755] [D] [thread 114507] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 3:1::45::0::0[m
[36m[15:47:40.314772] [D] [thread 114513] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[15:47:40.314791] [D] [thread 114513] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[15:47:40.314802] [I] [thread 114507] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=3) Data[m
[32m[15:47:40.314838] [I] [thread 114513] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[15:47:40.314847] [I] [thread 114513] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[33m[1m[15:47:40.314848] [W] [thread 114507] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=3) NOT REGISTERED[m
[32m[15:47:40.314857] [I] [thread 114513] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[33m[1m[15:47:40.314879] [W] [thread 114507] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::45::0::0[m
[36m[15:47:40.314928] [D] [thread 114513] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[15:47:40.314945] [D] [thread 114513] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[33m[1m[15:47:40.315005] [W] [thread 114507] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::45::0::0[m
[36m[15:47:40.315109] [D] [thread 114507] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 2:1::45::0::0[m
[36m[15:47:40.315123] [D] [thread 114506] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 0:1::45::0::0[m
[32m[15:47:40.315144] [I] [thread 114507] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=2) Data[m
[32m[15:47:40.315156] [I] [thread 114506] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) Data[m
[33m[1m[15:47:40.315177] [W] [thread 114507] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[15:47:40.315186] [W] [thread 114506] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[15:47:40.315202] [W] [thread 114507] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::45::0::0[m
[33m[1m[15:47:40.315213] [W] [thread 114506] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::45::0::0[m
[33m[1m[15:47:40.315275] [W] [thread 114507] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::45::0::0[m
[33m[1m[15:47:40.315282] [W] [thread 114506] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::45::0::0[m
[32m[15:47:40.315001] [I] [thread 114513] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 80[m
[36m[15:47:40.315441] [D] [thread 114513] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[15:47:40.315471] [D] [thread 114513] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[15:47:40.315532] [I] [thread 114513] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[15:47:40.315541] [I] [thread 114513] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[15:47:40.315554] [I] [thread 114513] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[15:47:40.315645] [D] [thread 114513] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[15:47:40.315673] [D] [thread 114513] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[36m[15:47:40.315813] [D] [thread 114513] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-7-2023-11-10 15:47:40 - 2. PhysicalQueryPlan[m
[36m[15:47:40.316049] [D] [thread 114513] [DefaultPipeliningPhase.cpp:42] [apply] Pipeline: query id: 1 - 7[m
[32m[15:47:40.316472] [I] [thread 114513] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 74[m
[36m[15:47:40.316684] [D] [thread 114513] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSinkOperator as new root of the plan.[m
[36m[15:47:40.316704] [D] [thread 114513] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:47:40.316712] [D] [thread 114513] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[15:47:40.317176] [I] [thread 114513] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 75[m
[36m[15:47:40.317318] [D] [thread 114513] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[15:47:40.317334] [D] [thread 114513] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:47:40.317352] [D] [thread 114513] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[15:47:40.317473] [I] [thread 114513] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 76[m
[36m[15:47:40.317559] [D] [thread 114513] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[15:47:40.317572] [D] [thread 114513] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:47:40.317579] [D] [thread 114513] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[15:47:40.317660] [I] [thread 114513] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 77[m
[36m[15:47:40.317744] [D] [thread 114513] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[15:47:40.317757] [D] [thread 114513] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:47:40.317764] [D] [thread 114513] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[15:47:40.317841] [I] [thread 114513] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 78[m
[36m[15:47:40.317937] [D] [thread 114513] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[15:47:40.317951] [D] [thread 114513] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:47:40.317958] [D] [thread 114513] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[15:47:40.318063] [I] [thread 114513] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 79[m
[36m[15:47:40.318144] [D] [thread 114513] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[15:47:40.318157] [D] [thread 114513] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:47:40.318164] [D] [thread 114513] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[15:47:40.318235] [I] [thread 114513] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 80[m
[36m[15:47:40.318301] [D] [thread 114513] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[15:47:40.318314] [D] [thread 114513] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:47:40.318320] [D] [thread 114513] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:47:40.318400] [D] [thread 114513] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-7-2023-11-10 15:47:40 - 3. AfterPipelinedQueryPlan[m
[36m[15:47:40.318895] [D] [thread 114513] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-7-2023-11-10 15:47:40 - 4. AfterAddScanAndEmitPhase[m
[36m[15:47:40.319287] [D] [thread 114513] [NautilusCompilationPhase.cpp:38] [apply] Generate code for query plan 1 - 7[m
[36m[15:47:40.319584] [D] [thread 114513] [ConvertLogicalToPhysicalSink.cpp:43] [createDataSink] Convert sink  74[m
[32m[15:47:40.319655] [I] [thread 114513] [ConvertLogicalToPhysicalSink.cpp:157] [createDataSink] ConvertLogicalToPhysicalSink: Creating file sink for format=CSV_FORMAT[m
[36m[15:47:40.319993] [D] [thread 114513] [FileSink.cpp:56] [FileSink] FileSink: open file= /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out[m
[32m[15:47:40.320703] [I] [thread 114513] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[15:47:40.320870] [D] [thread 114506] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 1:1::39::0::0[m
[32m[15:47:40.320923] [I] [thread 114506] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) Data[m
[33m[1m[15:47:40.320971] [W] [thread 114506] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[15:47:40.321017] [W] [thread 114506] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::39::0::0[m
[33m[1m[15:47:40.321126] [W] [thread 114506] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::39::0::0[m
[36m[15:47:40.321857] [D] [thread 114513] [DataSource.cpp:75] [DataSource] DataSource  33 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:40.322339] [D] [thread 114507] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 3:1::39::0::0[m
[32m[15:47:40.322408] [I] [thread 114507] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) Data[m
[33m[1m[15:47:40.322454] [W] [thread 114507] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[15:47:40.322486] [W] [thread 114507] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::39::0::0[m
[33m[1m[15:47:40.322605] [W] [thread 114507] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::39::0::0[m
[32m[15:47:40.322855] [I] [thread 114513] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[15:47:40.323163] [D] [thread 114513] [DataSource.cpp:75] [DataSource] DataSource  39 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[15:47:40.323560] [I] [thread 114513] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[15:47:40.323801] [D] [thread 114513] [DataSource.cpp:75] [DataSource] DataSource  45 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[15:47:40.324151] [I] [thread 114513] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[15:47:40.324394] [D] [thread 114506] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 0:1::39::0::0[m
[32m[15:47:40.324452] [I] [thread 114506] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) Data[m
[33m[1m[15:47:40.324500] [W] [thread 114506] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[15:47:40.324533] [W] [thread 114506] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::39::0::0[m
[33m[1m[15:47:40.324645] [W] [thread 114506] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::39::0::0[m
[36m[15:47:40.324899] [D] [thread 114513] [DataSource.cpp:75] [DataSource] DataSource  51 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:40.325313] [D] [thread 114507] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 2:1::39::0::0[m
[32m[15:47:40.325350] [I] [thread 114513] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[32m[15:47:40.325408] [I] [thread 114507] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) Data[m
[33m[1m[15:47:40.325461] [W] [thread 114507] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[15:47:40.325498] [W] [thread 114507] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::39::0::0[m
[33m[1m[15:47:40.325593] [W] [thread 114507] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::39::0::0[m
[36m[15:47:40.325640] [D] [thread 114506] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 0:1::57::0::0[m
[32m[15:47:40.325675] [I] [thread 114506] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=0) Data[m
[33m[1m[15:47:40.325721] [W] [thread 114506] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[15:47:40.325750] [W] [thread 114506] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::57::0::0[m
[33m[1m[15:47:40.325813] [W] [thread 114506] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::57::0::0[m
[36m[15:47:40.325936] [D] [thread 114507] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 3:1::57::0::0[m
[32m[15:47:40.325978] [I] [thread 114507] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=3) Data[m
[33m[1m[15:47:40.326016] [W] [thread 114507] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[15:47:40.326061] [W] [thread 114507] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::57::0::0[m
[33m[1m[15:47:40.326143] [W] [thread 114507] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::57::0::0[m
[36m[15:47:40.326326] [D] [thread 114513] [DataSource.cpp:75] [DataSource] DataSource  57 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:40.326381] [D] [thread 114506] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 1:1::57::0::0[m
[32m[15:47:40.326425] [I] [thread 114506] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=1) Data[m
[33m[1m[15:47:40.326482] [W] [thread 114506] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[15:47:40.326515] [W] [thread 114506] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::57::0::0[m
[33m[1m[15:47:40.326599] [W] [thread 114506] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::57::0::0[m
[36m[15:47:40.326795] [D] [thread 114507] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 2:1::57::0::0[m
[32m[15:47:40.326804] [I] [thread 114513] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[32m[15:47:40.326843] [I] [thread 114507] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=2) Data[m
[33m[1m[15:47:40.326886] [W] [thread 114507] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[15:47:40.326917] [W] [thread 114507] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::57::0::0[m
[33m[1m[15:47:40.327008] [W] [thread 114507] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::57::0::0[m
[36m[15:47:40.327090] [D] [thread 114513] [DataSource.cpp:75] [DataSource] DataSource  63 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:47:40.327288] [D] [thread 114506] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 1:1::45::0::0[m
[32m[15:47:40.327361] [I] [thread 114506] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=1) Data[m
[33m[1m[15:47:40.327409] [W] [thread 114506] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[15:47:40.327442] [W] [thread 114506] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::45::0::0[m
[33m[1m[15:47:40.327511] [W] [thread 114506] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::45::0::0[m
[36m[15:47:40.327779] [D] [thread 114507] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 3:1::45::0::0[m
[32m[15:47:40.327857] [I] [thread 114507] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=3) Data[m
[33m[1m[15:47:40.327911] [W] [thread 114507] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[15:47:40.327948] [W] [thread 114507] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::45::0::0[m
[33m[1m[15:47:40.328070] [W] [thread 114507] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::45::0::0[m
[36m[15:47:40.328233] [D] [thread 114513] [NodeEngine.cpp:131] [registerQueryInNodeEngine] Runtime: registerQueryInNodeEngine query with queryId= 1 querySubPlanId = 7[m
[36m[15:47:40.328265] [D] [thread 114506] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 2:1::45::0::0[m
[32m[15:47:40.328313] [I] [thread 114506] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=2) Data[m
[33m[1m[15:47:40.328392] [W] [thread 114506] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[15:47:40.328427] [W] [thread 114506] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::45::0::0[m
[36m[15:47:40.328446] [D] [thread 114513] [NodeEngine.cpp:137] [registerQueryInNodeEngine] Runtime: register of QEP  7  as a singleton[m
[36m[15:47:40.328469] [D] [thread 114513] [QueryManagerLifecycle.cpp:38] [registerQuery] AbstractQueryManager::registerQueryInNodeEngine: query 1 subquery=7[m
[33m[1m[15:47:40.328514] [W] [thread 114506] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::45::0::0[m
[36m[15:47:40.328519] [D] [thread 114513] [QueryManagerLifecycle.cpp:48] [registerQuery] AbstractQueryManager: resolving sources for query  1  with sources= 6[m
[36m[15:47:40.328559] [D] [thread 114513] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  33  not found. Creating new element with with qep [m
[36m[15:47:40.328705] [D] [thread 114507] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 0:1::45::0::0[m
[32m[15:47:40.328748] [I] [thread 114507] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) Data[m
[33m[1m[15:47:40.328790] [W] [thread 114507] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) NOT REGISTERED[m
[36m[15:47:40.328816] [D] [thread 114513] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  39  not found. Creating new element with with qep [m
[33m[1m[15:47:40.328821] [W] [thread 114507] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::45::0::0[m
[36m[15:47:40.328868] [D] [thread 114513] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  45  not found. Creating new element with with qep [m
[36m[15:47:40.328889] [D] [thread 114513] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  51  not found. Creating new element with with qep [m
2023-11-10 15:47:40.329 setup: queryId=1, querySubPlanId=7; 
[33m[1m[15:47:40.328899] [W] [thread 114507] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::45::0::0[m
[36m[15:47:40.328908] [D] [thread 114513] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  57  not found. Creating new element with with qep [m
[36m[15:47:40.328945] [D] [thread 114513] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  63  not found. Creating new element with with qep [m
2023-11-10 15:47:40.329 start: queryId=1, querySubPlanId=7; 
[36m[15:47:40.328983] [D] [thread 114513] [QueryManagerLifecycle.cpp:68] [registerQuery] queryToStatisticsMap add for= 7  pair queryId= 1  subplanId= 7[m
[36m[15:47:40.329477] [D] [thread 114513] [ExecutableQueryPlan.cpp:126] [setup] QueryExecutionPlan: setup queryId=1 querySubPlanId=7[m
[36m[15:47:40.329604] [D] [thread 114513] [ExecutableQueryPlan.cpp:144] [start] QueryExecutionPlan: start query=1 subplan=7[m
[36m[15:47:40.329940] [D] [thread 114513] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::33::0::0 from 192.168.2.12[m
[36m[15:47:40.330253] [D] [thread 114513] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::33::0::0=1[m
[36m[15:47:40.330307] [D] [thread 114513] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff280137c0  started successfully[m
[36m[15:47:40.330361] [D] [thread 114513] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::39::0::0 from 192.168.2.12[m
[36m[15:47:40.330421] [D] [thread 114513] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::39::0::0=1[m
[36m[15:47:40.330435] [D] [thread 114513] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff28018410  started successfully[m
[36m[15:47:40.330465] [D] [thread 114513] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::45::0::0 from 192.168.2.30[m
[36m[15:47:40.330499] [D] [thread 114513] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::45::0::0=1[m
[36m[15:47:40.330523] [D] [thread 114513] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff280187d0  started successfully[m
[36m[15:47:40.330554] [D] [thread 114513] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::51::0::0 from 192.168.2.30[m
[36m[15:47:40.330590] [D] [thread 114513] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::51::0::0=1[m
[36m[15:47:40.330602] [D] [thread 114513] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff28018b90  started successfully[m
[36m[15:47:40.330630] [D] [thread 114513] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::57::0::0 from 192.168.2.31[m
[36m[15:47:40.330664] [D] [thread 114513] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::57::0::0=1[m
[36m[15:47:40.330677] [D] [thread 114513] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff28019210  started successfully[m
[36m[15:47:40.330704] [D] [thread 114513] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::63::0::0 from 192.168.2.31[m
[36m[15:47:40.330740] [D] [thread 114513] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::63::0::0=1[m
[36m[15:47:40.330752] [D] [thread 114513] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff28019b40  started successfully[m
[36m[15:47:40.330803] [D] [thread 114513] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[15:47:40.330927] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[15:47:40.331267] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[15:47:40.332149] [D] [thread 114510] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[15:47:40.332149] [D] [thread 114508] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[15:47:40.332149] [D] [thread 114511] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[15:47:40.332149] [D] [thread 114509] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[15:47:40.332413] [D] [thread 114513] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::33::0::0[m
[36m[15:47:40.332507] [D] [thread 114513] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[15:47:40.332526] [D] [thread 114513] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff280137c0  started successfully[m
[36m[15:47:40.332557] [D] [thread 114513] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[15:47:40.332630] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[15:47:40.332854] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[15:47:40.333295] [D] [thread 114511] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[15:47:40.333295] [D] [thread 114509] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[15:47:40.333295] [D] [thread 114510] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[15:47:40.333295] [D] [thread 114508] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[15:47:40.333561] [D] [thread 114513] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::39::0::0[m
[36m[15:47:40.333616] [D] [thread 114513] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[15:47:40.333633] [D] [thread 114513] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff28018410  started successfully[m
[36m[15:47:40.333660] [D] [thread 114513] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[36m[15:47:40.333724] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[15:47:40.333839] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[15:47:40.334227] [D] [thread 114510] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[15:47:40.334227] [D] [thread 114508] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[15:47:40.334227] [D] [thread 114511] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[15:47:40.334227] [D] [thread 114509] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[15:47:40.334425] [D] [thread 114513] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::45::0::0[m
[36m[15:47:40.334472] [D] [thread 114513] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[36m[15:47:40.334488] [D] [thread 114513] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff280187d0  started successfully[m
[36m[15:47:40.334522] [D] [thread 114513] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[15:47:40.334591] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[15:47:40.334685] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[15:47:40.335041] [D] [thread 114509] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[15:47:40.335042] [D] [thread 114510] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[15:47:40.335084] [D] [thread 114508] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[15:47:40.335261] [D] [thread 114511] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[15:47:40.335352] [D] [thread 114513] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::51::0::0[m
[36m[15:47:40.335399] [D] [thread 114513] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[15:47:40.335415] [D] [thread 114513] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff28018b90  started successfully[m
[36m[15:47:40.335444] [D] [thread 114513] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:57 PartitionId: 0 SubpartitionID: 0[m
[36m[15:47:40.335503] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[15:47:40.335623] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[15:47:40.336160] [D] [thread 114511] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::57::0::0[m
[36m[15:47:40.336160] [D] [thread 114510] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::57::0::0[m
[36m[15:47:40.336160] [D] [thread 114509] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::57::0::0[m
[36m[15:47:40.336283] [D] [thread 114508] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::57::0::0[m
[36m[15:47:40.336461] [D] [thread 114513] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::57::0::0[m
[36m[15:47:40.336514] [D] [thread 114513] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:57 PartitionId: 0 SubpartitionID: 0[m
[36m[15:47:40.336532] [D] [thread 114513] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff28019210  started successfully[m
[36m[15:47:40.336562] [D] [thread 114513] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:63 PartitionId: 0 SubpartitionID: 0[m
[36m[15:47:40.336629] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[15:47:40.336735] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[15:47:40.337246] [D] [thread 114509] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::63::0::0[m
[36m[15:47:40.337246] [D] [thread 114511] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::63::0::0[m
[36m[15:47:40.337246] [D] [thread 114508] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::63::0::0[m
[36m[15:47:40.337323] [D] [thread 114510] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::63::0::0[m
[36m[15:47:40.337481] [D] [thread 114513] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::63::0::0[m
[36m[15:47:40.337632] [D] [thread 114513] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:63 PartitionId: 0 SubpartitionID: 0[m
[36m[15:47:40.337675] [D] [thread 114513] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff28019b40  started successfully[m
[36m[15:47:40.337792] [D] [thread 114513] [QueryManagerLifecycle.cpp:158] [registerQuery] AbstractQueryManager: start sink  FileSink()[m
[36m[15:47:40.338197] [D] [thread 114513] [NodeEngine.cpp:144] [registerQueryInNodeEngine] Runtime: register of subqep  7  succeeded[m
[36m[15:47:40.338320] [D] [thread 114513] [WorkerRPCServer.cpp:54] [RegisterQuery] WorkerRPCServer::RegisterQuery: success[m
[36m[15:47:40.342699] [D] [thread 114506] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 1:1::39::0::0[m
[32m[15:47:40.342796] [I] [thread 114506] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) Data[m
[36m[15:47:40.342880] [D] [thread 114506] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::39::0::0(threadId=1) REGISTERED[m
[36m[15:47:40.343967] [D] [thread 114507] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 3:1::39::0::0[m
[32m[15:47:40.344040] [I] [thread 114507] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) Data[m
[36m[15:47:40.344092] [D] [thread 114507] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::39::0::0(threadId=3) REGISTERED[m
[36m[15:47:40.347341] [D] [thread 114506] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 0:1::39::0::0[m
[36m[15:47:40.347350] [D] [thread 114507] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 2:1::39::0::0[m
[32m[15:47:40.347444] [I] [thread 114507] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) Data[m
[32m[15:47:40.347444] [I] [thread 114506] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) Data[m
[36m[15:47:40.347538] [D] [thread 114507] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::39::0::0(threadId=2) REGISTERED[m
[36m[15:47:40.347553] [D] [thread 114506] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::39::0::0(threadId=0) REGISTERED[m
[36m[15:47:40.350921] [D] [thread 114507] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 1:1::57::0::0[m
[36m[15:47:40.350993] [D] [thread 114506] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 0:1::57::0::0[m
[32m[15:47:40.351017] [I] [thread 114507] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=1) Data[m
[32m[15:47:40.351038] [I] [thread 114506] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=0) Data[m
[36m[15:47:40.351120] [D] [thread 114507] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::57::0::0(threadId=1) REGISTERED[m
[36m[15:47:40.351138] [D] [thread 114506] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::57::0::0(threadId=0) REGISTERED[m
[36m[15:47:40.351280] [D] [thread 114506] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 3:1::57::0::0[m
[36m[15:47:40.351280] [D] [thread 114507] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 2:1::57::0::0[m
[32m[15:47:40.351332] [I] [thread 114506] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=3) Data[m
[32m[15:47:40.351336] [I] [thread 114507] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=2) Data[m
[36m[15:47:40.351434] [D] [thread 114507] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::57::0::0(threadId=2) REGISTERED[m
[36m[15:47:40.351458] [D] [thread 114506] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::57::0::0(threadId=3) REGISTERED[m
[36m[15:47:40.351518] [D] [thread 114507] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 1:1::45::0::0[m
[32m[15:47:40.351556] [I] [thread 114507] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=1) Data[m
[36m[15:47:40.351603] [D] [thread 114507] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::45::0::0(threadId=1) REGISTERED[m
[36m[15:47:40.351621] [D] [thread 114506] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 2:1::45::0::0[m
[32m[15:47:40.351663] [I] [thread 114506] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=2) Data[m
[36m[15:47:40.351680] [D] [thread 114507] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 0:1::45::0::0[m
[32m[15:47:40.351715] [I] [thread 114507] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) Data[m
[36m[15:47:40.351755] [D] [thread 114507] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::45::0::0(threadId=0) REGISTERED[m
[36m[15:47:40.351727] [D] [thread 114506] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::45::0::0(threadId=2) REGISTERED[m
[36m[15:47:40.351868] [D] [thread 114506] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 3:1::45::0::0[m
[32m[15:47:40.351931] [I] [thread 114506] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=3) Data[m
[36m[15:47:40.352039] [D] [thread 114506] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::45::0::0(threadId=3) REGISTERED[m
[36m[15:47:40.359691] [D] [thread 114507] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 2:1::33::0::0[m
[36m[15:47:40.359691] [D] [thread 114506] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 1:1::33::0::0[m
[32m[15:47:40.359840] [I] [thread 114507] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=2) Data[m
[32m[15:47:40.359850] [I] [thread 114506] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=1) Data[m
[36m[15:47:40.359934] [D] [thread 114507] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=2) REGISTERED[m
[36m[15:47:40.359992] [D] [thread 114506] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=1) REGISTERED[m
[36m[15:47:40.360381] [D] [thread 114506] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 3:1::33::0::0[m
[32m[15:47:40.360473] [I] [thread 114506] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=3) Data[m
[36m[15:47:40.360680] [D] [thread 114506] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=3) REGISTERED[m
[36m[15:47:40.361144] [D] [thread 114507] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 0:1::33::0::0[m
[32m[15:47:40.361209] [I] [thread 114507] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=0) Data[m
[36m[15:47:40.361279] [D] [thread 114507] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=0) REGISTERED[m
[36m[15:47:40.367101] [D] [thread 114506] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 0:1::63::0::0[m
[32m[15:47:40.367237] [I] [thread 114506] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::63::0::0(threadId=0) Data[m
[36m[15:47:40.367333] [D] [thread 114506] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::63::0::0(threadId=0) REGISTERED[m
[36m[15:47:40.368032] [D] [thread 114507] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 2:1::51::0::0[m
[36m[15:47:40.368071] [D] [thread 114506] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 3:1::63::0::0[m
[32m[15:47:40.368126] [I] [thread 114506] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::63::0::0(threadId=3) Data[m
[32m[15:47:40.368127] [I] [thread 114507] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) Data[m
[36m[15:47:40.368234] [D] [thread 114507] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=2) REGISTERED[m
[36m[15:47:40.368447] [D] [thread 114506] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::63::0::0(threadId=3) REGISTERED[m
[36m[15:47:40.368907] [D] [thread 114507] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 0:1::51::0::0[m
[32m[15:47:40.369000] [I] [thread 114507] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) Data[m
[36m[15:47:40.369072] [D] [thread 114507] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=0) REGISTERED[m
[36m[15:47:40.370151] [D] [thread 114506] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 2:1::63::0::0[m
[32m[15:47:40.370255] [I] [thread 114506] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::63::0::0(threadId=2) Data[m
[36m[15:47:40.370334] [D] [thread 114506] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::63::0::0(threadId=2) REGISTERED[m
[36m[15:47:40.370413] [D] [thread 114507] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 1:1::63::0::0[m
[32m[15:47:40.370463] [I] [thread 114507] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::63::0::0(threadId=1) Data[m
[36m[15:47:40.370518] [D] [thread 114507] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::63::0::0(threadId=1) REGISTERED[m
[36m[15:47:40.371142] [D] [thread 114506] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 3:1::51::0::0[m
[32m[15:47:40.371204] [I] [thread 114506] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) Data[m
[36m[15:47:40.371266] [D] [thread 114506] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=3) REGISTERED[m
[36m[15:47:40.371896] [D] [thread 114507] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): ClientAnnouncement received for channel 1:1::51::0::0[m
[32m[15:47:40.371978] [I] [thread 114507] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) Data[m
[36m[15:47:40.372044] [D] [thread 114507] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=1) REGISTERED[m
[36m[15:47:41.213227] [D] [thread 114497] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Register succeed[m
[36m[15:47:41.213350] [D] [thread 114497] [QueryDeploymentPhase.cpp:215] [deployQuery] QueryDeploymentPhase: Finished deploying execution plan for query with Id 1 [m
[36m[15:47:41.214047] [D] [thread 114497] [QueryDeploymentPhase.cpp:94] [execute] QueryDeploymentPhase: deployment for shared query 1 successful[m
[36m[15:47:41.214232] [D] [thread 114497] [QueryDeploymentPhase.cpp:101] [execute] QueryService: start query[m
[36m[15:47:41.214267] [D] [thread 114497] [QueryDeploymentPhase.cpp:219] [startQuery] QueryDeploymentPhase::startQuery queryId= 1[m
[36m[15:47:41.214468] [D] [thread 114497] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=6 and IP=192.168.2.33[m
[36m[15:47:41.214551] [D] [thread 114497] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.33:39511 queryId=1[m
[36m[15:47:41.220260] [D] [thread 114497] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=5 and IP=192.168.2.32[m
[36m[15:47:41.220482] [D] [thread 114497] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.32:44575 queryId=1[m
[36m[15:47:41.225194] [D] [thread 114497] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=8 and IP=192.168.2.35[m
[36m[15:47:41.225281] [D] [thread 114497] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.35:39721 queryId=1[m
[36m[15:47:41.230212] [D] [thread 114497] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=7 and IP=192.168.2.34[m
[36m[15:47:41.230296] [D] [thread 114497] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.34:44541 queryId=1[m
[36m[15:47:41.235644] [D] [thread 114497] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=10 and IP=192.168.2.38[m
[36m[15:47:41.235780] [D] [thread 114497] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.38:39609 queryId=1[m
[36m[15:47:41.241229] [D] [thread 114497] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=9 and IP=192.168.2.37[m
[36m[15:47:41.241313] [D] [thread 114497] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.37:42321 queryId=1[m
[36m[15:47:41.246291] [D] [thread 114497] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=1 and IP=192.168.2.11[m
[36m[15:47:41.246423] [D] [thread 114497] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.11:40941 queryId=1[m
[36m[15:47:41.252017] [D] [thread 114497] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=2 and IP=192.168.2.12[m
[36m[15:47:41.252112] [D] [thread 114497] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.12:36563 queryId=1[m
[36m[15:47:41.256483] [D] [thread 114497] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=3 and IP=192.168.2.30[m
[36m[15:47:41.256601] [D] [thread 114497] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.30:33619 queryId=1[m
[36m[15:47:41.261575] [D] [thread 114497] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=4 and IP=192.168.2.31[m
[36m[15:47:41.261656] [D] [thread 114497] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.31:38857 queryId=1[m
[36m[15:47:41.266589] [D] [thread 114497] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Start for 10 queues[m
[36m[15:47:41.276471] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:41.293795] [D] [thread 114571] [WorkerRPCServer.cpp:77] [StartQuery] WorkerRPCServer::StartQuery: got request for 1[m
[36m[15:47:41.293893] [D] [thread 114571] [NodeEngine.cpp:158] [startQuery] Runtime: startQuery= 1[m
[36m[15:47:41.294009] [D] [thread 114571] [QueryManagerLifecycle.cpp:183] [startQuery] AbstractQueryManager::startQuery: query id  7   1[m
[36m[15:47:41.294137] [D] [thread 114571] [QueryStatistics.cpp:48] [setTimestampQueryStart] QueryStatistics::setTimestampQueryStart called with  1699631261294[m
[36m[15:47:41.294157] [D] [thread 114571] [NodeEngine.cpp:170] [startQuery] Runtime: start of QEP  7  succeeded[m
[36m[15:47:41.294181] [D] [thread 114571] [WorkerRPCServer.cpp:80] [StartQuery] WorkerRPCServer::StartQuery: success[m
[36m[15:47:41.311067] [D] [thread 114497] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Start succeed[m
[36m[15:47:41.311230] [D] [thread 114497] [QueryDeploymentPhase.cpp:238] [startQuery] QueryDeploymentPhase: Finished starting execution plan for query with Id 1[m
[32m[15:47:41.311726] [I] [thread 114497] [GlobalQueryPlan.cpp:124] [removeFailedOrStoppedSharedQueryPlans] GlobalQueryPlan: remove empty metadata information.[m
[36m[15:47:41.311875] [D] [thread 114497] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[15:47:41.582872] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:41.583209] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:42.584539] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:43.205494] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:43.205855] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:43.206976] [D] [thread 114577] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:47:43.207099] [I] [thread 114577] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:47:43.207121] [I] [thread 114577] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:47:43.207299] [I] [thread 114577] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:47:43.207315] [I] [thread 114577] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:47:43.369101] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:43.369473] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:44.370719] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:45.005096] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:45.005417] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:45.006428] [D] [thread 114584] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:47:45.006522] [I] [thread 114584] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:47:45.006541] [I] [thread 114584] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:47:45.006657] [I] [thread 114584] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:47:45.006670] [I] [thread 114584] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:47:45.166252] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:45.166581] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:46.167832] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:46.793968] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:46.794307] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:46.795492] [D] [thread 114589] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:47:46.795591] [I] [thread 114589] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:47:46.795610] [I] [thread 114589] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:47:46.795725] [I] [thread 114589] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:47:46.795738] [I] [thread 114589] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:47:46.952439] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:46.952758] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:47.954001] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:48.574208] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:48.574832] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:48.575554] [D] [thread 114594] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:47:48.575649] [I] [thread 114594] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:47:48.575668] [I] [thread 114594] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:47:48.575787] [I] [thread 114594] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:47:48.575799] [I] [thread 114594] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:47:48.730742] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:48.731307] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:49.732613] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:50.427331] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:50.427857] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:50.428715] [D] [thread 114600] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:47:50.428802] [I] [thread 114600] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:47:50.428818] [I] [thread 114600] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:47:50.428930] [I] [thread 114600] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:47:50.428944] [I] [thread 114600] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:47:50.577015] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:50.577563] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:51.578791] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:52.191371] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:52.191692] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:52.192783] [D] [thread 114605] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:47:52.192881] [I] [thread 114605] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:47:52.192899] [I] [thread 114605] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:47:52.193017] [I] [thread 114605] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:47:52.193030] [I] [thread 114605] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:47:52.347083] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:52.347408] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:53.348624] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:53.985546] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:53.985881] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:53.986898] [D] [thread 114612] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:47:53.987019] [I] [thread 114612] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:47:53.987039] [I] [thread 114612] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:47:53.987167] [I] [thread 114612] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:47:53.987183] [I] [thread 114612] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:47:54.135632] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:54.135999] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:55.136486] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:55.754418] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:55.754800] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:55.756431] [D] [thread 114618] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:47:55.756528] [I] [thread 114618] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:47:55.756548] [I] [thread 114618] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:47:55.756666] [I] [thread 114618] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:47:55.756680] [I] [thread 114618] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:47:55.922525] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:55.922847] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:56.924069] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:57.546054] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:57.546385] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:57.547393] [D] [thread 114624] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:47:57.547490] [I] [thread 114624] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:47:57.547507] [I] [thread 114624] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:47:57.547620] [I] [thread 114624] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:47:57.547633] [I] [thread 114624] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:47:57.699903] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:57.700271] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:58.701692] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:59.339133] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:59.339477] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:59.340654] [D] [thread 114629] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:47:59.340751] [I] [thread 114629] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:47:59.340771] [I] [thread 114629] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:47:59.340887] [I] [thread 114629] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:47:59.340901] [I] [thread 114629] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:47:59.493599] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:47:59.493967] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:00.495270] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:01.107482] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:01.108043] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:01.108934] [D] [thread 114634] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:01.109010] [I] [thread 114634] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:01.109026] [I] [thread 114634] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:01.109134] [I] [thread 114634] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:01.109145] [I] [thread 114634] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:01.260644] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:01.261185] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:02.262464] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:02.886724] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:02.887372] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:02.888123] [D] [thread 114639] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:02.888212] [I] [thread 114639] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:02.888230] [I] [thread 114639] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:02.888377] [I] [thread 114639] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:02.888394] [I] [thread 114639] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:03.046073] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:03.046433] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:04.047645] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:04.693073] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:04.693522] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:04.694380] [D] [thread 114644] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:04.694470] [I] [thread 114644] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:04.694490] [I] [thread 114644] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:04.694605] [I] [thread 114644] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:04.694618] [I] [thread 114644] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:04.865829] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:04.866360] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:05.867658] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:06.502156] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:06.502725] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:06.503445] [D] [thread 114649] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:06.503512] [I] [thread 114649] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:06.503528] [I] [thread 114649] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:06.503634] [I] [thread 114649] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:06.503646] [I] [thread 114649] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:06.642306] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:06.643263] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:07.644559] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:08.269328] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:08.269939] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:08.270666] [D] [thread 114654] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:08.270757] [I] [thread 114654] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:08.270775] [I] [thread 114654] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:08.270892] [I] [thread 114654] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:08.270907] [I] [thread 114654] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:08.478955] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:08.479419] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:09.480680] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:10.159263] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:10.159603] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:10.160977] [D] [thread 114659] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:10.161075] [I] [thread 114659] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:10.161095] [I] [thread 114659] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:10.161213] [I] [thread 114659] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:10.161226] [I] [thread 114659] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:10.324162] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:10.324596] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:11.325901] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:11.957635] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:11.957981] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:11.959046] [D] [thread 114666] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:11.959137] [I] [thread 114666] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:11.959154] [I] [thread 114666] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:11.959263] [I] [thread 114666] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:11.959277] [I] [thread 114666] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:12.127294] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:12.127648] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:13.128875] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:13.779876] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:13.780205] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:13.781302] [D] [thread 114672] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:13.781402] [I] [thread 114672] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:13.781420] [I] [thread 114672] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:13.781535] [I] [thread 114672] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:13.781548] [I] [thread 114672] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:13.938027] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:13.938360] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:14.939618] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:15.579090] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:15.579416] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:15.580411] [D] [thread 114678] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:15.580499] [I] [thread 114678] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:15.580518] [I] [thread 114678] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:15.580636] [I] [thread 114678] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:15.580650] [I] [thread 114678] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:15.742270] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:15.742628] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:16.743841] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:17.361392] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:17.361746] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:17.362793] [D] [thread 114683] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:17.362871] [I] [thread 114683] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:17.362887] [I] [thread 114683] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:17.362993] [I] [thread 114683] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:17.363005] [I] [thread 114683] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:17.527019] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:17.527349] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:18.528719] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:19.197531] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:19.197864] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:19.198810] [D] [thread 114689] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:19.198904] [I] [thread 114689] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:19.198922] [I] [thread 114689] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:19.199040] [I] [thread 114689] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:19.199053] [I] [thread 114689] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:19.353242] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:19.353618] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:20.354922] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:20.987251] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:20.987625] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:20.989324] [D] [thread 114695] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:20.989424] [I] [thread 114695] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:20.989442] [I] [thread 114695] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:20.989559] [I] [thread 114695] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:20.989613] [I] [thread 114695] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:21.152160] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:21.152911] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:22.154256] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:22.763662] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:22.763979] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:22.765024] [D] [thread 114700] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:22.765142] [I] [thread 114700] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:22.765160] [I] [thread 114700] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:22.765282] [I] [thread 114700] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:22.765297] [I] [thread 114700] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:22.918718] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:22.919041] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:23.920205] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:24.555257] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:24.555580] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:24.556670] [D] [thread 114705] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:24.556765] [I] [thread 114705] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:24.556785] [I] [thread 114705] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:24.556901] [I] [thread 114705] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:24.556914] [I] [thread 114705] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:24.713282] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:24.713634] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:25.714871] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:26.324828] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:26.325147] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:26.326129] [D] [thread 114710] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:26.326224] [I] [thread 114710] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:26.326242] [I] [thread 114710] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:26.326359] [I] [thread 114710] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:26.326372] [I] [thread 114710] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:26.476518] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:26.476836] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:27.478031] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:28.094083] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:28.094439] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:28.095810] [D] [thread 114715] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:28.095885] [I] [thread 114715] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:28.095901] [I] [thread 114715] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:28.096009] [I] [thread 114715] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:28.096021] [I] [thread 114715] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:28.245122] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:28.245451] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:29.246650] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:29.870140] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:29.870508] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:29.871474] [D] [thread 114720] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:29.871567] [I] [thread 114720] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:29.871585] [I] [thread 114720] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:29.871701] [I] [thread 114720] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:29.871714] [I] [thread 114720] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:30.024714] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:30.025098] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:31.026371] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:31.798681] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:31.799246] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:31.800043] [D] [thread 114725] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:31.800134] [I] [thread 114725] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:31.800151] [I] [thread 114725] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:31.800267] [I] [thread 114725] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:31.800279] [I] [thread 114725] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:32.024159] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:32.025297] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:33.026560] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:34.027853] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:34.541894] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:34.542606] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:34.543314] [D] [thread 114730] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:34.543404] [I] [thread 114730] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:34.543422] [I] [thread 114730] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:34.543539] [I] [thread 114730] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:34.543553] [I] [thread 114730] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:34.587925] [D] [thread 114510] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[15:48:34.590689] [D] [thread 114510] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10620000,10680000,100,1699631261233,1699631314588
[m
[36m[15:48:34.591489] [D] [thread 114510] [QueryStatistics.cpp:54] [setTimestampFirstProcessedTask] QueryStatistics::setTimestampFirstProcessedTask called with  1699631314591[m
[36m[15:48:34.747292] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:34.747780] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:35.589011] [D] [thread 114508] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[15:48:35.589109] [D] [thread 114508] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:48:35.590209] [D] [thread 114508] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10620000,10680000,54,1699631261273,1699631315589
[m
[36m[15:48:35.749088] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:36.439605] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:36.440216] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:36.441009] [D] [thread 114735] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:36.441106] [I] [thread 114735] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:36.441123] [I] [thread 114735] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:36.441239] [I] [thread 114735] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:36.441253] [I] [thread 114735] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:36.604174] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:36.604786] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:36.727478] [D] [thread 114511] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[15:48:36.727566] [D] [thread 114511] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:48:36.728658] [D] [thread 114511] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10620000,10680000,63,1699631261283,1699631316727
[m
[36m[15:48:37.606063] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:38.053840] [D] [thread 114509] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[15:48:38.053952] [D] [thread 114509] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:48:38.055052] [D] [thread 114509] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10620000,10680000,47,1699631261263,1699631318054
[m
[36m[15:48:38.126827] [D] [thread 114510] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[15:48:38.126919] [D] [thread 114510] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:48:38.128381] [D] [thread 114510] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10620000,10680000,24,1699631261251,1699631318127
[m
[36m[15:48:38.226263] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:38.226800] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:38.227616] [D] [thread 114740] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:38.227710] [I] [thread 114740] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:38.227727] [I] [thread 114740] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:38.227845] [I] [thread 114740] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:38.227858] [I] [thread 114740] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:38.369623] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:38.370249] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:39.371535] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:39.988012] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:39.988635] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:39.989421] [D] [thread 114745] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:39.989542] [I] [thread 114745] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:39.989563] [I] [thread 114745] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:39.989685] [I] [thread 114745] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:39.989703] [I] [thread 114745] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:40.132776] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:40.133111] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:40.388683] [D] [thread 114508] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[15:48:40.388790] [D] [thread 114508] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:48:40.389975] [D] [thread 114508] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10620000,10680000,13,1699631261243,1699631320388
[m
[36m[15:48:41.134265] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:42.135559] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:42.346501] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:42.346847] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:42.347986] [D] [thread 114750] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:42.348128] [I] [thread 114750] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:42.348151] [I] [thread 114750] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:42.348402] [I] [thread 114750] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:42.348428] [I] [thread 114750] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:42.505810] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:42.506169] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:43.507361] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:44.117511] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:44.117821] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:44.118838] [D] [thread 114757] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:44.118933] [I] [thread 114757] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:44.118950] [I] [thread 114757] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:44.119065] [I] [thread 114757] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:44.119079] [I] [thread 114757] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:44.273584] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:44.273906] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:45.275120] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:45.906280] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:45.906619] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:45.908252] [D] [thread 114762] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:45.908376] [I] [thread 114762] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:45.908397] [I] [thread 114762] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:45.908513] [I] [thread 114762] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:45.908525] [I] [thread 114762] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:46.079581] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:46.079928] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:47.081195] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:47.720734] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:47.721069] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:47.722014] [D] [thread 114767] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:47.722108] [I] [thread 114767] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:47.722125] [I] [thread 114767] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:47.722239] [I] [thread 114767] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:47.722253] [I] [thread 114767] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:47.880685] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:47.881024] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:48.882278] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:49.473798] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:49.474148] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:49.475100] [D] [thread 114774] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:49.475192] [I] [thread 114774] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:49.475211] [I] [thread 114774] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:49.475327] [I] [thread 114774] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:49.475341] [I] [thread 114774] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:49.633055] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:49.633417] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:50.634672] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:51.267356] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:51.267691] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:51.268913] [D] [thread 114780] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:51.269010] [I] [thread 114780] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:51.269030] [I] [thread 114780] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:51.269145] [I] [thread 114780] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:51.269158] [I] [thread 114780] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:51.422399] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:51.422745] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:52.423989] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:53.045726] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:53.046046] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:53.047184] [D] [thread 114787] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:53.047285] [I] [thread 114787] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:53.047303] [I] [thread 114787] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:53.047420] [I] [thread 114787] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:53.047443] [I] [thread 114787] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:53.203022] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:53.203388] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:54.204623] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:54.844038] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:54.844413] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:54.845466] [D] [thread 114792] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:54.845567] [I] [thread 114792] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:54.845584] [I] [thread 114792] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:54.845699] [I] [thread 114792] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:54.845718] [I] [thread 114792] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:55.009975] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:55.010340] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:56.011563] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:56.637259] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:56.637743] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:56.638545] [D] [thread 114797] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:56.638638] [I] [thread 114797] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:56.638655] [I] [thread 114797] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:56.638770] [I] [thread 114797] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:56.638783] [I] [thread 114797] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:56.802059] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:56.802543] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:57.803825] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:58.425439] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:58.426060] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:58.426834] [D] [thread 114802] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:48:58.426927] [I] [thread 114802] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:58.426944] [I] [thread 114802] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:48:58.427061] [I] [thread 114802] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:48:58.427074] [I] [thread 114802] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:48:58.573832] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:58.574490] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:48:59.575745] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:00.218851] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:00.219367] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:00.220172] [D] [thread 114807] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:00.220261] [I] [thread 114807] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:00.220279] [I] [thread 114807] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:00.220433] [I] [thread 114807] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:00.220451] [I] [thread 114807] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:00.373731] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:00.374062] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:01.375296] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:02.083047] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:02.083376] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:02.084517] [D] [thread 114814] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:02.084597] [I] [thread 114814] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:02.084614] [I] [thread 114814] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:02.084722] [I] [thread 114814] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:02.084733] [I] [thread 114814] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:02.240016] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:02.240390] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:03.241578] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:04.091414] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:04.091997] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:04.092723] [D] [thread 114819] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:04.092817] [I] [thread 114819] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:04.092837] [I] [thread 114819] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:04.092956] [I] [thread 114819] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:04.092971] [I] [thread 114819] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:04.338544] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:04.339067] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:05.340264] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:06.098792] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:06.099120] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:06.100494] [D] [thread 114824] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:06.100585] [I] [thread 114824] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:06.100602] [I] [thread 114824] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:06.100722] [I] [thread 114824] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:06.100735] [I] [thread 114824] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:06.257956] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:06.258277] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:07.259495] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:07.938122] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:07.938474] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:07.939491] [D] [thread 114831] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:07.939592] [I] [thread 114831] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:07.939610] [I] [thread 114831] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:07.939727] [I] [thread 114831] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:07.939740] [I] [thread 114831] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:08.386396] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:08.386804] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:09.388071] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:10.096370] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:10.096735] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:10.098341] [D] [thread 114837] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:10.098471] [I] [thread 114837] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:10.098490] [I] [thread 114837] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:10.098609] [I] [thread 114837] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:10.098623] [I] [thread 114837] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:10.266362] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:10.266760] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:11.267980] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:11.924107] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:11.924504] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:11.926171] [D] [thread 114842] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:11.926265] [I] [thread 114842] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:11.926283] [I] [thread 114842] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:11.926398] [I] [thread 114842] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:11.926411] [I] [thread 114842] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:12.092789] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:12.093113] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:13.094325] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:13.808567] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:13.808911] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:13.809870] [D] [thread 114847] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:13.809961] [I] [thread 114847] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:13.809979] [I] [thread 114847] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:13.810097] [I] [thread 114847] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:13.810110] [I] [thread 114847] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:13.965024] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:13.965347] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:14.966580] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:15.635103] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:15.635453] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:15.636428] [D] [thread 114852] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:15.636520] [I] [thread 114852] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:15.636538] [I] [thread 114852] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:15.636653] [I] [thread 114852] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:15.636667] [I] [thread 114852] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:15.789639] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:15.790006] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:16.791248] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:17.465811] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:17.466152] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:17.467205] [D] [thread 114857] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:17.467305] [I] [thread 114857] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:17.467325] [I] [thread 114857] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:17.467442] [I] [thread 114857] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:17.467467] [I] [thread 114857] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:17.618447] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:17.618809] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:18.620030] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:19.280372] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:19.280737] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:19.282495] [D] [thread 114862] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:19.282579] [I] [thread 114862] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:19.282595] [I] [thread 114862] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:19.282702] [I] [thread 114862] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:19.282713] [I] [thread 114862] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:19.436393] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:19.436754] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:20.437929] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:21.058016] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:21.058476] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:21.059380] [D] [thread 114867] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:21.059471] [I] [thread 114867] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:21.059491] [I] [thread 114867] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:21.059605] [I] [thread 114867] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:21.059618] [I] [thread 114867] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:21.212719] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:21.213204] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:22.214464] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:22.925546] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:22.926226] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:22.926961] [D] [thread 114873] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:22.927053] [I] [thread 114873] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:22.927071] [I] [thread 114873] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:22.927189] [I] [thread 114873] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:22.927206] [I] [thread 114873] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:23.084831] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:23.085398] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:24.086812] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:24.766400] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:24.767124] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:24.767783] [D] [thread 114878] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:24.767873] [I] [thread 114878] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:24.767893] [I] [thread 114878] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:24.768008] [I] [thread 114878] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:24.768020] [I] [thread 114878] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:24.920853] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:24.921399] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:25.922650] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:26.550754] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:26.551353] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:26.552146] [D] [thread 114883] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:26.552242] [I] [thread 114883] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:26.552260] [I] [thread 114883] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:26.552456] [I] [thread 114883] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:26.552499] [I] [thread 114883] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:26.707662] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:26.707999] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:27.709221] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:28.353112] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:28.353431] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:28.354498] [D] [thread 114888] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:28.354601] [I] [thread 114888] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:28.354619] [I] [thread 114888] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:28.354736] [I] [thread 114888] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:28.354749] [I] [thread 114888] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:28.508793] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:28.509150] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:29.510404] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:30.141983] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:30.142337] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:30.143667] [D] [thread 114894] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:30.143760] [I] [thread 114894] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:30.143780] [I] [thread 114894] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:30.143897] [I] [thread 114894] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:30.143911] [I] [thread 114894] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:30.298967] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:30.299415] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:31.300719] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:31.959969] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:31.960296] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:31.962064] [D] [thread 114900] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:31.962179] [I] [thread 114900] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:31.962200] [I] [thread 114900] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:31.962325] [I] [thread 114900] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:31.962341] [I] [thread 114900] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:32.113335] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:32.113666] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:33.114852] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:33.772766] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:33.773134] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:33.774743] [D] [thread 114906] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:33.774838] [I] [thread 114906] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:33.774857] [I] [thread 114906] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:33.774975] [I] [thread 114906] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:33.774989] [I] [thread 114906] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:33.932350] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:33.932704] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:34.933947] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:35.614892] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:35.615462] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:35.616234] [D] [thread 114911] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:35.616354] [I] [thread 114911] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:35.616373] [I] [thread 114911] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:35.616493] [I] [thread 114911] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:35.616506] [I] [thread 114911] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:35.769572] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:35.770057] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:36.771359] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:37.437210] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:37.437794] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:37.438500] [D] [thread 114916] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:37.438591] [I] [thread 114916] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:37.438610] [I] [thread 114916] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:37.438727] [I] [thread 114916] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:37.438740] [I] [thread 114916] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:37.587050] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:37.587676] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:38.580515] [D] [thread 114511] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[15:49:38.580619] [D] [thread 114511] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:49:38.581805] [D] [thread 114511] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10680000,10740000,100,1699631314387,1699631378580
[m
[36m[15:49:38.589100] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:39.287582] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:39.288100] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:39.288921] [D] [thread 114921] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:39.288997] [I] [thread 114921] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:39.289013] [I] [thread 114921] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:39.289122] [I] [thread 114921] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:39.289133] [I] [thread 114921] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:39.436093] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:39.436650] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:40.437947] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:41.137720] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:41.138378] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:41.139173] [D] [thread 114926] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:41.139293] [I] [thread 114926] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:41.139313] [I] [thread 114926] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:41.139443] [I] [thread 114926] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:41.139459] [I] [thread 114926] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:41.286122] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:41.286708] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:42.287936] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:42.892726] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:42.893304] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:42.894074] [D] [thread 114931] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:42.894169] [I] [thread 114931] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:42.894188] [I] [thread 114931] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:42.894305] [I] [thread 114931] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:42.894318] [I] [thread 114931] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:43.045781] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:43.046142] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:44.047488] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:44.719394] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:44.719729] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:44.721414] [D] [thread 114936] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:44.721515] [I] [thread 114936] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:44.721534] [I] [thread 114936] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:44.721651] [I] [thread 114936] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:44.721664] [I] [thread 114936] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:44.873862] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:44.874234] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:45.875467] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:46.554202] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:46.554585] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:46.555578] [D] [thread 114941] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:46.555678] [I] [thread 114941] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:46.555695] [I] [thread 114941] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:46.555811] [I] [thread 114941] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:46.555835] [I] [thread 114941] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:46.705522] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:46.705970] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:47.707302] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:48.322584] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:48.323219] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:48.323997] [D] [thread 114946] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:48.324092] [I] [thread 114946] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:48.324109] [I] [thread 114946] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:48.324226] [I] [thread 114946] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:48.324240] [I] [thread 114946] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:48.482320] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:48.482844] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:48.934099] [D] [thread 114509] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[15:49:48.934207] [D] [thread 114509] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:49:48.935260] [D] [thread 114509] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10680000,10740000,54,1699631315418,1699631388934
[m
[36m[15:49:49.484162] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:49.974092] [D] [thread 114510] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[15:49:49.974199] [D] [thread 114510] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:49:49.975628] [D] [thread 114510] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10680000,10740000,63,1699631316543,1699631389974
[m
[36m[15:49:50.114471] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:50.114991] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:50.115856] [D] [thread 114951] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:50.115949] [I] [thread 114951] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:50.115967] [I] [thread 114951] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:50.116085] [I] [thread 114951] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:50.116098] [I] [thread 114951] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:50.267737] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:50.268061] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:51.269343] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:51.959881] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:51.960202] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:51.961282] [D] [thread 114956] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:51.961385] [I] [thread 114956] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:51.961403] [I] [thread 114956] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:51.961520] [I] [thread 114956] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:51.961545] [I] [thread 114956] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:52.125234] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:52.125582] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:52.696660] [D] [thread 114508] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[15:49:52.696740] [D] [thread 114508] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:49:52.697686] [D] [thread 114508] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10680000,10740000,47,1699631317868,1699631392696
[m
[36m[15:49:53.126932] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:53.747682] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:53.748028] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:53.749091] [D] [thread 114961] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:53.749192] [I] [thread 114961] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:53.749210] [I] [thread 114961] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:53.749328] [I] [thread 114961] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:53.749383] [I] [thread 114961] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:53.898803] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:53.899152] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:54.070017] [D] [thread 114511] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[15:49:54.070128] [D] [thread 114511] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:49:54.071316] [D] [thread 114511] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10680000,10740000,24,1699631317942,1699631394070
[m
[36m[15:49:54.900304] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:55.530228] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:55.530604] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:55.532206] [D] [thread 114966] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:55.532300] [I] [thread 114966] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:55.532349] [I] [thread 114966] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:55.532470] [I] [thread 114966] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:55.532484] [I] [thread 114966] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:55.685821] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:55.686136] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:56.687356] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:57.272606] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:57.272965] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:57.274091] [D] [thread 114971] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:57.274203] [I] [thread 114971] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:57.274222] [I] [thread 114971] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:57.274350] [I] [thread 114971] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:57.274367] [I] [thread 114971] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:57.420072] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:57.420453] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:58.421711] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:58.599694] [D] [thread 114509] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[15:49:58.599806] [D] [thread 114509] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:49:58.601265] [D] [thread 114509] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10680000,10740000,13,1699631320218,1699631398599
[m
[36m[15:49:59.032092] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:59.032737] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:59.033475] [D] [thread 114976] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:49:59.033567] [I] [thread 114976] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:59.033587] [I] [thread 114976] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:49:59.033704] [I] [thread 114976] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:49:59.033717] [I] [thread 114976] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:49:59.230289] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:49:59.230977] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:00.232394] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:00.843856] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:00.844208] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:00.845947] [D] [thread 114981] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:00.846027] [I] [thread 114981] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:00.846043] [I] [thread 114981] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:00.846151] [I] [thread 114981] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:00.846162] [I] [thread 114981] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:01.006947] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:01.007275] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:02.008536] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:02.753012] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:02.753397] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:02.755023] [D] [thread 114987] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:02.755135] [I] [thread 114987] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:02.755154] [I] [thread 114987] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:02.755281] [I] [thread 114987] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:02.755348] [I] [thread 114987] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:02.962556] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:02.962964] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:03.964214] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:04.602609] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:04.602964] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:04.603966] [D] [thread 114992] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:04.604061] [I] [thread 114992] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:04.604078] [I] [thread 114992] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:04.604193] [I] [thread 114992] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:04.604206] [I] [thread 114992] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:04.756496] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:04.756911] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:05.758201] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:06.435609] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:06.435997] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:06.437358] [D] [thread 114997] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:06.437454] [I] [thread 114997] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:06.437471] [I] [thread 114997] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:06.437585] [I] [thread 114997] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:06.437597] [I] [thread 114997] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:06.585972] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:06.586348] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:07.587635] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:08.184961] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:08.185328] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:08.186270] [D] [thread 115002] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:08.186365] [I] [thread 115002] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:08.186384] [I] [thread 115002] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:08.186500] [I] [thread 115002] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:08.186514] [I] [thread 115002] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:08.344575] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:08.344924] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:09.346156] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:10.045697] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:10.046068] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:10.047677] [D] [thread 115007] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:10.047774] [I] [thread 115007] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:10.047791] [I] [thread 115007] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:10.047907] [I] [thread 115007] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:10.047920] [I] [thread 115007] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:10.214247] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:10.214601] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:11.215801] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:11.938088] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:11.938708] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:11.939419] [D] [thread 115012] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:11.939511] [I] [thread 115012] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:11.939529] [I] [thread 115012] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:11.939645] [I] [thread 115012] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:11.939658] [I] [thread 115012] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:12.108832] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:12.109171] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:13.110414] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:13.817891] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:13.818217] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:13.819257] [D] [thread 115017] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:13.819357] [I] [thread 115017] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:13.819375] [I] [thread 115017] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:13.819491] [I] [thread 115017] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:13.819515] [I] [thread 115017] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:13.970820] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:13.971190] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:14.972436] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:15.604007] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:15.604392] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:15.605396] [D] [thread 115022] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:15.605490] [I] [thread 115022] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:15.605508] [I] [thread 115022] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:15.605623] [I] [thread 115022] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:15.605636] [I] [thread 115022] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:15.765150] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:15.765476] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:16.766721] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:17.431402] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:17.431747] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:17.432920] [D] [thread 115028] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:17.433017] [I] [thread 115028] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:17.433036] [I] [thread 115028] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:17.433155] [I] [thread 115028] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:17.433168] [I] [thread 115028] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:17.596152] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:17.596567] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:18.597783] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:19.198659] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:19.199509] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:19.200150] [D] [thread 115033] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:19.200250] [I] [thread 115033] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:19.200267] [I] [thread 115033] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:19.200446] [I] [thread 115033] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:19.200474] [I] [thread 115033] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:19.348227] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:19.348836] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:20.350111] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:21.010336] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:21.010813] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:21.011622] [D] [thread 115039] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:21.011713] [I] [thread 115039] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:21.011731] [I] [thread 115039] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:21.011846] [I] [thread 115039] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:21.011860] [I] [thread 115039] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:21.167991] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:21.168562] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:22.169793] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:22.777310] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:22.777636] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:22.778687] [D] [thread 115044] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:22.778788] [I] [thread 115044] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:22.778805] [I] [thread 115044] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:22.778924] [I] [thread 115044] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:22.778947] [I] [thread 115044] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:22.937164] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:22.937507] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:23.938846] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:24.613812] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:24.614140] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:24.615192] [D] [thread 115049] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:24.615294] [I] [thread 115049] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:24.615314] [I] [thread 115049] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:24.615431] [I] [thread 115049] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:24.615444] [I] [thread 115049] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:24.769254] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:24.769625] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:25.770927] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:26.449846] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:26.450432] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:26.451148] [D] [thread 115054] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:26.451244] [I] [thread 115054] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:26.451261] [I] [thread 115054] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:26.451377] [I] [thread 115054] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:26.451389] [I] [thread 115054] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:26.606707] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:26.607167] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:27.608589] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:28.290275] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:28.290607] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:28.291682] [D] [thread 115059] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:28.291783] [I] [thread 115059] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:28.291801] [I] [thread 115059] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:28.291918] [I] [thread 115059] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:28.291951] [I] [thread 115059] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:28.454623] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:28.455080] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:29.456424] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:30.149757] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:30.150339] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:30.151055] [D] [thread 115064] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:30.151147] [I] [thread 115064] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:30.151166] [I] [thread 115064] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:30.151283] [I] [thread 115064] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:30.151295] [I] [thread 115064] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:30.302111] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:30.302532] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:31.303832] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:31.981817] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:31.982404] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:31.983246] [D] [thread 115069] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:31.983341] [I] [thread 115069] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:31.983360] [I] [thread 115069] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:31.983478] [I] [thread 115069] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:31.983492] [I] [thread 115069] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:32.139270] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:32.139827] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:33.140773] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:33.820183] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:33.820796] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:33.821585] [D] [thread 115074] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:33.821677] [I] [thread 115074] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:33.821694] [I] [thread 115074] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:33.821810] [I] [thread 115074] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:33.821823] [I] [thread 115074] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:33.978940] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:33.979268] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:34.980503] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:35.723807] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:35.724141] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:35.725250] [D] [thread 115079] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:35.725352] [I] [thread 115079] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:35.725370] [I] [thread 115079] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:35.725489] [I] [thread 115079] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:35.725503] [I] [thread 115079] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:35.880471] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:35.880832] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:36.882097] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:37.584859] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:37.585177] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:37.586941] [D] [thread 115085] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:37.587049] [I] [thread 115085] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:37.587068] [I] [thread 115085] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:37.587185] [I] [thread 115085] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:37.587211] [I] [thread 115085] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:37.740957] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:37.741317] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:37.744125] [D] [thread 114510] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[15:50:37.744204] [D] [thread 114510] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:50:37.744962] [D] [thread 114510] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10740000,10800000,100,1699631378441,1699631437744
[m
[36m[15:50:38.742496] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:39.438231] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:39.438569] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:39.439730] [D] [thread 115090] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:39.439807] [I] [thread 115090] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:39.439823] [I] [thread 115090] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:39.439930] [I] [thread 115090] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:39.439942] [I] [thread 115090] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:39.602736] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:39.603069] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:40.604378] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:41.290953] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:41.291406] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:41.292360] [D] [thread 115097] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:41.292451] [I] [thread 115097] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:41.292468] [I] [thread 115097] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:41.292584] [I] [thread 115097] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:41.292597] [I] [thread 115097] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:41.444461] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:41.445065] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:42.446365] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:43.055195] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:43.055846] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:43.056654] [D] [thread 115103] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:43.056750] [I] [thread 115103] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:43.056768] [I] [thread 115103] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:43.056885] [I] [thread 115103] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:43.056899] [I] [thread 115103] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:43.222431] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:43.222952] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:44.224243] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:44.898829] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:44.899359] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:44.900165] [D] [thread 115108] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:44.900259] [I] [thread 115108] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:44.900278] [I] [thread 115108] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:44.900425] [I] [thread 115108] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:44.900441] [I] [thread 115108] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:45.061452] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:45.062046] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:46.063342] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:46.687598] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:46.688249] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:46.689002] [D] [thread 115114] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:46.689098] [I] [thread 115114] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:46.689115] [I] [thread 115114] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:46.689231] [I] [thread 115114] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:46.689244] [I] [thread 115114] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:46.841916] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:46.842282] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:47.843642] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:48.474351] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:48.474710] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:48.475634] [D] [thread 115119] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:48.475730] [I] [thread 115119] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:48.475749] [I] [thread 115119] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:48.475864] [I] [thread 115119] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:48.475877] [I] [thread 115119] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:48.629181] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:48.629558] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:49.630767] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:50.559536] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:50.559863] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:50.560983] [D] [thread 115125] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:50.561083] [I] [thread 115125] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:50.561100] [I] [thread 115125] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:50.561215] [I] [thread 115125] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:50.561239] [I] [thread 115125] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:50.714080] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:50.714450] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:51.715733] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:52.383772] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:52.384126] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:52.385121] [D] [thread 115130] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:52.385214] [I] [thread 115130] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:52.385232] [I] [thread 115130] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:52.385346] [I] [thread 115130] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:52.385359] [I] [thread 115130] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:52.536072] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:52.537317] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:53.538626] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:54.182624] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:54.183235] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:54.183970] [D] [thread 115136] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:54.184062] [I] [thread 115136] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:54.184080] [I] [thread 115136] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:54.184195] [I] [thread 115136] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:54.184208] [I] [thread 115136] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:54.341932] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:54.342316] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:55.343567] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:56.060022] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:56.060561] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:56.061607] [D] [thread 115143] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:56.061686] [I] [thread 115143] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:56.061702] [I] [thread 115143] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:56.061808] [I] [thread 115143] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:56.061819] [I] [thread 115143] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:56.225735] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:56.226072] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:57.227259] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:57.903158] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:57.903491] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:57.904570] [D] [thread 115149] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:57.904671] [I] [thread 115149] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:57.904690] [I] [thread 115149] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:57.904809] [I] [thread 115149] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:57.904834] [I] [thread 115149] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:58.065444] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:58.065805] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:59.067048] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:59.753891] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:59.754244] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:59.755259] [D] [thread 115154] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:50:59.755358] [I] [thread 115154] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:59.755376] [I] [thread 115154] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:50:59.755493] [I] [thread 115154] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:50:59.755517] [I] [thread 115154] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:50:59.932151] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:50:59.932532] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:00.933750] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:01.529657] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:01.530028] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:01.531674] [D] [thread 115159] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:01.531753] [I] [thread 115159] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:01.531768] [I] [thread 115159] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:01.531877] [I] [thread 115159] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:01.531889] [I] [thread 115159] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:01.682519] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:01.682884] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:02.007399] [D] [thread 114508] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[15:51:02.007510] [D] [thread 114508] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:51:02.008922] [D] [thread 114508] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10740000,10800000,63,1699631389803,1699631462007
[m
[36m[15:51:02.684098] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:03.277647] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:03.278230] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:03.278939] [D] [thread 115164] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:03.279036] [I] [thread 115164] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:03.279055] [I] [thread 115164] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:03.279174] [I] [thread 115164] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:03.279188] [I] [thread 115164] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:03.422608] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:03.423171] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:03.482943] [D] [thread 114511] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[15:51:03.483028] [D] [thread 114511] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:51:03.483922] [D] [thread 114511] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10740000,10800000,54,1699631388773,1699631463483
[m
[36m[15:51:04.424520] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:05.054704] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:05.055046] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:05.056750] [D] [thread 115170] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:05.056848] [I] [thread 115170] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:05.056866] [I] [thread 115170] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:05.056983] [I] [thread 115170] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:05.056995] [I] [thread 115170] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:05.211633] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:05.212189] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:06.132090] [D] [thread 114509] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[15:51:06.132189] [D] [thread 114509] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:51:06.133462] [D] [thread 114509] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10740000,10800000,47,1699631392555,1699631466132
[m
[36m[15:51:06.213464] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:06.806480] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:06.807113] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:06.807838] [D] [thread 115175] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:06.807908] [I] [thread 115175] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:06.807923] [I] [thread 115175] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:06.808031] [I] [thread 115175] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:06.808043] [I] [thread 115175] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:06.965412] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:06.965993] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:07.967283] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:08.679293] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:08.680132] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:08.681313] [D] [thread 115180] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:08.681437] [I] [thread 115180] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:08.681456] [I] [thread 115180] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:08.681578] [I] [thread 115180] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:08.681596] [I] [thread 115180] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:08.831294] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:08.831649] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:09.832475] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:10.019422] [D] [thread 114510] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[15:51:10.019531] [D] [thread 114510] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:51:10.020790] [D] [thread 114510] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10740000,10800000,24,1699631393926,1699631470019
[m
[36m[15:51:10.833730] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:10.882691] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:10.883048] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:10.884065] [D] [thread 115185] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:10.884164] [I] [thread 115185] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:10.884182] [I] [thread 115185] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:10.884302] [I] [thread 115185] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:10.884315] [I] [thread 115185] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:11.017655] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:11.017987] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:12.019197] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:12.629367] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:12.629691] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:12.630665] [D] [thread 115190] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:12.630791] [I] [thread 115190] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:12.630812] [I] [thread 115190] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:12.630930] [I] [thread 115190] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:12.630943] [I] [thread 115190] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:12.790205] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:12.790521] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:13.791751] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:14.393624] [D] [thread 114508] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[15:51:14.393716] [D] [thread 114508] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:51:14.395007] [D] [thread 114508] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10740000,10800000,13,1699631398407,1699631474393
[m
[36m[15:51:14.438891] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:14.439210] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:14.440445] [D] [thread 115195] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:14.440553] [I] [thread 115195] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:14.440574] [I] [thread 115195] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:14.440706] [I] [thread 115195] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:14.440724] [I] [thread 115195] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:14.580693] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:14.581039] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:15.582198] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:16.197909] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:16.198230] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:16.199344] [D] [thread 115200] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:16.199444] [I] [thread 115200] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:16.199463] [I] [thread 115200] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:16.199581] [I] [thread 115200] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:16.199595] [I] [thread 115200] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:16.354858] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:16.355197] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:17.356459] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:18.053964] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:18.054309] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:18.055882] [D] [thread 115205] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:18.055967] [I] [thread 115205] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:18.055983] [I] [thread 115205] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:18.056090] [I] [thread 115205] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:18.056101] [I] [thread 115205] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:18.209505] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:18.209857] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:19.211007] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:19.869807] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:19.870137] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:19.871148] [D] [thread 115210] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:19.871246] [I] [thread 115210] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:19.871264] [I] [thread 115210] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:19.871384] [I] [thread 115210] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:19.871397] [I] [thread 115210] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:20.046466] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:20.046793] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:21.048025] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:21.693702] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:21.694067] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:21.695652] [D] [thread 115215] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:21.695747] [I] [thread 115215] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:21.695767] [I] [thread 115215] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:21.695884] [I] [thread 115215] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:21.695897] [I] [thread 115215] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:21.849458] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:21.849827] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:22.851040] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:23.469571] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:23.469895] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:23.470949] [D] [thread 115220] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:23.471028] [I] [thread 115220] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:23.471044] [I] [thread 115220] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:23.471152] [I] [thread 115220] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:23.471163] [I] [thread 115220] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:23.628436] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:23.628808] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:24.630057] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:25.309161] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:25.309535] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:25.310500] [D] [thread 115225] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:25.310592] [I] [thread 115225] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:25.310611] [I] [thread 115225] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:25.310728] [I] [thread 115225] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:25.310740] [I] [thread 115225] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:25.473521] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:25.473882] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:26.475110] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:27.185675] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:27.186475] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:27.187763] [D] [thread 115230] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:27.187883] [I] [thread 115230] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:27.187901] [I] [thread 115230] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:27.188025] [I] [thread 115230] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:27.188041] [I] [thread 115230] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:27.337781] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:27.338268] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:28.339507] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:29.006456] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:29.006780] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:29.007890] [D] [thread 115235] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:29.007994] [I] [thread 115235] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:29.008011] [I] [thread 115235] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:29.008130] [I] [thread 115235] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:29.008155] [I] [thread 115235] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:29.161957] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:29.162293] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:30.163511] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:30.772748] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:30.773102] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:30.774096] [D] [thread 115242] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:30.774193] [I] [thread 115242] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:30.774210] [I] [thread 115242] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:30.774325] [I] [thread 115242] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:30.774344] [I] [thread 115242] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:30.934065] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:30.934385] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:31.935599] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:32.562241] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:32.562557] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:32.563645] [D] [thread 115247] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:32.563747] [I] [thread 115247] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:32.563765] [I] [thread 115247] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:32.563880] [I] [thread 115247] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:32.563905] [I] [thread 115247] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:32.717601] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:32.717932] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:33.719178] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:34.367172] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:34.367709] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:34.369390] [D] [thread 115252] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:34.369467] [I] [thread 115252] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:34.369483] [I] [thread 115252] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:34.369590] [I] [thread 115252] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:34.369602] [I] [thread 115252] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:34.529555] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:34.529899] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:35.531138] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:36.226503] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:36.226822] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:36.227863] [D] [thread 115257] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:36.227957] [I] [thread 115257] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:36.227974] [I] [thread 115257] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:36.228091] [I] [thread 115257] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:36.228104] [I] [thread 115257] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:36.389234] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:36.389615] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:37.390975] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:38.058209] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:38.058578] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:38.059590] [D] [thread 115262] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:38.059693] [I] [thread 115262] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:38.059710] [I] [thread 115262] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:38.059827] [I] [thread 115262] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:38.059853] [I] [thread 115262] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:38.217024] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:38.217603] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:39.218913] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:39.817575] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:39.818131] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:39.819103] [D] [thread 115267] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:39.819218] [I] [thread 115267] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:39.819235] [I] [thread 115267] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:39.819357] [I] [thread 115267] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:39.819374] [I] [thread 115267] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:39.970074] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:39.970700] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:40.971914] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:41.614583] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:41.614913] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:41.616090] [D] [thread 115272] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:41.616189] [I] [thread 115272] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:41.616208] [I] [thread 115272] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:41.616366] [I] [thread 115272] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:41.616384] [I] [thread 115272] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:41.773663] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:41.774028] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:42.775280] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:43.412769] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:43.413107] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:43.414686] [D] [thread 115277] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:43.414783] [I] [thread 115277] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:43.414802] [I] [thread 115277] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:43.414918] [I] [thread 115277] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:43.414932] [I] [thread 115277] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:43.573694] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:43.574041] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:44.575277] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:45.221855] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:45.222477] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:45.223247] [D] [thread 115282] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:45.223321] [I] [thread 115282] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:45.223337] [I] [thread 115282] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:45.223443] [I] [thread 115282] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:45.223454] [I] [thread 115282] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:45.376420] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:45.377001] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:46.378267] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:46.567564] [D] [thread 114511] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[15:51:46.567675] [D] [thread 114511] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:51:46.568948] [D] [thread 114511] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10800000,10860000,100,1699631437603,1699631506567
[m
[36m[15:51:46.978106] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:46.978647] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:46.979420] [D] [thread 115287] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:46.979517] [I] [thread 115287] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:46.979534] [I] [thread 115287] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:46.979652] [I] [thread 115287] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:46.979664] [I] [thread 115287] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:47.129382] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:47.129938] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:48.131209] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:48.794846] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:48.795226] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:48.796892] [D] [thread 115292] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:48.796991] [I] [thread 115292] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:48.797009] [I] [thread 115292] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:48.797126] [I] [thread 115292] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:48.797140] [I] [thread 115292] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:48.953734] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:48.954086] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:49.955322] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:50.577785] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:50.578116] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:50.579110] [D] [thread 115297] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:50.579193] [I] [thread 115297] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:50.579209] [I] [thread 115297] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:50.579317] [I] [thread 115297] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:50.579328] [I] [thread 115297] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:50.726882] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:50.727208] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:51.728476] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:52.398055] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:52.398396] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:52.400004] [D] [thread 115302] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:52.400099] [I] [thread 115302] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:52.400118] [I] [thread 115302] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:52.400235] [I] [thread 115302] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:52.400247] [I] [thread 115302] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:52.564754] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:52.565345] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:53.566586] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:54.196141] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:54.196659] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:54.197518] [D] [thread 115307] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:54.197614] [I] [thread 115307] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:54.197632] [I] [thread 115307] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:54.197748] [I] [thread 115307] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:54.197761] [I] [thread 115307] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:54.345040] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:54.345457] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:55.346763] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:56.055141] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:56.055803] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:56.056528] [D] [thread 115312] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:56.056600] [I] [thread 115312] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:56.056615] [I] [thread 115312] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:56.056725] [I] [thread 115312] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:56.056736] [I] [thread 115312] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:56.209239] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:56.209565] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:57.210893] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:57.931268] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:57.931821] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:57.932617] [D] [thread 115317] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:57.932710] [I] [thread 115317] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:57.932730] [I] [thread 115317] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:57.932846] [I] [thread 115317] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:57.932860] [I] [thread 115317] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:51:58.083219] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:58.083746] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:59.085032] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:59.960852] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:59.961480] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:51:59.962182] [D] [thread 115322] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:51:59.962274] [I] [thread 115322] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:59.962291] [I] [thread 115322] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:51:59.962406] [I] [thread 115322] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:51:59.962419] [I] [thread 115322] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:52:00.248796] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:00.249386] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:01.250820] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:02.252251] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:02.366582] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:02.366923] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:02.368226] [D] [thread 115328] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:52:02.368347] [I] [thread 115328] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:02.368370] [I] [thread 115328] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:52:02.368486] [I] [thread 115328] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:02.368500] [I] [thread 115328] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:52:02.519478] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:02.519827] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:03.521134] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:04.390461] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:04.390801] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:04.392516] [D] [thread 115335] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:52:04.392608] [I] [thread 115335] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:04.392625] [I] [thread 115335] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:52:04.392743] [I] [thread 115335] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:04.392756] [I] [thread 115335] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:52:04.545499] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:04.545847] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:05.547078] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:06.196902] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:06.197246] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:06.198286] [D] [thread 115341] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:52:06.198386] [I] [thread 115341] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:06.198406] [I] [thread 115341] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:52:06.198524] [I] [thread 115341] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:06.198542] [I] [thread 115341] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:52:06.347648] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:06.347997] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:07.349246] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:08.012668] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:08.013017] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:08.014179] [D] [thread 115346] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:52:08.014297] [I] [thread 115346] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:08.014317] [I] [thread 115346] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:52:08.014441] [I] [thread 115346] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:08.014457] [I] [thread 115346] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:52:08.182761] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:08.183115] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:09.184497] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:09.779837] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:09.780196] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:09.781376] [D] [thread 115351] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:52:09.781500] [I] [thread 115351] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:09.781521] [I] [thread 115351] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:52:09.781646] [I] [thread 115351] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:09.781664] [I] [thread 115351] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:52:09.946242] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:09.946597] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:10.947772] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:11.618623] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:11.618986] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:11.619984] [D] [thread 115357] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:52:11.620075] [I] [thread 115357] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:11.620094] [I] [thread 115357] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:52:11.620211] [I] [thread 115357] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:11.620224] [I] [thread 115357] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:52:11.655281] [D] [thread 114509] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[15:52:11.655387] [D] [thread 114509] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:52:11.656822] [D] [thread 114509] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10800000,10860000,63,1699631461832,1699631531655
[m
[36m[15:52:11.785615] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:11.786036] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:12.787264] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:13.386185] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:13.386718] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:13.387505] [D] [thread 115362] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:52:13.387579] [I] [thread 115362] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:13.387595] [I] [thread 115362] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:52:13.387703] [I] [thread 115362] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:13.387717] [I] [thread 115362] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:52:13.545759] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:13.546095] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:14.547452] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:15.196750] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:15.197076] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:15.198047] [D] [thread 115367] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:52:15.198141] [I] [thread 115367] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:15.198160] [I] [thread 115367] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:52:15.198281] [I] [thread 115367] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:15.198294] [I] [thread 115367] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:52:15.349359] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:15.349725] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:16.350992] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:17.021998] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:17.022375] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:17.023615] [D] [thread 115372] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:52:17.023711] [I] [thread 115372] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:17.023730] [I] [thread 115372] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:52:17.023847] [I] [thread 115372] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:17.023860] [I] [thread 115372] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:52:17.183050] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:17.183408] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:18.037822] [D] [thread 114510] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[15:52:18.037913] [D] [thread 114510] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:52:18.038986] [D] [thread 114510] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10800000,10860000,54,1699631463299,1699631538037
[m
[36m[15:52:18.184657] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:18.803996] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:18.804599] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:18.805349] [D] [thread 115377] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:52:18.805442] [I] [thread 115377] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:18.805462] [I] [thread 115377] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:52:18.805580] [I] [thread 115377] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:18.805592] [I] [thread 115377] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:52:18.962512] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:18.962847] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:19.563715] [D] [thread 114508] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[15:52:19.563822] [D] [thread 114508] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:52:19.565362] [D] [thread 114508] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10800000,10860000,47,1699631465958,1699631539563
[m
[36m[15:52:19.964062] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:20.571106] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:20.571749] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:20.572528] [D] [thread 115382] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:52:20.572623] [I] [thread 115382] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:20.572640] [I] [thread 115382] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:52:20.572758] [I] [thread 115382] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:20.572771] [I] [thread 115382] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:52:20.720428] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:20.720918] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:21.722163] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:22.382189] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:22.382800] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:22.383493] [D] [thread 115387] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:52:22.383585] [I] [thread 115387] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:22.383605] [I] [thread 115387] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:52:22.383724] [I] [thread 115387] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:22.383737] [I] [thread 115387] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:52:22.539006] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:22.539495] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:23.540773] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:24.188169] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:24.188784] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:24.189533] [D] [thread 115393] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:52:24.189603] [I] [thread 115393] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:24.189618] [I] [thread 115393] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:52:24.189727] [I] [thread 115393] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:24.189738] [I] [thread 115393] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:52:24.364884] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:24.365433] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:25.366715] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:26.020952] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:26.021434] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:26.022237] [D] [thread 115398] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:52:26.022326] [I] [thread 115398] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:26.022343] [I] [thread 115398] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:52:26.022460] [I] [thread 115398] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:26.022474] [I] [thread 115398] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:52:26.177997] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:26.178358] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:27.165824] [D] [thread 114511] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[15:52:27.165914] [D] [thread 114511] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:52:27.167109] [D] [thread 114511] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10800000,10860000,24,1699631469883,1699631547166
[m
[36m[15:52:27.179574] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:28.091459] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:28.092074] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:28.092875] [D] [thread 115403] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:52:28.092972] [I] [thread 115403] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:28.092991] [I] [thread 115403] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:52:28.093109] [I] [thread 115403] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:28.093122] [I] [thread 115403] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:52:28.240906] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:28.241486] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:29.242758] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:29.929886] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:29.930582] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:29.931322] [D] [thread 115408] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:52:29.931414] [I] [thread 115408] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:29.931431] [I] [thread 115408] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:52:29.931548] [I] [thread 115408] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:29.931562] [I] [thread 115408] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:52:30.102724] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:30.103245] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:31.104550] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:31.374553] [D] [thread 114509] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[15:52:31.374660] [D] [thread 114509] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:52:31.375897] [D] [thread 114509] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10800000,10860000,13,1699631474232,1699631551374
[m
[36m[15:52:31.872868] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:31.873357] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:31.874178] [D] [thread 115413] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:52:31.874271] [I] [thread 115413] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:31.874290] [I] [thread 115413] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:52:31.874404] [I] [thread 115413] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:31.874417] [I] [thread 115413] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:52:32.032689] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:32.033221] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:33.034501] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:33.672724] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:33.673331] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:33.674038] [D] [thread 115418] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:52:33.674131] [I] [thread 115418] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:33.674150] [I] [thread 115418] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:52:33.674266] [I] [thread 115418] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:33.674279] [I] [thread 115418] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:52:33.831215] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:33.831858] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:34.833175] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:35.562511] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:35.562993] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:35.563881] [D] [thread 115423] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:52:35.563974] [I] [thread 115423] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:35.563991] [I] [thread 115423] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:52:35.564108] [I] [thread 115423] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:35.564121] [I] [thread 115423] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:52:35.721886] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:35.722311] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:36.723628] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:37.334772] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:37.335412] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:37.336178] [D] [thread 115428] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:52:37.336268] [I] [thread 115428] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:37.336285] [I] [thread 115428] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:52:37.336437] [I] [thread 115428] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:37.336456] [I] [thread 115428] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:52:37.497329] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:37.497665] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:38.498881] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:39.213915] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:39.214277] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:39.215265] [D] [thread 115433] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:52:39.215369] [I] [thread 115433] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:39.215387] [I] [thread 115433] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:52:39.215505] [I] [thread 115433] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:39.215518] [I] [thread 115433] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:52:39.355198] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:39.355519] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:40.356730] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:40.996042] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:40.996396] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:40.997607] [D] [thread 115438] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:52:40.997704] [I] [thread 115438] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:40.997724] [I] [thread 115438] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:52:40.997841] [I] [thread 115438] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:52:40.997854] [I] [thread 115438] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:52:41.169342] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:41.169666] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:41.693643] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:41.693963] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:52:41.694958] [I] [thread 115442] [QueryCatalogService.cpp:65] [checkAndMarkForHardStop] QueryCatalogService: Handle hard stop request.[m
[36m[15:52:41.695048] [D] [thread 115442] [QueryCatalogService.cpp:83] [checkAndMarkForHardStop] QueryCatalog: Changing query status to Mark query for stop.[m
[32m[15:52:41.695184] [I] [thread 115442] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : StopQueryRequest { QueryId: 1}[m
[32m[15:52:41.695245] [I] [thread 115442] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[15:52:41.695304] [I] [thread 114497] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[15:52:41.695351] [I] [thread 114497] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[15:52:41.695369] [I] [thread 114497] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[15:52:41.695411] [I] [thread 114497] [GlobalQueryPlanUpdatePhase.cpp:133] [processStopQueryRequest] QueryProcessingService: Request received for stopping the query 1[m
[36m[15:52:41.695426] [D] [thread 114497] [GlobalQueryPlan.cpp:45] [removeQuery] GlobalQueryPlan: Removing query information from the meta data[m
[36m[15:52:41.695473] [D] [thread 114497] [SharedQueryPlan.cpp:194] [removeQuery] SharedQueryPlan: Remove the Query Id 1 and associated Global Query Nodes with sink operators.[m
[36m[15:52:41.695630] [D] [thread 114497] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SINK(5: {FileSinkDescriptor()}) as root operator.[m
[36m[15:52:41.696083] [D] [thread 114497] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[15:52:41.696142] [D] [thread 114497] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[15:52:41.696207] [D] [thread 114497] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[15:52:41.696225] [D] [thread 114497] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[15:52:41.696233] [D] [thread 114497] [RequestProcessorService.cpp:162] [start] QueryProcessingService: Shared Query Plan is empty and an older version is already running.[m
[36m[15:52:41.696264] [D] [thread 114497] [QueryUndeploymentPhase.cpp:44] [execute] QueryUndeploymentPhase::stopAndUndeployQuery : queryId= 1[m
[36m[15:52:41.696283] [D] [thread 114497] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[15:52:41.696311] [D] [thread 114497] [QueryUndeploymentPhase.cpp:54] [execute] QueryUndeploymentPhase:removeQuery: stop query[m
[36m[15:52:41.696364] [D] [thread 114497] [QueryUndeploymentPhase.cpp:80] [stopQuery] QueryUndeploymentPhase:markQueryForStop queryId= 1[m
[36m[15:52:41.696497] [D] [thread 114497] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=6 and IP=192.168.2.33:39511[m
[36m[15:52:41.696522] [D] [thread 114497] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.33:39511 queryId=1[m
[36m[15:52:41.701815] [D] [thread 114497] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=5 and IP=192.168.2.32:44575[m
[36m[15:52:41.701902] [D] [thread 114497] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.32:44575 queryId=1[m
[36m[15:52:41.706426] [D] [thread 114497] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=8 and IP=192.168.2.35:39721[m
[36m[15:52:41.706507] [D] [thread 114497] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.35:39721 queryId=1[m
[36m[15:52:41.710917] [D] [thread 114497] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=7 and IP=192.168.2.34:44541[m
[36m[15:52:41.711005] [D] [thread 114497] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.34:44541 queryId=1[m
[36m[15:52:41.715388] [D] [thread 114497] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=10 and IP=192.168.2.38:39609[m
[36m[15:52:41.715585] [D] [thread 114497] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.38:39609 queryId=1[m
[36m[15:52:41.719982] [D] [thread 114497] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=9 and IP=192.168.2.37:42321[m
[36m[15:52:41.720067] [D] [thread 114497] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.37:42321 queryId=1[m
[36m[15:52:41.724272] [D] [thread 114497] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=1 and IP=192.168.2.11:40941[m
[36m[15:52:41.724390] [D] [thread 114497] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.11:40941 queryId=1[m
[36m[15:52:41.728881] [D] [thread 114497] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=2 and IP=192.168.2.12:36563[m
[36m[15:52:41.728975] [D] [thread 114497] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.12:36563 queryId=1[m
[36m[15:52:41.733306] [D] [thread 114497] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=3 and IP=192.168.2.30:33619[m
[36m[15:52:41.733389] [D] [thread 114497] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.30:33619 queryId=1[m
[36m[15:52:41.737809] [D] [thread 114497] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=4 and IP=192.168.2.31:38857[m
[36m[15:52:41.737895] [D] [thread 114497] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.31:38857 queryId=1[m
[36m[15:52:41.742167] [D] [thread 114497] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Stop for 10 queues[m
[36m[15:52:41.907151] [D] [thread 114507] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): EndOfStream received for channel [m
[36m[15:52:41.907141] [D] [thread 114506] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): EndOfStream received for channel [m
[36m[15:52:41.907327] [D] [thread 114507] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::39::0::0(threadId=2)[m
[36m[15:52:41.907328] [D] [thread 114506] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::39::0::0(threadId=3)[m
[32m[15:52:41.907546] [I] [thread 114506] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(4)[m
[32m[15:52:41.907654] [I] [thread 114507] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(3)[m
[36m[15:52:41.908127] [D] [thread 114507] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::39::0::0(threadId=2) but there is still some active subpartition: 3[m
[36m[15:52:41.908676] [D] [thread 114506] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::39::0::0(threadId=3) but there is still some active subpartition: 3[m
[36m[15:52:41.910128] [D] [thread 114506] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): EndOfStream received for channel [m
[36m[15:52:41.910264] [D] [thread 114506] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::39::0::0(threadId=0)[m
[32m[15:52:41.910361] [I] [thread 114506] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(2)[m
[36m[15:52:41.910430] [D] [thread 114506] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::39::0::0(threadId=0) but there is still some active subpartition: 2[m
[36m[15:52:41.910745] [D] [thread 114507] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): EndOfStream received for channel [m
[36m[15:52:41.911117] [D] [thread 114507] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::39::0::0(threadId=1)[m
[32m[15:52:41.911398] [I] [thread 114507] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(1)[m
[36m[15:52:41.911492] [D] [thread 114507] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::39::0::0, counter is at 1.[m
[36m[15:52:41.911714] [D] [thread 114507] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[15:52:41.911854] [W] [thread 114507] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[15:52:41.997904] [D] [thread 114506] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): EndOfStream received for channel [m
[36m[15:52:41.998061] [D] [thread 114506] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=1)[m
[32m[15:52:41.998257] [I] [thread 114506] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(4)[m
[36m[15:52:41.998350] [D] [thread 114506] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::33::0::0(threadId=1) but there is still some active subpartition: 4[m
[36m[15:52:41.998628] [D] [thread 114507] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): EndOfStream received for channel [m
[36m[15:52:41.998695] [D] [thread 114507] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=3)[m
[32m[15:52:41.998789] [I] [thread 114507] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(3)[m
[36m[15:52:41.998844] [D] [thread 114507] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::33::0::0(threadId=3) but there is still some active subpartition: 3[m
[36m[15:52:41.999076] [D] [thread 114507] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): EndOfStream received for channel [m
[36m[15:52:41.999158] [D] [thread 114507] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=2)[m
[32m[15:52:41.999216] [I] [thread 114507] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(2)[m
[36m[15:52:41.999325] [D] [thread 114507] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::33::0::0(threadId=2) but there is still some active subpartition: 2[m
[36m[15:52:41.999451] [D] [thread 114506] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): EndOfStream received for channel [m
[36m[15:52:41.999495] [D] [thread 114506] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=0)[m
[32m[15:52:41.999561] [I] [thread 114506] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(1)[m
[36m[15:52:41.999588] [D] [thread 114506] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::33::0::0, counter is at 1.[m
[36m[15:52:41.999647] [D] [thread 114506] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[15:52:41.999778] [W] [thread 114506] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[15:52:42.024175] [D] [thread 114507] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): EndOfStream received for channel [m
[36m[15:52:42.024188] [D] [thread 114506] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): EndOfStream received for channel [m
[36m[15:52:42.024307] [D] [thread 114507] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::45::0::0(threadId=3)[m
[36m[15:52:42.024307] [D] [thread 114506] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::45::0::0(threadId=0)[m
[32m[15:52:42.024435] [I] [thread 114507] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(4)[m
[32m[15:52:42.024515] [I] [thread 114506] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(3)[m
[36m[15:52:42.024584] [D] [thread 114507] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::45::0::0(threadId=3) but there is still some active subpartition: 3[m
[36m[15:52:42.024591] [D] [thread 114506] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::45::0::0(threadId=0) but there is still some active subpartition: 3[m
[36m[15:52:42.026837] [D] [thread 114506] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): EndOfStream received for channel [m
[36m[15:52:42.026861] [D] [thread 114507] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): EndOfStream received for channel [m
[36m[15:52:42.026979] [D] [thread 114506] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::45::0::0(threadId=2)[m
[36m[15:52:42.026979] [D] [thread 114507] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::45::0::0(threadId=1)[m
[32m[15:52:42.027117] [I] [thread 114507] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(2)[m
[32m[15:52:42.027189] [I] [thread 114506] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(1)[m
[36m[15:52:42.027222] [D] [thread 114506] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::45::0::0, counter is at 1.[m
[36m[15:52:42.027306] [D] [thread 114506] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[15:52:42.027338] [W] [thread 114506] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[36m[15:52:42.027432] [D] [thread 114507] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::45::0::0(threadId=1) but there is still some active subpartition: 1[m
[36m[15:52:42.035711] [D] [thread 114506] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): EndOfStream received for channel [m
[36m[15:52:42.035742] [D] [thread 114507] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): EndOfStream received for channel [m
[36m[15:52:42.035823] [D] [thread 114506] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::57::0::0(threadId=1)[m
[32m[15:52:42.035895] [I] [thread 114506] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::57::0::0; newCnt(4)[m
[36m[15:52:42.035938] [D] [thread 114506] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::57::0::0(threadId=1) but there is still some active subpartition: 4[m
[36m[15:52:42.035994] [D] [thread 114507] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::57::0::0(threadId=0)[m
[32m[15:52:42.036046] [I] [thread 114507] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::57::0::0; newCnt(3)[m
[36m[15:52:42.036105] [D] [thread 114507] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::57::0::0(threadId=0) but there is still some active subpartition: 3[m
[36m[15:52:42.036584] [D] [thread 114506] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): EndOfStream received for channel [m
[36m[15:52:42.036589] [D] [thread 114507] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): EndOfStream received for channel [m
[36m[15:52:42.036703] [D] [thread 114507] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::57::0::0(threadId=2)[m
[36m[15:52:42.036729] [D] [thread 114506] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::57::0::0(threadId=3)[m
[32m[15:52:42.036825] [I] [thread 114506] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::57::0::0; newCnt(2)[m
[32m[15:52:42.036881] [I] [thread 114507] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::57::0::0; newCnt(1)[m
[36m[15:52:42.036908] [D] [thread 114507] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::57::0::0, counter is at 1.[m
[36m[15:52:42.036969] [D] [thread 114506] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::57::0::0(threadId=3) but there is still some active subpartition: 1[m
[36m[15:52:42.036975] [D] [thread 114507] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:57 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[15:52:42.037002] [W] [thread 114507] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:57 PartitionId: 0 SubpartitionID: 0[m
[36m[15:52:42.360646] [D] [thread 114506] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): EndOfStream received for channel [m
[36m[15:52:42.360694] [D] [thread 114507] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): EndOfStream received for channel [m
[36m[15:52:42.360814] [D] [thread 114507] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=0)[m
[36m[15:52:42.360816] [D] [thread 114506] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=3)[m
[32m[15:52:42.360978] [I] [thread 114507] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(4)[m
[32m[15:52:42.361127] [I] [thread 114506] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(3)[m
[36m[15:52:42.361269] [D] [thread 114506] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::51::0::0(threadId=3) but there is still some active subpartition: 3[m
[36m[15:52:42.361418] [D] [thread 114507] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::51::0::0(threadId=0) but there is still some active subpartition: 3[m
[36m[15:52:42.363016] [D] [thread 114507] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): EndOfStream received for channel [m
[36m[15:52:42.363171] [D] [thread 114507] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=2)[m
[32m[15:52:42.363282] [I] [thread 114507] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(2)[m
[36m[15:52:42.363369] [D] [thread 114507] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::51::0::0(threadId=2) but there is still some active subpartition: 2[m
[36m[15:52:42.363573] [D] [thread 114506] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): EndOfStream received for channel [m
[36m[15:52:42.363667] [D] [thread 114506] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=1)[m
[32m[15:52:42.363756] [I] [thread 114506] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(1)[m
[36m[15:52:42.363812] [D] [thread 114506] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::51::0::0, counter is at 1.[m
[36m[15:52:42.363893] [D] [thread 114506] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[15:52:42.363960] [W] [thread 114506] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[31m[1m[15:52:42.426314] [E] [thread 115336] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 3 Reason for failure: onFatalException: exception=[Failed assertion on metadata.count() == 0 error message: PartitionManager: Consumer Partition 1::48::0::0 is still alive: 4:: callstack:
Stack trace (most recent call last):
#8    Object "./nesWorker", at 0xaaaad0f0413f, in 
#7    Object "/lib/aarch64-linux-gnu/libc.so.6", at 0xffff966aad4f, in __libc_start_main
#6    Object "./nesWorker", at 0xaaaad0f04af7, in 
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa051a2ef, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa0332f23, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff986d9207, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff96d5a6e7, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff986eb7e7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff986ec773, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "./nesWorker", at 0xaaaad0f0413f, in 
#7    Object "/lib/aarch64-linux-gnu/libc.so.6", at 0xffff966aad4f, in __libc_start_main
#6    Object "./nesWorker", at 0xaaaad0f04af7, in 
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa051a2ef, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa0332f23, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff986d9207, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff96d5a6e7, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff986eb7e7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff986ec773, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[36m[15:52:42.657871] [D] [thread 114506] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): EndOfStream received for channel [m
[36m[15:52:42.657882] [D] [thread 114507] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): EndOfStream received for channel [m
[36m[15:52:42.658066] [D] [thread 114507] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::63::0::0(threadId=0)[m
[36m[15:52:42.658066] [D] [thread 114506] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::63::0::0(threadId=3)[m
[32m[15:52:42.658209] [I] [thread 114507] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::63::0::0; newCnt(4)[m
[36m[15:52:42.658321] [D] [thread 114507] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::63::0::0(threadId=0) but there is still some active subpartition: 4[m
[32m[15:52:42.658601] [I] [thread 114506] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::63::0::0; newCnt(3)[m
[36m[15:52:42.658688] [D] [thread 114506] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::63::0::0(threadId=3) but there is still some active subpartition: 3[m
[36m[15:52:42.658762] [D] [thread 114506] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): EndOfStream received for channel [m
[36m[15:52:42.658812] [D] [thread 114506] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::63::0::0(threadId=2)[m
[32m[15:52:42.658871] [I] [thread 114506] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::63::0::0; newCnt(2)[m
[36m[15:52:42.658930] [D] [thread 114506] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::63::0::0(threadId=2) but there is still some active subpartition: 2[m
[36m[15:52:42.659356] [D] [thread 114507] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35043): EndOfStream received for channel [m
[36m[15:52:42.659418] [D] [thread 114507] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::63::0::0(threadId=1)[m
[32m[15:52:42.659481] [I] [thread 114507] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::63::0::0; newCnt(1)[m
[36m[15:52:42.659520] [D] [thread 114507] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::63::0::0, counter is at 1.[m
[36m[15:52:42.659583] [D] [thread 114507] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:63 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[15:52:42.659617] [W] [thread 114507] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:63 PartitionId: 0 SubpartitionID: 0[m
[36m[15:52:42.691120] [D] [thread 114513] [WorkerRPCServer.cpp:90] [StopQuery] WorkerRPCServer::StopQuery: got request for 1[m
[36m[15:52:42.691246] [D] [thread 114513] [NodeEngine.cpp:250] [stopQuery] Runtime:stopQuery for qep= 1  termination= HardStop[m
[36m[15:52:42.691344] [D] [thread 114513] [QueryManagerLifecycle.cpp:312] [stopQuery] AbstractQueryManager::stopQuery: query sub-plan id  7  type= HardStop[m
[36m[15:52:42.691389] [D] [thread 114513] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[15:52:42.691459] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[15:52:42.691698] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[15:52:42.692295] [D] [thread 114513] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 33 is notifying completion: HardStop[m
[36m[15:52:42.692494] [D] [thread 114511] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[15:52:42.692436] [D] [thread 114513] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 33 is terminated; tokens left = 7[m
[36m[15:52:42.692441] [D] [thread 114509] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[15:52:42.692564] [D] [thread 114513] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 33 terminationType=HardStop[m
[36m[15:52:42.692626] [D] [thread 114511] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 1[m
[36m[15:52:42.692626] [D] [thread 114509] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 3[m
[36m[15:52:42.692687] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[15:52:42.692443] [D] [thread 114508] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[15:52:42.692462] [D] [thread 114510] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[15:52:42.692843] [D] [thread 114508] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 0[m
[36m[15:52:42.692850] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[15:52:42.692858] [D] [thread 114510] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 2[m
[36m[15:52:42.692891] [D] [thread 114510] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::33::0::0[m
[36m[15:52:42.692915] [D] [thread 114510] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::33::0::0[m
[36m[15:52:42.692944] [D] [thread 114510] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::33::0::0[m
[32m[15:52:42.693013] [I] [thread 114510] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(0)[m
[36m[15:52:42.693300] [D] [thread 114513] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=33 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[15:52:42.693452] [D] [thread 114513] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[15:52:42.693558] [D] [thread 114513] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[15:52:42.693653] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[15:52:42.693979] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[15:52:42.694530] [D] [thread 114513] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 39 is notifying completion: HardStop[m
[36m[15:52:42.694625] [D] [thread 114513] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 39 is terminated; tokens left = 6[m
[36m[15:52:42.694664] [D] [thread 114513] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 39 terminationType=HardStop[m
[36m[15:52:42.694756] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[15:52:42.694968] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[15:52:42.695129] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:52:42.695426] [D] [thread 114513] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=39 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[15:52:42.695564] [D] [thread 114513] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[15:52:42.695665] [D] [thread 114513] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[36m[15:52:42.695714] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[15:52:42.695889] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[15:52:42.696366] [D] [thread 114513] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 45 is notifying completion: HardStop[m
[36m[15:52:42.696429] [D] [thread 114513] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 45 is terminated; tokens left = 5[m
[36m[15:52:42.696461] [D] [thread 114513] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 45 terminationType=HardStop[m
[36m[15:52:42.696536] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[15:52:42.696657] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[15:52:42.697005] [D] [thread 114513] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=45 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[15:52:42.697130] [D] [thread 114513] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[15:52:42.697165] [D] [thread 114513] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[15:52:42.697248] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[15:52:42.697410] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[15:52:42.697792] [D] [thread 114513] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 51 is notifying completion: HardStop[m
[36m[15:52:42.697851] [D] [thread 114513] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 51 is terminated; tokens left = 4[m
[36m[15:52:42.697883] [D] [thread 114513] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 51 terminationType=HardStop[m
[36m[15:52:42.697948] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[15:52:42.698067] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[15:52:42.698413] [D] [thread 114513] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=51 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[15:52:42.698553] [D] [thread 114513] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[15:52:42.698590] [D] [thread 114513] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:57 PartitionId: 0 SubpartitionID: 0[m
[36m[15:52:42.698633] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[15:52:42.698739] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[15:52:42.699123] [D] [thread 114513] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 57 is notifying completion: HardStop[m
[36m[15:52:42.699214] [D] [thread 114513] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 57 is terminated; tokens left = 3[m
[36m[15:52:42.699245] [D] [thread 114513] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 57 terminationType=HardStop[m
[36m[15:52:42.699307] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[15:52:42.699429] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[15:52:42.699796] [D] [thread 114513] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=57 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[15:52:42.699904] [D] [thread 114513] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:57 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[15:52:42.699937] [D] [thread 114513] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:63 PartitionId: 0 SubpartitionID: 0[m
[36m[15:52:42.699972] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[15:52:42.700099] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[15:52:42.700722] [D] [thread 114510] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[15:52:42.700896] [D] [thread 114513] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 63 is notifying completion: HardStop[m
[36m[15:52:42.700936] [D] [thread 114513] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 63 is terminated; tokens left = 2[m
[36m[15:52:42.700962] [D] [thread 114513] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 63 terminationType=HardStop[m
[36m[15:52:42.700991] [D] [thread 114508] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[15:52:42.700991] [D] [thread 114509] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[15:52:42.701060] [D] [thread 114509] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::39::0::0 Thread 3[m
[36m[15:52:42.701063] [D] [thread 114508] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::39::0::0 Thread 0[m
[36m[15:52:42.701039] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[15:52:42.700991] [D] [thread 114510] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[15:52:42.701136] [D] [thread 114510] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::39::0::0 Thread 2[m
[36m[15:52:42.701197] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[15:52:42.701214] [D] [thread 114511] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[15:52:42.701255] [D] [thread 114511] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::39::0::0 Thread 1[m
[36m[15:52:42.701281] [D] [thread 114511] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::39::0::0[m
[36m[15:52:42.701302] [D] [thread 114511] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::39::0::0[m
[36m[15:52:42.701326] [D] [thread 114511] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::39::0::0[m
[32m[15:52:42.701385] [I] [thread 114511] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(0)[m
[36m[15:52:42.701396] [D] [thread 114513] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=63 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[15:52:42.701451] [D] [thread 114513] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:63 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[15:52:42.701749] [D] [thread 114508] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[15:52:42.701968] [D] [thread 114508] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[15:52:42.701984] [D] [thread 114510] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[15:52:42.702025] [D] [thread 114508] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::45::0::0 Thread 0[m
[36m[15:52:42.702027] [D] [thread 114510] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::45::0::0 Thread 2[m
[36m[15:52:42.702200] [D] [thread 114509] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[15:52:42.702243] [D] [thread 114509] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::45::0::0 Thread 3[m
[36m[15:52:42.702373] [D] [thread 114511] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[15:52:42.702411] [D] [thread 114511] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::45::0::0 Thread 1[m
[36m[15:52:42.702439] [D] [thread 114511] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::45::0::0[m
[36m[15:52:42.702460] [D] [thread 114511] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::45::0::0[m
[36m[15:52:42.702481] [D] [thread 114511] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::45::0::0[m
[32m[15:52:42.702532] [I] [thread 114511] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(0)[m
[36m[15:52:42.702929] [D] [thread 114509] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[15:52:42.703124] [D] [thread 114509] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[15:52:42.703171] [D] [thread 114510] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[15:52:42.703175] [D] [thread 114509] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 3[m
[36m[15:52:42.703269] [D] [thread 114510] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 2[m
[36m[15:52:42.703314] [D] [thread 114508] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[15:52:42.703353] [D] [thread 114508] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 0[m
[36m[15:52:42.703476] [D] [thread 114511] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[15:52:42.703518] [D] [thread 114511] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 1[m
[36m[15:52:42.703545] [D] [thread 114511] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::51::0::0[m
[36m[15:52:42.703565] [D] [thread 114511] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::51::0::0[m
[36m[15:52:42.703587] [D] [thread 114511] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::51::0::0[m
[32m[15:52:42.703634] [I] [thread 114511] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(0)[m
[36m[15:52:42.704002] [D] [thread 114509] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[15:52:42.704199] [D] [thread 114509] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::57::0::0[m
[36m[15:52:42.704247] [D] [thread 114509] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::57::0::0 Thread 3[m
[36m[15:52:42.704228] [D] [thread 114510] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::57::0::0[m
[36m[15:52:42.704312] [D] [thread 114510] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::57::0::0 Thread 2[m
[36m[15:52:42.704415] [D] [thread 114508] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::57::0::0[m
[36m[15:52:42.704469] [D] [thread 114508] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::57::0::0 Thread 0[m
[36m[15:52:42.704595] [D] [thread 114511] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::57::0::0[m
[36m[15:52:42.704635] [D] [thread 114511] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::57::0::0 Thread 1[m
[36m[15:52:42.704664] [D] [thread 114511] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::57::0::0[m
[36m[15:52:42.704684] [D] [thread 114511] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::57::0::0[m
[36m[15:52:42.704719] [D] [thread 114511] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::57::0::0[m
[32m[15:52:42.704768] [I] [thread 114511] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::57::0::0; newCnt(0)[m
[36m[15:52:42.705155] [D] [thread 114509] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[15:52:42.705413] [D] [thread 114509] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::63::0::0[m
[36m[15:52:42.705418] [D] [thread 114510] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::63::0::0[m
[36m[15:52:42.705474] [D] [thread 114509] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::63::0::0 Thread 3[m
[36m[15:52:42.705513] [D] [thread 114510] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::63::0::0 Thread 2[m
[36m[15:52:42.705618] [D] [thread 114508] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::63::0::0[m
[36m[15:52:42.705660] [D] [thread 114508] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::63::0::0 Thread 0[m
[36m[15:52:42.705780] [D] [thread 114511] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::63::0::0[m
[36m[15:52:42.705820] [D] [thread 114511] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::63::0::0 Thread 1[m
[36m[15:52:42.705845] [D] [thread 114511] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::63::0::0[m
[36m[15:52:42.705865] [D] [thread 114511] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::63::0::0[m
[36m[15:52:42.705886] [D] [thread 114511] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::63::0::0[m
[32m[15:52:42.705935] [I] [thread 114511] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::63::0::0; newCnt(0)[m
[36m[15:52:42.706274] [D] [thread 114509] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[15:52:42.706462] [D] [thread 114509] [ExecutableQueryPlan.cpp:352] [notifySinkCompletion] QEP 7 Sink FileSink() is terminated; tokens left = 1[m
[36m[15:52:42.706536] [D] [thread 114509] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[15:52:42.706671] [D] [thread 114509] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[15:52:42.706986] [D] [thread 114509] [SinkMedium.cpp:136] [postReconfigurationCallback] Sink [ FileSink() ] is completed with  HardStop[m
2023-11-10 15:52:42.707 postReconfigurationCallback: queryId=1, querySubPlanId=7; queryId=1 subPlanId=7 processedTasks=24 processedTuple=24 processedBuffers=24 processedWatermarks=0 latencyAVG=1699631426437 queueSizeAVG=0 availableGlobalBufferAVG=511 availableFixedBufferAVG=0
[36m[15:52:42.707582] [D] [thread 114509] [ExecutableQueryPlan.cpp:231] [postReconfigurationCallback] Executing HardEndOfStream on qep queryId=1 querySubPlanId=7[m
[36m[15:52:42.707634] [D] [thread 114509] [ExecutableQueryPlan.cpp:172] [stop] QueryExecutionPlan: stop queryId=1 querySubPlanId=7[m
[36m[15:52:42.707653] [D] [thread 114509] [ExecutableQueryPlan.cpp:174] [stop] QueryExecutionPlan: stop 1-7 is marked as stopped now[m
[36m[15:52:42.707939] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Destroy[m
[36m[15:52:42.708166] [D] [thread 114513] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Destroy[m
[36m[15:52:42.708925] [D] [thread 114513] [QueryManager.cpp:312] [postReconfigurationCallback] AbstractQueryManager: removed running QEP  7[m
[36m[15:52:42.709082] [D] [thread 114513] [QueryManagerLifecycle.cpp:380] [stopQuery] AbstractQueryManager::stopQuery: query 7 was successful[m
[36m[15:52:42.709107] [D] [thread 114513] [NodeEngine.cpp:265] [stopQuery] Runtime: stop of QEP  7  succeeded[m
[36m[15:52:42.709126] [D] [thread 114513] [WorkerRPCServer.cpp:97] [StopQuery] WorkerRPCServer::StopQuery: success[m
[36m[15:52:42.713686] [D] [thread 114497] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Stop succeed[m
[36m[15:52:42.713774] [D] [thread 114497] [QueryUndeploymentPhase.cpp:114] [stopQuery] QueryDeploymentPhase: Finished stopping execution plan for query with Id 1[m
[36m[15:52:42.714245] [D] [thread 114497] [QueryUndeploymentPhase.cpp:59] [execute] QueryUndeploymentPhase:removeQuery: undeploy query  1[m
[36m[15:52:42.714291] [D] [thread 114497] [QueryUndeploymentPhase.cpp:125] [undeployQuery] QueryUndeploymentPhase::undeployQuery queryId= 1[m
[36m[15:52:42.714402] [D] [thread 114497] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=6 and IP=192.168.2.33:39511[m
[36m[15:52:42.714429] [D] [thread 114497] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.33:39511 queryId=1[m
[36m[15:52:42.719063] [D] [thread 114497] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=5 and IP=192.168.2.32:44575[m
[36m[15:52:42.719150] [D] [thread 114497] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.32:44575 queryId=1[m
[36m[15:52:42.723510] [D] [thread 114497] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=8 and IP=192.168.2.35:39721[m
[36m[15:52:42.723597] [D] [thread 114497] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.35:39721 queryId=1[m
[36m[15:52:42.727940] [D] [thread 114497] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=7 and IP=192.168.2.34:44541[m
[36m[15:52:42.728138] [D] [thread 114497] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.34:44541 queryId=1[m
[36m[15:52:42.732510] [D] [thread 114497] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=10 and IP=192.168.2.38:39609[m
[36m[15:52:42.732588] [D] [thread 114497] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.38:39609 queryId=1[m
[36m[15:52:42.736924] [D] [thread 114497] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=9 and IP=192.168.2.37:42321[m
[36m[15:52:42.737005] [D] [thread 114497] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.37:42321 queryId=1[m
[36m[15:52:42.741329] [D] [thread 114497] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=1 and IP=192.168.2.11:40941[m
[36m[15:52:42.741411] [D] [thread 114497] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.11:40941 queryId=1[m
[36m[15:52:42.745875] [D] [thread 114497] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=2 and IP=192.168.2.12:36563[m
[36m[15:52:42.745967] [D] [thread 114497] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.12:36563 queryId=1[m
[36m[15:52:42.750187] [D] [thread 114497] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=3 and IP=192.168.2.30:33619[m
[36m[15:52:42.750274] [D] [thread 114497] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.30:33619 queryId=1[m
[36m[15:52:42.754489] [D] [thread 114497] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=4 and IP=192.168.2.31:38857[m
[36m[15:52:42.754575] [D] [thread 114497] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.31:38857 queryId=1[m
[36m[15:52:42.758675] [D] [thread 114497] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Unregister for 10 queues[m
[36m[15:52:42.788619] [D] [thread 114571] [WorkerRPCServer.cpp:64] [UnregisterQuery] WorkerRPCServer::UnregisterQuery: got request for 1[m
[36m[15:52:42.788717] [D] [thread 114571] [NodeEngine.cpp:206] [unregisterQuery] Runtime: unregisterQuery query= 1[m
[36m[15:52:42.788795] [D] [thread 114571] [NodeEngine.cpp:231] [unregisterQuery] Runtime: unregister of query  7 : current status is stopped= true[m
[36m[15:52:42.788817] [D] [thread 114571] [QueryManagerLifecycle.cpp:222] [deregisterQuery] AbstractQueryManager::deregisterAndUndeployQuery: query 1[m
[36m[15:52:42.788893] [D] [thread 114571] [NodeEngine.cpp:234] [unregisterQuery] Runtime: unregister of query  7  succeeded[m
[36m[15:52:42.788965] [D] [thread 114571] [WorkerRPCServer.cpp:67] [UnregisterQuery] WorkerRPCServer::UnregisterQuery: success[m
[31m[1m[15:52:42.820113] [E] [thread 115326] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 2 Reason for failure: onFatalException: exception=[Failed assertion on metadata.count() == 0 error message: PartitionManager: Consumer Partition 1::30::0::0 is still alive: 4:: callstack:
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaadc0a626f, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffffa6a79d4f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaadc0a6c27, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb095841f, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb0771053, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffa8b156c7, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffffa718db17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffa8b27ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffa8b28c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaadc0a626f, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffffa6a79d4f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaadc0a6c27, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb095841f, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb0771053, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffa8b156c7, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffffa718db17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffa8b27ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffa8b28c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[1m[41m[15:52:42.877972] [C] [thread 114497] [RequestProcessorService.cpp:236] [start] QueryProcessingService: Received unexpected exception while scheduling the queryIdAndCatalogEntryMapping: [m
[32m[15:52:42.878059] [I] [thread 114497] [RequestProcessorService.cpp:255] [shutDown] Request Processor Service is shutting down! No further requests can be processed![m
[32m[15:52:42.878126] [I] [thread 114497] [RequestQueue.cpp:63] [insertPoisonPill] QueryRequestQueue: Shutdown is called. Inserting Poison pill in the query request queue.[m
[33m[1m[15:52:42.878196] [W] [thread 114497] [RequestProcessorService.cpp:240] [start] QueryProcessingService: Terminated[m
[32m[15:52:42.878208] [I] [thread 114497] [RequestProcessorService.cpp:255] [shutDown] Request Processor Service is shutting down! No further requests can be processed![m
[33m[1m[15:52:42.878218] [W] [thread 114497] [NesCoordinator.cpp:171] [operator()] NesCoordinator: finished queryRequestProcessor[m
[31m[1m[15:52:43.148522] [E] [thread 114517] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:52:43.149448] [W] [thread 114517] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.12:36563 went dead so we remove it[m
[32m[15:52:43.149600] [I] [thread 114517] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[32m[15:52:43.149625] [I] [thread 114517] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[15:52:43.149654] [I] [thread 114517] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[15:52:43.149662] [I] [thread 114517] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[15:52:43.149684] [I] [thread 114517] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:52:43.149693] [I] [thread 114517] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[15:52:43.149735] [D] [thread 114517] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[15:52:43.154632] [E] [thread 114517] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:52:43.155516] [W] [thread 114517] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:33619 went dead so we remove it[m
[32m[15:52:43.155661] [I] [thread 114517] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[15:52:43.155686] [I] [thread 114517] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[15:52:43.155714] [I] [thread 114517] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[15:52:43.155759] [I] [thread 114517] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[15:52:43.155773] [I] [thread 114517] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:52:43.155782] [I] [thread 114517] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[15:52:43.155806] [D] [thread 114517] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[15:52:43.160692] [E] [thread 114517] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:52:43.161664] [W] [thread 114517] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:38857 went dead so we remove it[m
[32m[15:52:43.161804] [I] [thread 114517] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[32m[15:52:43.161830] [I] [thread 114517] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[15:52:43.161851] [I] [thread 114517] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[15:52:43.161860] [I] [thread 114517] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[15:52:43.161889] [I] [thread 114517] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:52:43.161899] [I] [thread 114517] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[15:52:43.161924] [D] [thread 114517] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[15:52:43.696462] [D] [thread 114516] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[15:52:44.285823] [E] [thread 114517] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:52:44.286719] [W] [thread 114517] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.12:36563 went dead so we remove it[m
[32m[15:52:44.286866] [I] [thread 114517] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[33m[1m[15:52:44.286895] [W] [thread 114517] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[15:52:44.291684] [E] [thread 114517] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:52:44.292621] [W] [thread 114517] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:33619 went dead so we remove it[m
[32m[15:52:44.292762] [I] [thread 114517] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[33m[1m[15:52:44.292790] [W] [thread 114517] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[31m[1m[15:52:44.297719] [E] [thread 114517] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:52:44.298712] [W] [thread 114517] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:38857 went dead so we remove it[m
[32m[15:52:44.298864] [I] [thread 114517] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[33m[1m[15:52:44.298895] [W] [thread 114517] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[31m[1m[15:52:44.340285] [E] [thread 114517] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:52:44.341385] [W] [thread 114517] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.35:39721 went dead so we remove it[m
[32m[15:52:44.341535] [I] [thread 114517] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=4][m
[32m[15:52:44.341563] [I] [thread 114517] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[15:52:44.341574] [I] [thread 114517] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[15:52:44.341599] [D] [thread 114517] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[15:52:44.346882] [E] [thread 114517] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[15:52:44.347831] [W] [thread 114517] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.37:42321 went dead so we remove it[m
[32m[15:52:44.347986] [I] [thread 114517] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=4][m
[32m[15:52:44.348013] [I] [thread 114517] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[15:52:44.348025] [I] [thread 114517] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[15:52:44.348050] [D] [thread 114517] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
