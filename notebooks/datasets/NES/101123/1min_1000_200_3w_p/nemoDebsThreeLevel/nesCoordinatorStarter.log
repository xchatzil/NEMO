
███╗░░██╗███████╗██████╗░██╗░░░██╗██╗░░░░░░█████╗░░██████╗████████╗██████╗░███████╗░█████╗░███╗░░░███╗
████╗░██║██╔════╝██╔══██╗██║░░░██║██║░░░░░██╔══██╗██╔════╝╚══██╔══╝██╔══██╗██╔════╝██╔══██╗████╗░████║
██╔██╗██║█████╗░░██████╦╝██║░░░██║██║░░░░░███████║╚█████╗░░░░██║░░░██████╔╝█████╗░░███████║██╔████╔██║
██║╚████║██╔══╝░░██╔══██╗██║░░░██║██║░░░░░██╔══██║░╚═══██╗░░░██║░░░██╔══██╗██╔══╝░░██╔══██║██║╚██╔╝██║
██║░╚███║███████╗██████╦╝╚██████╔╝███████╗██║░░██║██████╔╝░░░██║░░░██║░░██║███████╗██║░░██║██║░╚═╝░██║
╚═╝░░╚══╝╚══════╝╚═════╝░░╚═════╝░╚══════╝╚═╝░░╚═╝╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝╚══════╝╚═╝░░╚═╝╚═╝░░░░░╚═╝

▒█▀▀█ █▀▀█ █▀▀█ █▀▀█ █▀▀▄ ░▀░ █▀▀▄ █▀▀█ ▀▀█▀▀ █▀▀█ █▀▀█ 
▒█░░░ █░░█ █░░█ █▄▄▀ █░░█ ▀█▀ █░░█ █▄▄█ ░░█░░ █░░█ █▄▄▀ 
▒█▄▄█ ▀▀▀▀ ▀▀▀▀ ▀░▀▀ ▀▀▀░ ▀▀▀ ▀░░▀ ▀░░▀ ░░▀░░ ▀▀▀▀ ▀░▀▀ v0.5.215-SNAPSHOT
[32m[15:57:21.518031] [I] [thread 115870] [nesCoordinatorStarter.cpp:48] [main] start coordinator with Name: restIp
Description: NES ip of the REST server.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: coordinatorIp
Description: RPC IP address of NES Coordinator.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the Coordinator
Value: 4000
Default Value: 4000

Name: restPort
Description: Port exposed for rest endpoints
Value: 8081
Default Value: 8081

Name: dataPort
Description: Data server port of the Coordinator
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_DEBUG
Default Value: LOG_INFO

Name: enableQueryReconfiguration
Description: Enable reconfiguration of running query plans. (Default: false)
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 

Name: workerId
Description: Worker id.
Value: 0
Default Value: 0

Name: localWorkerIp
Description: Worker IP.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: coordinatorIp
Description: Server IP of the NES Coordinator to which the NES Worker should connect.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the NES Worker.
Value: 0
Default Value: 0

Name: dataPort
Description: Data port of the NES Worker.
Value: 0
Default Value: 0

Name: coordinatorPort
Description: RPC server Port of the NES Coordinator to which the NES Worker should connect. Needs to be set and needs to be the same as rpcPort in Coordinator.
Value: 4000
Default Value: 4000

Name: numberOfSlots
Description: Number of computing slots for the NES Worker.
Value: 65535
Default Value: 65535

Name: numWorkerThreads
Description: Number of worker threads.
Value: 4
Default Value: 1

Name: numberOfBuffersInGlobalBufferManager
Description: Number buffers in global buffer pool.
Value: 1024
Default Value: 1024

Name: numberOfBuffersPerWorker
Description: Number buffers in task local buffer pool.
Value: 128
Default Value: 128

Name: numberOfBuffersInSourceLocalBufferPool
Description: Number buffers in source local buffer pool.
Value: 64
Default Value: 64

Name: bufferSizeInBytes
Description: BufferSizeInBytes.
Value: 32000
Default Value: 4096

Name: parentId
Description: Parent ID of this node.
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_INFO
Default Value: LOG_INFO

Name: sourcePinList
Description: comma separated list of where to map the sources
Value: 
Default Value: 

Name: workerPinList
Description: comma separated list of where to map the worker
Value: 
Default Value: 

Name: queuePinList
Description: comma separated list of where to map the worker on the queue
Value: 
Default Value: 

Name: numaAwareness
Description: Enable Numa-Aware execution
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: monitoringWaitTime
Description: Sampling period of metrics (ms).
Value: 1000
Default Value: 1000

Name: queryCompilerType
Description: Indicates the type for the query compiler [DEFAULT_QUERY_COMPILER|NAUTILUS_QUERY_COMPILER].
Value: NAUTILUS_QUERY_COMPILER
Default Value: DEFAULT_QUERY_COMPILER

Name: compilationStrategy
Description: Indicates the optimization strategy for the query compiler [FAST|DEBUG|OPTIMIZE|PROXY_INLINING].
Value: OPTIMIZE
Default Value: OPTIMIZE

Name: pipeliningStrategy
Description: Indicates the pipelining strategy for the query compiler [OPERATOR_FUSION|OPERATOR_AT_A_TIME].
Value: OPERATOR_FUSION
Default Value: OPERATOR_FUSION

Name: queryCompilerNautilusBackendConfig
Description: Indicates the nautilus backend for the nautilus query compiler [MLIR_COMPILER|INTERPRETER|BC_INTERPRETER|FLOUNDER_COMPILER].
Value: MLIR_COMPILER
Default Value: MLIR_COMPILER

Name: outputBufferOptimizationLevel
Description: Indicates the OutputBufferAllocationStrategy [ALL|NO|ONLY_INPLACE_OPERATIONS_NO_FALLBACK,|REUSE_INPUT_BUFFER_AND_OMIT_OVERFLOW_CHECK_NO_FALLBACK,|REUSE_INPUT_BUFFER_NO_FALLBACK|OMIT_OVERFLOW_CHECK_NO_FALLBACK]. 
Value: ALL
Default Value: ALL

Name: windowingStrategy
Description: Indicates the windowingStrategy [LEGACY|SLICING|BUCKETING]. 
Value: LEGACY
Default Value: LEGACY

Name: useCompilationCache
Description: Enable use compilation caching
Value: 0
Default Value: 0

Name: numberOfPartitions
Description: Partitions in the hash table
Value: 1
Default Value: 1

Name: pageSize
Description: Page size of hash table
Value: 131072
Default Value: 131072

Name: preAllocPageCnt
Description: Page count of pre allocated pages in each bucket hash table
Value: 1
Default Value: 1

Name: cudaSdkPath
Description: Path to CUDA SDK.
Value: /usr/local/cuda
Default Value: /usr/local/cuda

Name: maxHashTableSize
Description: Maximum size of hash table
Value: 2097152
Default Value: 2097152

Name: joinStrategy
Description: Indicates the windowingStrategy[HASH_JOIN_LOCAL|HASH_JOIN_GLOBAL_LOCKING|HASH_JOIN_GLOBAL_LOCK_FREE|NESTED_LOOP_JOIN]. 
Value: NESTED_LOOP_JOIN
Default Value: NESTED_LOOP_JOIN


Name: physicalSources
Description: Physical sources


Name: nodeSpatialType
Description: specifies if the worker has no known location or if it is a fixed location node or mobile node
Value: NO_LOCATION
Default Value: NO_LOCATION

Name: locationBufferSize
Description: The amount of past locations to be recorded in order to predict the future trajectory
Value: 30
Default Value: 30

Name: locationBufferSaveRate
Description: Determines after how many location updates a new location will be inserted in the location buffer
Value: 4
Default Value: 4

Name: pathDistanceDelta
Description: when deviating further than delta meters from the current predicted path, an update of the prediction will be triggered
Value: 20
Default Value: 20

Name: nodeInfoDownloadRadius
Description: The radius in meters in which nodes will be downloaded
Value: 10000
Default Value: 10000

Name: nodeIndexUpdateThreshold
Description: Trigger download of new node info when the device is less than threshold away from the boundary of the area covered by the current info
Value: 2000
Default Value: 2000

Name: defaultCoverageRadius
Description: The coverage in meters each field node is assumed to have
Value: 1000
Default Value: 1000

Name: pathPredictionLength
Description: The Length of the predicted path to be computed
Value: 10000
Default Value: 10000

Name: speedDifferenceThresholdFactor
Description: The factor by which the speed needs to change to trigger a recalculation of reconnect predictions
Value: 1e-05
Default Value: 1e-05

Name: sendDevicePositionUpdateThreshold
Description: The distance in meters after which the device will report it's new position in meters
Value: 100
Default Value: 100

Name: pushPositionUpdates
Description: determines if position updates should be sent to the coordinator
Value: 1
Default Value: 1

Name: mobilityHandlerUpdateInterval
Description: the time which the thread running at the worker mobility handler will sleep after each iteration
Value: 10000
Default Value: 10000

Name: locationProviderType
Description: the kind of interface which the  mobile worker gets its geolocation info from
Value: BASE
Default Value: BASE

Name: locationProviderConfig
Description: the configuration data for the location interface
Value: 
Default Value: 

Name: locationProviderSimulatedStartTime
Description: The start time to be simulated if device movement is simulated
Value: 0
Default Value: 0


Name: numberOfQueues
Description: Number of processing queues.
Value: 1
Default Value: 1

Name: numberOfThreadsPerQueue
Description: Number of threads per processing queue.
Value: 0
Default Value: 0

Name: numberOfBuffersPerEpoch
Description: Number of tuple buffers allowed in one epoch.
Value: 100
Default Value: 100

Name: queryManagerMode
Description: Which mode the query manager is running in. (Dynamic, Static, NumaAware, Invalid)
Value: Dynamic
Default Value: Dynamic

Name: enableSourceSharing
Description: Enable source sharing
Value: 0
Default Value: 0

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 


Name: workerConfigPath
Description: Path to a configuration file for the internal worker.
Value: 
Default Value: 

Name: queryBatchSize
Description: The number of queryIdAndCatalogEntryMapping to be processed together
Value: 1
Default Value: 1

Name: queryMergerRule
Description: The rule to be used for performing query merging
Value: DefaultQueryMergerRule
Default Value: DefaultQueryMergerRule

Name: memoryLayoutPolicy
Description: selects the memory layout selection policy can be [FORCE_ROW_LAYOUT|FORCE_COLUMN_LAYOUT]
Value: FORCE_ROW_LAYOUT
Default Value: FORCE_ROW_LAYOUT

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: performDistributedWindowOptimization
Description: Enables the distribution of window aggregations.
Value: 1
Default Value: 1

Name: distributedWindowChildThreshold
Description: Threshold for the distribution of window aggregations.
Value: 1
Default Value: 2

Name: distributedWindowCombinerThreshold
Description: Threshold for the insertion of pre-aggregation operators.
Value: 1
Default Value: 4

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: advanceSemanticValidation
Description: Perform advance semantic validation on the incoming queryIdAndCatalogEntryMapping. (Default: false)
Value: 0
Default Value: 0

Name: enableNemoPlacement
Description: Enables NEMO distributed window rule to use central windows instead of the distributed windows. (Default: false)
Value: 1
Default Value: 0


Name: logicalSources
Description: Logical Sources

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: restServerCorsAllowedOrigin
Description: The allowed origins to be set in the header of the responses to rest requests
Value: 
Default Value: 

[m
[32m[15:57:21.518214] [I] [thread 115870] [nesCoordinatorStarter.cpp:50] [main] creating coordinator[m
[36m[15:57:21.518458] [D] [thread 115870] [NesCoordinator.cpp:81] [NesCoordinator] NesCoordinator() restIp=192.168.2.11 restPort=8081 rpcIp=192.168.2.11 rpcPort=4000[m
[36m[15:57:21.519453] [D] [thread 115870] [ExecutablePath.cpp:80] [loadRuntimePathConfig] Detected a build dir as a execution location[m
[32m[15:57:21.519811] [I] [thread 115870] [ExecutablePath.cpp:113] [loadRuntimePathConfig] RuntimePathConfig: 
clangBinaryPath: /home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16
includePaths: 
	/home/ubuntu/git/nebulastream/build/include/nebulastream
libPaths:
	/home/ubuntu/git/nebulastream/build/nes-common/
	/home/ubuntu/git/nebulastream/build/nes-runtime/
	/home/ubuntu/git/nebulastream/build/nes-core/
	/home/ubuntu/git/nebulastream/build/nes-data-types/[m
[36m[15:57:21.520638] [D] [thread 115870] [SourceCatalog.cpp:41] [SourceCatalog] SourceCatalog: construct source catalog[m
[36m[15:57:21.520711] [D] [thread 115870] [SourceCatalog.cpp:31] [addDefaultSources] Sourcecatalog addDefaultSources[m
[36m[15:57:21.521371] [D] [thread 115870] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source default_logical already exist.[m
[36m[15:57:21.521465] [D] [thread 115870] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source default_logical[m
[36m[15:57:21.521576] [D] [thread 115870] [SourceCatalog.cpp:43] [SourceCatalog] SourceCatalog: construct source catalog successfully[m
[36m[15:57:21.521921] [D] [thread 115870] [SourceCatalogService.cpp:30] [SourceCatalogService] SourceCatalogService()[m
[36m[15:57:21.522078] [D] [thread 115870] [TopologyManagerService.cpp:36] [TopologyManagerService] TopologyManagerService()[m
[36m[15:57:21.574442] [D] [thread 115870] [RequestProcessorService.cpp:62] [RequestProcessorService] QueryRequestProcessorService()[m
[36m[15:57:21.574541] [D] [thread 115870] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[15:57:21.575074] [D] [thread 115870] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[15:57:21.575487] [D] [thread 115870] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[15:57:21.575820] [D] [thread 115870] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[15:57:21.576118] [D] [thread 115870] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[15:57:21.576306] [D] [thread 115870] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[15:57:21.576731] [D] [thread 115870] [BinaryOperatorSortRule.cpp:28] [BinaryOperatorSortRule] BinaryOperatorSortRule()[m
[36m[15:57:21.577891] [D] [thread 115870] [DistributedWindowRule.cpp:36] [DistributedWindowRule] Create DistributedWindowRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1[m
[36m[15:57:21.577967] [D] [thread 115870] [NemoWindowPinningRule.cpp:45] [NemoWindowPinningRule] Create NemoWindowPinningRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1[m
[36m[15:57:21.578247] [D] [thread 115870] [SignatureInferencePhase.cpp:26] [SignatureInferencePhase] SignatureInferencePhase()[m
[36m[15:57:21.578549] [D] [thread 115870] [QueryPlacementPhase.cpp:39] [QueryPlacementPhase] QueryPlacementPhase()[m
[36m[15:57:21.578863] [D] [thread 115870] [QueryUndeploymentPhase.cpp:35] [QueryUndeploymentPhase] QueryUndeploymentPhase()[m
[36m[15:57:21.579850] [D] [thread 115870] [QueryService.cpp:56] [QueryService] QueryService()[m
[36m[15:57:21.580381] [D] [thread 115870] [MonitoringService.cpp:37] [MonitoringService] MonitoringService: Initializing with monitoring= false[m
[36m[15:57:21.580576] [D] [thread 115870] [LatestEntriesMetricStore.cpp:23] [LatestEntriesMetricStore] LatestEntriesMetricStore: Init NewestMetricStore[m
[36m[15:57:21.580826] [D] [thread 115870] [MonitoringManager.cpp:70] [MonitoringManager] MonitoringManager: Init with monitoring= false , storage= NewestEntry [m
[33m[1m[15:57:21.580942] [W] [thread 115870] [MonitoringManager.cpp:194] [registerLogicalMonitoringStreams] MonitoringManager: Monitoring is disabled, registering of logical monitoring streams not possible.[m
[32m[15:57:21.580983] [I] [thread 115870] [nesCoordinatorStarter.cpp:53] [main] Starting Coordinator[m
[36m[15:57:21.580995] [D] [thread 115870] [NesCoordinator.cpp:159] [startCoordinator] NesCoordinator start[m
[36m[15:57:21.581356] [D] [thread 115870] [NesCoordinator.cpp:174] [startCoordinator] NesCoordinator: startCoordinatorRPCServer: Building GRPC Server[m
[32m[15:57:21.581378] [I] [thread 115878] [NesCoordinator.cpp:169] [operator()] NesCoordinator: started queryRequestProcessor[m
[36m[15:57:21.581458] [D] [thread 115878] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[15:57:21.581800] [D] [thread 115879] [NesCoordinator.cpp:180] [operator()] NesCoordinator: buildAndStartGRPCServer[m
[36m[15:57:21.588582] [D] [thread 115879] [NesCoordinator.cpp:354] [buildAndStartGRPCServer] NesCoordinator: buildAndStartGRPCServerServer listening on address=192.168.2.11:4000[m
[36m[15:57:21.588599] [D] [thread 115870] [NesCoordinator.cpp:185] [startCoordinator] NesCoordinator:buildAndStartGRPCServer: ready[m
[36m[15:57:21.588653] [D] [thread 115870] [NesCoordinator.cpp:187] [startCoordinator] NesCoordinator: Register Logical sources[m
[36m[15:57:21.588769] [D] [thread 115870] [NesCoordinator.cpp:192] [startCoordinator] NesCoordinator: Finished Registering Logical source[m
[36m[15:57:21.588780] [D] [thread 115870] [NesCoordinator.cpp:195] [startCoordinator] NesCoordinator::startCoordinator: start nes worker[m
[36m[15:57:21.589369] [D] [thread 115870] [NesWorker.cpp:65] [NesWorker] NesWorker: constructed[m
[36m[15:57:21.589536] [D] [thread 115870] [NesWorker.cpp:138] [start] NesWorker: start with blocking false workerId=0 coordinatorIp=192.168.2.11 coordinatorPort=4000 localWorkerIp=192.168.2.11 localWorkerRpcPort=0 localWorkerZmqPort=0 windowStrategy=LEGACY[m
[36m[15:57:21.589561] [D] [thread 115870] [NesWorker.cpp:140] [start] NesWorker::start: start Runtime[m
[36m[15:57:21.589631] [D] [thread 115870] [NesWorker.cpp:147] [start] NesWorker: MonitoringAgent configured with monitoring=false[m
[36m[15:57:21.589881] [D] [thread 115870] [MonitoringPlan.cpp:21] [MonitoringPlan] MonitoringPlan: Init with metrics of size 4[m
[36m[15:57:21.589938] [D] [thread 115870] [MonitoringCatalog.cpp:36] [defaultCatalog] MonitoringCatalog: Init default catalog[m
[32m[15:57:21.590016] [I] [thread 115870] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[15:57:21.590709] [I] [thread 115870] [CpuCollector.cpp:29] [CpuCollector] CpuCollector: Init CpuCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) coreNum:INTEGER(64 bits) user:INTEGER(64 bits) nice:INTEGER(64 bits) system:INTEGER(64 bits) idle:INTEGER(64 bits) iowait:INTEGER(64 bits) irq:INTEGER(64 bits) softirq:INTEGER(64 bits) steal:INTEGER(64 bits) guest:INTEGER(64 bits) guestnice:INTEGER(64 bits)[m
[32m[15:57:21.590791] [I] [thread 115870] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[15:57:21.591085] [I] [thread 115870] [DiskCollector.cpp:30] [DiskCollector] DiskCollector: Init DiskCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) F_BSIZE:INTEGER(64 bits) F_FRSIZE:INTEGER(64 bits) F_BLOCKS:INTEGER(64 bits) F_BFREE:INTEGER(64 bits) F_BAVAIL:INTEGER(64 bits)[m
[32m[15:57:21.591143] [I] [thread 115870] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[15:57:21.591708] [I] [thread 115870] [MemoryCollector.cpp:29] [MemoryCollector] MemoryCollector: Init MemoryCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) TOTAL_RAM:INTEGER(64 bits) TOTAL_SWAP:INTEGER(64 bits) FREE_RAM:INTEGER(64 bits) SHARED_RAM:INTEGER(64 bits) BUFFER_RAM:INTEGER(64 bits) FREE_SWAP:INTEGER(64 bits) TOTAL_HIGH:INTEGER(64 bits) FREE_HIGH:INTEGER(64 bits) PROCS:INTEGER(64 bits) MEM_UNIT:INTEGER(64 bits) LOADS_1MIN:INTEGER(64 bits) LOADS_5MIN:INTEGER(64 bits) LOADS_15MIN:INTEGER(64 bits)[m
[32m[15:57:21.591768] [I] [thread 115870] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[15:57:21.592771] [I] [thread 115870] [NetworkCollector.cpp:30] [NetworkCollector] NetworkCollector: Init NetworkCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)[m
[36m[15:57:21.593188] [D] [thread 115870] [MonitoringCatalog.cpp:28] [MonitoringCatalog] MonitoringCatalog: Init with collector map of size 4[m
[36m[15:57:21.593454] [D] [thread 115870] [MonitoringAgent.cpp:43] [MonitoringAgent] MonitoringAgent: Init with monitoring plan MonitoringPlan:disk(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True); and enabled=false[m
[33m[1m[15:57:21.593541] [W] [thread 115870] [MonitoringAgent.cpp:117] [addMonitoringStreams] MonitoringAgent: Monitoring is disabled, registering of physical monitoring streams not possible.[m
[36m[15:57:21.606064] [D] [thread 115870] [BufferManager.cpp:107] [initialize] NES memory allocation requires 32768000 out of 3975450624 available bytes[m
[36m[15:57:21.618798] [D] [thread 115870] [BufferManager.cpp:160] [initialize] BufferManager configuration bufferSize=32000 numOfBuffers=1024[m
[36m[15:57:21.670561] [D] [thread 115870] [QueryManager.cpp:78] [DynamicQueryManager] QueryManger: use dynamic mode with numThreads= 4[m
[33m[1m[15:57:21.671049] [W] [thread 115870] [NodeEngineBuilder.cpp:291] [createQueryCompilationOptions] The LEGACY window strategy is not supported by Nautilus. Switch to SLICING![m
[36m[15:57:21.671159] [D] [thread 115870] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[15:57:21.671265] [D] [thread 115870] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[15:57:21.671344] [D] [thread 115870] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[15:57:21.671397] [D] [thread 115870] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[15:57:21.671610] [D] [thread 115870] [NodeEngineBuilder.cpp:238] [build] Creating default OpenCLManager[m
[36m[15:57:21.671698] [D] [thread 115870] [OpenCLManager.cpp:230] [OpenCLManager] OpenCL support was disabled at build time[m
[36m[15:57:21.672001] [D] [thread 115870] [ExchangeProtocol.cpp:30] [ExchangeProtocol] ExchangeProtocol: Initializing ExchangeProtocol()[m
[36m[15:57:21.672196] [D] [thread 115870] [ZmqServer.cpp:69] [ZmqServer] ZmqServer(192.168.2.11:0) Creating ZmqServer()[m
[36m[15:57:21.672265] [D] [thread 115870] [ZmqServer.cpp:78] [start] ZmqServer(192.168.2.11:0): Starting server..[m
[36m[15:57:21.674725] [D] [thread 115884] [ZmqServer.cpp:156] [routerLoop] ZmqServer(192.168.2.11:0):  Trying to bind on tcp://192.168.2.11:0[m
[36m[15:57:21.676374] [D] [thread 115884] [ZmqServer.cpp:161] [routerLoop] ZmqServer(192.168.2.11:0):  Created socket on 192.168.2.11: 0[m
[36m[15:57:21.676526] [D] [thread 115884] [ZmqServer.cpp:176] [routerLoop] ZmqServer: Created socket on 192.168.2.11: 38611[m
[36m[15:57:21.677830] [D] [thread 115887] [ZmqServer.cpp:254] [messageHandlerEventLoop] Created Zmq Handler Thread #0 on 192.168.2.11: 38611[m
[36m[15:57:21.677830] [D] [thread 115888] [ZmqServer.cpp:254] [messageHandlerEventLoop] Created Zmq Handler Thread #1 on 192.168.2.11: 38611[m
[32m[15:57:21.677976] [I] [thread 115870] [NetworkManager.cpp:36] [NetworkManager] NetworkManager: Server started successfully on tcp://192.168.2.11:38611[m
[36m[15:57:21.678077] [D] [thread 115870] [QueryManager.cpp:140] [startThreadPool] startThreadPool: setup thread pool for nodeEngineId= 1699714688  with numThreads= 4[m
[36m[15:57:21.678325] [D] [thread 115870] [ThreadPool.cpp:108] [start] Threadpool: Spawning 4 threads[m
[36m[15:57:21.679476] [D] [thread 115870] [ThreadPool.cpp:152] [start] Threadpool: start return from start[m
[36m[15:57:21.679541] [D] [thread 115870] [NodeEngine.cpp:78] [NodeEngine] NodeEngine(): thread pool successfully started[m
[36m[15:57:21.679620] [D] [thread 115889] [ThreadPool.cpp:147] [operator()] worker 0 with workerId 1 pins to queue 0[m
[36m[15:57:21.679620] [D] [thread 115891] [ThreadPool.cpp:147] [operator()] worker 2 with workerId 2 pins to queue 0[m
[36m[15:57:21.679713] [D] [thread 115890] [ThreadPool.cpp:147] [operator()] worker 1 with workerId 3 pins to queue 0[m
[36m[15:57:21.679726] [D] [thread 115870] [NesWorker.cpp:156] [start] NesWorker: Node engine started successfully[m
[36m[15:57:21.679985] [D] [thread 115870] [NesWorker.cpp:164] [start] NesWorker: request startWorkerRPCServer for accepting messages for address=192.168.2.11:0: 0[m
[36m[15:57:21.680157] [D] [thread 115891] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=1024 requested buffers=128[m
[36m[15:57:21.679789] [D] [thread 115892] [ThreadPool.cpp:147] [operator()] worker 3 with workerId 0 pins to queue 0[m
[36m[15:57:21.680607] [D] [thread 115893] [NesWorker.cpp:176] [operator()] NesWorker: buildAndStartGRPCServer[m
[36m[15:57:21.681045] [D] [thread 115893] [WorkerRPCServer.cpp:38] [WorkerRPCServer] WorkerRPCServer::WorkerRPCServer()[m
[36m[15:57:21.681416] [D] [thread 115889] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=896 requested buffers=128[m
[36m[15:57:21.682023] [D] [thread 115890] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=768 requested buffers=128[m
[36m[15:57:21.682601] [D] [thread 115892] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=640 requested buffers=128[m
[36m[15:57:21.684643] [D] [thread 115893] [NesWorker.cpp:117] [buildAndStartGRPCServer] NesWorker: buildAndStartGRPCServer Server listening on address 192.168.2.11:0: 42429[m
[36m[15:57:21.684683] [D] [thread 115870] [NesWorker.cpp:184] [start] NesWorker: startWorkerRPCServer ready for accepting messages for address=192.168.2.11:42429: 42429[m
[36m[15:57:21.684708] [D] [thread 115870] [NesWorker.cpp:187] [start] NesWorker: start with connect[m
[36m[15:57:21.684737] [D] [thread 115870] [NesWorker.cpp:306] [connect] NesWorker::connect() Registering worker with coordinator at 192.168.2.11:4000[m
[36m[15:57:21.684850] [D] [thread 115870] [CoordinatorRPCClient.cpp:152] [CoordinatorRPCClient] CoordinatorRPCClient(): creating channels to address =192.168.2.11:4000[m
[36m[15:57:21.687188] [D] [thread 115893] [CallData.cpp:36] [proceed] RequestInSyncInCreate=[m
[36m[15:57:21.687445] [D] [thread 115870] [CoordinatorRPCClient.cpp:156] [CoordinatorRPCClient] CoordinatorRPCClient::connecting: channel successfully created[m
[33m[1m[15:57:21.688519] [W] [thread 115870] [MonitoringAgent.cpp:96] [getRegistrationMetrics] MonitoringAgent: Metrics disabled. Return empty metric object for registration.[m
[36m[15:57:21.688582] [D] [thread 115870] [RegistrationMetrics.cpp:32] [RegistrationMetrics] RegistrationMetrics: Default ctor[m
[36m[15:57:21.690774] [D] [thread 115870] [CoordinatorRPCClient.cpp:387] [registerWorker] CoordinatorRPCClient::RegisterNodeRequest request=address: "192.168.2.11"
grpcPort: 42429
dataPort: 38611
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:57:21.704254] [D] [thread 115880] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.11"
grpcPort: 42429
dataPort: 38611
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:57:21.704592] [D] [thread 115880] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.11"
grpcPort: 42429
dataPort: 38611
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:57:21.704715] [D] [thread 115880] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[33m[1m[15:57:21.704739] [W] [thread 115880] [Topology.cpp:280] [toString] Topology: No root node found[m
[36m[15:57:21.704750] [D] [thread 115880] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[15:57:21.704796] [D] [thread 115880] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[15:57:21.704847] [D] [thread 115880] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 1 and resources 65535[m
[36m[15:57:21.705163] [D] [thread 115880] [TopologyManagerService.cpp:99] [registerWorker] TopologyManagerService::registerWorker: tree is empty so this becomes new root[m
[32m[15:57:21.705264] [I] [thread 115880] [Topology.cpp:356] [setAsRoot] Topology: Setting physical node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0] as root to the topology.[m
[36m[15:57:21.705391] [D] [thread 115880] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[15:57:21.705664] [D] [thread 115880] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
[m
[32m[15:57:21.705772] [I] [thread 115880] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[15:57:21.705812] [D] [thread 115880] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[15:57:21.705858] [D] [thread 115880] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[15:57:21.705871] [D] [thread 115880] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[15:57:21.705911] [D] [thread 115880] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[15:57:21.707407] [D] [thread 115880] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=1[m
[36m[15:57:21.709365] [D] [thread 115870] [NesWorker.cpp:334] [connect] NesWorker::connect() Worker registered successfully and got id=1[m
[36m[15:57:21.709449] [D] [thread 115870] [NesWorker.cpp:341] [connect] NesWorker::connect() Persisting workerId=1 in yaml file for the first time.[m
[36m[15:57:21.709567] [D] [thread 115870] [NesWorker.cpp:347] [connect] NesWorker::connect() Persisted workerId=1 successfully in yaml file.[m
[36m[15:57:21.709583] [D] [thread 115870] [NesWorker.cpp:362] [connect] NesWorker::registerWorker rpc register success with id 1[m
[36m[15:57:21.744981] [D] [thread 115870] [NesWorker.cpp:368] [connect] NesWorker start health check[m
[36m[15:57:21.745104] [D] [thread 115870] [WorkerHealthCheckService.cpp:39] [startHealthCheck] WorkerHealthCheckService::startHealthCheck worker id= 1[m
[36m[15:57:21.745118] [D] [thread 115870] [WorkerHealthCheckService.cpp:41] [startHealthCheck] start health checking on worker[m
[36m[15:57:21.745622] [D] [thread 115870] [NesWorker.cpp:247] [start] NesWorker: started, return[m
[36m[15:57:21.745793] [D] [thread 115870] [NesCoordinator.cpp:210] [startCoordinator] NesCoordinator starting rest server[m
[36m[15:57:21.746418] [D] [thread 115870] [NesCoordinator.cpp:239] [startCoordinator] NesCoordinator::startCoordinatorRESTServer: ready[m
[32m[15:57:21.746501] [I] [thread 115897] [RestServer.cpp:64] [start] Starting Oatpp Server on 192.168.2.11:8081[m
[32m[15:57:21.763181] [I] [thread 115897] [RestServer.cpp:166] [run] NebulaStream REST Server listening on port 8081[m
[36m[15:57:21.763377] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:21.777393] [D] [thread 115870] [NesCoordinator.cpp:244] [startCoordinator] NesCoordinator start health check[m
[36m[15:57:21.777480] [D] [thread 115870] [CoordinatortHealthCheckService.cpp:34] [startHealthCheck] CoordinatorHealthCheckService::startHealthCheck[m
[36m[15:57:21.777507] [D] [thread 115870] [CoordinatortHealthCheckService.cpp:36] [startHealthCheck] start health checking on coordinator[m
[36m[15:57:21.777956] [D] [thread 115870] [NesCoordinator.cpp:248] [startCoordinator] NesCoordinator started, join now and waiting for work[m
[36m[15:57:22.764662] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:23.765987] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:24.413432] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:24.414799] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:24.416837] [D] [thread 115900] [SourceCatalogController.hpp:125] [addLogicalSource] SourceCatalogController: addLogicalSource: REST received request to add new Logical Source.[m
[36m[15:57:24.419624] [D] [thread 115900] [SourceCatalogController.hpp:144] [addLogicalSource] SourceCatalogController: addLogicalSource: Try to add new Logical Source debs and Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));[m
[36m[15:57:24.419765] [D] [thread 115900] [SourceCatalogService.cpp:92] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source=debs schema= Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));[m
[36m[15:57:24.419897] [D] [thread 115900] [QueryParsingService.cpp:53] [createSchemaFromCode] QueryParsingService : generated code= #include <API/Schema.hpp>
#include <Common/DataTypes/DataTypeFactory.hpp>
namespace NES{
Schema createSchema(){
return Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));;}
}
[m
[36m[15:57:24.422352] [D] [thread 115901] [File.cpp:27] [createFile] Create File to file:///tmp/query_10-11-2023_15-57-24_1287415.cpp[m
[36m[15:57:24.423639] [D] [thread 115901] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[15:57:24.424769] [D] [thread 115901] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DFMT_HEADER_ONLY -DNES_COMPILE_TIME_LOG_LEVEL=6 -I/home/ubuntu/git/nebulastream/build/include/nebulastream -L/home/ubuntu/git/nebulastream/build/nes-core/ -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -shared -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -Wparentheses-equality -fpic -fno-trigraphs -o/tmp/query_10-11-2023_15-57-24_1287415.so -std=c++20 -stdlib=libstdc++ /tmp/query_10-11-2023_15-57-24_1287415.cpp'[m
[36m[15:57:25.416068] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:57:26.141568] [I] [thread 115901] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 1719.372696ms[m
[36m[15:57:26.143216] [D] [thread 115900] [SourceCatalog.cpp:49] [addLogicalSource] SourceCatalog: schema successfully created[m
[36m[15:57:26.143306] [D] [thread 115900] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source debs already exist.[m
[36m[15:57:26.143339] [D] [thread 115900] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source debs[m
[36m[15:57:26.143392] [D] [thread 115900] [SourceCatalogController.hpp:146] [addLogicalSource] SourceCatalogController: addLogicalSource: Successfully added new logical Source ? true[m
[36m[15:57:26.359556] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:26.360053] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:57:26.360924] [I] [thread 115906] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:57:26.362193] [I] [thread 115906] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:57:26.604023] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:26.604505] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:57:26.605122] [I] [thread 115907] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:57:26.605724] [I] [thread 115907] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:57:26.799747] [D] [thread 115895] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.12"
grpcPort: 36761
dataPort: 45195
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:57:26.800039] [D] [thread 115895] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.12"
grpcPort: 36761
dataPort: 45195
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:57:26.800122] [D] [thread 115895] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[15:57:26.800460] [D] [thread 115895] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[15:57:26.800509] [D] [thread 115895] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[15:57:26.800583] [D] [thread 115895] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 2 and resources 65535[m
[36m[15:57:26.800809] [D] [thread 115895] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[15:57:26.800950] [I] [thread 115895] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[15:57:26.801192] [I] [thread 115895] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:57:26.801494] [D] [thread 115895] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 2[m
[36m[15:57:26.801856] [D] [thread 115895] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[15:57:26.802222] [D] [thread 115895] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[15:57:26.802313] [I] [thread 115895] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[15:57:26.803233] [D] [thread 115895] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[15:57:26.803309] [D] [thread 115895] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[15:57:26.803372] [D] [thread 115895] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[15:57:26.803395] [D] [thread 115895] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[15:57:26.804110] [D] [thread 115895] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=2[m
[36m[15:57:27.605798] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:28.607066] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:29.608465] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:30.178658] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:30.179158] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:57:30.179961] [I] [thread 115909] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:57:30.181041] [I] [thread 115909] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:57:30.355270] [D] [thread 115880] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.30"
grpcPort: 34141
dataPort: 44665
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:57:30.355528] [D] [thread 115880] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.30"
grpcPort: 34141
dataPort: 44665
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:57:30.355602] [D] [thread 115880] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[15:57:30.355926] [D] [thread 115880] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[15:57:30.355964] [D] [thread 115880] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[15:57:30.356149] [D] [thread 115880] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 3 and resources 65535[m
[36m[15:57:30.356549] [D] [thread 115880] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[15:57:30.356784] [I] [thread 115880] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[15:57:30.357132] [I] [thread 115880] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:57:30.357307] [D] [thread 115880] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 3[m
[36m[15:57:30.357492] [D] [thread 115880] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[15:57:30.358097] [D] [thread 115880] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[15:57:30.358366] [I] [thread 115880] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[15:57:30.358481] [D] [thread 115880] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[15:57:30.358572] [D] [thread 115880] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[15:57:30.358599] [D] [thread 115880] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[15:57:30.358699] [D] [thread 115880] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[15:57:30.359747] [D] [thread 115880] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=3[m
[36m[15:57:31.180466] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:32.181777] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:33.183082] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:33.682434] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:33.682935] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:57:33.683868] [I] [thread 115910] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:57:33.685363] [I] [thread 115910] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:57:33.852959] [D] [thread 115880] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.31"
grpcPort: 37113
dataPort: 39953
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:57:33.853167] [D] [thread 115880] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.31"
grpcPort: 37113
dataPort: 39953
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:57:33.853224] [D] [thread 115880] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[15:57:33.853478] [D] [thread 115880] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[15:57:33.853499] [D] [thread 115880] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[15:57:33.853545] [D] [thread 115880] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 4 and resources 65535[m
[36m[15:57:33.853691] [D] [thread 115880] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[15:57:33.853756] [I] [thread 115880] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[15:57:33.853862] [I] [thread 115880] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:57:33.853933] [D] [thread 115880] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 4[m
[36m[15:57:33.854014] [D] [thread 115880] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[15:57:33.854225] [D] [thread 115880] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[15:57:33.854270] [I] [thread 115880] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[15:57:33.854292] [D] [thread 115880] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[15:57:33.854325] [D] [thread 115880] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[15:57:33.854342] [D] [thread 115880] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[15:57:33.854361] [D] [thread 115880] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[15:57:33.854835] [D] [thread 115880] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=4[m
[36m[15:57:34.684135] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:35.684496] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:36.327919] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:36.328520] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:57:36.329348] [I] [thread 115911] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:57:36.330807] [I] [thread 115911] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:57:36.499137] [D] [thread 115908] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.32"
grpcPort: 41755
dataPort: 44311
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:57:36.499355] [D] [thread 115908] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.32"
grpcPort: 41755
dataPort: 44311
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:57:36.499418] [D] [thread 115908] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[15:57:36.499857] [D] [thread 115908] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[15:57:36.499973] [D] [thread 115908] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[15:57:36.500120] [D] [thread 115908] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 5 and resources 65535[m
[36m[15:57:36.500479] [D] [thread 115908] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[15:57:36.500634] [I] [thread 115908] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[15:57:36.500783] [I] [thread 115908] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:57:36.500874] [D] [thread 115908] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 5[m
[36m[15:57:36.501022] [D] [thread 115908] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[15:57:36.501579] [D] [thread 115908] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[15:57:36.501665] [I] [thread 115908] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[15:57:36.501695] [D] [thread 115908] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[15:57:36.501733] [D] [thread 115908] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[15:57:36.501751] [D] [thread 115908] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[15:57:36.501773] [D] [thread 115908] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[15:57:36.502600] [D] [thread 115908] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=5[m
[36m[15:57:36.537823] [D] [thread 115908] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 5
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream4"
  logicalSourceName: "debs"
}
[m
[32m[15:57:36.537953] [I] [thread 115908] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[15:57:36.537995] [D] [thread 115908] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[15:57:36.538144] [D] [thread 115908] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= test_stream4 logical source= debs[m
[36m[15:57:36.539175] [D] [thread 115908] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[15:57:36.539335] [D] [thread 115908] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream4[m
[36m[15:57:36.539722] [D] [thread 115908] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream4 does not exist, try to add[m
[36m[15:57:36.539888] [D] [thread 115908] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[15:57:36.540146] [D] [thread 115908] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[15:57:36.540816] [D] [thread 115908] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[15:57:36.545219] [D] [thread 115912] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 5
oldParent: 1
newParent: 2
[m
[36m[15:57:36.545369] [D] [thread 115912] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 5  parentId= 1[m
[32m[15:57:36.545406] [I] [thread 115912] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[15:57:36.545441] [D] [thread 115912] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[15:57:36.545475] [D] [thread 115912] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  5  exists[m
[32m[15:57:36.545495] [I] [thread 115912] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[15:57:36.545517] [D] [thread 115912] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[15:57:36.545542] [D] [thread 115912] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[15:57:36.545640] [D] [thread 115912] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[15:57:36.545816] [I] [thread 115912] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:57:36.545891] [D] [thread 115912] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[15:57:36.545921] [D] [thread 115912] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[15:57:36.545960] [D] [thread 115912] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 5  parentId= 2[m
[32m[15:57:36.546013] [I] [thread 115912] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[15:57:36.546044] [D] [thread 115912] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[15:57:36.546073] [D] [thread 115912] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 5 exists[m
[32m[15:57:36.546094] [I] [thread 115912] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[15:57:36.546116] [D] [thread 115912] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[15:57:36.546356] [D] [thread 115912] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[15:57:36.546518] [I] [thread 115912] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[36m[15:57:36.546588] [D] [thread 115912] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[15:57:36.546968] [D] [thread 115912] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[15:57:36.547003] [D] [thread 115912] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[15:57:37.329784] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:38.331078] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:39.332439] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:39.875597] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:39.876063] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:57:39.877070] [I] [thread 115913] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:57:39.879065] [I] [thread 115913] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:57:40.043104] [D] [thread 115880] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.33"
grpcPort: 34167
dataPort: 37445
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:57:40.043270] [D] [thread 115880] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.33"
grpcPort: 34167
dataPort: 37445
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:57:40.043320] [D] [thread 115880] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[15:57:40.043562] [D] [thread 115880] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[15:57:40.043603] [D] [thread 115880] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[15:57:40.043697] [D] [thread 115880] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 6 and resources 65535[m
[36m[15:57:40.043822] [D] [thread 115880] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[15:57:40.043882] [I] [thread 115880] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[15:57:40.043961] [I] [thread 115880] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:57:40.044019] [D] [thread 115880] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 6[m
[36m[15:57:40.101510] [D] [thread 115880] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[15:57:40.101973] [D] [thread 115880] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[15:57:40.102065] [I] [thread 115880] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[15:57:40.102092] [D] [thread 115880] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[15:57:40.102129] [D] [thread 115880] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[15:57:40.102139] [D] [thread 115880] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[15:57:40.102157] [D] [thread 115880] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[15:57:40.102625] [D] [thread 115880] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=6[m
[36m[15:57:40.140751] [D] [thread 115880] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 6
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream5"
  logicalSourceName: "debs"
}
[m
[32m[15:57:40.140845] [I] [thread 115880] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[15:57:40.140871] [D] [thread 115880] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[15:57:40.140935] [D] [thread 115880] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= test_stream5 logical source= debs[m
[36m[15:57:40.141113] [D] [thread 115880] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[15:57:40.141165] [D] [thread 115880] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream5[m
[36m[15:57:40.141282] [D] [thread 115880] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[15:57:40.141338] [D] [thread 115880] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream5 does not exist, try to add[m
[36m[15:57:40.141373] [D] [thread 115880] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[15:57:40.141450] [D] [thread 115880] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[15:57:40.141481] [D] [thread 115880] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[15:57:40.145952] [D] [thread 115880] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 6
oldParent: 1
newParent: 2
[m
[36m[15:57:40.146091] [D] [thread 115880] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 6  parentId= 1[m
[32m[15:57:40.146129] [I] [thread 115880] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[15:57:40.146165] [D] [thread 115880] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[15:57:40.146201] [D] [thread 115880] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  6  exists[m
[32m[15:57:40.146223] [I] [thread 115880] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[15:57:40.146245] [D] [thread 115880] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[15:57:40.146271] [D] [thread 115880] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[15:57:40.146360] [D] [thread 115880] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[15:57:40.146539] [I] [thread 115880] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:57:40.147230] [D] [thread 115880] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[15:57:40.147277] [D] [thread 115880] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[15:57:40.147317] [D] [thread 115880] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 6  parentId= 2[m
[32m[15:57:40.147345] [I] [thread 115880] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[15:57:40.147378] [D] [thread 115880] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[15:57:40.147410] [D] [thread 115880] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 6 exists[m
[32m[15:57:40.147431] [I] [thread 115880] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[15:57:40.147453] [D] [thread 115880] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[15:57:40.147479] [D] [thread 115880] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[15:57:40.147675] [I] [thread 115880] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[36m[15:57:40.147753] [D] [thread 115880] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[15:57:40.148170] [D] [thread 115880] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[15:57:40.148206] [D] [thread 115880] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[15:57:40.877345] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:41.878655] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:42.879966] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:43.403723] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:43.404092] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:57:43.404861] [I] [thread 115915] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:57:43.406315] [I] [thread 115915] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:57:43.572055] [D] [thread 115914] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.34"
grpcPort: 43035
dataPort: 35013
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:57:43.572448] [D] [thread 115914] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.34"
grpcPort: 43035
dataPort: 35013
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:57:43.572539] [D] [thread 115914] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[15:57:43.573373] [D] [thread 115914] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[15:57:43.573449] [D] [thread 115914] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[15:57:43.573545] [D] [thread 115914] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 7 and resources 65535[m
[36m[15:57:43.573721] [D] [thread 115914] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[15:57:43.573918] [I] [thread 115914] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[15:57:43.574196] [I] [thread 115914] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:57:43.574374] [D] [thread 115914] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 7[m
[36m[15:57:43.574578] [D] [thread 115914] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[15:57:43.575371] [D] [thread 115914] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[15:57:43.575489] [I] [thread 115914] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[15:57:43.575529] [D] [thread 115914] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[15:57:43.575581] [D] [thread 115914] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[15:57:43.575607] [D] [thread 115914] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[15:57:43.575634] [D] [thread 115914] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[15:57:43.576665] [D] [thread 115914] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=7[m
[36m[15:57:43.611803] [D] [thread 115912] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 7
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream6"
  logicalSourceName: "debs"
}
[m
[32m[15:57:43.611930] [I] [thread 115912] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[15:57:43.611972] [D] [thread 115912] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[15:57:43.612063] [D] [thread 115912] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= test_stream6 logical source= debs[m
[36m[15:57:43.612269] [D] [thread 115912] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[15:57:43.612380] [D] [thread 115912] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream6[m
[36m[15:57:43.612466] [D] [thread 115912] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[15:57:43.612503] [D] [thread 115912] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[15:57:43.612540] [D] [thread 115912] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream6 does not exist, try to add[m
[36m[15:57:43.612573] [D] [thread 115912] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[15:57:43.612628] [D] [thread 115912] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[15:57:43.612656] [D] [thread 115912] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[15:57:43.616939] [D] [thread 115912] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 7
oldParent: 1
newParent: 3
[m
[36m[15:57:43.617061] [D] [thread 115912] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 7  parentId= 1[m
[32m[15:57:43.617096] [I] [thread 115912] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[15:57:43.617131] [D] [thread 115912] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[15:57:43.617165] [D] [thread 115912] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  7  exists[m
[32m[15:57:43.617185] [I] [thread 115912] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[15:57:43.617207] [D] [thread 115912] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[15:57:43.617233] [D] [thread 115912] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[15:57:43.617320] [D] [thread 115912] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[15:57:43.617510] [I] [thread 115912] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:57:43.617560] [D] [thread 115912] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[15:57:43.617589] [D] [thread 115912] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[15:57:43.617617] [D] [thread 115912] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 7  parentId= 3[m
[32m[15:57:43.617641] [I] [thread 115912] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[15:57:43.617668] [D] [thread 115912] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[15:57:43.617696] [D] [thread 115912] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 7 exists[m
[32m[15:57:43.617717] [I] [thread 115912] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[15:57:43.617739] [D] [thread 115912] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[15:57:43.617764] [D] [thread 115912] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[15:57:43.617897] [I] [thread 115912] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[15:57:43.617961] [D] [thread 115912] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[15:57:43.618440] [D] [thread 115912] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[15:57:43.618476] [D] [thread 115912] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[15:57:44.405361] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:45.406666] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:46.407991] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:47.058728] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:47.059193] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:57:47.059870] [I] [thread 115918] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:57:47.062064] [I] [thread 115918] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:57:47.230588] [D] [thread 115914] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.35"
grpcPort: 41675
dataPort: 45023
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:57:47.230806] [D] [thread 115914] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.35"
grpcPort: 41675
dataPort: 45023
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:57:47.230868] [D] [thread 115914] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[15:57:47.231493] [D] [thread 115914] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[15:57:47.231551] [D] [thread 115914] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[15:57:47.231627] [D] [thread 115914] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 8 and resources 65535[m
[36m[15:57:47.231768] [D] [thread 115914] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[15:57:47.231868] [I] [thread 115914] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[15:57:47.232142] [I] [thread 115914] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:57:47.232290] [D] [thread 115914] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 8[m
[36m[15:57:47.232579] [D] [thread 115914] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[15:57:47.233213] [D] [thread 115914] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[15:57:47.233333] [I] [thread 115914] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[15:57:47.233367] [D] [thread 115914] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[15:57:47.233407] [D] [thread 115914] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[15:57:47.233426] [D] [thread 115914] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[15:57:47.233448] [D] [thread 115914] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[15:57:47.234323] [D] [thread 115914] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=8[m
[36m[15:57:47.269701] [D] [thread 115914] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 8
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream7"
  logicalSourceName: "debs"
}
[m
[32m[15:57:47.269823] [I] [thread 115914] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[15:57:47.269863] [D] [thread 115914] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[15:57:47.269954] [D] [thread 115914] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= test_stream7 logical source= debs[m
[36m[15:57:47.270162] [D] [thread 115914] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[15:57:47.270216] [D] [thread 115914] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream7[m
[36m[15:57:47.270339] [D] [thread 115914] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[15:57:47.270382] [D] [thread 115914] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[15:57:47.270522] [D] [thread 115914] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[15:57:47.270586] [D] [thread 115914] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream7 does not exist, try to add[m
[36m[15:57:47.270688] [D] [thread 115914] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[15:57:47.270848] [D] [thread 115914] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[15:57:47.270964] [D] [thread 115914] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[15:57:47.276254] [D] [thread 115919] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 8
oldParent: 1
newParent: 3
[m
[36m[15:57:47.276444] [D] [thread 115919] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 8  parentId= 1[m
[32m[15:57:47.276481] [I] [thread 115919] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[15:57:47.276516] [D] [thread 115919] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[15:57:47.276551] [D] [thread 115919] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  8  exists[m
[32m[15:57:47.276571] [I] [thread 115919] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[15:57:47.276593] [D] [thread 115919] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[15:57:47.276619] [D] [thread 115919] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[15:57:47.276710] [D] [thread 115919] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[15:57:47.276888] [I] [thread 115919] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:57:47.276962] [D] [thread 115919] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[15:57:47.276993] [D] [thread 115919] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[15:57:47.277022] [D] [thread 115919] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 8  parentId= 3[m
[32m[15:57:47.277044] [I] [thread 115919] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[15:57:47.277091] [D] [thread 115919] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[15:57:47.277122] [D] [thread 115919] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 8 exists[m
[32m[15:57:47.277143] [I] [thread 115919] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[15:57:47.277166] [D] [thread 115919] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[15:57:47.277191] [D] [thread 115919] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[15:57:47.277437] [I] [thread 115919] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[15:57:47.277510] [D] [thread 115919] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[15:57:47.278042] [D] [thread 115919] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[15:57:47.278082] [D] [thread 115919] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[15:57:48.060593] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:49.061843] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:50.063086] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:50.465973] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:50.466451] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:57:50.467689] [I] [thread 115920] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:57:50.470423] [I] [thread 115920] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:57:50.634712] [D] [thread 115914] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.37"
grpcPort: 44543
dataPort: 44791
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:57:50.634968] [D] [thread 115914] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.37"
grpcPort: 44543
dataPort: 44791
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:57:50.635045] [D] [thread 115914] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[15:57:50.635951] [D] [thread 115914] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[15:57:50.636025] [D] [thread 115914] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[15:57:50.636119] [D] [thread 115914] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 9 and resources 65535[m
[36m[15:57:50.636295] [D] [thread 115914] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[15:57:50.636542] [I] [thread 115914] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[15:57:50.636844] [I] [thread 115914] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:57:50.637038] [D] [thread 115914] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 9[m
[36m[15:57:50.637244] [D] [thread 115914] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[15:57:50.638189] [D] [thread 115914] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[15:57:50.638304] [I] [thread 115914] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[15:57:50.638343] [D] [thread 115914] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[15:57:50.638394] [D] [thread 115914] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[15:57:50.638419] [D] [thread 115914] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[15:57:50.638446] [D] [thread 115914] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[15:57:50.639345] [D] [thread 115914] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=9[m
[36m[15:57:50.674180] [D] [thread 115914] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 9
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream8"
  logicalSourceName: "debs"
}
[m
[32m[15:57:50.674307] [I] [thread 115914] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[15:57:50.674348] [D] [thread 115914] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[15:57:50.674438] [D] [thread 115914] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= test_stream8 logical source= debs[m
[36m[15:57:50.674648] [D] [thread 115914] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[15:57:50.674700] [D] [thread 115914] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream8[m
[36m[15:57:50.674818] [D] [thread 115914] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[15:57:50.674861] [D] [thread 115914] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[15:57:50.674891] [D] [thread 115914] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[15:57:50.674920] [D] [thread 115914] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[15:57:50.675071] [D] [thread 115914] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream8 does not exist, try to add[m
[36m[15:57:50.675112] [D] [thread 115914] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[15:57:50.675367] [D] [thread 115914] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[15:57:50.675618] [D] [thread 115914] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[15:57:50.680518] [D] [thread 115914] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 9
oldParent: 1
newParent: 4
[m
[36m[15:57:50.680634] [D] [thread 115914] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 9  parentId= 1[m
[32m[15:57:50.680665] [I] [thread 115914] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[15:57:50.680696] [D] [thread 115914] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[15:57:50.680725] [D] [thread 115914] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  9  exists[m
[32m[15:57:50.680742] [I] [thread 115914] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[15:57:50.680761] [D] [thread 115914] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[15:57:50.680784] [D] [thread 115914] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[15:57:50.680999] [D] [thread 115914] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[15:57:50.681295] [I] [thread 115914] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:57:50.681357] [D] [thread 115914] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[15:57:50.681385] [D] [thread 115914] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[15:57:50.681478] [D] [thread 115914] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 9  parentId= 4[m
[32m[15:57:50.681539] [I] [thread 115914] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[15:57:50.681596] [D] [thread 115914] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[15:57:50.681628] [D] [thread 115914] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 9 exists[m
[32m[15:57:50.681760] [I] [thread 115914] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[15:57:50.681792] [D] [thread 115914] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[15:57:50.681817] [D] [thread 115914] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  4  exists[m
[32m[15:57:50.682136] [I] [thread 115914] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[15:57:50.682359] [D] [thread 115914] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[15:57:50.683248] [D] [thread 115914] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[15:57:50.683450] [D] [thread 115914] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[15:57:51.467717] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:52.468925] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:53.470228] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:53.811881] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:53.812489] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:57:53.813194] [I] [thread 115923] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:57:53.816182] [I] [thread 115923] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:57:53.992950] [D] [thread 115921] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.38"
grpcPort: 37083
dataPort: 33623
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:57:53.993201] [D] [thread 115921] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.38"
grpcPort: 37083
dataPort: 33623
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[15:57:53.993273] [D] [thread 115921] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[15:57:53.993838] [D] [thread 115921] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[15:57:53.993897] [D] [thread 115921] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[15:57:53.993981] [D] [thread 115921] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 10 and resources 65535[m
[36m[15:57:53.994143] [D] [thread 115921] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[15:57:53.994225] [I] [thread 115921] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[15:57:53.994356] [I] [thread 115921] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:57:53.994433] [D] [thread 115921] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 10[m
[36m[15:57:53.994527] [D] [thread 115921] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[15:57:53.995040] [D] [thread 115921] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[15:57:53.995309] [I] [thread 115921] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[15:57:53.995347] [D] [thread 115921] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[15:57:53.995394] [D] [thread 115921] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[15:57:53.995416] [D] [thread 115921] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[15:57:53.995440] [D] [thread 115921] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[15:57:53.996001] [D] [thread 115921] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=10[m
[36m[15:57:54.032988] [D] [thread 115921] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 10
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream9"
  logicalSourceName: "debs"
}
[m
[32m[15:57:54.033111] [I] [thread 115921] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[15:57:54.033153] [D] [thread 115921] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[15:57:54.033242] [D] [thread 115921] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= test_stream9 logical source= debs[m
[36m[15:57:54.033448] [D] [thread 115921] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[15:57:54.033500] [D] [thread 115921] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream9[m
[36m[15:57:54.033578] [D] [thread 115921] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[15:57:54.033614] [D] [thread 115921] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[15:57:54.033643] [D] [thread 115921] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[15:57:54.033671] [D] [thread 115921] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[15:57:54.033699] [D] [thread 115921] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=test_stream8[m
[36m[15:57:54.033755] [D] [thread 115921] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream9 does not exist, try to add[m
[36m[15:57:54.033791] [D] [thread 115921] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[15:57:54.033826] [D] [thread 115921] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[15:57:54.033852] [D] [thread 115921] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[15:57:54.038170] [D] [thread 115922] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 10
oldParent: 1
newParent: 4
[m
[36m[15:57:54.038304] [D] [thread 115922] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 10  parentId= 1[m
[32m[15:57:54.038342] [I] [thread 115922] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[15:57:54.038377] [D] [thread 115922] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[15:57:54.038412] [D] [thread 115922] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  10  exists[m
[32m[15:57:54.038434] [I] [thread 115922] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[15:57:54.038457] [D] [thread 115922] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[15:57:54.038483] [D] [thread 115922] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[15:57:54.038571] [D] [thread 115922] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[15:57:54.038749] [I] [thread 115922] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[15:57:54.038838] [D] [thread 115922] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[15:57:54.038871] [D] [thread 115922] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[15:57:54.038976] [D] [thread 115922] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 10  parentId= 4[m
[32m[15:57:54.039043] [I] [thread 115922] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[15:57:54.039079] [D] [thread 115922] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[15:57:54.039108] [D] [thread 115922] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 10 exists[m
[32m[15:57:54.039128] [I] [thread 115922] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[15:57:54.039225] [D] [thread 115922] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[15:57:54.039293] [D] [thread 115922] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  4  exists[m
[32m[15:57:54.039551] [I] [thread 115922] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[15:57:54.039719] [D] [thread 115922] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[15:57:54.041468] [D] [thread 115922] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[15:57:54.041602] [D] [thread 115922] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[15:57:54.813713] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:55.815008] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:55.948075] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:55.948456] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:57:55.949226] [I] [thread 115926] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[15:57:55.951515] [I] [thread 115926] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[15:57:56.858774] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:56.859116] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:56.972088] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:56.972616] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:56.974893] [D] [thread 115931] [QueryController.hpp:223] [submitQuery] QueryController: handlePost -execute-query: Params: userQuery= Query::from("debs").project(Attribute("sid"), Attribute("ts"), Attribute("absolute_v")).window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out","CSV_FORMAT","APPEND", true));, strategyName= BottomUp, faultTolerance= NONE, lineage= NONE[m
[32m[15:57:56.975033] [I] [thread 115931] [QueryService.cpp:69] [validateAndQueueAddQueryRequest] QueryService: Validating and registering the user query.[m
[32m[15:57:56.975065] [I] [thread 115931] [QueryService.cpp:73] [validateAndQueueAddQueryRequest] QueryService: check validation of a query.[m
[36m[15:57:56.975120] [D] [thread 115931] [SyntacticQueryValidation.cpp:40] [validate] SyntacticQueryValidation: parse C++ query from query string.[m
[36m[15:57:56.975224] [D] [thread 115931] [QueryParsingService.cpp:94] [createQueryFromCodeString]  QueryParsingService: source name = "debs"[m
[36m[15:57:56.975297] [D] [thread 115931] [QueryParsingService.cpp:100] [createQueryFromCodeString] QueryParsingService: parsed query = return Query::from("debs").project(Attribute("sid"), Attribute("ts"), Attribute("absolute_v")).window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out","CSV_FORMAT","APPEND", true));[m
[36m[15:57:56.975440] [D] [thread 115931] [QueryParsingService.cpp:104] [createQueryFromCodeString] QueryParsingService: query code
#include <API/QueryAPI.hpp>
namespace NES{
Query createQuery(){
return Query::from("debs").project(Attribute("sid"), Attribute("ts"), Attribute("absolute_v")).window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out","CSV_FORMAT","APPEND", true));
}
}
[m
[36m[15:57:56.977308] [D] [thread 115932] [File.cpp:27] [createFile] Create File to file:///tmp/query_10-11-2023_15-57-56_9091632.cpp[m
[36m[15:57:56.977944] [D] [thread 115932] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[15:57:56.978037] [D] [thread 115932] [CPPCompilerFlags.cpp:64] [enableProfilingFlags] Compilation Time tracing is activated open: chrome://tracing/[m
[36m[15:57:56.978404] [D] [thread 115932] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -fno-trigraphs -fpic -Wparentheses-equality -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -std=c++20 -stdlib=libstdc++ -shared -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -ftime-trace -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-core/ -I/home/ubuntu/git/nebulastream/build/include/nebulastream -DNES_COMPILE_TIME_LOG_LEVEL=6 -o/tmp/query_10-11-2023_15-57-56_9091632.so -DFMT_HEADER_ONLY /tmp/query_10-11-2023_15-57-56_9091632.cpp'[m
[36m[15:57:57.973845] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:58.975085] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:57:59.976367] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[15:57:59.988972] [I] [thread 115932] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 3011.783821ms[m
[36m[15:57:59.989356] [D] [thread 115931] [Query.cpp:231] [from] Query: create new Query with source debs[m
[36m[15:57:59.989413] [D] [thread 115931] [QueryPlanBuilder.cpp:43] [createQueryPlan] QueryPlanBuilder: create query plan for input source  debs[m
[32m[15:57:59.989736] [I] [thread 115931] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[15:57:59.990454] [D] [thread 115931] [Query.cpp:237] [project] Query: add projection to query[m
[36m[15:57:59.990550] [D] [thread 115931] [QueryPlanBuilder.cpp:51] [addProjection] QueryPlanBuilder: add projection operator to query plan[m
[32m[15:57:59.990676] [I] [thread 115931] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[15:57:59.990835] [D] [thread 115931] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PROJECTION(2, schema=) as new root of the plan.[m
[36m[15:57:59.991029] [D] [thread 115931] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:57:59.991072] [D] [thread 115931] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:57:59.991819] [D] [thread 115931] [WindowedQuery.cpp:122] [windowByKey] Query: add keyed window operator[m
[36m[15:57:59.992215] [D] [thread 115931] [WindowedQuery.cpp:142] [windowByKey] add default watermark strategy as non is provided[m
[32m[15:57:59.992609] [I] [thread 115931] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[15:57:59.992755] [D] [thread 115931] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WATERMARKASSIGNER(3) as new root of the plan.[m
[36m[15:57:59.992879] [D] [thread 115931] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:57:59.992911] [D] [thread 115931] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[15:57:59.993366] [I] [thread 115931] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[15:57:59.993550] [D] [thread 115931] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WINDOW AGGREGATION(OP-4, Min;) as new root of the plan.[m
[36m[15:57:59.993685] [D] [thread 115931] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:57:59.993721] [D] [thread 115931] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:57:59.993918] [D] [thread 115931] [Query.cpp:353] [sink] Query: add sink operator to query[m
[32m[15:57:59.994060] [I] [thread 115931] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[36m[15:57:59.994187] [D] [thread 115931] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(5: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[15:57:59.994348] [D] [thread 115931] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:57:59.994380] [D] [thread 115931] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:57:59.995277] [D] [thread 115931] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:57:59.995486] [D] [thread 115931] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:57:59.995615] [D] [thread 115931] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:57:59.995778] [D] [thread 115931] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:57:59.995840] [D] [thread 115931] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:57:59.995871] [D] [thread 115931] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:57:59.995968] [D] [thread 115931] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[15:57:59.996017] [D] [thread 115931] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:57:59.996049] [D] [thread 115931] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:57:59.996074] [D] [thread 115931] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:57:59.996636] [D] [thread 115931] [TypeInferencePhase.cpp:76] [execute] TypeInferencePhase: update source descriptor for source debs with schema: debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:57:59.996695] [D] [thread 115931] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:57:59.996813] [D] [thread 115931] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:57:59.997650] [D] [thread 115931] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:57:59.998303] [D] [thread 115931] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:57:59.998825] [D] [thread 115931] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[15:57:59.999317] [I] [thread 115931] [QueryCatalog.cpp:55] [createNewEntry] QueryCatalog: Creating query catalog entry for query with id 1[m
[32m[15:58:00.000075] [I] [thread 115931] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : RunQueryRequest { QueryId: 1, QueryPlan: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
, QueryPlacementStrategy: BottomUp}[m
[32m[15:58:00.000151] [I] [thread 115931] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[15:58:00.000199] [I] [thread 115878] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[15:58:00.000309] [I] [thread 115878] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[15:58:00.000443] [I] [thread 115878] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[15:58:00.000888] [I] [thread 115878] [GlobalQueryPlanUpdatePhase.cpp:150] [processAddQueryRequest] QueryProcessingService: Request received for optimizing and deploying of the query 1[m
[36m[15:58:00.001067] [D] [thread 115878] [GlobalQueryPlanUpdatePhase.cpp:156] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[15:58:00.001100] [D] [thread 115878] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:58:00.001181] [D] [thread 115878] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:58:00.001237] [D] [thread 115878] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:58:00.001375] [D] [thread 115878] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:58:00.001485] [D] [thread 115878] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:58:00.002398] [D] [thread 115878] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:58:00.002980] [D] [thread 115878] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.003499] [D] [thread 115878] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:58:00.003566] [D] [thread 115878] [GlobalQueryPlanUpdatePhase.cpp:160] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[15:58:00.003589] [D] [thread 115878] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[15:58:00.003914] [D] [thread 115878] [GlobalQueryPlanUpdatePhase.cpp:164] [processAddQueryRequest] QueryProcessingService: Performing Query rewrite phase for query:  1[m
[32m[15:58:00.003990] [I] [thread 115878] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[15:58:00.004267] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[15:58:00.004715] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[15:58:00.005108] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[15:58:00.005369] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[15:58:00.005751] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[15:58:00.006165] [D] [thread 115878] [RenameSourceToProjectOperatorRule.cpp:27] [apply] RenameSourceToProjectOperatorRule: Convert all Rename Source operator to the project operator[m
[36m[15:58:00.006654] [D] [thread 115878] [ProjectBeforeUnionOperatorRule.cpp:32] [apply] Before applying ProjectBeforeUnionOperatorRule to the query plan: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[15:58:00.006997] [D] [thread 115878] [ProjectBeforeUnionOperatorRule.cpp:52] [apply] After applying ProjectBeforeUnionOperatorRule to the query plan: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[32m[15:58:00.007295] [I] [thread 115878] [FilterSplitUpRule.cpp:30] [apply] Applying FilterSplitUpRule to query SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[15:58:00.007522] [D] [thread 115878] [FilterSplitUpRule.cpp:38] [apply] FilterSplitUpRule: Sort all filter nodes in increasing order of the operator id[m
[32m[15:58:00.007557] [I] [thread 115878] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[15:58:00.007719] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[15:58:00.007990] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[15:58:00.008504] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[15:58:00.008785] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[15:58:00.009155] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[15:58:00.009520] [D] [thread 115878] [FilterSplitUpRule.cpp:46] [apply] FilterSplitUpRule: Iterate over all the filter operators to split them[m
[32m[15:58:00.009984] [I] [thread 115878] [FilterPushDownRule.cpp:50] [apply] Applying FilterPushDownRule to query SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[15:58:00.010068] [D] [thread 115878] [FilterPushDownRule.cpp:58] [apply] FilterPushDownRule: Sort all filter nodes in increasing order of the operator id[m
[32m[15:58:00.010085] [I] [thread 115878] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[15:58:00.010181] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[15:58:00.010438] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[15:58:00.010831] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[15:58:00.011088] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[15:58:00.011458] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[15:58:00.011824] [D] [thread 115878] [FilterPushDownRule.cpp:66] [apply] FilterPushDownRule: Iterate over all the filter operators to push them down in the query plan[m
[32m[15:58:00.012087] [I] [thread 115878] [FilterPushDownRule.cpp:71] [apply] FilterPushDownRule: Return the updated query plan SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[32m[15:58:00.012427] [I] [thread 115878] [FilterMergeRule.cpp:27] [apply] Applying FilterMergeRule to query SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[15:58:00.012660] [D] [thread 115878] [FilterMergeRule.cpp:30] [apply] FilterMergeRule: Identified 0 filter nodes in the query plan[m
[36m[15:58:00.012992] [D] [thread 115878] [FilterMergeRule.cpp:31] [apply] Query before applying the rule: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[15:58:00.013184] [D] [thread 115878] [FilterMergeRule.cpp:77] [apply] Query after applying the rule: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[15:58:00.013436] [D] [thread 115878] [PredicateReorderingRule.cpp:28] [apply] PredicateReorderingRule: Identified 0 filter nodes in the query plan[m
[36m[15:58:00.013719] [D] [thread 115878] [PredicateReorderingRule.cpp:29] [apply] Query before applying the rule: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[15:58:00.013961] [D] [thread 115878] [PredicateReorderingRule.cpp:87] [apply] Query after applying the rule: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[15:58:00.014131] [D] [thread 115878] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:58:00.014215] [D] [thread 115878] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:58:00.014260] [D] [thread 115878] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:58:00.014360] [D] [thread 115878] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:58:00.014418] [D] [thread 115878] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:58:00.015314] [D] [thread 115878] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:58:00.015739] [D] [thread 115878] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.016268] [D] [thread 115878] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[15:58:00.016391] [I] [thread 115878] [SignatureInferencePhase.cpp:59] [execute] Skipping signature creation[m
[32m[15:58:00.016778] [I] [thread 115878] [LogicalSourceExpansionRule.cpp:49] [apply] LogicalSourceExpansionRule: Plan before
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[15:58:00.016818] [D] [thread 115878] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:58:00.016873] [D] [thread 115878] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:58:00.016912] [D] [thread 115878] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[32m[15:58:00.017792] [I] [thread 115878] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[15:58:00.017892] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[15:58:00.017997] [D] [thread 115878] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[15:58:00.018018] [D] [thread 115878] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:58:00.018091] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[15:58:00.018167] [D] [thread 115878] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:58:00.018273] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[15:58:00.018871] [D] [thread 115878] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[15:58:00.019608] [I] [thread 115878] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[15:58:00.019700] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[15:58:00.019783] [D] [thread 115878] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[15:58:00.019801] [D] [thread 115878] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:58:00.019861] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[15:58:00.019954] [D] [thread 115878] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:58:00.020054] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[15:58:00.020702] [D] [thread 115878] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[15:58:00.021136] [I] [thread 115878] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[15:58:00.021205] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[15:58:00.021280] [D] [thread 115878] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[15:58:00.021300] [D] [thread 115878] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:58:00.021360] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[15:58:00.021435] [D] [thread 115878] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:58:00.021510] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[15:58:00.021995] [D] [thread 115878] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[15:58:00.022420] [I] [thread 115878] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[15:58:00.022487] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[15:58:00.022558] [D] [thread 115878] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[15:58:00.022583] [D] [thread 115878] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:58:00.022640] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[15:58:00.022701] [D] [thread 115878] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:58:00.022786] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[15:58:00.023270] [D] [thread 115878] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[15:58:00.023669] [I] [thread 115878] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[15:58:00.023737] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[15:58:00.023806] [D] [thread 115878] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[15:58:00.023830] [D] [thread 115878] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:58:00.023888] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[15:58:00.023961] [D] [thread 115878] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:58:00.024055] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[15:58:00.024606] [D] [thread 115878] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[15:58:00.025040] [I] [thread 115878] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[15:58:00.025110] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[15:58:00.025188] [D] [thread 115878] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[15:58:00.025203] [D] [thread 115878] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:58:00.025264] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[15:58:00.025342] [D] [thread 115878] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[15:58:00.025416] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[15:58:00.025965] [D] [thread 115878] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[36m[15:58:00.026995] [D] [thread 115878] [LogicalSourceExpansionRule.cpp:151] [apply] LogicalSourceExpansionRule: Plan after
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[32m[15:58:00.027122] [I] [thread 115878] [DistributedJoinRule.cpp:31] [apply] DistributeJoinRule: Apply DistributeJoinRule.[m
[36m[15:58:00.027737] [D] [thread 115878] [DistributedJoinRule.cpp:32] [apply] DistributeJoinRule::apply: plan before replace
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[15:58:00.028115] [D] [thread 115878] [DistributedJoinRule.cpp:55] [apply] DistributeJoinRule::apply: no join operator in query[m
[36m[15:58:00.028794] [D] [thread 115878] [DistributedJoinRule.cpp:58] [apply] DistributeJoinRule::apply: plan after replace
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[15:58:00.028868] [D] [thread 115878] [NemoWindowPinningRule.cpp:58] [apply] NemoWindowPinningRule: Apply NemoWindowPinningRule.[m
[36m[15:58:00.029467] [D] [thread 115878] [NemoWindowPinningRule.cpp:59] [apply] NemoWindowPinningRule::apply: plan before replace
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[15:58:00.029904] [D] [thread 115878] [NemoWindowPinningRule.cpp:68] [apply] NemoWindowPinningRule::apply: found 1 window operators[m
[36m[15:58:00.030031] [D] [thread 115878] [NemoWindowPinningRule.cpp:70] [apply] NemoWindowPinningRule::apply: window operator WINDOW AGGREGATION(OP-4, Min;)[m
[36m[15:58:00.030113] [D] [thread 115878] [NemoWindowPinningRule.cpp:99] [pinWindowOperators] NemoWindowPinningRule::apply: introduce new distributed window operator for window WINDOW AGGREGATION(OP-4, Min;)[m
[32m[15:58:00.030301] [I] [thread 115878] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[15:58:00.030367] [D] [thread 115878] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[15:58:00.030874] [I] [thread 115878] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[15:58:00.030924] [D] [thread 115878] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[15:58:00.031133] [I] [thread 115878] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[15:58:00.031156] [D] [thread 115878] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[15:58:00.031431] [I] [thread 115878] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[15:58:00.031493] [D] [thread 115878] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[15:58:00.031620] [I] [thread 115878] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[15:58:00.031651] [D] [thread 115878] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[15:58:00.031873] [I] [thread 115878] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[15:58:00.031932] [D] [thread 115878] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[15:58:00.032608] [I] [thread 115878] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[15:58:00.032687] [I] [thread 115878] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:58:00.032700] [I] [thread 115878] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:58:00.032710] [I] [thread 115878] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:58:00.032720] [I] [thread 115878] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:58:00.032729] [I] [thread 115878] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:58:00.032738] [I] [thread 115878] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:58:00.032747] [I] [thread 115878] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[15:58:00.032758] [I] [thread 115878] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[15:58:00.032766] [I] [thread 115878] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[15:58:00.032915] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[36m[15:58:00.033407] [D] [thread 115878] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(24) old node=WINDOW AGGREGATION(OP-4, Min;)[m
[32m[15:58:00.033823] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[36m[15:58:00.033988] [D] [thread 115878] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(25) old node=WINDOW AGGREGATION(OP-4, Min;)[m
[32m[15:58:00.034309] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[36m[15:58:00.034440] [D] [thread 115878] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(26) old node=WINDOW AGGREGATION(OP-4, Min;)[m
[36m[15:58:00.035260] [D] [thread 115878] [NemoWindowPinningRule.cpp:121] [pinWindowOperators] DistributedWindowRule: Plan after
SINK(5: {FileSinkDescriptor()})
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[15:58:00.035910] [D] [thread 115878] [NemoWindowPinningRule.cpp:87] [apply] NemoWindowPinningRule::apply: plan after replace
SINK(5: {FileSinkDescriptor()})
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[15:58:00.036156] [D] [thread 115878] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:58:00.036287] [D] [thread 115878] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:58:00.036393] [D] [thread 115878] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 6 source operators.[m
[36m[15:58:00.036545] [D] [thread 115878] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:58:00.036642] [D] [thread 115878] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:58:00.037387] [D] [thread 115878] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:58:00.038232] [D] [thread 115878] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:58:00.038572] [D] [thread 115878] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[15:58:00.038823] [I] [thread 115878] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[15:58:00.038997] [I] [thread 115878] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.039680] [D] [thread 115878] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:58:00.040500] [D] [thread 115878] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:58:00.040850] [D] [thread 115878] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[15:58:00.041133] [I] [thread 115878] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[15:58:00.041289] [I] [thread 115878] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.041962] [D] [thread 115878] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:58:00.042729] [D] [thread 115878] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:58:00.043064] [D] [thread 115878] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[15:58:00.043338] [I] [thread 115878] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[15:58:00.043486] [I] [thread 115878] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.043674] [D] [thread 115878] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:58:00.044668] [D] [thread 115878] [GlobalQueryPlanUpdatePhase.cpp:196] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[15:58:00.044718] [D] [thread 115878] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[15:58:00.045185] [D] [thread 115878] [GlobalQueryPlanUpdatePhase.cpp:203] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[15:58:00.045299] [D] [thread 115878] [GlobalQueryPlanUpdatePhase.cpp:207] [processAddQueryRequest] QueryProcessingService: Applying Query Merger Rules as Query Merging is enabled.[m
[36m[15:58:00.045325] [D] [thread 115878] [QueryMergerPhase.cpp:72] [execute] QueryMergerPhase: Executing query merger phase.[m
[32m[15:58:00.045400] [I] [thread 115878] [GlobalQueryPlan.cpp:173] [createNewSharedQueryPlan] Create new shared query plan[m
[32m[15:58:00.045458] [I] [thread 115878] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[15:58:00.045688] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[15:58:00.045932] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[32m[15:58:00.046354] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[32m[15:58:00.046623] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[32m[15:58:00.046966] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[32m[15:58:00.047164] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[32m[15:58:00.047392] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[32m[15:58:00.047606] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[32m[15:58:00.047820] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[32m[15:58:00.048027] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[32m[15:58:00.048291] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[32m[15:58:00.048659] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[32m[15:58:00.048982] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[32m[15:58:00.049215] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[32m[15:58:00.049496] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[32m[15:58:00.049762] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[32m[15:58:00.050093] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[32m[15:58:00.050464] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[32m[15:58:00.050746] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[32m[15:58:00.051108] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[32m[15:58:00.051371] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[32m[15:58:00.051729] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[15:58:00.052555] [D] [thread 115878] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[15:58:00.052614] [D] [thread 115878] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[15:58:00.052667] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.052710] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.052734] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.052757] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.052783] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.052804] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.052851] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.052880] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.052903] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.052939] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.053036] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.053107] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.053172] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.053202] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.053285] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.053327] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.053389] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.053436] [D] [thread 115878] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:58:00.053509] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.053558] [D] [thread 115878] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:58:00.053635] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.053680] [D] [thread 115878] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:58:00.053744] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.053764] [D] [thread 115878] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:58:00.053819] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.053837] [D] [thread 115878] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:58:00.053898] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.054003] [D] [thread 115878] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:58:00.055675] [D] [thread 115878] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[15:58:00.055751] [D] [thread 115878] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[15:58:00.055829] [D] [thread 115878] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[15:58:00.055848] [D] [thread 115878] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[15:58:00.055856] [D] [thread 115878] [RequestProcessorService.cpp:111] [start] QueryProcessingService: Shared Query Plan is new.[m
[36m[15:58:00.055868] [D] [thread 115878] [RequestProcessorService.cpp:115] [start] QueryProcessingService: Performing Operator placement for shared query plan[m
[32m[15:58:00.055892] [I] [thread 115878] [QueryPlacementPhase.cpp:54] [execute] QueryPlacementPhase: Perform query placement phase for shared query plan 1[m
[36m[15:58:00.057022] [D] [thread 115878] [QueryPlacementPhase.cpp:70] [execute] QueryPlacementPhase: Perform query placement for query plan
SINK(5: {FileSinkDescriptor()})
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[15:58:00.057085] [D] [thread 115878] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[15:58:00.057102] [D] [thread 115878] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[15:58:00.057164] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.057208] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.057233] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.057256] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.057280] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.057302] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.057325] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.057349] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.057399] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.057429] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.057452] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.057495] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.057523] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.057561] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.057588] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.057739] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.057818] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.057870] [D] [thread 115878] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:58:00.057982] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.058034] [D] [thread 115878] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:58:00.058107] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.058164] [D] [thread 115878] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:58:00.058231] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.058313] [D] [thread 115878] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:58:00.058372] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.058390] [D] [thread 115878] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:58:00.058456] [D] [thread 115878] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[15:58:00.058475] [D] [thread 115878] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[15:58:00.058903] [D] [thread 115878] [BottomUpStrategy.cpp:50] [updateGlobalExecutionPlan] Perform placement of the pinned and all their downstream operators.[m
[32m[15:58:00.058990] [I] [thread 115878] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[15:58:00.059052] [D] [thread 115878] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[15:58:00.059232] [I] [thread 115878] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[15:58:00.059250] [D] [thread 115878] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[15:58:00.059369] [I] [thread 115878] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[15:58:00.059478] [D] [thread 115878] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[15:58:00.059551] [I] [thread 115878] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[15:58:00.059599] [D] [thread 115878] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[15:58:00.059631] [I] [thread 115878] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[15:58:00.059644] [D] [thread 115878] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[15:58:00.059687] [I] [thread 115878] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[15:58:00.059737] [D] [thread 115878] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[15:58:00.059797] [I] [thread 115878] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[15:58:00.059812] [D] [thread 115878] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[32m[15:58:00.059990] [I] [thread 115878] [Topology.cpp:73] [findPathBetween] Topology: Finding path between set of start and destination nodes[m
[36m[15:58:00.060435] [D] [thread 115878] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[15:58:00.060625] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:58:00.060837] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:58:00.061008] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:58:00.061273] [D] [thread 115878] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[15:58:00.061396] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:58:00.061485] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:58:00.061668] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:58:00.061928] [D] [thread 115878] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[15:58:00.062063] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:58:00.062171] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:58:00.062366] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:58:00.062578] [D] [thread 115878] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[15:58:00.062699] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:58:00.062805] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:58:00.063029] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:58:00.063234] [D] [thread 115878] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[15:58:00.063353] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:58:00.063462] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:58:00.063649] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:58:00.063857] [D] [thread 115878] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[15:58:00.063976] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:58:00.064101] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:58:00.064291] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[32m[15:58:00.064433] [I] [thread 115878] [Topology.cpp:98] [mergeSubGraphs] Topology: Merge 6 sub-graphs to create a single sub-graph[m
[36m[15:58:00.064452] [D] [thread 115878] [Topology.cpp:100] [mergeSubGraphs] Topology: Compute a map storing number of times a node occurred in different sub-graphs[m
[36m[15:58:00.064942] [D] [thread 115878] [Topology.cpp:120] [mergeSubGraphs] Topology: Iterate over each sub-graph and compute a single merged sub-graph[m
[36m[15:58:00.064979] [D] [thread 115878] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[15:58:00.065072] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:58:00.065086] [D] [thread 115878] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[15:58:00.065138] [D] [thread 115878] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[15:58:00.065239] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:58:00.065469] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:58:00.065591] [D] [thread 115878] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[15:58:00.065694] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:58:00.065722] [D] [thread 115878] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[15:58:00.065773] [D] [thread 115878] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[15:58:00.065943] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:58:00.066129] [D] [thread 115878] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[15:58:00.066270] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:58:00.066308] [D] [thread 115878] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[15:58:00.066344] [D] [thread 115878] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[15:58:00.066456] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:58:00.066584] [D] [thread 115878] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[15:58:00.066748] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:58:00.066804] [D] [thread 115878] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[15:58:00.066827] [D] [thread 115878] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[15:58:00.066914] [W] [thread 115878] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[15:58:00.066947] [D] [thread 115878] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[15:58:00.067012] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:58:00.067037] [D] [thread 115878] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[15:58:00.067100] [D] [thread 115878] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[15:58:00.067222] [W] [thread 115878] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[15:58:00.067284] [D] [thread 115878] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[15:58:00.067428] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[15:58:00.067485] [D] [thread 115878] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[15:58:00.067510] [D] [thread 115878] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[15:58:00.067598] [W] [thread 115878] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[15:58:00.067757] [D] [thread 115878] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[15:58:00.067822] [D] [thread 115878] [Node.cpp:435] [getAllRootNodes] Node: Iterating over all parents to find more root nodes[m
[36m[15:58:00.067861] [D] [thread 115878] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[15:58:00.067872] [D] [thread 115878] [Node.cpp:426] [getAllRootNodes] Node: Inserting this node to the collection[m
[36m[15:58:00.067896] [D] [thread 115878] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[15:58:00.067928] [D] [thread 115878] [Node.cpp:438] [getAllRootNodes] Node: inserting parent nodes into the collection of parent nodes[m
[36m[15:58:00.067970] [D] [thread 115878] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[15:58:00.068434] [D] [thread 115878] [BottomUpStrategy.cpp:74] [pinOperators] BottomUpStrategy: Get the all source operators for performing the placement.[m
[36m[15:58:00.068557] [D] [thread 115878] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4)) placement.[m
[36m[15:58:00.068725] [D] [thread 115878] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))[m
[36m[15:58:00.068816] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.069021] [D] [thread 115878] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[15:58:00.069084] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.069203] [D] [thread 115878] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(8)[m
[36m[15:58:00.069261] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.069367] [D] [thread 115878] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(24)[m
[36m[15:58:00.069399] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:58:00.069449] [D] [thread 115878] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[15:58:00.069568] [W] [thread 115878] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[15:58:00.069671] [W] [thread 115878] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[15:58:00.069766] [D] [thread 115878] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) placement.[m
[36m[15:58:00.069870] [D] [thread 115878] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))[m
[36m[15:58:00.069944] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.070138] [D] [thread 115878] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[15:58:00.070204] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.070320] [D] [thread 115878] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(11)[m
[36m[15:58:00.070354] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.070455] [D] [thread 115878] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(24)[m
[36m[15:58:00.070488] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:58:00.070530] [D] [thread 115878] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[15:58:00.070646] [D] [thread 115878] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[15:58:00.070768] [D] [thread 115878] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[15:58:00.070834] [D] [thread 115878] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[15:58:00.071165] [D] [thread 115878] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(5: {FileSinkDescriptor()})[m
[36m[15:58:00.071210] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:58:00.071226] [D] [thread 115878] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[15:58:00.071295] [D] [thread 115878] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[15:58:00.071380] [D] [thread 115878] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[15:58:00.071397] [D] [thread 115878] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[15:58:00.071686] [D] [thread 115878] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[15:58:00.071822] [D] [thread 115878] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6)) placement.[m
[36m[15:58:00.071912] [D] [thread 115878] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))[m
[36m[15:58:00.071948] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.072160] [D] [thread 115878] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[15:58:00.072220] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.072364] [D] [thread 115878] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(14)[m
[36m[15:58:00.072399] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.072458] [D] [thread 115878] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(25)[m
[36m[15:58:00.072487] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:58:00.072539] [D] [thread 115878] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[15:58:00.072657] [W] [thread 115878] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[15:58:00.072725] [W] [thread 115878] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[15:58:00.072818] [D] [thread 115878] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7)) placement.[m
[36m[15:58:00.072927] [D] [thread 115878] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))[m
[36m[15:58:00.073000] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.073177] [D] [thread 115878] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[15:58:00.073250] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.073360] [D] [thread 115878] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(17)[m
[36m[15:58:00.073381] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.073446] [D] [thread 115878] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(25)[m
[36m[15:58:00.073504] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:58:00.073537] [D] [thread 115878] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[15:58:00.073676] [D] [thread 115878] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[15:58:00.073741] [D] [thread 115878] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[15:58:00.073786] [D] [thread 115878] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[15:58:00.074081] [D] [thread 115878] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(5: {FileSinkDescriptor()})[m
[36m[15:58:00.074149] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:58:00.074165] [D] [thread 115878] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[15:58:00.074231] [D] [thread 115878] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[15:58:00.074260] [D] [thread 115878] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[15:58:00.074272] [D] [thread 115878] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[15:58:00.074469] [D] [thread 115878] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[15:58:00.074594] [D] [thread 115878] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8)) placement.[m
[36m[15:58:00.074759] [D] [thread 115878] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))[m
[36m[15:58:00.074803] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.074982] [D] [thread 115878] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[15:58:00.075027] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.075170] [D] [thread 115878] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(20)[m
[36m[15:58:00.075203] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.075314] [D] [thread 115878] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(26)[m
[36m[15:58:00.075334] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:58:00.075378] [D] [thread 115878] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[15:58:00.075479] [W] [thread 115878] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[15:58:00.075534] [W] [thread 115878] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[15:58:00.075623] [D] [thread 115878] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9)) placement.[m
[36m[15:58:00.075681] [D] [thread 115878] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))[m
[36m[15:58:00.075732] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.075893] [D] [thread 115878] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[15:58:00.075965] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.076107] [D] [thread 115878] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(23)[m
[36m[15:58:00.076140] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.076241] [D] [thread 115878] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(26)[m
[36m[15:58:00.076272] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:58:00.076289] [D] [thread 115878] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[15:58:00.076469] [D] [thread 115878] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[15:58:00.076543] [D] [thread 115878] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[15:58:00.076638] [D] [thread 115878] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[15:58:00.076913] [D] [thread 115878] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(5: {FileSinkDescriptor()})[m
[36m[15:58:00.076977] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:58:00.076996] [D] [thread 115878] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[15:58:00.077061] [D] [thread 115878] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[15:58:00.077086] [D] [thread 115878] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[15:58:00.077097] [D] [thread 115878] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[15:58:00.077436] [D] [thread 115878] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[15:58:00.077503] [D] [thread 115878] [BottomUpStrategy.cpp:103] [pinOperators] BottomUpStrategy: Finished placing query operators into the global execution plan[m
[36m[15:58:00.077549] [D] [thread 115878] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:58:00.077669] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.077712] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[15:58:00.078112] [D] [thread 115878] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4)) on execution node with id 5[m
[36m[15:58:00.078157] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[15:58:00.078191] [W] [thread 115878] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[15:58:00.078425] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[36m[15:58:00.078755] [D] [thread 115878] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4)) as new root of the plan.[m
[36m[15:58:00.078792] [D] [thread 115878] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:58:00.078804] [D] [thread 115878] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:58:00.078834] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.078849] [D] [thread 115878] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[15:58:00.079000] [D] [thread 115878] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[15:58:00.079167] [D] [thread 115878] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:58:00.079298] [W] [thread 115878] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[15:58:00.079321] [D] [thread 115878] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[15:58:00.079530] [D] [thread 115878] [GlobalExecutionPlan.cpp:188] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Query Id 1 does not exists adding a new entry with execution node 5[m
[36m[15:58:00.079811] [D] [thread 115878] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:58:00.079886] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:58:00.079917] [I] [thread 115878] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[15:58:00.079940] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:58:00.080004] [D] [thread 115878] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:58:00.080252] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.080382] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[15:58:00.080495] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[15:58:00.080534] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[15:58:00.080703] [D] [thread 115878] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 5[m
[36m[15:58:00.080744] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.080767] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.080842] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.080900] [D] [thread 115878] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:58:00.080953] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.080966] [D] [thread 115878] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:58:00.081125] [D] [thread 115878] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:58:00.081152] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.081221] [D] [thread 115878] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:58:00.081468] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[36m[15:58:00.081782] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.081821] [D] [thread 115878] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:58:00.081843] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 6 exists in the query plan or not[m
[36m[15:58:00.081854] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 6 in the query plan[m
[36m[15:58:00.082129] [D] [thread 115878] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4)) as root operator.[m
[36m[15:58:00.082324] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.082361] [D] [thread 115878] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:58:00.082441] [D] [thread 115878] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[15:58:00.082466] [D] [thread 115878] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:58:00.082494] [W] [thread 115878] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[15:58:00.082506] [D] [thread 115878] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[15:58:00.082666] [D] [thread 115878] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[15:58:00.082791] [D] [thread 115878] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:58:00.082858] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:58:00.082914] [I] [thread 115878] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[15:58:00.082975] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:58:00.083087] [D] [thread 115878] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:58:00.083290] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.083356] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[15:58:00.083448] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[15:58:00.083465] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[15:58:00.083525] [D] [thread 115878] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(8) on execution node with id 5[m
[36m[15:58:00.083539] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.083563] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.083631] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.083666] [D] [thread 115878] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:58:00.083733] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.083759] [D] [thread 115878] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:58:00.083962] [D] [thread 115878] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:58:00.084015] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.084073] [D] [thread 115878] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:58:00.084230] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[36m[15:58:00.084589] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.084635] [D] [thread 115878] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:58:00.084651] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 7 exists in the query plan or not[m
[36m[15:58:00.084660] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 7 in the query plan[m
[36m[15:58:00.084941] [D] [thread 115878] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[15:58:00.085152] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.085189] [D] [thread 115878] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:58:00.085269] [D] [thread 115878] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[15:58:00.085292] [D] [thread 115878] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:58:00.085320] [W] [thread 115878] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[15:58:00.085333] [D] [thread 115878] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[15:58:00.085408] [D] [thread 115878] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[15:58:00.085490] [D] [thread 115878] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:58:00.085551] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:58:00.085603] [I] [thread 115878] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[15:58:00.085692] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:58:00.085825] [D] [thread 115878] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:58:00.086010] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[15:58:00.086082] [W] [thread 115878] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[15:58:00.086096] [D] [thread 115878] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:58:00.086139] [D] [thread 115878] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:58:00.086154] [D] [thread 115878] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:58:00.086267] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.086316] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[15:58:00.086546] [D] [thread 115878] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) on execution node with id 6[m
[36m[15:58:00.086630] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[15:58:00.086650] [W] [thread 115878] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[15:58:00.086800] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[36m[15:58:00.087178] [D] [thread 115878] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) as new root of the plan.[m
[36m[15:58:00.087216] [D] [thread 115878] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:58:00.087226] [D] [thread 115878] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:58:00.087252] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.087304] [D] [thread 115878] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[15:58:00.087377] [D] [thread 115878] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[15:58:00.087413] [D] [thread 115878] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:58:00.087440] [W] [thread 115878] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[15:58:00.087453] [D] [thread 115878] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[15:58:00.087590] [D] [thread 115878] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 6 to the query Id 1[m
[36m[15:58:00.087772] [D] [thread 115878] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:58:00.087822] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:58:00.087841] [I] [thread 115878] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[15:58:00.087873] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:58:00.087993] [D] [thread 115878] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:58:00.088277] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.088404] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[15:58:00.088462] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[15:58:00.088475] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[15:58:00.088566] [D] [thread 115878] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 6[m
[36m[15:58:00.088583] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.088615] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.088683] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.088700] [D] [thread 115878] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:58:00.088809] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.088830] [D] [thread 115878] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:58:00.088970] [D] [thread 115878] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:58:00.088985] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.089041] [D] [thread 115878] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:58:00.089272] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[36m[15:58:00.089626] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.089666] [D] [thread 115878] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:58:00.089684] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 9 exists in the query plan or not[m
[36m[15:58:00.089694] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 9 in the query plan[m
[36m[15:58:00.089914] [D] [thread 115878] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) as root operator.[m
[36m[15:58:00.090088] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.090158] [D] [thread 115878] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:58:00.090210] [D] [thread 115878] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[15:58:00.090275] [D] [thread 115878] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:58:00.090297] [W] [thread 115878] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[15:58:00.090308] [D] [thread 115878] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[15:58:00.090412] [D] [thread 115878] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[15:58:00.090503] [D] [thread 115878] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:58:00.090552] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:58:00.090575] [I] [thread 115878] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[15:58:00.090636] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:58:00.090733] [D] [thread 115878] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:58:00.090882] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.090985] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[15:58:00.091115] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[15:58:00.091154] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[15:58:00.091227] [D] [thread 115878] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(11) on execution node with id 6[m
[36m[15:58:00.091243] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.091291] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.091324] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.091362] [D] [thread 115878] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:58:00.091430] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.091446] [D] [thread 115878] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:58:00.091698] [D] [thread 115878] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:58:00.091757] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.091819] [D] [thread 115878] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:58:00.092028] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[36m[15:58:00.092381] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.092421] [D] [thread 115878] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:58:00.092439] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[15:58:00.092449] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 10 in the query plan[m
[36m[15:58:00.092737] [D] [thread 115878] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[15:58:00.092957] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.092994] [D] [thread 115878] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:58:00.093072] [D] [thread 115878] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[15:58:00.093097] [D] [thread 115878] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:58:00.093125] [W] [thread 115878] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[15:58:00.093148] [D] [thread 115878] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[15:58:00.093354] [D] [thread 115878] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[15:58:00.093486] [D] [thread 115878] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:58:00.093563] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:58:00.093621] [I] [thread 115878] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[15:58:00.093649] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:58:00.093767] [D] [thread 115878] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:58:00.093982] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:58:00.094118] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[15:58:00.094308] [D] [thread 115878] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(24) on execution node with id 2[m
[36m[15:58:00.094352] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[15:58:00.094380] [W] [thread 115878] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[15:58:00.094661] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[36m[15:58:00.095167] [D] [thread 115878] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator CENTRALWINDOW(24) as new root of the plan.[m
[36m[15:58:00.095229] [D] [thread 115878] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:58:00.095244] [D] [thread 115878] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:58:00.095277] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.095293] [D] [thread 115878] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[15:58:00.095364] [D] [thread 115878] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[15:58:00.095418] [D] [thread 115878] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:58:00.095436] [W] [thread 115878] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[15:58:00.095466] [D] [thread 115878] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[15:58:00.095532] [D] [thread 115878] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 2 to the query Id 1[m
[36m[15:58:00.095661] [D] [thread 115878] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:58:00.095722] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:58:00.095755] [I] [thread 115878] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 2[m
[36m[15:58:00.095814] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:58:00.095957] [D] [thread 115878] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:58:00.096129] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[15:58:00.096186] [W] [thread 115878] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[15:58:00.096201] [D] [thread 115878] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:58:00.096216] [D] [thread 115878] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:58:00.096274] [D] [thread 115878] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:58:00.096345] [D] [thread 115878] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:58:00.096550] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.096623] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[15:58:00.096848] [D] [thread 115878] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6)) on execution node with id 7[m
[36m[15:58:00.096912] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[15:58:00.096965] [W] [thread 115878] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[15:58:00.097181] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[36m[15:58:00.097496] [D] [thread 115878] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6)) as new root of the plan.[m
[36m[15:58:00.097532] [D] [thread 115878] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:58:00.097544] [D] [thread 115878] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:58:00.097569] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.097583] [D] [thread 115878] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[15:58:00.097642] [D] [thread 115878] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[15:58:00.097689] [D] [thread 115878] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:58:00.097709] [W] [thread 115878] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[15:58:00.097719] [D] [thread 115878] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[15:58:00.097790] [D] [thread 115878] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 7 to the query Id 1[m
[36m[15:58:00.097970] [D] [thread 115878] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:58:00.098006] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:58:00.098068] [I] [thread 115878] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[15:58:00.098095] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:58:00.098222] [D] [thread 115878] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:58:00.098525] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.098587] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[15:58:00.098681] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[15:58:00.098748] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[15:58:00.098928] [D] [thread 115878] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 7[m
[36m[15:58:00.098988] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.099010] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.099072] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.099092] [D] [thread 115878] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:58:00.099134] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.099147] [D] [thread 115878] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:58:00.099229] [D] [thread 115878] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:58:00.099256] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.099283] [D] [thread 115878] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:58:00.099498] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[36m[15:58:00.099867] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.099913] [D] [thread 115878] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:58:00.099930] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[15:58:00.099940] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 12 in the query plan[m
[36m[15:58:00.100167] [D] [thread 115878] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6)) as root operator.[m
[36m[15:58:00.100307] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.100412] [D] [thread 115878] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:58:00.100467] [D] [thread 115878] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[15:58:00.100527] [D] [thread 115878] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:58:00.100546] [W] [thread 115878] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[15:58:00.100555] [D] [thread 115878] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[15:58:00.100653] [D] [thread 115878] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[15:58:00.100747] [D] [thread 115878] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:58:00.100798] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:58:00.100870] [I] [thread 115878] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[15:58:00.100931] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:58:00.101030] [D] [thread 115878] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:58:00.101197] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.101266] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[15:58:00.101358] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[15:58:00.101374] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[15:58:00.101425] [D] [thread 115878] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(14) on execution node with id 7[m
[36m[15:58:00.101439] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.101454] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.101494] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.101556] [D] [thread 115878] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:58:00.101631] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.101677] [D] [thread 115878] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:58:00.101926] [D] [thread 115878] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:58:00.101976] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.102016] [D] [thread 115878] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:58:00.102187] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[36m[15:58:00.102527] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.102572] [D] [thread 115878] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:58:00.102589] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 13 exists in the query plan or not[m
[36m[15:58:00.102599] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 13 in the query plan[m
[36m[15:58:00.102896] [D] [thread 115878] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[15:58:00.103104] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.103138] [D] [thread 115878] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:58:00.103188] [D] [thread 115878] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[15:58:00.103210] [D] [thread 115878] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:58:00.103281] [W] [thread 115878] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[15:58:00.103297] [D] [thread 115878] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[15:58:00.103371] [D] [thread 115878] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[15:58:00.103486] [D] [thread 115878] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:58:00.103552] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:58:00.103579] [I] [thread 115878] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[15:58:00.103625] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:58:00.103796] [D] [thread 115878] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:58:00.104008] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[15:58:00.104119] [W] [thread 115878] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[15:58:00.104165] [D] [thread 115878] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:58:00.104193] [D] [thread 115878] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:58:00.104204] [D] [thread 115878] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:58:00.104315] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.104434] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[15:58:00.104730] [D] [thread 115878] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7)) on execution node with id 8[m
[36m[15:58:00.104812] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[15:58:00.104863] [W] [thread 115878] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[15:58:00.105022] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[36m[15:58:00.105419] [D] [thread 115878] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7)) as new root of the plan.[m
[36m[15:58:00.105475] [D] [thread 115878] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:58:00.105494] [D] [thread 115878] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:58:00.105527] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.105544] [D] [thread 115878] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[15:58:00.105615] [D] [thread 115878] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[15:58:00.105657] [D] [thread 115878] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:58:00.105675] [W] [thread 115878] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[15:58:00.105708] [D] [thread 115878] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[15:58:00.105780] [D] [thread 115878] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 8 to the query Id 1[m
[36m[15:58:00.105986] [D] [thread 115878] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:58:00.106053] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:58:00.106115] [I] [thread 115878] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[15:58:00.106169] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:58:00.106289] [D] [thread 115878] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:58:00.106654] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.106754] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[15:58:00.106825] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[15:58:00.106838] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[15:58:00.106931] [D] [thread 115878] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 8[m
[36m[15:58:00.106969] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.106987] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.107024] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.107039] [D] [thread 115878] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:58:00.107171] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.107241] [D] [thread 115878] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:58:00.107445] [D] [thread 115878] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:58:00.107477] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.107551] [D] [thread 115878] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:58:00.107754] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[36m[15:58:00.108167] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.108231] [D] [thread 115878] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:58:00.108250] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 15 exists in the query plan or not[m
[36m[15:58:00.108260] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 15 in the query plan[m
[36m[15:58:00.108559] [D] [thread 115878] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7)) as root operator.[m
[36m[15:58:00.108775] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.108859] [D] [thread 115878] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:58:00.108927] [D] [thread 115878] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[15:58:00.108952] [D] [thread 115878] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:58:00.108969] [W] [thread 115878] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[15:58:00.108979] [D] [thread 115878] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[15:58:00.109066] [D] [thread 115878] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[15:58:00.109193] [D] [thread 115878] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:58:00.109254] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:58:00.109308] [I] [thread 115878] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[15:58:00.109369] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:58:00.109488] [D] [thread 115878] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:58:00.109730] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.109820] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[15:58:00.109934] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[15:58:00.109952] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[15:58:00.110012] [D] [thread 115878] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(17) on execution node with id 8[m
[36m[15:58:00.110028] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.110045] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.110144] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.110220] [D] [thread 115878] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:58:00.110320] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.110391] [D] [thread 115878] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:58:00.110722] [D] [thread 115878] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:58:00.110804] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.110885] [D] [thread 115878] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:58:00.111011] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[36m[15:58:00.111387] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.111443] [D] [thread 115878] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:58:00.111462] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[15:58:00.111473] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 16 in the query plan[m
[36m[15:58:00.111724] [D] [thread 115878] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[15:58:00.111957] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.111996] [D] [thread 115878] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:58:00.112080] [D] [thread 115878] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[15:58:00.112104] [D] [thread 115878] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:58:00.112133] [W] [thread 115878] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[15:58:00.112146] [D] [thread 115878] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[15:58:00.112223] [D] [thread 115878] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[15:58:00.112377] [D] [thread 115878] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:58:00.112447] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:58:00.112477] [I] [thread 115878] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[15:58:00.112536] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:58:00.112652] [D] [thread 115878] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:58:00.112810] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:58:00.112886] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[15:58:00.113126] [D] [thread 115878] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(25) on execution node with id 3[m
[36m[15:58:00.113188] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[15:58:00.113207] [W] [thread 115878] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[15:58:00.113366] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[36m[15:58:00.113729] [D] [thread 115878] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator CENTRALWINDOW(25) as new root of the plan.[m
[36m[15:58:00.113772] [D] [thread 115878] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:58:00.113782] [D] [thread 115878] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:58:00.113808] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.113822] [D] [thread 115878] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[15:58:00.113884] [D] [thread 115878] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[15:58:00.113933] [D] [thread 115878] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:58:00.113953] [W] [thread 115878] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[15:58:00.113963] [D] [thread 115878] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[15:58:00.114037] [D] [thread 115878] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 3 to the query Id 1[m
[36m[15:58:00.114180] [D] [thread 115878] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:58:00.114202] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:58:00.114253] [I] [thread 115878] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 3[m
[36m[15:58:00.114312] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:58:00.114445] [D] [thread 115878] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:58:00.114629] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[15:58:00.114731] [W] [thread 115878] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[15:58:00.114745] [D] [thread 115878] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:58:00.114798] [D] [thread 115878] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:58:00.114840] [D] [thread 115878] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:58:00.114855] [D] [thread 115878] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:58:00.114988] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.115042] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[15:58:00.115261] [D] [thread 115878] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8)) on execution node with id 9[m
[36m[15:58:00.115355] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[15:58:00.115375] [W] [thread 115878] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[15:58:00.115523] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[36m[15:58:00.115847] [D] [thread 115878] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8)) as new root of the plan.[m
[36m[15:58:00.115886] [D] [thread 115878] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:58:00.115897] [D] [thread 115878] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:58:00.115922] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.115936] [D] [thread 115878] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[15:58:00.115993] [D] [thread 115878] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[15:58:00.116024] [D] [thread 115878] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:58:00.116057] [W] [thread 115878] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[15:58:00.116066] [D] [thread 115878] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[15:58:00.116139] [D] [thread 115878] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 9 to the query Id 1[m
[36m[15:58:00.116269] [D] [thread 115878] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:58:00.116399] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:58:00.116469] [I] [thread 115878] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[15:58:00.116500] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:58:00.116607] [D] [thread 115878] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:58:00.116912] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.116983] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[15:58:00.117074] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[15:58:00.117107] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[15:58:00.117233] [D] [thread 115878] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 9[m
[36m[15:58:00.117264] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.117318] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.117392] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.117410] [D] [thread 115878] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:58:00.117483] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.117506] [D] [thread 115878] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:58:00.117650] [D] [thread 115878] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:58:00.117666] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.117718] [D] [thread 115878] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:58:00.117908] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[36m[15:58:00.118240] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.118283] [D] [thread 115878] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:58:00.118302] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 18 exists in the query plan or not[m
[36m[15:58:00.118312] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 18 in the query plan[m
[36m[15:58:00.118602] [D] [thread 115878] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8)) as root operator.[m
[36m[15:58:00.118742] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.118813] [D] [thread 115878] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:58:00.118861] [D] [thread 115878] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[15:58:00.118882] [D] [thread 115878] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:58:00.118898] [W] [thread 115878] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[15:58:00.118908] [D] [thread 115878] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[15:58:00.119032] [D] [thread 115878] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[15:58:00.119144] [D] [thread 115878] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:58:00.119177] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:58:00.119223] [I] [thread 115878] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[15:58:00.119270] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:58:00.119370] [D] [thread 115878] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:58:00.119506] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.119565] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[15:58:00.119657] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[15:58:00.119761] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[15:58:00.119846] [D] [thread 115878] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(20) on execution node with id 9[m
[36m[15:58:00.119863] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.119891] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.119948] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.120010] [D] [thread 115878] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:58:00.120074] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.120094] [D] [thread 115878] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:58:00.120505] [D] [thread 115878] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:58:00.120545] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.120587] [D] [thread 115878] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:58:00.120696] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[36m[15:58:00.120928] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.120978] [D] [thread 115878] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:58:00.120995] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 19 exists in the query plan or not[m
[36m[15:58:00.121005] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 19 in the query plan[m
[36m[15:58:00.121372] [D] [thread 115878] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[15:58:00.121528] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.121577] [D] [thread 115878] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:58:00.121629] [D] [thread 115878] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[15:58:00.121652] [D] [thread 115878] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:58:00.121667] [W] [thread 115878] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[15:58:00.121676] [D] [thread 115878] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[15:58:00.121801] [D] [thread 115878] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[15:58:00.121918] [D] [thread 115878] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:58:00.121962] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:58:00.121996] [I] [thread 115878] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[15:58:00.122065] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:58:00.122194] [D] [thread 115878] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:58:00.122351] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[15:58:00.122424] [W] [thread 115878] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[15:58:00.122468] [D] [thread 115878] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:58:00.122498] [D] [thread 115878] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:58:00.122509] [D] [thread 115878] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:58:00.122616] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.122653] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[15:58:00.122878] [D] [thread 115878] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9)) on execution node with id 10[m
[36m[15:58:00.122943] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[15:58:00.122989] [W] [thread 115878] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[15:58:00.123154] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[15:58:00.123457] [D] [thread 115878] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9)) as new root of the plan.[m
[36m[15:58:00.123522] [D] [thread 115878] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:58:00.123532] [D] [thread 115878] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:58:00.123557] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.123571] [D] [thread 115878] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[15:58:00.123631] [D] [thread 115878] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[15:58:00.123679] [D] [thread 115878] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:58:00.123698] [W] [thread 115878] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[15:58:00.123707] [D] [thread 115878] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[15:58:00.123782] [D] [thread 115878] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 10 to the query Id 1[m
[36m[15:58:00.123923] [D] [thread 115878] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:58:00.123946] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:58:00.123998] [I] [thread 115878] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[15:58:00.124027] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:58:00.124191] [D] [thread 115878] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:58:00.124554] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.124632] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[15:58:00.124717] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[15:58:00.124734] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[15:58:00.124827] [D] [thread 115878] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 10[m
[36m[15:58:00.124856] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.124908] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.124974] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.124992] [D] [thread 115878] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:58:00.125089] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.125115] [D] [thread 115878] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:58:00.125211] [D] [thread 115878] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:58:00.125226] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.125290] [D] [thread 115878] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:58:00.125482] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[36m[15:58:00.125810] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.125849] [D] [thread 115878] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:58:00.125866] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 21 exists in the query plan or not[m
[36m[15:58:00.125876] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 21 in the query plan[m
[36m[15:58:00.126094] [D] [thread 115878] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9)) as root operator.[m
[36m[15:58:00.126227] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.126298] [D] [thread 115878] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:58:00.126466] [D] [thread 115878] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[15:58:00.126490] [D] [thread 115878] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:58:00.126537] [W] [thread 115878] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[15:58:00.126567] [D] [thread 115878] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[15:58:00.126637] [D] [thread 115878] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[15:58:00.126726] [D] [thread 115878] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:58:00.126750] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:58:00.126778] [I] [thread 115878] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[15:58:00.126837] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:58:00.126926] [D] [thread 115878] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:58:00.127100] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[15:58:00.127136] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[15:58:00.127232] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[15:58:00.127296] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[15:58:00.127401] [D] [thread 115878] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(23) on execution node with id 10[m
[36m[15:58:00.127429] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.127476] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.127522] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.127634] [D] [thread 115878] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[15:58:00.127697] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.127723] [D] [thread 115878] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:58:00.127927] [D] [thread 115878] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[15:58:00.127987] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.128046] [D] [thread 115878] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[15:58:00.128176] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[36m[15:58:00.128529] [D] [thread 115878] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[15:58:00.128571] [D] [thread 115878] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[15:58:00.128588] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[15:58:00.128598] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 22 in the query plan[m
[36m[15:58:00.128885] [D] [thread 115878] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[15:58:00.129071] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.129137] [D] [thread 115878] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[15:58:00.129218] [D] [thread 115878] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[15:58:00.129244] [D] [thread 115878] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:58:00.129273] [W] [thread 115878] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[15:58:00.129286] [D] [thread 115878] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[15:58:00.129362] [D] [thread 115878] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[15:58:00.129449] [D] [thread 115878] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:58:00.129527] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:58:00.129560] [I] [thread 115878] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[15:58:00.129615] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:58:00.129727] [D] [thread 115878] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:58:00.129850] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:58:00.129988] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[15:58:00.130197] [D] [thread 115878] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(26) on execution node with id 4[m
[36m[15:58:00.130231] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[15:58:00.130276] [W] [thread 115878] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[15:58:00.130400] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[36m[15:58:00.130747] [D] [thread 115878] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator CENTRALWINDOW(26) as new root of the plan.[m
[36m[15:58:00.130788] [D] [thread 115878] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:58:00.130799] [D] [thread 115878] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:58:00.130823] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.130836] [D] [thread 115878] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[15:58:00.130895] [D] [thread 115878] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[15:58:00.130944] [D] [thread 115878] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:58:00.130965] [W] [thread 115878] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[15:58:00.130975] [D] [thread 115878] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[15:58:00.131048] [D] [thread 115878] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 4 to the query Id 1[m
[36m[15:58:00.131231] [D] [thread 115878] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:58:00.131288] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:58:00.131309] [I] [thread 115878] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 4[m
[36m[15:58:00.131370] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:58:00.131474] [D] [thread 115878] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[15:58:00.131619] [D] [thread 115878] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[15:58:00.131684] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:58:00.131945] [D] [thread 115878] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SINK(5: {FileSinkDescriptor()}) on execution node with id 1[m
[36m[15:58:00.131994] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[15:58:00.132042] [W] [thread 115878] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[15:58:00.132185] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[36m[15:58:00.132531] [D] [thread 115878] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(5: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[15:58:00.132570] [D] [thread 115878] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:58:00.132580] [D] [thread 115878] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:58:00.132604] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.132617] [D] [thread 115878] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[15:58:00.132674] [D] [thread 115878] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[15:58:00.132708] [D] [thread 115878] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[15:58:00.132740] [W] [thread 115878] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 1 already scheduled[m
[36m[15:58:00.132753] [D] [thread 115878] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 1 to the query Id index.[m
[36m[15:58:00.132826] [D] [thread 115878] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 1 to the query Id 1[m
[36m[15:58:00.132955] [D] [thread 115878] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[15:58:00.133017] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[15:58:00.133039] [I] [thread 115878] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 1[m
[36m[15:58:00.133091] [D] [thread 115878] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[15:58:00.133149] [D] [thread 115878] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:58:00.133170] [D] [thread 115878] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:58:00.133209] [D] [thread 115878] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:58:00.133224] [D] [thread 115878] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:58:00.133234] [D] [thread 115878] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[15:58:00.133251] [D] [thread 115878] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[32m[15:58:00.133361] [I] [thread 115878] [BasePlacementStrategy.cpp:361] [addNetworkSourceAndSinkOperators] [m
[36m[15:58:00.133428] [D] [thread 115878] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:58:00.133606] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 7 exists in the query plan or not[m
[36m[15:58:00.133691] [D] [thread 115878] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:58:00.133764] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[15:58:00.133814] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[36m[15:58:00.133872] [D] [thread 115878] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:58:00.134205] [D] [thread 115878] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:58:00.134307] [D] [thread 115878] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:58:00.134337] [D] [thread 115878] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[15:58:00.134425] [D] [thread 115878] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:58:00.134548] [D] [thread 115878] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[15:58:00.134594] [D] [thread 115878] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:58:00.134639] [D] [thread 115878] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[15:58:00.134864] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[15:58:00.135033] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[15:58:00.135063] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[15:58:00.135091] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.135108] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.135140] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[15:58:00.135195] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[32m[15:58:00.135443] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 29[m
[36m[15:58:00.135799] [D] [thread 115878] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(8) as root operator.[m
[36m[15:58:00.135908] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[15:58:00.135959] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[15:58:00.135971] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[15:58:00.136007] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.136027] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[15:58:00.136388] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 27[m
[36m[15:58:00.136494] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[15:58:00.136512] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[36m[15:58:00.136786] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[15:58:00.136827] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[15:58:00.136879] [D] [thread 115878] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[15:58:00.136898] [D] [thread 115878] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[15:58:00.136932] [D] [thread 115878] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[15:58:00.136982] [D] [thread 115878] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:58:00.137055] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[15:58:00.137138] [D] [thread 115878] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:58:00.137208] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 11 exists in the query plan or not[m
[36m[15:58:00.137255] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 11 in the query plan[m
[36m[15:58:00.137308] [D] [thread 115878] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:58:00.137621] [D] [thread 115878] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:58:00.137713] [D] [thread 115878] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:58:00.137756] [D] [thread 115878] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:58:00.137813] [D] [thread 115878] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:58:00.137900] [D] [thread 115878] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[15:58:00.138031] [D] [thread 115878] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:58:00.138074] [D] [thread 115878] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[15:58:00.138204] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[15:58:00.138395] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[15:58:00.138485] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[15:58:00.138513] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.138530] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.138606] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 11 exists in the query plan or not[m
[36m[15:58:00.138628] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 11 in the query plan[m
[32m[15:58:00.138791] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 32[m
[36m[15:58:00.139210] [D] [thread 115878] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(11) as root operator.[m
[36m[15:58:00.139364] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[15:58:00.139439] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[15:58:00.139452] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[15:58:00.139576] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.139632] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[15:58:00.139930] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 30[m
[36m[15:58:00.140051] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[15:58:00.140072] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[36m[15:58:00.140377] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[15:58:00.140448] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[15:58:00.140467] [D] [thread 115878] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  6[m
[36m[15:58:00.140479] [D] [thread 115878] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[15:58:00.140532] [D] [thread 115878] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[15:58:00.140613] [D] [thread 115878] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:58:00.140896] [D] [thread 115878] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:58:00.140971] [D] [thread 115878] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:58:00.141031] [D] [thread 115878] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[15:58:00.141109] [D] [thread 115878] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:58:00.141223] [D] [thread 115878] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[15:58:00.141290] [D] [thread 115878] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:58:00.141331] [D] [thread 115878] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[15:58:00.141464] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[15:58:00.141611] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[15:58:00.141677] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[15:58:00.141705] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.141723] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.141799] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[15:58:00.141818] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[32m[15:58:00.141947] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 35[m
[36m[15:58:00.142312] [D] [thread 115878] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(24) as root operator.[m
[36m[15:58:00.142418] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:58:00.142467] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:58:00.142479] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[15:58:00.142513] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.142530] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[15:58:00.142779] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 33[m
[36m[15:58:00.142911] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[15:58:00.142977] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[15:58:00.143240] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[15:58:00.143306] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[15:58:00.143325] [D] [thread 115878] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[15:58:00.143336] [D] [thread 115878] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[15:58:00.143367] [D] [thread 115878] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[15:58:00.143401] [D] [thread 115878] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:58:00.143468] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 13 exists in the query plan or not[m
[36m[15:58:00.143529] [D] [thread 115878] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:58:00.143627] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[15:58:00.143654] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[36m[15:58:00.143714] [D] [thread 115878] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:58:00.144024] [D] [thread 115878] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:58:00.144106] [D] [thread 115878] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:58:00.144134] [D] [thread 115878] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[15:58:00.144205] [D] [thread 115878] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:58:00.144283] [D] [thread 115878] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[15:58:00.144313] [D] [thread 115878] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:58:00.144392] [D] [thread 115878] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[15:58:00.144511] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[15:58:00.144636] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[15:58:00.144737] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[15:58:00.144794] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.144819] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.144892] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[15:58:00.144988] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[32m[15:58:00.145154] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 38[m
[36m[15:58:00.145484] [D] [thread 115878] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(14) as root operator.[m
[36m[15:58:00.145585] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[15:58:00.145633] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[15:58:00.145645] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[15:58:00.145679] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.145698] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[15:58:00.145899] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 36[m
[36m[15:58:00.146036] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 25 exists in the query plan or not[m
[36m[15:58:00.146077] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 25 in the query plan[m
[36m[15:58:00.146380] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[15:58:00.146454] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[15:58:00.146472] [D] [thread 115878] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  7[m
[36m[15:58:00.146484] [D] [thread 115878] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[15:58:00.146514] [D] [thread 115878] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[15:58:00.146549] [D] [thread 115878] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:58:00.146619] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[15:58:00.146661] [D] [thread 115878] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:58:00.146744] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[15:58:00.146762] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 17 in the query plan[m
[36m[15:58:00.146818] [D] [thread 115878] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:58:00.147072] [D] [thread 115878] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:58:00.147182] [D] [thread 115878] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:58:00.147254] [D] [thread 115878] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:58:00.147390] [D] [thread 115878] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:58:00.147557] [D] [thread 115878] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[15:58:00.147622] [D] [thread 115878] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:58:00.147633] [D] [thread 115878] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[15:58:00.147733] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[15:58:00.147847] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[15:58:00.147900] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[15:58:00.147926] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.148010] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.148086] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[15:58:00.148106] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 17 in the query plan[m
[32m[15:58:00.148372] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 41[m
[36m[15:58:00.148628] [D] [thread 115878] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(17) as root operator.[m
[36m[15:58:00.148755] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[15:58:00.148805] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[15:58:00.148818] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[15:58:00.148864] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.148880] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[15:58:00.149104] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 39[m
[36m[15:58:00.149241] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 25 exists in the query plan or not[m
[36m[15:58:00.149282] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 25 in the query plan[m
[36m[15:58:00.149578] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[15:58:00.149643] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[15:58:00.149661] [D] [thread 115878] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  8[m
[36m[15:58:00.149673] [D] [thread 115878] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[15:58:00.149710] [D] [thread 115878] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[15:58:00.149751] [D] [thread 115878] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:58:00.150030] [D] [thread 115878] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:58:00.150126] [D] [thread 115878] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:58:00.150240] [D] [thread 115878] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:58:00.150290] [D] [thread 115878] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:58:00.150445] [D] [thread 115878] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[15:58:00.150488] [D] [thread 115878] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:58:00.150528] [D] [thread 115878] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[15:58:00.150643] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[15:58:00.150766] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[15:58:00.150829] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[15:58:00.150884] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.150905] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.150975] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 25 exists in the query plan or not[m
[36m[15:58:00.150994] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 25 in the query plan[m
[32m[15:58:00.151114] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 44[m
[36m[15:58:00.151503] [D] [thread 115878] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(25) as root operator.[m
[36m[15:58:00.151598] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:58:00.151644] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:58:00.151657] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[15:58:00.151690] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.151708] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[15:58:00.151881] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 42[m
[36m[15:58:00.151995] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[15:58:00.152023] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[15:58:00.152377] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[15:58:00.152420] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[15:58:00.152437] [D] [thread 115878] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[15:58:00.152449] [D] [thread 115878] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[15:58:00.152485] [D] [thread 115878] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[15:58:00.152520] [D] [thread 115878] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:58:00.152599] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 19 exists in the query plan or not[m
[36m[15:58:00.152644] [D] [thread 115878] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:58:00.152688] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[15:58:00.152755] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[36m[15:58:00.152816] [D] [thread 115878] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:58:00.153146] [D] [thread 115878] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:58:00.153283] [D] [thread 115878] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:58:00.153339] [D] [thread 115878] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[15:58:00.153413] [D] [thread 115878] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:58:00.153536] [D] [thread 115878] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[15:58:00.153636] [D] [thread 115878] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:58:00.153672] [D] [thread 115878] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[15:58:00.153784] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[15:58:00.153949] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[15:58:00.153979] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[15:58:00.154037] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.154056] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.154123] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[15:58:00.154141] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[32m[15:58:00.154267] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 47[m
[36m[15:58:00.154695] [D] [thread 115878] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(20) as root operator.[m
[36m[15:58:00.154797] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[15:58:00.154847] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[15:58:00.154860] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[15:58:00.154904] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.154923] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[15:58:00.155146] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 45[m
[36m[15:58:00.155259] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 26 exists in the query plan or not[m
[36m[15:58:00.155330] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 26 in the query plan[m
[36m[15:58:00.155603] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[15:58:00.155671] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[15:58:00.155689] [D] [thread 115878] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  9[m
[36m[15:58:00.155700] [D] [thread 115878] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[15:58:00.155731] [D] [thread 115878] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[15:58:00.155765] [D] [thread 115878] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:58:00.155864] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[15:58:00.155964] [D] [thread 115878] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:58:00.156036] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[15:58:00.156093] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[36m[15:58:00.156153] [D] [thread 115878] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:58:00.156519] [D] [thread 115878] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:58:00.156613] [D] [thread 115878] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:58:00.156656] [D] [thread 115878] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:58:00.156714] [D] [thread 115878] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:58:00.156801] [D] [thread 115878] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[15:58:00.156856] [D] [thread 115878] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:58:00.156867] [D] [thread 115878] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[15:58:00.157006] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[15:58:00.157240] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[15:58:00.157273] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[15:58:00.157295] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.157313] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.157376] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[15:58:00.157407] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[32m[15:58:00.157503] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 50[m
[36m[15:58:00.157909] [D] [thread 115878] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(23) as root operator.[m
[36m[15:58:00.158039] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[15:58:00.158104] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[15:58:00.158117] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[15:58:00.158139] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.158178] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[15:58:00.158447] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 48[m
[36m[15:58:00.158649] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 26 exists in the query plan or not[m
[36m[15:58:00.158707] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 26 in the query plan[m
[36m[15:58:00.159107] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[15:58:00.159171] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[15:58:00.159191] [D] [thread 115878] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  10[m
[36m[15:58:00.159204] [D] [thread 115878] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[15:58:00.159248] [D] [thread 115878] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[15:58:00.159367] [D] [thread 115878] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:58:00.159700] [D] [thread 115878] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:58:00.159827] [D] [thread 115878] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:58:00.159902] [D] [thread 115878] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[15:58:00.159953] [D] [thread 115878] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:58:00.160079] [D] [thread 115878] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[15:58:00.160150] [D] [thread 115878] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[15:58:00.160189] [D] [thread 115878] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[15:58:00.160339] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[15:58:00.160489] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[15:58:00.160552] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[15:58:00.160604] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.160626] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.160774] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 26 exists in the query plan or not[m
[36m[15:58:00.160829] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 26 in the query plan[m
[32m[15:58:00.160990] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 53[m
[36m[15:58:00.161327] [D] [thread 115878] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(26) as root operator.[m
[36m[15:58:00.161425] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:58:00.161472] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:58:00.161485] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[15:58:00.161518] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.161537] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[15:58:00.161806] [I] [thread 115878] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 51[m
[36m[15:58:00.161936] [D] [thread 115878] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[15:58:00.162002] [D] [thread 115878] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[15:58:00.162314] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[15:58:00.162354] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[15:58:00.162371] [D] [thread 115878] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[15:58:00.162382] [D] [thread 115878] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[15:58:00.162419] [D] [thread 115878] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[15:58:00.162480] [D] [thread 115878] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[15:58:00.162537] [D] [thread 115878] [GlobalExecutionPlan.cpp:33] [checkIfExecutionNodeIsARoot] GlobalExecutionPlan: Checking if Execution node with id 1 is a root node[m
[36m[15:58:00.162549] [D] [thread 115878] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[15:58:00.162559] [D] [thread 115878] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[15:58:00.162576] [D] [thread 115878] [GlobalExecutionPlan.cpp:68] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node as root node[m
[36m[15:58:00.162608] [D] [thread 115878] [GlobalExecutionPlan.cpp:72] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[15:58:00.162779] [D] [thread 115878] [BasePlacementStrategy.cpp:337] [runTypeInferencePhase] BasePlacementStrategy: Run type inference phase for all the query sub plans to be deployed.[m
[36m[15:58:00.162837] [D] [thread 115878] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[15:58:00.162902] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.162933] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.163441] [D] [thread 115878] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:58:00.163565] [D] [thread 115878] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:58:00.163633] [D] [thread 115878] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:58:00.163686] [D] [thread 115878] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:58:00.163762] [D] [thread 115878] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:58:00.164611] [D] [thread 115878] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:58:00.164951] [D] [thread 115878] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:58:00.165021] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.165042] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.165369] [D] [thread 115878] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:58:00.165458] [D] [thread 115878] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:58:00.165495] [D] [thread 115878] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:58:00.165539] [D] [thread 115878] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:58:00.165582] [D] [thread 115878] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:58:00.166394] [D] [thread 115878] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:58:00.166725] [D] [thread 115878] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:58:00.166794] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.166814] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.167085] [D] [thread 115878] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:58:00.167179] [D] [thread 115878] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:58:00.167224] [D] [thread 115878] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[15:58:00.167275] [D] [thread 115878] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:58:00.167303] [D] [thread 115878] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:58:00.167679] [D] [thread 115878] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[15:58:00.167954] [I] [thread 115878] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[15:58:00.168132] [I] [thread 115878] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.168305] [D] [thread 115878] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:58:00.168395] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.168449] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.168730] [D] [thread 115878] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:58:00.168840] [D] [thread 115878] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:58:00.168910] [D] [thread 115878] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:58:00.168969] [D] [thread 115878] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:58:00.169000] [D] [thread 115878] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:58:00.169803] [D] [thread 115878] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:58:00.170134] [D] [thread 115878] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:58:00.170202] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.170222] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.170525] [D] [thread 115878] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:58:00.170615] [D] [thread 115878] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:58:00.170652] [D] [thread 115878] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:58:00.170694] [D] [thread 115878] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:58:00.170737] [D] [thread 115878] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:58:00.171479] [D] [thread 115878] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:58:00.171839] [D] [thread 115878] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:58:00.171896] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.171915] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.172232] [D] [thread 115878] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:58:00.172355] [D] [thread 115878] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:58:00.172400] [D] [thread 115878] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[15:58:00.172450] [D] [thread 115878] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:58:00.172481] [D] [thread 115878] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:58:00.172866] [D] [thread 115878] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[15:58:00.173141] [I] [thread 115878] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[15:58:00.173317] [I] [thread 115878] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.173494] [D] [thread 115878] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:58:00.173560] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.173580] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.173876] [D] [thread 115878] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:58:00.173962] [D] [thread 115878] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:58:00.173999] [D] [thread 115878] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:58:00.174053] [D] [thread 115878] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:58:00.174082] [D] [thread 115878] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:58:00.174842] [D] [thread 115878] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:58:00.175203] [D] [thread 115878] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:58:00.175264] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.175284] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.175604] [D] [thread 115878] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:58:00.175689] [D] [thread 115878] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:58:00.175726] [D] [thread 115878] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[15:58:00.175780] [D] [thread 115878] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:58:00.175810] [D] [thread 115878] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:58:00.176611] [D] [thread 115878] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[15:58:00.176932] [D] [thread 115878] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:58:00.176995] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.177015] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.177303] [D] [thread 115878] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:58:00.177399] [D] [thread 115878] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:58:00.177443] [D] [thread 115878] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[15:58:00.177493] [D] [thread 115878] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:58:00.177520] [D] [thread 115878] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:58:00.177894] [D] [thread 115878] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[15:58:00.178171] [I] [thread 115878] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[15:58:00.178331] [I] [thread 115878] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.178517] [D] [thread 115878] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:58:00.178582] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.178602] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.178865] [D] [thread 115878] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[15:58:00.179001] [D] [thread 115878] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[15:58:00.179044] [D] [thread 115878] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 3 source operators.[m
[36m[15:58:00.179097] [D] [thread 115878] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[15:58:00.179128] [D] [thread 115878] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[15:58:00.179434] [D] [thread 115878] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[15:58:00.179533] [D] [thread 115878] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[36m[15:58:00.181632] [D] [thread 115878] [QueryPlacementPhase.cpp:140] [execute] QueryPlacementPhase: Update Global Execution Plan:
ExecutionNode(id:1, ip:192.168.2.11, topologyId:1)
| QuerySubPlan(queryId:1, querySubPlanId:10)
|  SINK(5: {FileSinkDescriptor()})
|    SOURCE(33,,NetworkSourceDescriptor{tcp://192.168.2.12:45195 1::33::0::0})
|    SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.30:44665 1::42::0::0})
|    SOURCE(51,,NetworkSourceDescriptor{tcp://192.168.2.31:39953 1::51::0::0})
|--ExecutionNode(id:2, ip:192.168.2.12, topologyId:2)
|  | QuerySubPlan(queryId:1, querySubPlanId:3)
|  |  SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:38611)})
|  |    CENTRALWINDOW(24)
|  |      SOURCE(27,,NetworkSourceDescriptor{tcp://192.168.2.32:44311 1::27::0::0})
|  |      SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.33:37445 1::30::0::0})
|  |--ExecutionNode(id:5, ip:192.168.2.32, topologyId:5)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:1)
|  |  |  SINK(29: {NetworkSinkDescriptor(partition=1::27::0::0;nodeLocation=tcp://192.168.2.12:45195)})
|  |  |    WATERMARKASSIGNER(8)
|  |  |      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
|  |--ExecutionNode(id:6, ip:192.168.2.33, topologyId:6)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:2)
|  |  |  SINK(32: {NetworkSinkDescriptor(partition=1::30::0::0;nodeLocation=tcp://192.168.2.12:45195)})
|  |  |    WATERMARKASSIGNER(11)
|  |  |      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
|--ExecutionNode(id:3, ip:192.168.2.30, topologyId:3)
|  | QuerySubPlan(queryId:1, querySubPlanId:6)
|  |  SINK(44: {NetworkSinkDescriptor(partition=1::42::0::0;nodeLocation=tcp://192.168.2.11:38611)})
|  |    CENTRALWINDOW(25)
|  |      SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.34:35013 1::36::0::0})
|  |      SOURCE(39,,NetworkSourceDescriptor{tcp://192.168.2.35:45023 1::39::0::0})
|  |--ExecutionNode(id:7, ip:192.168.2.34, topologyId:7)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:4)
|  |  |  SINK(38: {NetworkSinkDescriptor(partition=1::36::0::0;nodeLocation=tcp://192.168.2.30:44665)})
|  |  |    WATERMARKASSIGNER(14)
|  |  |      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
|  |--ExecutionNode(id:8, ip:192.168.2.35, topologyId:8)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:5)
|  |  |  SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.30:44665)})
|  |  |    WATERMARKASSIGNER(17)
|  |  |      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
|--ExecutionNode(id:4, ip:192.168.2.31, topologyId:4)
|  | QuerySubPlan(queryId:1, querySubPlanId:9)
|  |  SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:38611)})
|  |    CENTRALWINDOW(26)
|  |      SOURCE(45,,NetworkSourceDescriptor{tcp://192.168.2.37:44791 1::45::0::0})
|  |      SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.38:33623 1::48::0::0})
|  |--ExecutionNode(id:9, ip:192.168.2.37, topologyId:9)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:7)
|  |  |  SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.31:39953)})
|  |  |    WATERMARKASSIGNER(20)
|  |  |      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
|  |--ExecutionNode(id:10, ip:192.168.2.38, topologyId:10)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:8)
|  |  |  SINK(50: {NetworkSinkDescriptor(partition=1::48::0::0;nodeLocation=tcp://192.168.2.31:39953)})
|  |  |    WATERMARKASSIGNER(23)
|  |  |      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[15:58:00.181783] [D] [thread 115878] [QueryDeploymentPhase.cpp:54] [execute] QueryDeploymentPhase: deploy the query[m
[36m[15:58:00.181820] [D] [thread 115878] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[15:58:00.182104] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.182174] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.182445] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.182540] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.182688] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.182747] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.182873] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.182940] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.183034] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.183090] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.183159] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.183210] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.183335] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.183365] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.183529] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.183558] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.183661] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.183689] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.183785] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.183834] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.184177] [D] [thread 115878] [QueryDeploymentPhase.cpp:106] [deployQuery] QueryDeploymentPhase::deployQuery queryId= 1[m
[36m[15:58:00.184231] [D] [thread 115878] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=5[m
[36m[15:58:00.184244] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.184257] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.184569] [D] [thread 115878] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.32:41755[m
[36m[15:58:00.184699] [D] [thread 115878] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:41755 queryId=1 querySubPlanId = 1[m
[36m[15:58:00.185147] [D] [thread 115878] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(29: {NetworkSinkDescriptor(partition=1::27::0::0;nodeLocation=tcp://192.168.2.12:45195)})
  WATERMARKASSIGNER(8)
    PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
      SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
[m
[36m[15:58:00.185205] [D] [thread 115878] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:58:00.185553] [D] [thread 115878] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:58:00.189344] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.190266] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.190634] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.190857] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.191619] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[15:58:00.192779] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.193125] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.193361] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.193567] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.193760] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.194296] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[15:58:00.194444] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.194479] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[15:58:00.194565] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.194597] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:58:00.194737] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.195121] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:58:00.195569] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.195777] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.195976] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.196533] [D] [thread 115878] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream4)[m
[36m[15:58:00.196822] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:58:00.197320] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.197886] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:58:00.198336] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.198613] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:58:00.199074] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.211076] [D] [thread 115878] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=6[m
[36m[15:58:00.211220] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.211246] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.211431] [D] [thread 115878] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.33:34167[m
[36m[15:58:00.211467] [D] [thread 115878] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:34167 queryId=1 querySubPlanId = 2[m
[36m[15:58:00.212006] [D] [thread 115878] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(32: {NetworkSinkDescriptor(partition=1::30::0::0;nodeLocation=tcp://192.168.2.12:45195)})
  WATERMARKASSIGNER(11)
    PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
[m
[36m[15:58:00.212159] [D] [thread 115878] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:58:00.212408] [D] [thread 115878] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:58:00.212786] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.212982] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.213227] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.213491] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.214065] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[15:58:00.214211] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.214414] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.214677] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.214850] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.215118] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.215717] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[15:58:00.215908] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.215956] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[15:58:00.216061] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.216114] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:58:00.216216] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.216710] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:58:00.217269] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.217549] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.217730] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.218350] [D] [thread 115878] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream5)[m
[36m[15:58:00.218603] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:58:00.219183] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.219787] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:58:00.220285] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.220773] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:58:00.221312] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.230806] [D] [thread 115878] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=2[m
[36m[15:58:00.230896] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.230941] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.231095] [D] [thread 115878] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.12:36761[m
[36m[15:58:00.231131] [D] [thread 115878] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:36761 queryId=1 querySubPlanId = 3[m
[36m[15:58:00.231462] [D] [thread 115878] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:38611)})
  CENTRALWINDOW(24)
    SOURCE(27,,NetworkSourceDescriptor{tcp://192.168.2.32:44311 1::27::0::0})
    SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.33:37445 1::30::0::0})
[m
[36m[15:58:00.231593] [D] [thread 115878] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:58:00.231810] [D] [thread 115878] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:58:00.232258] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.232500] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.232724] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.232978] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.233548] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[15:58:00.233728] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.234067] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:58:00.234303] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.234442] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:58:00.234576] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.235191] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.235407] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.235638] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.235929] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.235972] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:00.236226] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:00.236773] [D] [thread 115878] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:44311 1::27::0::0}[m
[36m[15:58:00.237081] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.237294] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.237773] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.237962] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.238119] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.238397] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.238899] [D] [thread 115878] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:37445 1::30::0::0}[m
[36m[15:58:00.239054] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.239212] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.239477] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.239619] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.239772] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.239937] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.247488] [D] [thread 115878] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=7[m
[36m[15:58:00.247614] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.247636] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.247760] [D] [thread 115878] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.34:43035[m
[36m[15:58:00.247789] [D] [thread 115878] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.34:43035 queryId=1 querySubPlanId = 4[m
[36m[15:58:00.248183] [D] [thread 115878] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(38: {NetworkSinkDescriptor(partition=1::36::0::0;nodeLocation=tcp://192.168.2.30:44665)})
  WATERMARKASSIGNER(14)
    PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
      SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
[m
[36m[15:58:00.248270] [D] [thread 115878] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:58:00.248523] [D] [thread 115878] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:58:00.248849] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.249102] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.249310] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.249443] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.249897] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[15:58:00.250003] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.250170] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.250401] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.250597] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.250726] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.251166] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[15:58:00.251300] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.251336] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[15:58:00.251418] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.251449] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:58:00.251573] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.251889] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:58:00.252374] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.252590] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.252720] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.253199] [D] [thread 115878] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream6)[m
[36m[15:58:00.253420] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:58:00.253888] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.254350] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:58:00.254740] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.255012] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:58:00.255446] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.263850] [D] [thread 115878] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=8[m
[36m[15:58:00.263933] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.263964] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.264081] [D] [thread 115878] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.35:41675[m
[36m[15:58:00.264111] [D] [thread 115878] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.35:41675 queryId=1 querySubPlanId = 5[m
[36m[15:58:00.264463] [D] [thread 115878] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.30:44665)})
  WATERMARKASSIGNER(17)
    PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
[m
[36m[15:58:00.264577] [D] [thread 115878] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:58:00.264765] [D] [thread 115878] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:58:00.265122] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.265382] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.265534] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.265726] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.266169] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[15:58:00.266272] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.266443] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.266608] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.266799] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.266982] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.267413] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[15:58:00.267542] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.267576] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[15:58:00.267657] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.267690] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:58:00.267762] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.268088] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:58:00.268554] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.268765] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.268970] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.269433] [D] [thread 115878] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream7)[m
[36m[15:58:00.269639] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:58:00.270114] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.270533] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:58:00.270972] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.271253] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:58:00.271681] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.279678] [D] [thread 115878] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=3[m
[36m[15:58:00.279805] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.279828] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.279950] [D] [thread 115878] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.30:34141[m
[36m[15:58:00.279980] [D] [thread 115878] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:34141 queryId=1 querySubPlanId = 6[m
[36m[15:58:00.280429] [D] [thread 115878] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(44: {NetworkSinkDescriptor(partition=1::42::0::0;nodeLocation=tcp://192.168.2.11:38611)})
  CENTRALWINDOW(25)
    SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.34:35013 1::36::0::0})
    SOURCE(39,,NetworkSourceDescriptor{tcp://192.168.2.35:45023 1::39::0::0})
[m
[36m[15:58:00.280517] [D] [thread 115878] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:58:00.280707] [D] [thread 115878] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:58:00.281101] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.281309] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.281517] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.281672] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.282134] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[15:58:00.282273] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.282443] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:58:00.282625] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.282677] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:58:00.282777] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.283111] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.283258] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.283465] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.283619] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.284042] [D] [thread 115878] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.34:35013 1::36::0::0}[m
[36m[15:58:00.284156] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.284315] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.284713] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.284856] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.285003] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.285191] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.285595] [D] [thread 115878] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.35:45023 1::39::0::0}[m
[36m[15:58:00.285701] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.285855] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.286162] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.286298] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.286434] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.286620] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.293455] [D] [thread 115878] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=9[m
[36m[15:58:00.293537] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.293568] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.293688] [D] [thread 115878] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.37:44543[m
[36m[15:58:00.293718] [D] [thread 115878] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.37:44543 queryId=1 querySubPlanId = 7[m
[36m[15:58:00.294122] [D] [thread 115878] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.31:39953)})
  WATERMARKASSIGNER(20)
    PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
      SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
[m
[36m[15:58:00.294179] [D] [thread 115878] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:58:00.294358] [D] [thread 115878] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:58:00.294705] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.294963] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.295113] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.295300] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.295747] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[15:58:00.295850] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.296020] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.296231] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.296414] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.296616] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.297066] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[15:58:00.297199] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.297241] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[15:58:00.297327] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.297422] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:58:00.297492] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.297844] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:58:00.298279] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.298482] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.298607] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.299096] [D] [thread 115878] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream8)[m
[36m[15:58:00.299301] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:58:00.299765] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.300223] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:58:00.300685] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.301014] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:58:00.301404] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.309604] [D] [thread 115878] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=10[m
[36m[15:58:00.309686] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.309716] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.309836] [D] [thread 115878] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.38:37083[m
[36m[15:58:00.309865] [D] [thread 115878] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.38:37083 queryId=1 querySubPlanId = 8[m
[36m[15:58:00.310242] [D] [thread 115878] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(50: {NetworkSinkDescriptor(partition=1::48::0::0;nodeLocation=tcp://192.168.2.31:39953)})
  WATERMARKASSIGNER(23)
    PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
      SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[15:58:00.310333] [D] [thread 115878] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:58:00.310534] [D] [thread 115878] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:58:00.310835] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.311081] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.311286] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.311416] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.311862] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[15:58:00.311961] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.312130] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.312386] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.312582] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.312712] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.313163] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[15:58:00.313300] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.313335] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[15:58:00.313420] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.313452] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:58:00.313590] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.313890] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:58:00.314335] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.314564] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.314696] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.315148] [D] [thread 115878] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream9)[m
[36m[15:58:00.315371] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:58:00.315835] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.316305] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:58:00.316744] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.317076] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[15:58:00.317472] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.325520] [D] [thread 115878] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=4[m
[36m[15:58:00.325646] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.325667] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.325788] [D] [thread 115878] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.31:37113[m
[36m[15:58:00.325817] [D] [thread 115878] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:37113 queryId=1 querySubPlanId = 9[m
[36m[15:58:00.326173] [D] [thread 115878] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:38611)})
  CENTRALWINDOW(26)
    SOURCE(45,,NetworkSourceDescriptor{tcp://192.168.2.37:44791 1::45::0::0})
    SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.38:33623 1::48::0::0})
[m
[36m[15:58:00.326258] [D] [thread 115878] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:58:00.326444] [D] [thread 115878] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:58:00.326766] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.327034] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.327243] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.327395] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.327854] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[15:58:00.327993] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.328166] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:58:00.328386] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.328442] [D] [thread 115878] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[15:58:00.328562] [D] [thread 115878] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[15:58:00.328866] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.329014] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.329240] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.329399] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.329832] [D] [thread 115878] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.37:44791 1::45::0::0}[m
[36m[15:58:00.329946] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.330103] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.330472] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.330613] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.330762] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.330935] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.331324] [D] [thread 115878] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.38:33623 1::48::0::0}[m
[36m[15:58:00.331428] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.331579] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.331879] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.332015] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.332154] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.332405] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.339735] [D] [thread 115878] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=1[m
[36m[15:58:00.339818] [D] [thread 115878] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[15:58:00.339880] [D] [thread 115878] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[15:58:00.340002] [D] [thread 115878] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.11:42429[m
[36m[15:58:00.340033] [D] [thread 115878] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.11:42429 queryId=1 querySubPlanId = 10[m
[36m[15:58:00.340454] [D] [thread 115878] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(5: {FileSinkDescriptor()})
  SOURCE(33,,NetworkSourceDescriptor{tcp://192.168.2.12:45195 1::33::0::0})
  SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.30:44665 1::42::0::0})
  SOURCE(51,,NetworkSourceDescriptor{tcp://192.168.2.31:39953 1::51::0::0})
[m
[36m[15:58:00.340512] [D] [thread 115878] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[15:58:00.340672] [D] [thread 115878] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[15:58:00.341122] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.341333] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.341506] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.341715] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.342153] [D] [thread 115878] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:45195 1::33::0::0}[m
[36m[15:58:00.342272] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.342447] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.342789] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.342948] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.343106] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.343293] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.343702] [D] [thread 115878] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:44665 1::42::0::0}[m
[36m[15:58:00.343815] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.344009] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.344425] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.344602] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.344771] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.344984] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.345406] [D] [thread 115878] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:39953 1::51::0::0}[m
[36m[15:58:00.345519] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.345690] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.346023] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.346180] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.346323] [D] [thread 115878] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:00.346536] [D] [thread 115878] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[15:58:00.353795] [D] [thread 115878] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Register for 10 queues[m
[36m[15:58:01.177735] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:01.178064] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:01.329308] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:01.329633] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:01.701551] [D] [thread 115894] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[15:58:01.701750] [D] [thread 115894] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:58:01.702359] [D] [thread 115894] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[15:58:01.702616] [I] [thread 115894] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 54[m
[36m[15:58:01.702722] [D] [thread 115894] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:58:01.703240] [D] [thread 115894] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[15:58:01.703338] [D] [thread 115894] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:58:01.703756] [D] [thread 115894] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[15:58:01.705314] [D] [thread 115894] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[15:58:01.705440] [D] [thread 115894] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:58:01.705867] [D] [thread 115894] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[15:58:01.706037] [I] [thread 115894] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 55[m
[36m[15:58:01.706110] [D] [thread 115894] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:58:01.706487] [D] [thread 115894] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[15:58:01.706545] [D] [thread 115894] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:58:01.706877] [D] [thread 115894] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[15:58:01.708242] [D] [thread 115894] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[15:58:01.708373] [D] [thread 115894] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:58:01.708777] [D] [thread 115894] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[15:58:01.708934] [I] [thread 115894] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 56[m
[36m[15:58:01.709000] [D] [thread 115894] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:58:01.709354] [D] [thread 115894] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[15:58:01.709410] [D] [thread 115894] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:58:01.709715] [D] [thread 115894] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[15:58:01.710904] [I] [thread 115894] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 57[m
[36m[15:58:01.711006] [D] [thread 115894] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:58:01.711379] [D] [thread 115894] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[15:58:01.711438] [D] [thread 115894] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[15:58:01.711745] [D] [thread 115894] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[15:58:01.712938] [D] [thread 115894] [WorkerRPCServer.cpp:45] [RegisterQuery] WorkerRPCServer::RegisterQuery: got request for queryId: 1 plan=SINK(57: {FileSinkDescriptor()})
  SOURCE(56,,NetworkSourceDescriptor{tcp://192.168.2.12:45195 1::33::0::0})
  SOURCE(55,,NetworkSourceDescriptor{tcp://192.168.2.30:44665 1::42::0::0})
  SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.31:39953 1::51::0::0})
[m
[32m[15:58:01.713013] [I] [thread 115894] [NodeEngine.cpp:112] [registerQueryInNodeEngine] Creating ExecutableQueryPlan for 1 10 [m
[32m[15:58:01.713135] [I] [thread 115894] [NautilusQueryCompiler.cpp:59] [compileQuery] Compile Query with Nautilus[m
[36m[15:58:01.713432] [D] [thread 115894] [NautilusQueryCompiler.cpp:70] [compileQuery] compile query with id: 1 subPlanId: 10[m
Dumping queryPlan: [36m[15:58:01.713494] [D] [thread 115894] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-10-2023-11-10 15:58:01 - 1. LogicalQueryPlan[m
SINK(57: {FileSinkDescriptor()})
  SOURCE(56,,NetworkSourceDescriptor{tcp://192.168.2.12:45195 1::33::0::0})
  SOURCE(55,,NetworkSourceDescriptor{tcp://192.168.2.30:44665 1::42::0::0})
  SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.31:39953 1::51::0::0})

[32m[15:58:01.714041] [I] [thread 115894] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 58[m
[32m[15:58:01.714174] [I] [thread 115894] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[32m[15:58:01.714191] [I] [thread 115894] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[15:58:01.714199] [I] [thread 115894] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[15:58:01.714229] [I] [thread 115894] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:58:01.714240] [I] [thread 115894] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:58:01.714249] [I] [thread 115894] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[15:58:01.714334] [I] [thread 115894] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[15:58:01.714626] [I] [thread 115894] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 59[m
[36m[15:58:01.714792] [D] [thread 115894] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[32m[15:58:01.714826] [I] [thread 115894] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[15:58:01.714835] [I] [thread 115894] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[36m[15:58:01.714947] [D] [thread 115894] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[15:58:01.714965] [D] [thread 115894] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[15:58:01.715027] [D] [thread 115894] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[15:58:01.715073] [D] [thread 115894] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[15:58:01.715233] [I] [thread 115894] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 60[m
[36m[15:58:01.715394] [D] [thread 115894] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[15:58:01.715451] [D] [thread 115894] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[15:58:01.715510] [I] [thread 115894] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[15:58:01.715520] [I] [thread 115894] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[15:58:01.715538] [I] [thread 115894] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[15:58:01.715663] [D] [thread 115894] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[15:58:01.715683] [D] [thread 115894] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[15:58:01.715778] [I] [thread 115894] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 61[m
[36m[15:58:01.715906] [D] [thread 115894] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[15:58:01.715930] [D] [thread 115894] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[15:58:01.715983] [I] [thread 115894] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[15:58:01.715993] [I] [thread 115894] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[15:58:01.716004] [I] [thread 115894] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[15:58:01.716127] [D] [thread 115894] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[15:58:01.716147] [D] [thread 115894] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[15:58:01.716220] [I] [thread 115894] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 62[m
[36m[15:58:01.716381] [D] [thread 115894] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[15:58:01.716411] [D] [thread 115894] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[15:58:01.716470] [I] [thread 115894] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[15:58:01.716487] [I] [thread 115894] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[15:58:01.716503] [I] [thread 115894] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
Dumping queryPlan: [36m[15:58:01.716624] [D] [thread 115894] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[15:58:01.716642] [D] [thread 115894] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
PhysicalSinkOperator
  PhysicalMultiplexOperator
    PhysicalSourceOperator
    PhysicalSourceOperator
    PhysicalSourceOperator

[36m[15:58:01.716805] [D] [thread 115894] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-10-2023-11-10 15:58:01 - 2. PhysicalQueryPlan[m
[36m[15:58:01.717072] [D] [thread 115894] [DefaultPipeliningPhase.cpp:42] [apply] Pipeline: query id: 1 - 10[m
[32m[15:58:01.717598] [I] [thread 115894] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 59[m
[36m[15:58:01.717995] [D] [thread 115894] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSinkOperator as new root of the plan.[m
[36m[15:58:01.718054] [D] [thread 115894] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:58:01.718065] [D] [thread 115894] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[15:58:01.718763] [I] [thread 115894] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 60[m
[36m[15:58:01.719120] [D] [thread 115894] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[15:58:01.719174] [D] [thread 115894] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:58:01.719186] [D] [thread 115894] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[15:58:01.719482] [I] [thread 115894] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 61[m
[36m[15:58:01.719729] [D] [thread 115894] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[15:58:01.719767] [D] [thread 115894] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[15:58:01.719777] [D] [thread 115894] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[15:58:01.720029] [I] [thread 115894] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 62[m
[36m[15:58:01.720248] [D] [thread 115894] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[15:58:01.720287] [D] [thread 115894] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
Dumping pipelineQueryPlan: [36m[15:58:01.720307] [D] [thread 115894] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[15:58:01.720482] [D] [thread 115894] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-10-2023-11-10 15:58:01 - 3. AfterPipelinedQueryPlan[m
PipelineQueryPlan: 
- queryId: 1, subPlanId: 10, no. pipelines: 4
- pipeline: - Id: 1, Type: SinkPipelineType, Successors: , Predecessors: 3, 4, 5
- Queryplan: PhysicalSinkOperator

- pipeline: - Id: 3, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 4, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 5, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator


Dumping pipelineQueryPlan: [36m[15:58:01.721059] [D] [thread 115894] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-10-2023-11-10 15:58:01 - 4. AfterAddScanAndEmitPhase[m
PipelineQueryPlan: 
- queryId: 1, subPlanId: 10, no. pipelines: 4
- pipeline: - Id: 1, Type: SinkPipelineType, Successors: , Predecessors: 3, 4, 5
- Queryplan: PhysicalSinkOperator

- pipeline: - Id: 3, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 4, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 5, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator


[36m[15:58:01.721537] [D] [thread 115894] [NautilusCompilationPhase.cpp:38] [apply] Generate code for query plan 1 - 10[m
[36m[15:58:01.722000] [D] [thread 115894] [ConvertLogicalToPhysicalSink.cpp:43] [createDataSink] Convert sink  59[m
[32m[15:58:01.722128] [I] [thread 115894] [ConvertLogicalToPhysicalSink.cpp:157] [createDataSink] ConvertLogicalToPhysicalSink: Creating file sink for format=CSV_FORMAT[m
[36m[15:58:01.722620] [D] [thread 115894] [FileSink.cpp:56] [FileSink] FileSink: open file= /home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out[m
[32m[15:58:01.723419] [I] [thread 115894] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[15:58:01.724153] [D] [thread 115894] [DataSource.cpp:75] [DataSource] DataSource  33 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[15:58:01.725219] [I] [thread 115894] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[15:58:01.725618] [D] [thread 115894] [DataSource.cpp:75] [DataSource] DataSource  42 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[15:58:01.726125] [I] [thread 115894] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[15:58:01.726490] [D] [thread 115894] [DataSource.cpp:75] [DataSource] DataSource  51 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[15:58:01.727647] [D] [thread 115894] [NodeEngine.cpp:131] [registerQueryInNodeEngine] Runtime: registerQueryInNodeEngine query with queryId= 1 querySubPlanId = 10[m
[36m[15:58:01.727928] [D] [thread 115894] [NodeEngine.cpp:137] [registerQueryInNodeEngine] Runtime: register of QEP  10  as a singleton[m
[36m[15:58:01.727972] [D] [thread 115894] [QueryManagerLifecycle.cpp:38] [registerQuery] AbstractQueryManager::registerQueryInNodeEngine: query 1 subquery=10[m
[36m[15:58:01.728021] [D] [thread 115894] [QueryManagerLifecycle.cpp:48] [registerQuery] AbstractQueryManager: resolving sources for query  1  with sources= 3[m
[36m[15:58:01.728058] [D] [thread 115894] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  33  not found. Creating new element with with qep [m
[36m[15:58:01.728349] [D] [thread 115894] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  42  not found. Creating new element with with qep [m
[36m[15:58:01.728440] [D] [thread 115894] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  51  not found. Creating new element with with qep [m
[36m[15:58:01.728485] [D] [thread 115894] [QueryManagerLifecycle.cpp:68] [registerQuery] queryToStatisticsMap add for= 10  pair queryId= 1  subplanId= 10[m
2023-11-10 15:58:01.728 setup: queryId=1, querySubPlanId=10; 
[36m[15:58:01.728936] [D] [thread 115894] [ExecutableQueryPlan.cpp:126] [setup] QueryExecutionPlan: setup queryId=1 querySubPlanId=10[m
2023-11-10 15:58:01.729 start: queryId=1, querySubPlanId=10; 
[36m[15:58:01.729081] [D] [thread 115894] [ExecutableQueryPlan.cpp:144] [start] QueryExecutionPlan: start query=1 subplan=10[m
[36m[15:58:01.729398] [D] [thread 115894] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::33::0::0 from 192.168.2.12[m
[36m[15:58:01.729760] [D] [thread 115894] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::33::0::0=1[m
[36m[15:58:01.729825] [D] [thread 115894] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff4400fe20  started successfully[m
[36m[15:58:01.729895] [D] [thread 115894] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::42::0::0 from 192.168.2.30[m
[36m[15:58:01.729976] [D] [thread 115894] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::42::0::0=1[m
[36m[15:58:01.729995] [D] [thread 115894] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff44010060  started successfully[m
[36m[15:58:01.730036] [D] [thread 115894] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::51::0::0 from 192.168.2.31[m
[36m[15:58:01.730080] [D] [thread 115894] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::51::0::0=1[m
[36m[15:58:01.730094] [D] [thread 115894] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff44010420  started successfully[m
[36m[15:58:01.730153] [D] [thread 115894] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[15:58:01.730285] [D] [thread 115894] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=true type Initialize[m
[36m[15:58:01.730672] [D] [thread 115894] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=true type Initialize[m
[36m[15:58:01.731655] [D] [thread 115890] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[15:58:01.731655] [D] [thread 115892] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[15:58:01.731725] [D] [thread 115889] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[15:58:01.731655] [D] [thread 115891] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[15:58:01.732228] [D] [thread 115894] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::33::0::0[m
[36m[15:58:01.732636] [D] [thread 115894] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[15:58:01.732698] [D] [thread 115894] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff4400fe20  started successfully[m
[36m[15:58:01.732751] [D] [thread 115894] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:42 PartitionId: 0 SubpartitionID: 0[m
[36m[15:58:01.732831] [D] [thread 115894] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=true type Initialize[m
[36m[15:58:01.732994] [D] [thread 115894] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=true type Initialize[m
[36m[15:58:01.733443] [D] [thread 115889] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::42::0::0[m
[36m[15:58:01.733444] [D] [thread 115892] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::42::0::0[m
[36m[15:58:01.733496] [D] [thread 115890] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::42::0::0[m
[36m[15:58:01.733444] [D] [thread 115891] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::42::0::0[m
[36m[15:58:01.733626] [D] [thread 115894] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::42::0::0[m
[36m[15:58:01.733686] [D] [thread 115894] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:42 PartitionId: 0 SubpartitionID: 0[m
[36m[15:58:01.733706] [D] [thread 115894] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff44010060  started successfully[m
[36m[15:58:01.733737] [D] [thread 115894] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[15:58:01.733810] [D] [thread 115894] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=true type Initialize[m
[36m[15:58:01.733995] [D] [thread 115894] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=true type Initialize[m
[36m[15:58:01.734482] [D] [thread 115891] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[15:58:01.734482] [D] [thread 115889] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[15:58:01.734482] [D] [thread 115890] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[15:58:01.734607] [D] [thread 115892] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[15:58:01.734760] [D] [thread 115894] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::51::0::0[m
[36m[15:58:01.734935] [D] [thread 115894] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[15:58:01.735013] [D] [thread 115894] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff44010420  started successfully[m
[36m[15:58:01.735078] [D] [thread 115894] [QueryManagerLifecycle.cpp:158] [registerQuery] AbstractQueryManager: start sink  FileSink()[m
[36m[15:58:01.735388] [D] [thread 115894] [NodeEngine.cpp:144] [registerQueryInNodeEngine] Runtime: register of subqep  10  succeeded[m
[36m[15:58:01.735499] [D] [thread 115894] [WorkerRPCServer.cpp:54] [RegisterQuery] WorkerRPCServer::RegisterQuery: success[m
[36m[15:58:02.145675] [D] [thread 115888] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:38611): ClientAnnouncement received for channel 0:1::42::0::0[m
[32m[15:58:02.145876] [I] [thread 115888] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::42::0::0(threadId=0) Data[m
[36m[15:58:02.145896] [D] [thread 115887] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:38611): ClientAnnouncement received for channel 1:1::42::0::0[m
[32m[15:58:02.145967] [I] [thread 115887] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::42::0::0(threadId=1) Data[m
[36m[15:58:02.146004] [D] [thread 115888] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::42::0::0(threadId=0) REGISTERED[m
[36m[15:58:02.146039] [D] [thread 115887] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::42::0::0(threadId=1) REGISTERED[m
[36m[15:58:02.147014] [D] [thread 115887] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:38611): ClientAnnouncement received for channel 2:1::42::0::0[m
[32m[15:58:02.147127] [I] [thread 115887] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::42::0::0(threadId=2) Data[m
[36m[15:58:02.147222] [D] [thread 115887] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::42::0::0(threadId=2) REGISTERED[m
[36m[15:58:02.147315] [D] [thread 115888] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:38611): ClientAnnouncement received for channel 3:1::42::0::0[m
[32m[15:58:02.147382] [I] [thread 115888] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::42::0::0(threadId=3) Data[m
[36m[15:58:02.147485] [D] [thread 115888] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::42::0::0(threadId=3) REGISTERED[m
[36m[15:58:02.149711] [D] [thread 115887] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:38611): ClientAnnouncement received for channel 1:1::33::0::0[m
[32m[15:58:02.149825] [I] [thread 115887] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=1) Data[m
[36m[15:58:02.149904] [D] [thread 115887] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=1) REGISTERED[m
[36m[15:58:02.150739] [D] [thread 115888] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:38611): ClientAnnouncement received for channel 0:1::33::0::0[m
[36m[15:58:02.150739] [D] [thread 115887] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:38611): ClientAnnouncement received for channel 2:1::33::0::0[m
[32m[15:58:02.150845] [I] [thread 115887] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=2) Data[m
[32m[15:58:02.150845] [I] [thread 115888] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=0) Data[m
[36m[15:58:02.150951] [D] [thread 115888] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=0) REGISTERED[m
[36m[15:58:02.150938] [D] [thread 115887] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=2) REGISTERED[m
[36m[15:58:02.151073] [D] [thread 115888] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:38611): ClientAnnouncement received for channel 3:1::33::0::0[m
[32m[15:58:02.151116] [I] [thread 115888] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=3) Data[m
[36m[15:58:02.151162] [D] [thread 115888] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=3) REGISTERED[m
[36m[15:58:02.162493] [D] [thread 115887] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:38611): ClientAnnouncement received for channel 3:1::51::0::0[m
[36m[15:58:02.162501] [D] [thread 115888] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:38611): ClientAnnouncement received for channel 2:1::51::0::0[m
[32m[15:58:02.162628] [I] [thread 115888] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) Data[m
[32m[15:58:02.162629] [I] [thread 115887] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) Data[m
[36m[15:58:02.162743] [D] [thread 115888] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=2) REGISTERED[m
[36m[15:58:02.162760] [D] [thread 115887] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=3) REGISTERED[m
[36m[15:58:02.164484] [D] [thread 115888] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:38611): ClientAnnouncement received for channel 0:1::51::0::0[m
[36m[15:58:02.164481] [D] [thread 115887] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:38611): ClientAnnouncement received for channel 1:1::51::0::0[m
[32m[15:58:02.164604] [I] [thread 115888] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) Data[m
[32m[15:58:02.164604] [I] [thread 115887] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) Data[m
[36m[15:58:02.164709] [D] [thread 115888] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=0) REGISTERED[m
[36m[15:58:02.164725] [D] [thread 115887] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=1) REGISTERED[m
[36m[15:58:02.330854] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:02.666328] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:02.666711] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:03.175513] [D] [thread 115878] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Register succeed[m
[36m[15:58:03.175626] [D] [thread 115878] [QueryDeploymentPhase.cpp:215] [deployQuery] QueryDeploymentPhase: Finished deploying execution plan for query with Id 1 [m
[36m[15:58:03.176281] [D] [thread 115878] [QueryDeploymentPhase.cpp:94] [execute] QueryDeploymentPhase: deployment for shared query 1 successful[m
[36m[15:58:03.176482] [D] [thread 115878] [QueryDeploymentPhase.cpp:101] [execute] QueryService: start query[m
[36m[15:58:03.176530] [D] [thread 115878] [QueryDeploymentPhase.cpp:219] [startQuery] QueryDeploymentPhase::startQuery queryId= 1[m
[36m[15:58:03.176749] [D] [thread 115878] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=5 and IP=192.168.2.32[m
[36m[15:58:03.176802] [D] [thread 115878] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.32:41755 queryId=1[m
[36m[15:58:03.181765] [D] [thread 115878] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=6 and IP=192.168.2.33[m
[36m[15:58:03.181850] [D] [thread 115878] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.33:34167 queryId=1[m
[36m[15:58:03.187007] [D] [thread 115878] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=2 and IP=192.168.2.12[m
[36m[15:58:03.187091] [D] [thread 115878] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.12:36761 queryId=1[m
[36m[15:58:03.191872] [D] [thread 115878] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=7 and IP=192.168.2.34[m
[36m[15:58:03.191956] [D] [thread 115878] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.34:43035 queryId=1[m
[36m[15:58:03.196713] [D] [thread 115878] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=8 and IP=192.168.2.35[m
[36m[15:58:03.196788] [D] [thread 115878] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.35:41675 queryId=1[m
[36m[15:58:03.201607] [D] [thread 115878] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=3 and IP=192.168.2.30[m
[36m[15:58:03.201685] [D] [thread 115878] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.30:34141 queryId=1[m
[36m[15:58:03.206433] [D] [thread 115878] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=9 and IP=192.168.2.37[m
[36m[15:58:03.206558] [D] [thread 115878] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.37:44543 queryId=1[m
[36m[15:58:03.211249] [D] [thread 115878] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=10 and IP=192.168.2.38[m
[36m[15:58:03.211333] [D] [thread 115878] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.38:37083 queryId=1[m
[36m[15:58:03.216013] [D] [thread 115878] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=4 and IP=192.168.2.31[m
[36m[15:58:03.216099] [D] [thread 115878] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.31:37113 queryId=1[m
[36m[15:58:03.220839] [D] [thread 115878] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=1 and IP=192.168.2.11[m
[36m[15:58:03.220918] [D] [thread 115878] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.11:42429 queryId=1[m
[36m[15:58:03.225657] [D] [thread 115878] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Start for 10 queues[m
[36m[15:58:03.273912] [D] [thread 115950] [WorkerRPCServer.cpp:77] [StartQuery] WorkerRPCServer::StartQuery: got request for 1[m
[36m[15:58:03.274015] [D] [thread 115950] [NodeEngine.cpp:158] [startQuery] Runtime: startQuery= 1[m
[36m[15:58:03.274149] [D] [thread 115950] [QueryManagerLifecycle.cpp:183] [startQuery] AbstractQueryManager::startQuery: query id  10   1[m
[36m[15:58:03.274278] [D] [thread 115950] [QueryStatistics.cpp:48] [setTimestampQueryStart] QueryStatistics::setTimestampQueryStart called with  1699631883274[m
[36m[15:58:03.274301] [D] [thread 115950] [NodeEngine.cpp:170] [startQuery] Runtime: start of QEP  10  succeeded[m
[36m[15:58:03.274325] [D] [thread 115950] [WorkerRPCServer.cpp:80] [StartQuery] WorkerRPCServer::StartQuery: success[m
[36m[15:58:03.316939] [D] [thread 115878] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Start succeed[m
[36m[15:58:03.317044] [D] [thread 115878] [QueryDeploymentPhase.cpp:238] [startQuery] QueryDeploymentPhase: Finished starting execution plan for query with Id 1[m
[32m[15:58:03.317962] [I] [thread 115878] [GlobalQueryPlan.cpp:124] [removeFailedOrStoppedSharedQueryPlans] GlobalQueryPlan: remove empty metadata information.[m
[36m[15:58:03.318148] [D] [thread 115878] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[15:58:03.667975] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:03.769877] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:03.770239] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:04.771473] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:05.378325] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:05.378947] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:05.379834] [D] [thread 115961] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:58:05.379955] [I] [thread 115961] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:05.379977] [I] [thread 115961] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:58:05.380186] [I] [thread 115961] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:05.380225] [I] [thread 115961] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:58:05.541263] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:05.541848] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:06.543089] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:07.217565] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:07.217898] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:07.218983] [D] [thread 115968] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:58:07.219080] [I] [thread 115968] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:07.219100] [I] [thread 115968] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:58:07.219217] [I] [thread 115968] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:07.219232] [I] [thread 115968] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:58:07.373356] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:07.373717] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:08.374960] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:08.998583] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:08.999173] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:08.999930] [D] [thread 115974] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:58:09.000026] [I] [thread 115974] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:09.000045] [I] [thread 115974] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:58:09.000163] [I] [thread 115974] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:09.000177] [I] [thread 115974] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:58:09.148799] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:09.149410] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:10.150727] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:10.823399] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:10.824015] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:10.824751] [D] [thread 115979] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:58:10.824847] [I] [thread 115979] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:10.824865] [I] [thread 115979] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:58:10.824984] [I] [thread 115979] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:10.824999] [I] [thread 115979] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:58:10.977932] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:10.978452] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:11.979725] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:12.641969] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:12.642578] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:12.643284] [D] [thread 115984] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:58:12.643379] [I] [thread 115984] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:12.643398] [I] [thread 115984] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:58:12.643514] [I] [thread 115984] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:12.643528] [I] [thread 115984] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:58:12.797189] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:12.797810] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:13.799080] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:14.436753] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:14.437320] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:14.438126] [D] [thread 115989] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:58:14.438217] [I] [thread 115989] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:14.438236] [I] [thread 115989] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:58:14.438356] [I] [thread 115989] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:14.438370] [I] [thread 115989] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:58:14.591882] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:14.592404] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:15.593683] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:16.247399] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:16.247968] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:16.249010] [D] [thread 115995] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:58:16.249105] [I] [thread 115995] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:16.249124] [I] [thread 115995] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:58:16.249239] [I] [thread 115995] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:16.249254] [I] [thread 115995] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:58:16.405254] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:16.405842] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:17.407099] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:18.041389] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:18.042059] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:18.042803] [D] [thread 116002] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:58:18.042878] [I] [thread 116002] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:18.042894] [I] [thread 116002] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:58:18.043108] [I] [thread 116002] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:18.043126] [I] [thread 116002] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:58:18.198439] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:18.198899] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:19.200140] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:19.865746] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:19.866080] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:19.867737] [D] [thread 116007] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:58:19.867832] [I] [thread 116007] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:19.867851] [I] [thread 116007] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:58:19.867970] [I] [thread 116007] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:19.867986] [I] [thread 116007] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:58:20.021133] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:20.021493] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:21.022709] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:21.681875] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:21.682245] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:21.683837] [D] [thread 116012] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:58:21.683933] [I] [thread 116012] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:21.683952] [I] [thread 116012] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:58:21.684074] [I] [thread 116012] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:21.684089] [I] [thread 116012] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:58:21.855072] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:21.855409] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:22.856708] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:23.552383] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:23.552697] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:23.553722] [D] [thread 116017] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:58:23.553803] [I] [thread 116017] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:23.553821] [I] [thread 116017] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:58:23.553931] [I] [thread 116017] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:23.553944] [I] [thread 116017] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:58:23.705665] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:23.705993] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:24.707211] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:25.497838] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:25.498207] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:25.499173] [D] [thread 116023] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:58:25.499265] [I] [thread 116023] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:25.499283] [I] [thread 116023] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:58:25.499399] [I] [thread 116023] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:25.499413] [I] [thread 116023] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:58:25.684422] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:25.684798] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:26.686032] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:27.363062] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:27.363609] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:27.364640] [D] [thread 116028] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:58:27.364758] [I] [thread 116028] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:27.364777] [I] [thread 116028] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:58:27.364906] [I] [thread 116028] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:27.364977] [I] [thread 116028] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:58:27.514790] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:27.515237] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:28.516477] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:29.189491] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:29.189837] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:29.191465] [D] [thread 116033] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:58:29.191546] [I] [thread 116033] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:29.191561] [I] [thread 116033] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:58:29.191669] [I] [thread 116033] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:29.191684] [I] [thread 116033] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:58:29.350813] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:29.351130] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:30.352407] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:30.993136] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:30.993459] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:30.994544] [D] [thread 116038] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:58:30.994680] [I] [thread 116038] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:30.994701] [I] [thread 116038] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:58:30.994821] [I] [thread 116038] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:30.994835] [I] [thread 116038] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:58:31.153115] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:31.153466] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:32.154719] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:32.866280] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:32.866607] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:32.867602] [D] [thread 116043] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:58:32.867693] [I] [thread 116043] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:32.867712] [I] [thread 116043] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:58:32.867828] [I] [thread 116043] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:32.867842] [I] [thread 116043] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:58:33.018055] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:33.018423] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:34.019615] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:34.689378] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:34.690000] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:34.690877] [D] [thread 116048] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:58:34.690974] [I] [thread 116048] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:34.690992] [I] [thread 116048] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:58:34.691110] [I] [thread 116048] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:34.691124] [I] [thread 116048] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:58:34.845281] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:34.845755] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:35.847066] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:36.543043] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:36.543641] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:36.545348] [D] [thread 116053] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:58:36.545530] [I] [thread 116053] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:36.545557] [I] [thread 116053] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:58:36.545787] [I] [thread 116053] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:36.545882] [I] [thread 116053] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:58:36.695783] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:36.696147] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:37.697369] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:38.367133] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:38.367508] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:38.368515] [D] [thread 116059] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:58:38.368605] [I] [thread 116059] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:38.368623] [I] [thread 116059] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:58:38.368741] [I] [thread 116059] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:38.368754] [I] [thread 116059] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:58:38.525151] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:38.525524] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:39.526759] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:40.266279] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:40.266957] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:40.267695] [D] [thread 116065] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:58:40.267768] [I] [thread 116065] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:40.267784] [I] [thread 116065] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:58:40.267893] [I] [thread 116065] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:40.267905] [I] [thread 116065] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:58:40.417171] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:40.417742] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:41.419112] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:42.133790] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:42.134121] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:42.135385] [D] [thread 116070] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:58:42.135490] [I] [thread 116070] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:42.135510] [I] [thread 116070] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:58:42.135627] [I] [thread 116070] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:42.135640] [I] [thread 116070] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:58:42.288583] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:42.288916] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:43.290150] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:43.963356] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:43.963964] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:43.964735] [D] [thread 116076] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:58:43.964830] [I] [thread 116076] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:43.964850] [I] [thread 116076] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:58:43.964970] [I] [thread 116076] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:43.964984] [I] [thread 116076] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:58:44.118146] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:44.118634] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:45.120039] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:45.771603] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:45.772171] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:45.772960] [D] [thread 116082] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:58:45.773056] [I] [thread 116082] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:45.773075] [I] [thread 116082] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:58:45.773191] [I] [thread 116082] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:45.773205] [I] [thread 116082] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:58:45.922322] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:45.922907] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:46.924193] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:47.570749] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:47.571203] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:47.572113] [D] [thread 116088] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:58:47.572208] [I] [thread 116088] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:47.572225] [I] [thread 116088] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:58:47.572377] [I] [thread 116088] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:47.572396] [I] [thread 116088] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:58:47.755815] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:47.756270] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:48.757644] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:49.617361] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:49.617701] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:49.619448] [D] [thread 116093] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:58:49.619566] [I] [thread 116093] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:49.619589] [I] [thread 116093] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:58:49.619729] [I] [thread 116093] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:49.619754] [I] [thread 116093] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:58:49.781627] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:49.781949] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:50.783165] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:51.410802] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:51.411131] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:51.412164] [D] [thread 116099] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:58:51.412257] [I] [thread 116099] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:51.412276] [I] [thread 116099] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:58:51.412433] [I] [thread 116099] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:51.412454] [I] [thread 116099] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:58:51.568979] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:51.569301] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:52.570537] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:53.205257] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:53.205667] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:53.207264] [D] [thread 116104] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:58:53.207361] [I] [thread 116104] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:53.207380] [I] [thread 116104] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:58:53.207500] [I] [thread 116104] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:53.207514] [I] [thread 116104] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:58:53.374600] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:53.374952] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:54.376188] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:55.037962] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:55.038283] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:55.039256] [D] [thread 116111] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:58:55.039349] [I] [thread 116111] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:55.039368] [I] [thread 116111] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:58:55.039487] [I] [thread 116111] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:55.039501] [I] [thread 116111] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:58:55.196685] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:55.197020] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:56.198266] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:56.857728] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:56.858073] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:56.859066] [D] [thread 116117] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:58:56.859164] [I] [thread 116117] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:56.859183] [I] [thread 116117] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:58:56.859300] [I] [thread 116117] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:56.859315] [I] [thread 116117] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:58:57.017908] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:57.018281] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:58.019534] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:58.680626] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:58.681278] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:58.682597] [D] [thread 116122] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:58:58.682706] [I] [thread 116122] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:58.682726] [I] [thread 116122] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:58:58.682857] [I] [thread 116122] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:58:58.682885] [I] [thread 116122] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:58:58.839122] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:58.839575] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:58:58.910543] [D] [thread 115892] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[15:58:58.913717] [D] [thread 115892] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out following content 10620000,10680000,54,1699631883284,1699631938910
10620000,10680000,63,1699631883294,1699631938910
[m
[36m[15:58:58.914255] [D] [thread 115892] [QueryStatistics.cpp:54] [setTimestampFirstProcessedTask] QueryStatistics::setTimestampFirstProcessedTask called with  1699631938914[m
[36m[15:58:59.840788] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:00.227857] [D] [thread 115890] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[15:59:00.227967] [D] [thread 115890] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:59:00.229658] [D] [thread 115890] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out following content 10620000,10680000,47,1699631883232,1699631940228
10620000,10680000,24,1699631883241,1699631940228
[m
[36m[15:59:00.486730] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:00.487284] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:00.488144] [D] [thread 116128] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:00.488240] [I] [thread 116128] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:00.488259] [I] [thread 116128] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:00.488415] [I] [thread 116128] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:00.488435] [I] [thread 116128] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:00.642615] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:00.643164] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:01.644514] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:02.300866] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:02.301473] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:02.302338] [D] [thread 116133] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:02.302412] [I] [thread 116133] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:02.302429] [I] [thread 116133] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:02.302538] [I] [thread 116133] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:02.302551] [I] [thread 116133] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:02.455415] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:02.455964] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:02.589980] [D] [thread 115889] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[15:59:02.590072] [D] [thread 115889] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[15:59:02.591673] [D] [thread 115889] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out following content 10620000,10680000,13,1699631883304,1699631942590
10620000,10680000,100,1699631883314,1699631942590
[m
[36m[15:59:03.457284] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:04.069992] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:04.070556] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:04.071358] [D] [thread 116139] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:04.071452] [I] [thread 116139] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:04.071469] [I] [thread 116139] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:04.071585] [I] [thread 116139] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:04.071601] [I] [thread 116139] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:04.226999] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:04.227465] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:05.228773] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:05.869602] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:05.870202] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:05.870937] [D] [thread 116145] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:05.871029] [I] [thread 116145] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:05.871048] [I] [thread 116145] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:05.871167] [I] [thread 116145] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:05.871181] [I] [thread 116145] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:06.017446] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:06.018035] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:07.019398] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:07.621142] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:07.621794] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:07.622487] [D] [thread 116151] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:07.622569] [I] [thread 116151] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:07.622585] [I] [thread 116151] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:07.622697] [I] [thread 116151] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:07.622710] [I] [thread 116151] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:07.773477] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:07.774078] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:08.775322] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:09.455618] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:09.456098] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:09.456976] [D] [thread 116156] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:09.457068] [I] [thread 116156] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:09.457087] [I] [thread 116156] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:09.457206] [I] [thread 116156] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:09.457221] [I] [thread 116156] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:09.606484] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:09.606904] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:10.608204] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:11.210090] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:11.210737] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:11.211461] [D] [thread 116161] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:11.211555] [I] [thread 116161] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:11.211573] [I] [thread 116161] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:11.211691] [I] [thread 116161] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:11.211705] [I] [thread 116161] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:11.365188] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:11.365786] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:12.367060] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:13.063788] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:13.064470] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:13.065185] [D] [thread 116166] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:13.065255] [I] [thread 116166] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:13.065272] [I] [thread 116166] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:13.065383] [I] [thread 116166] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:13.065397] [I] [thread 116166] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:13.223221] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:13.223550] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:14.224785] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:14.865102] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:14.865659] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:14.866436] [D] [thread 116171] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:14.866535] [I] [thread 116171] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:14.866554] [I] [thread 116171] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:14.866681] [I] [thread 116171] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:14.866698] [I] [thread 116171] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:15.012812] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:15.013329] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:16.014616] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:16.658007] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:16.658353] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:16.659985] [D] [thread 116176] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:16.660081] [I] [thread 116176] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:16.660100] [I] [thread 116176] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:16.660217] [I] [thread 116176] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:16.660231] [I] [thread 116176] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:16.816776] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:16.817102] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:17.818172] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:18.477115] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:18.477767] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:18.478710] [D] [thread 116181] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:18.478802] [I] [thread 116181] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:18.478820] [I] [thread 116181] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:18.478941] [I] [thread 116181] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:18.478955] [I] [thread 116181] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:18.628373] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:18.628896] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:19.630190] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:20.313652] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:20.314320] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:20.315008] [D] [thread 116186] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:20.315102] [I] [thread 116186] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:20.315121] [I] [thread 116186] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:20.315238] [I] [thread 116186] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:20.315252] [I] [thread 116186] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:20.470109] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:20.470672] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:21.472075] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:22.131768] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:22.132416] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:22.133187] [D] [thread 116192] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:22.133279] [I] [thread 116192] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:22.133298] [I] [thread 116192] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:22.133417] [I] [thread 116192] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:22.133431] [I] [thread 116192] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:22.289501] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:22.290071] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:23.291331] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:23.917295] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:23.917946] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:23.918678] [D] [thread 116197] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:23.918804] [I] [thread 116197] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:23.918824] [I] [thread 116197] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:23.918963] [I] [thread 116197] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:23.918979] [I] [thread 116197] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:24.077690] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:24.078155] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:25.079456] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:25.717098] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:25.717752] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:25.718433] [D] [thread 116202] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:25.718527] [I] [thread 116202] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:25.718546] [I] [thread 116202] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:25.718661] [I] [thread 116202] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:25.718676] [I] [thread 116202] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:25.874874] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:25.875209] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:26.876503] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:27.538071] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:27.538455] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:27.539392] [D] [thread 116208] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:27.539487] [I] [thread 116208] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:27.539506] [I] [thread 116208] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:27.539623] [I] [thread 116208] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:27.539638] [I] [thread 116208] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:27.695061] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:27.695388] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:28.696606] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:29.335231] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:29.335588] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:29.336604] [D] [thread 116214] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:29.336680] [I] [thread 116214] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:29.336696] [I] [thread 116214] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:29.336804] [I] [thread 116214] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:29.336816] [I] [thread 116214] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:29.486341] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:29.486699] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:30.487953] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:31.076974] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:31.077306] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:31.078352] [D] [thread 116219] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:31.078459] [I] [thread 116219] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:31.078479] [I] [thread 116219] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:31.078607] [I] [thread 116219] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:31.078626] [I] [thread 116219] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:31.229380] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:31.229697] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:32.230943] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:32.853673] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:32.854036] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:32.854991] [D] [thread 116224] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:32.855082] [I] [thread 116224] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:32.855101] [I] [thread 116224] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:32.855220] [I] [thread 116224] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:32.855234] [I] [thread 116224] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:33.008432] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:33.008794] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:34.010008] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:34.628194] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:34.628542] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:34.629669] [D] [thread 116229] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:34.629792] [I] [thread 116229] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:34.629811] [I] [thread 116229] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:34.629941] [I] [thread 116229] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:34.629971] [I] [thread 116229] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:34.785058] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:34.785417] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:35.786565] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:36.430462] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:36.430788] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:36.431780] [D] [thread 116234] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:36.431879] [I] [thread 116234] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:36.431898] [I] [thread 116234] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:36.432018] [I] [thread 116234] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:36.432033] [I] [thread 116234] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:36.586297] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:36.586676] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:37.587911] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:38.232808] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:38.233148] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:38.234163] [D] [thread 116239] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:38.234257] [I] [thread 116239] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:38.234277] [I] [thread 116239] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:38.234396] [I] [thread 116239] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:38.234410] [I] [thread 116239] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:38.382502] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:38.382827] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:39.384051] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:40.035065] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:40.035401] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:40.036392] [D] [thread 116244] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:40.036467] [I] [thread 116244] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:40.036483] [I] [thread 116244] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:40.036593] [I] [thread 116244] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:40.036606] [I] [thread 116244] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:40.190124] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:40.190488] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:41.191737] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:41.794346] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:41.794686] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:41.795874] [D] [thread 116251] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:41.795971] [I] [thread 116251] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:41.795990] [I] [thread 116251] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:41.796107] [I] [thread 116251] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:41.796121] [I] [thread 116251] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:41.949592] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:41.949932] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:42.951188] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:43.597781] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:43.598118] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:43.599340] [D] [thread 116256] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:43.599438] [I] [thread 116256] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:43.599456] [I] [thread 116256] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:43.599572] [I] [thread 116256] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:43.599586] [I] [thread 116256] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:43.754189] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:43.754535] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:44.755784] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:45.403675] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:45.404274] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:45.405078] [D] [thread 116261] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:45.405149] [I] [thread 116261] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:45.405167] [I] [thread 116261] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:45.405275] [I] [thread 116261] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:45.405289] [I] [thread 116261] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:45.553017] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:45.553583] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:46.554872] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:47.254073] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:47.254611] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:47.255420] [D] [thread 116267] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:47.255512] [I] [thread 116267] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:47.255531] [I] [thread 116267] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:47.255647] [I] [thread 116267] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:47.255661] [I] [thread 116267] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:47.418290] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:47.418775] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:48.420042] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:49.025936] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:49.026479] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:49.027297] [D] [thread 116272] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:49.027392] [I] [thread 116272] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:49.027411] [I] [thread 116272] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:49.027529] [I] [thread 116272] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:49.027543] [I] [thread 116272] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:49.180946] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:49.181424] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:50.182803] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:50.781635] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:50.782233] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:50.783053] [D] [thread 116277] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:50.783152] [I] [thread 116277] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:50.783171] [I] [thread 116277] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:50.783289] [I] [thread 116277] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:50.783304] [I] [thread 116277] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:50.941074] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:50.941655] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:51.942933] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:52.546407] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:52.546992] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:52.547797] [D] [thread 116282] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:52.547885] [I] [thread 116282] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:52.547903] [I] [thread 116282] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:52.548022] [I] [thread 116282] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:52.548036] [I] [thread 116282] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:52.698198] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:52.698657] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:53.699957] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:54.385300] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:54.385640] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:54.387378] [D] [thread 116287] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:54.387488] [I] [thread 116287] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:54.387507] [I] [thread 116287] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:54.387624] [I] [thread 116287] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:54.387649] [I] [thread 116287] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:54.537697] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:54.538039] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:55.539239] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:56.198480] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:56.198818] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:56.199994] [D] [thread 116293] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:56.200070] [I] [thread 116293] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:56.200086] [I] [thread 116293] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:56.200194] [I] [thread 116293] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:56.200207] [I] [thread 116293] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:56.349750] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:56.350107] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:57.351343] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:57.999386] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:57.999794] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:58.001358] [D] [thread 116300] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:58.001456] [I] [thread 116300] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:58.001475] [I] [thread 116300] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:58.001592] [I] [thread 116300] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:58.001607] [I] [thread 116300] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:58.153792] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:58.154117] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:59.155365] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:59.827382] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:59.827742] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:59.828767] [D] [thread 116307] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[15:59:59.828863] [I] [thread 116307] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:59.828882] [I] [thread 116307] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[15:59:59.828998] [I] [thread 116307] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[15:59:59.829012] [I] [thread 116307] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[15:59:59.981179] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[15:59:59.981521] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:00.982767] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:01.631067] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:01.631409] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:01.632678] [D] [thread 116313] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:01.632767] [I] [thread 116313] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:01.632786] [I] [thread 116313] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:01.632907] [I] [thread 116313] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:01.632920] [I] [thread 116313] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:01.781946] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:01.782312] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:02.783814] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:03.489756] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:03.490100] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:03.491335] [D] [thread 116320] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:03.491439] [I] [thread 116320] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:03.491458] [I] [thread 116320] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:03.491574] [I] [thread 116320] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:03.491587] [I] [thread 116320] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:03.639883] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:03.640200] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:04.641406] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:05.400805] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:05.401127] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:05.402221] [D] [thread 116327] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:05.402321] [I] [thread 116327] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:05.402340] [I] [thread 116327] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:05.402460] [I] [thread 116327] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:05.402484] [I] [thread 116327] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:05.558774] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:05.559124] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:06.560417] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:07.173470] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:07.173781] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:07.174903] [D] [thread 116333] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:07.175084] [I] [thread 116333] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:07.175107] [I] [thread 116333] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:07.175229] [I] [thread 116333] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:07.175242] [I] [thread 116333] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:07.324399] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:07.324773] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:08.325924] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:08.981120] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:08.981582] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:08.982428] [D] [thread 116338] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:08.982520] [I] [thread 116338] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:08.982539] [I] [thread 116338] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:08.982657] [I] [thread 116338] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:08.982672] [I] [thread 116338] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:09.137451] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:09.137916] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:10.139202] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:10.773726] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:10.774431] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:10.775192] [D] [thread 116344] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:10.775287] [I] [thread 116344] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:10.775307] [I] [thread 116344] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:10.775422] [I] [thread 116344] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:10.775436] [I] [thread 116344] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:10.934484] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:10.934916] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:11.936212] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:12.391738] [D] [thread 115891] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[16:00:12.391856] [D] [thread 115891] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[16:00:12.393636] [D] [thread 115891] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out following content 10680000,10740000,54,1699631937306,1699632012391
10680000,10740000,63,1699631938720,1699632012391
[m
[36m[16:00:12.600154] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:12.600867] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:12.601578] [D] [thread 116351] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:12.601670] [I] [thread 116351] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:12.601688] [I] [thread 116351] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:12.601805] [I] [thread 116351] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:12.601820] [I] [thread 116351] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:12.750880] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:12.751434] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:13.752716] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:14.477903] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:14.478440] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:14.479260] [D] [thread 116356] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:14.479353] [I] [thread 116356] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:14.479373] [I] [thread 116356] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:14.479489] [I] [thread 116356] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:14.479505] [I] [thread 116356] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:14.627742] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:14.628077] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:15.629285] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:16.289935] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:16.290637] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:16.291345] [D] [thread 116361] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:16.291437] [I] [thread 116361] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:16.291457] [I] [thread 116361] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:16.291574] [I] [thread 116361] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:16.291589] [I] [thread 116361] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:16.322801] [D] [thread 115892] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[16:00:16.322913] [D] [thread 115892] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[16:00:16.324954] [D] [thread 115892] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out following content 10680000,10740000,47,1699631939992,1699632016322
10680000,10740000,24,1699631940039,1699632016322
[m
[36m[16:00:16.398910] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:16.399456] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:17.400686] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:18.401954] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:18.415461] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:18.415784] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:18.416785] [D] [thread 116367] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:18.416880] [I] [thread 116367] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:18.416899] [I] [thread 116367] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:18.417018] [I] [thread 116367] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:18.417034] [I] [thread 116367] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:18.586457] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:18.586787] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:19.588154] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:20.161849] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:20.162191] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:20.163339] [D] [thread 116373] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:20.163434] [I] [thread 116373] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:20.163453] [I] [thread 116373] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:20.163570] [I] [thread 116373] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:20.163584] [I] [thread 116373] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:20.310581] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:20.310937] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:20.927437] [D] [thread 115890] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[16:00:20.927542] [D] [thread 115890] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[16:00:20.929188] [D] [thread 115890] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out following content 10680000,10740000,13,1699631942415,1699632020927
10680000,10740000,100,1699631936495,1699632020927
[m
[36m[16:00:21.312229] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:22.001965] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:22.002315] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:22.003420] [D] [thread 116378] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:22.003524] [I] [thread 116378] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:22.003543] [I] [thread 116378] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:22.003661] [I] [thread 116378] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:22.003675] [I] [thread 116378] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:22.158108] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:22.158494] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:23.159763] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:23.789786] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:23.790220] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:23.791262] [D] [thread 116383] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:23.791360] [I] [thread 116383] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:23.791379] [I] [thread 116383] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:23.791496] [I] [thread 116383] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:23.791509] [I] [thread 116383] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:23.941651] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:23.942141] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:24.943393] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:25.608367] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:25.609217] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:25.610048] [D] [thread 116388] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:25.610160] [I] [thread 116388] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:25.610180] [I] [thread 116388] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:25.610310] [I] [thread 116388] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:25.610326] [I] [thread 116388] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:25.759761] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:25.760457] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:26.761789] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:27.475742] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:27.476354] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:27.477227] [D] [thread 116394] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:27.477320] [I] [thread 116394] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:27.477339] [I] [thread 116394] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:27.477455] [I] [thread 116394] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:27.477470] [I] [thread 116394] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:27.637937] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:27.638454] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:28.639714] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:29.499540] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:29.500148] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:29.500886] [D] [thread 116400] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:29.500957] [I] [thread 116400] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:29.500974] [I] [thread 116400] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:29.501082] [I] [thread 116400] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:29.501095] [I] [thread 116400] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:29.652871] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:29.653476] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:30.654761] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:31.352782] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:31.353243] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:31.354081] [D] [thread 116406] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:31.354172] [I] [thread 116406] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:31.354192] [I] [thread 116406] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:31.354308] [I] [thread 116406] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:31.354321] [I] [thread 116406] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:31.502595] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:31.503060] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:32.504451] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:33.118554] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:33.119124] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:33.119945] [D] [thread 116413] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:33.120040] [I] [thread 116413] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:33.120059] [I] [thread 116413] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:33.120178] [I] [thread 116413] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:33.120191] [I] [thread 116413] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:33.272438] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:33.272972] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:34.274234] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:34.935454] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:34.936179] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:34.937092] [D] [thread 116419] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:34.937185] [I] [thread 116419] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:34.937204] [I] [thread 116419] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:34.937321] [I] [thread 116419] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:34.937338] [I] [thread 116419] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:35.090218] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:35.090767] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:36.092085] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:37.054719] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:37.055300] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:37.056114] [D] [thread 116426] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:37.056207] [I] [thread 116426] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:37.056226] [I] [thread 116426] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:37.056383] [I] [thread 116426] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:37.056401] [I] [thread 116426] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:37.208835] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:37.209286] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:38.210551] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:38.906691] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:38.907023] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:38.908055] [D] [thread 116432] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:38.908149] [I] [thread 116432] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:38.908169] [I] [thread 116432] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:38.908288] [I] [thread 116432] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:38.908304] [I] [thread 116432] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:39.069706] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:39.070083] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:40.071338] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:40.673672] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:40.674010] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:40.675192] [D] [thread 116438] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:40.675289] [I] [thread 116438] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:40.675308] [I] [thread 116438] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:40.675427] [I] [thread 116438] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:40.675441] [I] [thread 116438] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:40.826349] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:40.826738] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:41.827972] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:42.506723] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:42.507056] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:42.508043] [D] [thread 116443] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:42.508136] [I] [thread 116443] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:42.508155] [I] [thread 116443] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:42.508273] [I] [thread 116443] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:42.508288] [I] [thread 116443] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:42.661628] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:42.661969] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:43.663218] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:44.505912] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:44.506262] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:44.507466] [D] [thread 116448] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:44.507561] [I] [thread 116448] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:44.507581] [I] [thread 116448] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:44.507702] [I] [thread 116448] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:44.507715] [I] [thread 116448] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:44.707538] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:44.707903] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:45.709149] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:46.405827] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:46.406182] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:46.407288] [D] [thread 116454] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:46.407386] [I] [thread 116454] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:46.407405] [I] [thread 116454] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:46.407524] [I] [thread 116454] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:46.407550] [I] [thread 116454] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:46.583715] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:46.584075] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:47.585334] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:48.234999] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:48.235359] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:48.236447] [D] [thread 116459] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:48.236540] [I] [thread 116459] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:48.236558] [I] [thread 116459] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:48.236679] [I] [thread 116459] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:48.236737] [I] [thread 116459] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:48.389456] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:48.389830] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:49.391070] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:50.047482] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:50.047814] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:50.049865] [D] [thread 116464] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:50.049989] [I] [thread 116464] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:50.050009] [I] [thread 116464] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:50.050137] [I] [thread 116464] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:50.050157] [I] [thread 116464] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:50.210233] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:50.210562] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:51.211821] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:51.970471] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:51.970798] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:51.971855] [D] [thread 116470] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:51.971950] [I] [thread 116470] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:51.971969] [I] [thread 116470] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:51.972087] [I] [thread 116470] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:51.972103] [I] [thread 116470] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:52.125369] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:52.125781] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:53.127027] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:53.766104] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:53.766497] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:53.767660] [D] [thread 116475] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:53.767770] [I] [thread 116475] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:53.767791] [I] [thread 116475] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:53.767950] [I] [thread 116475] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:53.767971] [I] [thread 116475] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:53.929707] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:53.930066] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:54.931300] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:55.579420] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:55.579782] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:55.580985] [D] [thread 116480] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:55.581084] [I] [thread 116480] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:55.581104] [I] [thread 116480] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:55.581221] [I] [thread 116480] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:55.581235] [I] [thread 116480] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:55.733988] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:55.734357] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:56.735787] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:57.386395] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:57.386778] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:57.388545] [D] [thread 116486] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:57.388622] [I] [thread 116486] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:57.388638] [I] [thread 116486] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:57.388748] [I] [thread 116486] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:57.388760] [I] [thread 116486] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:57.545580] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:57.545942] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:58.547181] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:59.234964] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:59.235315] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:59.236420] [D] [thread 116491] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:00:59.236511] [I] [thread 116491] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:59.236531] [I] [thread 116491] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:00:59.236649] [I] [thread 116491] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:00:59.236674] [I] [thread 116491] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:00:59.385294] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:00:59.385692] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:00.386887] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:01.072667] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:01.073030] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:01.073988] [D] [thread 116496] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:01.074080] [I] [thread 116496] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:01.074099] [I] [thread 116496] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:01.074216] [I] [thread 116496] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:01.074230] [I] [thread 116496] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:01.228390] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:01.228747] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:02.230002] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:02.905437] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:02.905786] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:02.906934] [D] [thread 116502] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:02.907032] [I] [thread 116502] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:02.907050] [I] [thread 116502] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:02.907171] [I] [thread 116502] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:02.907185] [I] [thread 116502] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:03.059695] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:03.060061] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:04.061302] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:04.786707] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:04.787318] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:04.788031] [D] [thread 116507] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:04.788125] [I] [thread 116507] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:04.788144] [I] [thread 116507] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:04.788262] [I] [thread 116507] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:04.788275] [I] [thread 116507] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:04.937404] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:04.937910] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:05.939142] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:06.642086] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:06.642409] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:06.643497] [D] [thread 116512] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:06.643599] [I] [thread 116512] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:06.643618] [I] [thread 116512] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:06.643737] [I] [thread 116512] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:06.643761] [I] [thread 116512] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:06.797505] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:06.797853] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:07.799053] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:08.493187] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:08.493544] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:08.494602] [D] [thread 116517] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:08.494701] [I] [thread 116517] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:08.494720] [I] [thread 116517] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:08.494838] [I] [thread 116517] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:08.494852] [I] [thread 116517] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:08.642591] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:08.642940] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:09.644167] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:10.310671] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:10.311239] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:10.312025] [D] [thread 116523] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:10.312119] [I] [thread 116523] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:10.312137] [I] [thread 116523] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:10.312258] [I] [thread 116523] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:10.312271] [I] [thread 116523] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:10.464750] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:10.465137] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:11.466323] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:12.085102] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:12.085472] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:12.086514] [D] [thread 116528] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:12.086637] [I] [thread 116528] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:12.086659] [I] [thread 116528] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:12.086784] [I] [thread 116528] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:12.086802] [I] [thread 116528] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:12.245111] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:12.245434] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:13.246620] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:13.907252] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:13.907841] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:13.908612] [D] [thread 116533] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:13.908703] [I] [thread 116533] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:13.908721] [I] [thread 116533] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:13.908839] [I] [thread 116533] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:13.908852] [I] [thread 116533] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:14.069698] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:14.070249] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:15.071617] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:15.805760] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:15.806365] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:15.807052] [D] [thread 116538] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:15.807146] [I] [thread 116538] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:15.807164] [I] [thread 116538] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:15.807282] [I] [thread 116538] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:15.807296] [I] [thread 116538] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:15.957940] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:15.958492] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:16.959796] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:17.627499] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:17.627893] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:17.629565] [D] [thread 116543] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:17.629664] [I] [thread 116543] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:17.629683] [I] [thread 116543] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:17.629801] [I] [thread 116543] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:17.629815] [I] [thread 116543] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:17.784642] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:17.784966] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:18.786179] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:19.434875] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:19.435200] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:19.436219] [D] [thread 116548] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:19.436299] [I] [thread 116548] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:19.436348] [I] [thread 116548] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:19.436466] [I] [thread 116548] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:19.436479] [I] [thread 116548] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:19.586778] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:19.587131] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:20.588432] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:21.242111] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:21.242431] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:21.243438] [D] [thread 116553] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:21.243534] [I] [thread 116553] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:21.243554] [I] [thread 116553] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:21.243671] [I] [thread 116553] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:21.243685] [I] [thread 116553] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:21.395339] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:21.395694] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:22.396935] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:23.146070] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:23.146386] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:23.147468] [D] [thread 116559] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:23.147570] [I] [thread 116559] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:23.147589] [I] [thread 116559] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:23.147707] [I] [thread 116559] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:23.147731] [I] [thread 116559] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:23.310476] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:23.310805] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:24.312040] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:24.977372] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:24.977977] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:24.978833] [D] [thread 116566] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:24.978931] [I] [thread 116566] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:24.978950] [I] [thread 116566] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:24.979069] [I] [thread 116566] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:24.979083] [I] [thread 116566] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:25.019579] [D] [thread 115889] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[16:01:25.019691] [D] [thread 115889] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[16:01:25.021369] [D] [thread 115889] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out following content 10740000,10800000,54,1699632010481,1699632085019
10740000,10800000,63,1699632012217,1699632085019
[m
[36m[16:01:25.170958] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:25.171437] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:26.172838] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:26.805479] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:26.806124] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:26.806868] [D] [thread 116571] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:26.806961] [I] [thread 116571] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:26.806979] [I] [thread 116571] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:26.807096] [I] [thread 116571] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:26.807111] [I] [thread 116571] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:27.074903] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:27.075413] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:28.076682] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:28.726152] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:28.726768] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:28.727536] [D] [thread 116577] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:28.727629] [I] [thread 116577] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:28.727648] [I] [thread 116577] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:28.727766] [I] [thread 116577] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:28.727780] [I] [thread 116577] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:28.881183] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:28.881641] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:29.882911] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:30.475186] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:30.475770] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:30.476624] [D] [thread 116584] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:30.476700] [I] [thread 116584] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:30.476716] [I] [thread 116584] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:30.476827] [I] [thread 116584] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:30.476840] [I] [thread 116584] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:30.622949] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:30.623420] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:31.624677] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:32.306555] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:32.307176] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:32.307981] [D] [thread 116590] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:32.308073] [I] [thread 116590] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:32.308092] [I] [thread 116590] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:32.308211] [I] [thread 116590] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:32.308225] [I] [thread 116590] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:32.419019] [D] [thread 115891] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[16:01:32.419127] [D] [thread 115891] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[16:01:32.420958] [D] [thread 115891] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out following content 10740000,10800000,24,1699632016176,1699632092419
10740000,10800000,47,1699632014878,1699632092419
[m
[36m[16:01:32.458612] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:32.458949] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:33.460188] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:34.080450] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:34.081090] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:34.081961] [D] [thread 116595] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:34.082082] [I] [thread 116595] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:34.082103] [I] [thread 116595] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:34.082229] [I] [thread 116595] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:34.082248] [I] [thread 116595] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:34.238565] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:34.239174] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:35.240462] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:35.910592] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:35.911162] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:35.912010] [D] [thread 116601] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:35.912086] [I] [thread 116601] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:35.912103] [I] [thread 116601] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:35.912212] [I] [thread 116601] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:35.912224] [I] [thread 116601] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:36.063308] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:36.063855] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:36.863926] [D] [thread 115892] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[16:01:36.864032] [D] [thread 115892] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[16:01:36.865866] [D] [thread 115892] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out following content 10740000,10800000,100,1699632000617,1699632096864
10740000,10800000,13,1699632020731,1699632096864
[m
[36m[16:01:37.064436] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:37.680070] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:37.681214] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:37.681803] [D] [thread 116606] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:37.681901] [I] [thread 116606] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:37.681921] [I] [thread 116606] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:37.682040] [I] [thread 116606] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:37.682054] [I] [thread 116606] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:37.838685] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:37.839052] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:38.840252] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:39.486383] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:39.486809] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:39.487725] [D] [thread 116612] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:39.487816] [I] [thread 116612] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:39.487835] [I] [thread 116612] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:39.487951] [I] [thread 116612] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:39.487965] [I] [thread 116612] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:39.641600] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:39.642073] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:40.643391] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:41.319194] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:41.319818] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:41.320610] [D] [thread 116619] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:41.320686] [I] [thread 116619] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:41.320702] [I] [thread 116619] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:41.320811] [I] [thread 116619] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:41.320823] [I] [thread 116619] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:41.468441] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:41.469004] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:42.470323] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:43.077710] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:43.078232] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:43.079051] [D] [thread 116624] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:43.079148] [I] [thread 116624] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:43.079167] [I] [thread 116624] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:43.079288] [I] [thread 116624] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:43.079304] [I] [thread 116624] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:43.229448] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:43.229949] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:44.231188] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:44.966762] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:44.967089] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:44.968157] [D] [thread 116629] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:44.968254] [I] [thread 116629] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:44.968273] [I] [thread 116629] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:44.968420] [I] [thread 116629] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:44.968473] [I] [thread 116629] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:45.119786] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:45.120104] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:46.121333] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:46.707601] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:46.707958] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:46.709125] [D] [thread 116634] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:46.709225] [I] [thread 116634] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:46.709243] [I] [thread 116634] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:46.709362] [I] [thread 116634] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:46.709423] [I] [thread 116634] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:46.868070] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:46.868435] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:47.869631] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:48.514731] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:48.515109] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:48.516279] [D] [thread 116641] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:48.516403] [I] [thread 116641] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:48.516423] [I] [thread 116641] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:48.516541] [I] [thread 116641] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:48.516555] [I] [thread 116641] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:48.679067] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:48.679424] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:49.680681] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:50.362387] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:50.362710] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:50.363741] [D] [thread 116648] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:50.363836] [I] [thread 116648] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:50.363856] [I] [thread 116648] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:50.363975] [I] [thread 116648] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:50.363990] [I] [thread 116648] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:50.517976] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:50.518345] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:51.519578] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:52.130148] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:52.130858] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:52.131467] [D] [thread 116653] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:52.131537] [I] [thread 116653] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:52.131554] [I] [thread 116653] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:52.131663] [I] [thread 116653] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:52.131675] [I] [thread 116653] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:52.286927] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:52.287410] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:53.288678] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:53.948000] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:53.948398] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:53.950226] [D] [thread 116659] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:53.950354] [I] [thread 116659] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:53.950375] [I] [thread 116659] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:53.950517] [I] [thread 116659] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:53.950534] [I] [thread 116659] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:54.110256] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:54.110595] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:55.111823] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:55.755094] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:55.755424] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:55.756488] [D] [thread 116664] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:55.756578] [I] [thread 116664] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:55.756595] [I] [thread 116664] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:55.756712] [I] [thread 116664] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:55.756725] [I] [thread 116664] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:55.887732] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:55.888061] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:56.889308] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:57.563718] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:57.564067] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:57.565696] [D] [thread 116671] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:57.565774] [I] [thread 116671] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:57.565790] [I] [thread 116671] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:57.565900] [I] [thread 116671] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:57.565913] [I] [thread 116671] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:57.717630] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:57.718088] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:58.719397] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:59.378159] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:59.378743] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:59.379532] [D] [thread 116676] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:01:59.379624] [I] [thread 116676] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:59.379642] [I] [thread 116676] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:01:59.379761] [I] [thread 116676] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:01:59.379774] [I] [thread 116676] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:01:59.538084] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:01:59.538423] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:00.539652] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:01.267291] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:01.267625] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:01.268921] [D] [thread 116682] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:01.269044] [I] [thread 116682] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:01.269065] [I] [thread 116682] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:01.269190] [I] [thread 116682] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:01.269208] [I] [thread 116682] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:01.424422] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:01.424778] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:02.426001] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:03.100078] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:03.100621] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:03.101645] [D] [thread 116688] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:03.101722] [I] [thread 116688] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:03.101738] [I] [thread 116688] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:03.101846] [I] [thread 116688] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:03.101858] [I] [thread 116688] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:03.255028] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:03.255370] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:04.256530] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:04.854651] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:04.854986] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:04.856015] [D] [thread 116693] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:04.856112] [I] [thread 116693] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:04.856131] [I] [thread 116693] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:04.856249] [I] [thread 116693] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:04.856264] [I] [thread 116693] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:05.008755] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:05.009096] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:06.010456] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:06.659022] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:06.659360] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:06.660578] [D] [thread 116699] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:06.660673] [I] [thread 116699] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:06.660691] [I] [thread 116699] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:06.660810] [I] [thread 116699] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:06.660823] [I] [thread 116699] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:06.872181] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:06.872579] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:07.873788] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:08.582739] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:08.583270] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:08.584146] [D] [thread 116706] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:08.584220] [I] [thread 116706] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:08.584237] [I] [thread 116706] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:08.584381] [I] [thread 116706] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:08.584398] [I] [thread 116706] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:08.735539] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:08.736083] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:09.737369] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:10.395242] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:10.395854] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:10.396636] [D] [thread 116711] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:10.396730] [I] [thread 116711] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:10.396748] [I] [thread 116711] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:10.396864] [I] [thread 116711] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:10.396877] [I] [thread 116711] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:10.549008] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:10.549364] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:11.550724] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:12.221751] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:12.222351] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:12.223074] [D] [thread 116716] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:12.223169] [I] [thread 116716] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:12.223187] [I] [thread 116716] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:12.223303] [I] [thread 116716] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:12.223318] [I] [thread 116716] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:12.382395] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:12.382845] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:13.384006] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:14.038033] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:14.038367] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:14.039373] [D] [thread 116721] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:14.039454] [I] [thread 116721] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:14.039471] [I] [thread 116721] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:14.039579] [I] [thread 116721] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:14.039592] [I] [thread 116721] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:14.209589] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:14.209912] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:15.211150] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:15.894204] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:15.894515] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:15.895670] [D] [thread 116727] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:15.895776] [I] [thread 116727] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:15.895795] [I] [thread 116727] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:15.895913] [I] [thread 116727] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:15.895928] [I] [thread 116727] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:16.047230] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:16.047560] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:17.048473] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:17.642145] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:17.642519] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:17.643519] [D] [thread 116733] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:17.643611] [I] [thread 116733] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:17.643629] [I] [thread 116733] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:17.643748] [I] [thread 116733] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:17.643765] [I] [thread 116733] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:17.797241] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:17.797721] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:18.798994] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:19.446146] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:19.446869] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:19.447784] [D] [thread 116738] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:19.447873] [I] [thread 116738] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:19.447889] [I] [thread 116738] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:19.448026] [I] [thread 116738] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:19.448044] [I] [thread 116738] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:19.604545] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:19.605081] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:20.606348] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:21.285808] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:21.286384] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:21.287205] [D] [thread 116743] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:21.287300] [I] [thread 116743] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:21.287318] [I] [thread 116743] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:21.287436] [I] [thread 116743] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:21.287449] [I] [thread 116743] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:21.446034] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:21.446450] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:22.447707] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:23.217818] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:23.218177] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:23.219255] [D] [thread 116748] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:23.219357] [I] [thread 116748] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:23.219376] [I] [thread 116748] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:23.219493] [I] [thread 116748] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:23.219510] [I] [thread 116748] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:23.373523] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:23.373865] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:24.375099] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:25.018988] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:25.019576] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:25.020376] [D] [thread 116753] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:25.020466] [I] [thread 116753] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:25.020485] [I] [thread 116753] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:25.020606] [I] [thread 116753] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:25.020619] [I] [thread 116753] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:25.177068] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:25.177458] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:26.178716] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:26.824736] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:26.825089] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:26.826040] [D] [thread 116760] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:26.826135] [I] [thread 116760] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:26.826154] [I] [thread 116760] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:26.826271] [I] [thread 116760] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:26.826285] [I] [thread 116760] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:26.981005] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:26.981330] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:27.982559] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:28.639608] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:28.640162] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:28.641623] [D] [thread 116765] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:28.641768] [I] [thread 116765] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:28.641791] [I] [thread 116765] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:28.641958] [I] [thread 116765] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:28.641977] [I] [thread 116765] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:28.790066] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:28.790427] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:29.791653] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:30.463173] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:30.463531] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:30.464589] [D] [thread 116771] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:30.464669] [I] [thread 116771] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:30.464685] [I] [thread 116771] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:30.464793] [I] [thread 116771] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:30.464805] [I] [thread 116771] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:30.615656] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:30.616020] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:31.617244] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:32.326330] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:32.326714] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:32.328315] [D] [thread 116777] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:32.328437] [I] [thread 116777] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:32.328454] [I] [thread 116777] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:32.328572] [I] [thread 116777] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:32.328586] [I] [thread 116777] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:32.486694] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:32.487219] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:33.488475] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:34.141117] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:34.141782] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:34.142537] [D] [thread 116783] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:34.142627] [I] [thread 116783] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:34.142646] [I] [thread 116783] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:34.142763] [I] [thread 116783] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:34.142778] [I] [thread 116783] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:34.298137] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:34.298602] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:35.299940] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:35.965103] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:35.965726] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:35.966422] [D] [thread 116788] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:35.966518] [I] [thread 116788] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:35.966537] [I] [thread 116788] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:35.966655] [I] [thread 116788] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:35.966671] [I] [thread 116788] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:36.121861] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:36.122494] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:37.123761] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:37.931817] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:37.932135] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:37.933310] [D] [thread 116797] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:37.933431] [I] [thread 116797] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:37.933452] [I] [thread 116797] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:37.933584] [I] [thread 116797] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:37.933614] [I] [thread 116797] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:38.077298] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:38.077651] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:39.078830] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:39.379431] [D] [thread 115890] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[16:02:39.379689] [D] [thread 115890] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[16:02:39.381346] [D] [thread 115890] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out following content 10800000,10860000,54,1699632084836,1699632159379
10800000,10860000,63,1699632084491,1699632159379
[m
[36m[16:02:39.757199] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:39.757531] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:39.758495] [D] [thread 116803] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:39.758592] [I] [thread 116803] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:39.758611] [I] [thread 116803] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:39.758727] [I] [thread 116803] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:39.758741] [I] [thread 116803] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:39.913763] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:39.914153] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:40.915516] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:41.581457] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:41.581790] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:41.582961] [D] [thread 116810] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:41.583035] [I] [thread 116810] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:41.583052] [I] [thread 116810] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:41.583160] [I] [thread 116810] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:41.583172] [I] [thread 116810] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:41.731559] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:41.731889] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:42.733084] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:43.386739] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:43.387341] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:43.388035] [D] [thread 116818] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:43.388129] [I] [thread 116818] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:43.388147] [I] [thread 116818] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:43.388266] [I] [thread 116818] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:43.388280] [I] [thread 116818] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:43.535665] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:43.536261] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:44.537674] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:45.315501] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:45.316082] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:45.316961] [D] [thread 116825] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:45.317060] [I] [thread 116825] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:45.317079] [I] [thread 116825] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:45.317195] [I] [thread 116825] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:45.317211] [I] [thread 116825] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:45.498175] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:45.498712] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:46.499784] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:47.182081] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:47.182550] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:47.183471] [D] [thread 116830] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:47.183548] [I] [thread 116830] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:47.183564] [I] [thread 116830] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:47.183674] [I] [thread 116830] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:47.183685] [I] [thread 116830] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:47.333248] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:47.333572] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:48.334903] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:48.978966] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:48.979542] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:48.980300] [D] [thread 116837] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:48.980419] [I] [thread 116837] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:48.980438] [I] [thread 116837] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:48.980559] [I] [thread 116837] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:48.980574] [I] [thread 116837] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:49.141498] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:49.142119] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:49.718537] [D] [thread 115889] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[16:02:49.718608] [D] [thread 115889] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[16:02:49.719583] [D] [thread 115889] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out following content 10800000,10860000,47,1699632088454,1699632169718
10800000,10860000,24,1699632092279,1699632169718
[m
[36m[16:02:50.143386] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:50.809123] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:50.809423] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:50.810558] [D] [thread 116842] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:50.810673] [I] [thread 116842] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:50.810694] [I] [thread 116842] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:50.810823] [I] [thread 116842] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:50.810841] [I] [thread 116842] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:50.978090] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:50.978480] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:51.979718] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:52.639310] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:52.639669] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:52.640823] [D] [thread 116849] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:52.640926] [I] [thread 116849] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:52.640945] [I] [thread 116849] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:52.641064] [I] [thread 116849] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:52.641097] [I] [thread 116849] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:52.797598] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:52.797960] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:53.799204] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:54.000556] [D] [thread 115891] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[16:02:54.000660] [D] [thread 115891] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[16:02:54.002504] [D] [thread 115891] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel_tumbling_1_32000_200.out following content 10800000,10860000,100,1699632059841,1699632174000
10800000,10860000,13,1699632096697,1699632174000
[m
[36m[16:02:54.494863] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:54.495225] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:54.496433] [D] [thread 116854] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:54.496530] [I] [thread 116854] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:54.496547] [I] [thread 116854] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:54.496664] [I] [thread 116854] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:54.496678] [I] [thread 116854] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:54.658028] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:54.658363] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:55.659615] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:56.314150] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:56.314514] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:56.315538] [D] [thread 116860] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:56.315631] [I] [thread 116860] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:56.315651] [I] [thread 116860] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:56.315768] [I] [thread 116860] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:56.315783] [I] [thread 116860] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:56.472480] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:56.472848] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:57.474103] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:58.174124] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:58.174473] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:58.175428] [D] [thread 116866] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:58.175503] [I] [thread 116866] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:58.175520] [I] [thread 116866] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:58.175629] [I] [thread 116866] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:58.175642] [I] [thread 116866] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:02:58.330540] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:58.330895] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:59.332135] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:59.958294] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:59.958654] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:02:59.959673] [D] [thread 116873] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:02:59.959772] [I] [thread 116873] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:59.959792] [I] [thread 116873] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:02:59.959910] [I] [thread 116873] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:02:59.959925] [I] [thread 116873] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:03:00.109176] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:03:00.109532] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:03:01.110815] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:03:01.763096] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:03:01.763451] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:03:01.764534] [D] [thread 116879] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:03:01.764630] [I] [thread 116879] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:03:01.764647] [I] [thread 116879] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:03:01.764766] [I] [thread 116879] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:03:01.764780] [I] [thread 116879] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:03:01.916085] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:03:01.916476] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:03:02.917729] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:03:03.569525] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:03:03.569887] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:03:03.571093] [D] [thread 116884] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[16:03:03.571195] [I] [thread 116884] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:03:03.571214] [I] [thread 116884] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[16:03:03.571331] [I] [thread 116884] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[16:03:03.571347] [I] [thread 116884] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[16:03:03.725633] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:03:03.725987] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:03:03.879556] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[16:03:03.879928] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[16:03:03.881284] [I] [thread 116888] [QueryCatalogService.cpp:65] [checkAndMarkForHardStop] QueryCatalogService: Handle hard stop request.[m
[36m[16:03:03.881379] [D] [thread 116888] [QueryCatalogService.cpp:83] [checkAndMarkForHardStop] QueryCatalog: Changing query status to Mark query for stop.[m
[32m[16:03:03.881515] [I] [thread 116888] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : StopQueryRequest { QueryId: 1}[m
[32m[16:03:03.881579] [I] [thread 116888] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[16:03:03.881617] [I] [thread 115878] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[16:03:03.881666] [I] [thread 115878] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[16:03:03.881706] [I] [thread 115878] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[16:03:03.881768] [I] [thread 115878] [GlobalQueryPlanUpdatePhase.cpp:133] [processStopQueryRequest] QueryProcessingService: Request received for stopping the query 1[m
[36m[16:03:03.881786] [D] [thread 115878] [GlobalQueryPlan.cpp:45] [removeQuery] GlobalQueryPlan: Removing query information from the meta data[m
[36m[16:03:03.881915] [D] [thread 115878] [SharedQueryPlan.cpp:194] [removeQuery] SharedQueryPlan: Remove the Query Id 1 and associated Global Query Nodes with sink operators.[m
[36m[16:03:03.882228] [D] [thread 115878] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SINK(5: {FileSinkDescriptor()}) as root operator.[m
[36m[16:03:03.882987] [D] [thread 115878] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[16:03:03.883056] [D] [thread 115878] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[16:03:03.883110] [D] [thread 115878] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[16:03:03.883126] [D] [thread 115878] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[16:03:03.883134] [D] [thread 115878] [RequestProcessorService.cpp:162] [start] QueryProcessingService: Shared Query Plan is empty and an older version is already running.[m
[36m[16:03:03.883169] [D] [thread 115878] [QueryUndeploymentPhase.cpp:44] [execute] QueryUndeploymentPhase::stopAndUndeployQuery : queryId= 1[m
[36m[16:03:03.883190] [D] [thread 115878] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[16:03:03.883222] [D] [thread 115878] [QueryUndeploymentPhase.cpp:54] [execute] QueryUndeploymentPhase:removeQuery: stop query[m
[36m[16:03:03.883236] [D] [thread 115878] [QueryUndeploymentPhase.cpp:80] [stopQuery] QueryUndeploymentPhase:markQueryForStop queryId= 1[m
[36m[16:03:03.883386] [D] [thread 115878] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=5 and IP=192.168.2.32:41755[m
[36m[16:03:03.883416] [D] [thread 115878] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.32:41755 queryId=1[m
[36m[16:03:03.889029] [D] [thread 115878] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=6 and IP=192.168.2.33:34167[m
[36m[16:03:03.889117] [D] [thread 115878] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.33:34167 queryId=1[m
[36m[16:03:03.894175] [D] [thread 115878] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=2 and IP=192.168.2.12:36761[m
[36m[16:03:03.894375] [D] [thread 115878] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.12:36761 queryId=1[m
[36m[16:03:03.899222] [D] [thread 115878] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=7 and IP=192.168.2.34:43035[m
[36m[16:03:03.899306] [D] [thread 115878] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.34:43035 queryId=1[m
[36m[16:03:03.904009] [D] [thread 115878] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=8 and IP=192.168.2.35:41675[m
[36m[16:03:03.904094] [D] [thread 115878] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.35:41675 queryId=1[m
[36m[16:03:03.908818] [D] [thread 115878] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=3 and IP=192.168.2.30:34141[m
[36m[16:03:03.908897] [D] [thread 115878] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.30:34141 queryId=1[m
[36m[16:03:03.913563] [D] [thread 115878] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=9 and IP=192.168.2.37:44543[m
[36m[16:03:03.913648] [D] [thread 115878] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.37:44543 queryId=1[m
[36m[16:03:03.918385] [D] [thread 115878] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=10 and IP=192.168.2.38:37083[m
[36m[16:03:03.918468] [D] [thread 115878] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.38:37083 queryId=1[m
[36m[16:03:03.923188] [D] [thread 115878] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=4 and IP=192.168.2.31:37113[m
[36m[16:03:03.923273] [D] [thread 115878] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.31:37113 queryId=1[m
[36m[16:03:03.928127] [D] [thread 115878] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=1 and IP=192.168.2.11:42429[m
[36m[16:03:03.928251] [D] [thread 115878] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.11:42429 queryId=1[m
[36m[16:03:03.932995] [D] [thread 115878] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Stop for 10 queues[m
[36m[16:03:03.968109] [D] [thread 115888] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:38611): EndOfStream received for channel [m
[36m[16:03:03.968102] [D] [thread 115887] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:38611): EndOfStream received for channel [m
[36m[16:03:03.968274] [D] [thread 115887] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=2)[m
[36m[16:03:03.968274] [D] [thread 115888] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=0)[m
[32m[16:03:03.968500] [I] [thread 115887] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(4)[m
[32m[16:03:03.968640] [I] [thread 115888] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(3)[m
[36m[16:03:03.968741] [D] [thread 115888] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::33::0::0(threadId=0) but there is still some active subpartition: 3[m
[36m[16:03:03.968742] [D] [thread 115887] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::33::0::0(threadId=2) but there is still some active subpartition: 3[m
[36m[16:03:03.969343] [D] [thread 115887] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:38611): EndOfStream received for channel [m
[36m[16:03:03.969454] [D] [thread 115887] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=3)[m
[32m[16:03:03.969536] [I] [thread 115887] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(2)[m
[36m[16:03:03.969676] [D] [thread 115887] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::33::0::0(threadId=3) but there is still some active subpartition: 2[m
[36m[16:03:03.969985] [D] [thread 115888] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:38611): EndOfStream received for channel [m
[36m[16:03:03.970087] [D] [thread 115888] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=1)[m
[32m[16:03:03.970171] [I] [thread 115888] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(1)[m
[36m[16:03:03.970215] [D] [thread 115888] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::33::0::0, counter is at 1.[m
[36m[16:03:03.970320] [D] [thread 115888] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[16:03:03.970368] [W] [thread 115888] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[16:03:04.275223] [D] [thread 115887] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:38611): EndOfStream received for channel [m
[36m[16:03:04.275233] [D] [thread 115888] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:38611): EndOfStream received for channel [m
[36m[16:03:04.275377] [D] [thread 115887] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=0)[m
[36m[16:03:04.275377] [D] [thread 115888] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=3)[m
[32m[16:03:04.275498] [I] [thread 115887] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(4)[m
[32m[16:03:04.275592] [I] [thread 115888] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(3)[m
[36m[16:03:04.275668] [D] [thread 115887] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::51::0::0(threadId=0) but there is still some active subpartition: 3[m
[36m[16:03:04.275734] [D] [thread 115887] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:38611): EndOfStream received for channel [m
[36m[16:03:04.275678] [D] [thread 115888] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::51::0::0(threadId=3) but there is still some active subpartition: 3[m
[36m[16:03:04.275802] [D] [thread 115887] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=1)[m
[36m[16:03:04.275815] [D] [thread 115888] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:38611): EndOfStream received for channel [m
[36m[16:03:04.275862] [D] [thread 115888] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=2)[m
[32m[16:03:04.275863] [I] [thread 115887] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(2)[m
[32m[16:03:04.275972] [I] [thread 115888] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(1)[m
[36m[16:03:04.276014] [D] [thread 115888] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::51::0::0, counter is at 1.[m
[36m[16:03:04.276094] [D] [thread 115887] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::51::0::0(threadId=1) but there is still some active subpartition: 1[m
[36m[16:03:04.276098] [D] [thread 115888] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[16:03:04.276151] [W] [thread 115888] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[16:03:04.382962] [D] [thread 115887] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:38611): EndOfStream received for channel [m
[36m[16:03:04.383084] [D] [thread 115888] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:38611): EndOfStream received for channel [m
[36m[16:03:04.383155] [D] [thread 115887] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::42::0::0(threadId=3)[m
[36m[16:03:04.383278] [D] [thread 115888] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::42::0::0(threadId=1)[m
[32m[16:03:04.383290] [I] [thread 115887] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::42::0::0; newCnt(4)[m
[36m[16:03:04.384010] [D] [thread 115887] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::42::0::0(threadId=3) but there is still some active subpartition: 4[m
[36m[16:03:04.384508] [D] [thread 115887] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:38611): EndOfStream received for channel [m
[36m[16:03:04.384901] [D] [thread 115887] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::42::0::0(threadId=2)[m
[32m[16:03:04.385035] [I] [thread 115887] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::42::0::0; newCnt(3)[m
[36m[16:03:04.385157] [D] [thread 115887] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::42::0::0(threadId=2) but there is still some active subpartition: 3[m
[32m[16:03:04.385493] [I] [thread 115888] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::42::0::0; newCnt(2)[m
[36m[16:03:04.385610] [D] [thread 115888] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::42::0::0(threadId=1) but there is still some active subpartition: 2[m
[36m[16:03:04.385693] [D] [thread 115888] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:38611): EndOfStream received for channel [m
[36m[16:03:04.385759] [D] [thread 115888] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::42::0::0(threadId=0)[m
[32m[16:03:04.385835] [I] [thread 115888] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::42::0::0; newCnt(1)[m
[36m[16:03:04.385885] [D] [thread 115888] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::42::0::0, counter is at 1.[m
[36m[16:03:04.385965] [D] [thread 115888] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:42 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[16:03:04.386038] [W] [thread 115888] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:42 PartitionId: 0 SubpartitionID: 0[m
[31m[1m[16:03:04.450513] [E] [thread 116876] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 3 Reason for failure: onFatalException: exception=[Failed assertion on metadata.count() == 0 error message: PartitionManager: Consumer Partition 1::36::0::0 is still alive: 4:: callstack:
Stack trace (most recent call last):
#8    Object "./nesWorker", at 0xaaaab7b3f13f, in 
#7    Object "/lib/aarch64-linux-gnu/libc.so.6", at 0xffff8ec8ad4f, in __libc_start_main
#6    Object "./nesWorker", at 0xaaaab7b3faf7, in 
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff98afa2ef, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff98912f23, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff90cb9207, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff8f33a6e7, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff90ccb7e7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff90ccc773, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "./nesWorker", at 0xaaaab7b3f13f, in 
#7    Object "/lib/aarch64-linux-gnu/libc.so.6", at 0xffff8ec8ad4f, in __libc_start_main
#6    Object "./nesWorker", at 0xaaaab7b3faf7, in 
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff98afa2ef, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff98912f23, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff90cb9207, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff8f33a6e7, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff90ccb7e7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff90ccc773, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[31m[1m[16:03:04.660452] [E] [thread 115898] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: Transport closed[m
[33m[1m[16:03:04.661320] [W] [thread 115898] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:34141 went dead so we remove it[m
[32m[16:03:04.661481] [I] [thread 115898] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=1][m
[32m[16:03:04.661509] [I] [thread 115898] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[16:03:04.661543] [I] [thread 115898] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[16:03:04.661553] [I] [thread 115898] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[16:03:04.661610] [I] [thread 115898] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[16:03:04.661624] [I] [thread 115898] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[16:03:04.661674] [D] [thread 115898] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[16:03:04.881145] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[16:03:04.938190] [E] [thread 116869] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 2 Reason for failure: onFatalException: exception=[Failed assertion on metadata.count() == 0 error message: PartitionManager: Consumer Partition 1::30::0::0 is still alive: 4:: callstack:
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaabe79626f, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff9a296d4f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaabe796c27, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa417541f, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa3f8e053, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9c3326c7, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff9a9aab17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9c344ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9c345c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaabe79626f, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff9a296d4f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaabe796c27, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa417541f, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa3f8e053, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9c3326c7, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff9a9aab17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9c344ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9c345c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[31m[1m[16:03:05.411055] [E] [thread 116869] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 4 Reason for failure: onFatalException: exception=[Failed assertion on metadata.count() == 0 error message: PartitionManager: Consumer Partition 1::48::0::0 is still alive: 4:: callstack:
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaab545726f, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff9da1ee0f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaab5457c27, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa78fd41f, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa7716053, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9faba6c7, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff9e132b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9faccca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9facdc33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaab545726f, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff9da1ee0f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaab5457c27, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa78fd41f, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa7716053, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9faba6c7, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff9e132b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9faccca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9facdc33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[36m[16:03:05.660613] [D] [thread 115894] [WorkerRPCServer.cpp:90] [StopQuery] WorkerRPCServer::StopQuery: got request for 1[m
[36m[16:03:05.660789] [D] [thread 115894] [NodeEngine.cpp:250] [stopQuery] Runtime:stopQuery for qep= 1  termination= HardStop[m
[36m[16:03:05.660930] [D] [thread 115894] [QueryManagerLifecycle.cpp:312] [stopQuery] AbstractQueryManager::stopQuery: query sub-plan id  10  type= HardStop[m
[36m[16:03:05.661002] [D] [thread 115894] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[16:03:05.661099] [D] [thread 115894] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[16:03:05.661298] [D] [thread 115894] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[16:03:05.661793] [D] [thread 115894] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 10 Source 33 is notifying completion: HardStop[m
[36m[16:03:05.661869] [D] [thread 115894] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 10 Source 33 is terminated; tokens left = 4[m
[36m[16:03:05.661922] [D] [thread 115894] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 33 terminationType=HardStop[m
[36m[16:03:05.662030] [D] [thread 115894] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=false type HardEndOfStream[m
[36m[16:03:05.662186] [D] [thread 115894] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=false type HardEndOfStream[m
[36m[16:03:05.662439] [D] [thread 115894] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=33 reconfType=HardEndOfStream queryId=1 querySubPlanId=10 threadPool->getNumberOfThreads()=4[m
[36m[16:03:05.662546] [D] [thread 115894] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[16:03:05.662580] [D] [thread 115894] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:42 PartitionId: 0 SubpartitionID: 0[m
[36m[16:03:05.662623] [D] [thread 115894] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[16:03:05.662741] [D] [thread 115894] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[16:03:05.662974] [D] [thread 115894] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 10 Source 42 is notifying completion: HardStop[m
[36m[16:03:05.663045] [D] [thread 115894] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 10 Source 42 is terminated; tokens left = 3[m
[36m[16:03:05.663081] [D] [thread 115894] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 42 terminationType=HardStop[m
[36m[16:03:05.663151] [D] [thread 115894] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=false type HardEndOfStream[m
[36m[16:03:05.663251] [D] [thread 115894] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=false type HardEndOfStream[m
[36m[16:03:05.663439] [D] [thread 115894] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=42 reconfType=HardEndOfStream queryId=1 querySubPlanId=10 threadPool->getNumberOfThreads()=4[m
[36m[16:03:05.663504] [D] [thread 115894] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:42 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[16:03:05.663535] [D] [thread 115894] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[16:03:05.663577] [D] [thread 115894] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[16:03:05.663659] [D] [thread 115894] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[16:03:05.663844] [D] [thread 115894] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 10 Source 51 is notifying completion: HardStop[m
[36m[16:03:05.663878] [D] [thread 115894] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 10 Source 51 is terminated; tokens left = 2[m
[36m[16:03:05.663906] [D] [thread 115894] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 51 terminationType=HardStop[m
[36m[16:03:05.663959] [D] [thread 115894] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=false type HardEndOfStream[m
[36m[16:03:05.664063] [D] [thread 115894] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=false type HardEndOfStream[m
[36m[16:03:05.664230] [D] [thread 115894] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=51 reconfType=HardEndOfStream queryId=1 querySubPlanId=10 threadPool->getNumberOfThreads()=4[m
[36m[16:03:05.664280] [D] [thread 115894] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[16:03:05.664789] [D] [thread 115889] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[16:03:05.664795] [D] [thread 115892] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[16:03:05.664790] [D] [thread 115891] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[16:03:05.664790] [D] [thread 115890] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[16:03:05.664960] [D] [thread 115892] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 0[m
[36m[16:03:05.664960] [D] [thread 115890] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 3[m
[36m[16:03:05.664960] [D] [thread 115891] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 2[m
[36m[16:03:05.664960] [D] [thread 115889] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 1[m
[36m[16:03:05.665073] [D] [thread 115889] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::33::0::0[m
[36m[16:03:05.665099] [D] [thread 115889] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::33::0::0[m
[36m[16:03:05.665130] [D] [thread 115889] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::33::0::0[m
[32m[16:03:05.665196] [I] [thread 115889] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(0)[m
[36m[16:03:05.665458] [D] [thread 115890] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[16:03:05.665655] [D] [thread 115890] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::42::0::0[m
[36m[16:03:05.665665] [D] [thread 115891] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::42::0::0[m
[36m[16:03:05.665654] [D] [thread 115889] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::42::0::0[m
[36m[16:03:05.665719] [D] [thread 115891] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::42::0::0 Thread 2[m
[36m[16:03:05.665724] [D] [thread 115890] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::42::0::0 Thread 3[m
[36m[16:03:05.665737] [D] [thread 115889] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::42::0::0 Thread 1[m
[36m[16:03:05.665871] [D] [thread 115892] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::42::0::0[m
[36m[16:03:05.665917] [D] [thread 115892] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::42::0::0 Thread 0[m
[36m[16:03:05.665947] [D] [thread 115892] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::42::0::0[m
[36m[16:03:05.665972] [D] [thread 115892] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::42::0::0[m
[36m[16:03:05.665995] [D] [thread 115892] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::42::0::0[m
[32m[16:03:05.666046] [I] [thread 115892] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::42::0::0; newCnt(0)[m
[36m[16:03:05.666419] [D] [thread 115890] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[16:03:05.666648] [D] [thread 115892] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[16:03:05.666648] [D] [thread 115890] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[16:03:05.666720] [D] [thread 115890] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 3[m
[36m[16:03:05.666721] [D] [thread 115892] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 0[m
[36m[16:03:05.666648] [D] [thread 115889] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[16:03:05.666938] [D] [thread 115889] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 1[m
[36m[16:03:05.667087] [D] [thread 115891] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[16:03:05.667134] [D] [thread 115891] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 2[m
2023-11-10 16:03:05.668 postReconfigurationCallback: queryId=1, querySubPlanId=10; queryId=1 subPlanId=10 processedTasks=12 processedTuple=24 processedBuffers=12 processedWatermarks=0 latencyAVG=1699632054065 queueSizeAVG=0 availableGlobalBufferAVG=511 availableFixedBufferAVG=0
[36m[16:03:05.667165] [D] [thread 115891] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::51::0::0[m
[36m[16:03:05.667189] [D] [thread 115891] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::51::0::0[m
[36m[16:03:05.667214] [D] [thread 115891] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::51::0::0[m
[32m[16:03:05.667267] [I] [thread 115891] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(0)[m
[36m[16:03:05.667605] [D] [thread 115892] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[16:03:05.667812] [D] [thread 115892] [ExecutableQueryPlan.cpp:352] [notifySinkCompletion] QEP 10 Sink FileSink() is terminated; tokens left = 1[m
[36m[16:03:05.667887] [D] [thread 115892] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=false type HardEndOfStream[m
[36m[16:03:05.668033] [D] [thread 115892] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=false type HardEndOfStream[m
[36m[16:03:05.668427] [D] [thread 115892] [SinkMedium.cpp:136] [postReconfigurationCallback] Sink [ FileSink() ] is completed with  HardStop[m
[36m[16:03:05.669111] [D] [thread 115891] [ExecutableQueryPlan.cpp:231] [postReconfigurationCallback] Executing HardEndOfStream on qep queryId=1 querySubPlanId=10[m
[36m[16:03:05.669173] [D] [thread 115891] [ExecutableQueryPlan.cpp:172] [stop] QueryExecutionPlan: stop queryId=1 querySubPlanId=10[m
[36m[16:03:05.669196] [D] [thread 115891] [ExecutableQueryPlan.cpp:174] [stop] QueryExecutionPlan: stop 1-10 is marked as stopped now[m
[36m[16:03:05.669418] [D] [thread 115894] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=true type Destroy[m
[36m[16:03:05.669608] [D] [thread 115894] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=true type Destroy[m
[36m[16:03:05.670461] [D] [thread 115894] [QueryManager.cpp:312] [postReconfigurationCallback] AbstractQueryManager: removed running QEP  10[m
[36m[16:03:05.670651] [D] [thread 115894] [QueryManagerLifecycle.cpp:380] [stopQuery] AbstractQueryManager::stopQuery: query 10 was successful[m
[36m[16:03:05.670684] [D] [thread 115894] [NodeEngine.cpp:265] [stopQuery] Runtime: stop of QEP  10  succeeded[m
[36m[16:03:05.670705] [D] [thread 115894] [WorkerRPCServer.cpp:97] [StopQuery] WorkerRPCServer::StopQuery: success[m
[1m[41m[16:03:05.674871] [C] [thread 115878] [RequestProcessorService.cpp:236] [start] QueryProcessingService: Received unexpected exception while scheduling the queryIdAndCatalogEntryMapping: [m
[32m[16:03:05.674949] [I] [thread 115878] [RequestProcessorService.cpp:255] [shutDown] Request Processor Service is shutting down! No further requests can be processed![m
[32m[16:03:05.674984] [I] [thread 115878] [RequestQueue.cpp:63] [insertPoisonPill] QueryRequestQueue: Shutdown is called. Inserting Poison pill in the query request queue.[m
[33m[1m[16:03:05.675043] [W] [thread 115878] [RequestProcessorService.cpp:240] [start] QueryProcessingService: Terminated[m
[32m[16:03:05.675053] [I] [thread 115878] [RequestProcessorService.cpp:255] [shutDown] Request Processor Service is shutting down! No further requests can be processed![m
[33m[1m[16:03:05.675060] [W] [thread 115878] [NesCoordinator.cpp:171] [operator()] NesCoordinator: finished queryRequestProcessor[m
[31m[1m[16:03:05.797596] [E] [thread 115898] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[16:03:05.798530] [W] [thread 115898] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.12:36761 went dead so we remove it[m
[32m[16:03:05.798678] [I] [thread 115898] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=1][m
[32m[16:03:05.798703] [I] [thread 115898] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[16:03:05.798732] [I] [thread 115898] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[16:03:05.798739] [I] [thread 115898] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[16:03:05.798750] [I] [thread 115898] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[16:03:05.798802] [I] [thread 115898] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[16:03:05.798830] [D] [thread 115898] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[16:03:05.803811] [E] [thread 115898] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[16:03:05.804770] [W] [thread 115898] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:34141 went dead so we remove it[m
[32m[16:03:05.804912] [I] [thread 115898] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=1][m
[33m[1m[16:03:05.804940] [W] [thread 115898] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[31m[1m[16:03:05.810089] [E] [thread 115898] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[16:03:05.811034] [W] [thread 115898] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:37113 went dead so we remove it[m
[32m[16:03:05.811184] [I] [thread 115898] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[32m[16:03:05.811209] [I] [thread 115898] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[16:03:05.811231] [I] [thread 115898] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[16:03:05.811239] [I] [thread 115898] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[16:03:05.811257] [I] [thread 115898] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[16:03:05.811280] [I] [thread 115898] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[16:03:05.811306] [D] [thread 115898] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[16:03:05.853104] [E] [thread 115898] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[16:03:05.854274] [W] [thread 115898] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.35:41675 went dead so we remove it[m
[32m[16:03:05.854438] [I] [thread 115898] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=3][m
[32m[16:03:05.854468] [I] [thread 115898] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[16:03:05.854481] [I] [thread 115898] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[16:03:05.854510] [D] [thread 115898] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[16:03:05.882407] [D] [thread 115897] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
