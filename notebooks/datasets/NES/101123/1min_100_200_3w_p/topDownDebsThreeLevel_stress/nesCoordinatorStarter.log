
███╗░░██╗███████╗██████╗░██╗░░░██╗██╗░░░░░░█████╗░░██████╗████████╗██████╗░███████╗░█████╗░███╗░░░███╗
████╗░██║██╔════╝██╔══██╗██║░░░██║██║░░░░░██╔══██╗██╔════╝╚══██╔══╝██╔══██╗██╔════╝██╔══██╗████╗░████║
██╔██╗██║█████╗░░██████╦╝██║░░░██║██║░░░░░███████║╚█████╗░░░░██║░░░██████╔╝█████╗░░███████║██╔████╔██║
██║╚████║██╔══╝░░██╔══██╗██║░░░██║██║░░░░░██╔══██║░╚═══██╗░░░██║░░░██╔══██╗██╔══╝░░██╔══██║██║╚██╔╝██║
██║░╚███║███████╗██████╦╝╚██████╔╝███████╗██║░░██║██████╔╝░░░██║░░░██║░░██║███████╗██║░░██║██║░╚═╝░██║
╚═╝░░╚══╝╚══════╝╚═════╝░░╚═════╝░╚══════╝╚═╝░░╚═╝╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝╚══════╝╚═╝░░╚═╝╚═╝░░░░░╚═╝

▒█▀▀█ █▀▀█ █▀▀█ █▀▀█ █▀▀▄ ░▀░ █▀▀▄ █▀▀█ ▀▀█▀▀ █▀▀█ █▀▀█ 
▒█░░░ █░░█ █░░█ █▄▄▀ █░░█ ▀█▀ █░░█ █▄▄█ ░░█░░ █░░█ █▄▄▀ 
▒█▄▄█ ▀▀▀▀ ▀▀▀▀ ▀░▀▀ ▀▀▀░ ▀▀▀ ▀░░▀ ▀░░▀ ░░▀░░ ▀▀▀▀ ▀░▀▀ v0.5.215-SNAPSHOT
[32m[11:22:56.363842] [I] [thread 135070] [nesCoordinatorStarter.cpp:48] [main] start coordinator with Name: restIp
Description: NES ip of the REST server.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: coordinatorIp
Description: RPC IP address of NES Coordinator.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the Coordinator
Value: 4000
Default Value: 4000

Name: restPort
Description: Port exposed for rest endpoints
Value: 8081
Default Value: 8081

Name: dataPort
Description: Data server port of the Coordinator
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_DEBUG
Default Value: LOG_INFO

Name: enableQueryReconfiguration
Description: Enable reconfiguration of running query plans. (Default: false)
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 

Name: workerId
Description: Worker id.
Value: 0
Default Value: 0

Name: localWorkerIp
Description: Worker IP.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: coordinatorIp
Description: Server IP of the NES Coordinator to which the NES Worker should connect.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the NES Worker.
Value: 0
Default Value: 0

Name: dataPort
Description: Data port of the NES Worker.
Value: 0
Default Value: 0

Name: coordinatorPort
Description: RPC server Port of the NES Coordinator to which the NES Worker should connect. Needs to be set and needs to be the same as rpcPort in Coordinator.
Value: 4000
Default Value: 4000

Name: numberOfSlots
Description: Number of computing slots for the NES Worker.
Value: 65535
Default Value: 65535

Name: numWorkerThreads
Description: Number of worker threads.
Value: 4
Default Value: 1

Name: numberOfBuffersInGlobalBufferManager
Description: Number buffers in global buffer pool.
Value: 1024
Default Value: 1024

Name: numberOfBuffersPerWorker
Description: Number buffers in task local buffer pool.
Value: 128
Default Value: 128

Name: numberOfBuffersInSourceLocalBufferPool
Description: Number buffers in source local buffer pool.
Value: 64
Default Value: 64

Name: bufferSizeInBytes
Description: BufferSizeInBytes.
Value: 32000
Default Value: 4096

Name: parentId
Description: Parent ID of this node.
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_INFO
Default Value: LOG_INFO

Name: sourcePinList
Description: comma separated list of where to map the sources
Value: 
Default Value: 

Name: workerPinList
Description: comma separated list of where to map the worker
Value: 
Default Value: 

Name: queuePinList
Description: comma separated list of where to map the worker on the queue
Value: 
Default Value: 

Name: numaAwareness
Description: Enable Numa-Aware execution
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: monitoringWaitTime
Description: Sampling period of metrics (ms).
Value: 1000
Default Value: 1000

Name: queryCompilerType
Description: Indicates the type for the query compiler [DEFAULT_QUERY_COMPILER|NAUTILUS_QUERY_COMPILER].
Value: NAUTILUS_QUERY_COMPILER
Default Value: DEFAULT_QUERY_COMPILER

Name: compilationStrategy
Description: Indicates the optimization strategy for the query compiler [FAST|DEBUG|OPTIMIZE|PROXY_INLINING].
Value: OPTIMIZE
Default Value: OPTIMIZE

Name: pipeliningStrategy
Description: Indicates the pipelining strategy for the query compiler [OPERATOR_FUSION|OPERATOR_AT_A_TIME].
Value: OPERATOR_FUSION
Default Value: OPERATOR_FUSION

Name: queryCompilerNautilusBackendConfig
Description: Indicates the nautilus backend for the nautilus query compiler [MLIR_COMPILER|INTERPRETER|BC_INTERPRETER|FLOUNDER_COMPILER].
Value: MLIR_COMPILER
Default Value: MLIR_COMPILER

Name: outputBufferOptimizationLevel
Description: Indicates the OutputBufferAllocationStrategy [ALL|NO|ONLY_INPLACE_OPERATIONS_NO_FALLBACK,|REUSE_INPUT_BUFFER_AND_OMIT_OVERFLOW_CHECK_NO_FALLBACK,|REUSE_INPUT_BUFFER_NO_FALLBACK|OMIT_OVERFLOW_CHECK_NO_FALLBACK]. 
Value: ALL
Default Value: ALL

Name: windowingStrategy
Description: Indicates the windowingStrategy [LEGACY|SLICING|BUCKETING]. 
Value: LEGACY
Default Value: LEGACY

Name: useCompilationCache
Description: Enable use compilation caching
Value: 0
Default Value: 0

Name: numberOfPartitions
Description: Partitions in the hash table
Value: 1
Default Value: 1

Name: pageSize
Description: Page size of hash table
Value: 131072
Default Value: 131072

Name: preAllocPageCnt
Description: Page count of pre allocated pages in each bucket hash table
Value: 1
Default Value: 1

Name: cudaSdkPath
Description: Path to CUDA SDK.
Value: /usr/local/cuda
Default Value: /usr/local/cuda

Name: maxHashTableSize
Description: Maximum size of hash table
Value: 2097152
Default Value: 2097152

Name: joinStrategy
Description: Indicates the windowingStrategy[HASH_JOIN_LOCAL|HASH_JOIN_GLOBAL_LOCKING|HASH_JOIN_GLOBAL_LOCK_FREE|NESTED_LOOP_JOIN]. 
Value: NESTED_LOOP_JOIN
Default Value: NESTED_LOOP_JOIN


Name: physicalSources
Description: Physical sources


Name: nodeSpatialType
Description: specifies if the worker has no known location or if it is a fixed location node or mobile node
Value: NO_LOCATION
Default Value: NO_LOCATION

Name: locationBufferSize
Description: The amount of past locations to be recorded in order to predict the future trajectory
Value: 30
Default Value: 30

Name: locationBufferSaveRate
Description: Determines after how many location updates a new location will be inserted in the location buffer
Value: 4
Default Value: 4

Name: pathDistanceDelta
Description: when deviating further than delta meters from the current predicted path, an update of the prediction will be triggered
Value: 20
Default Value: 20

Name: nodeInfoDownloadRadius
Description: The radius in meters in which nodes will be downloaded
Value: 10000
Default Value: 10000

Name: nodeIndexUpdateThreshold
Description: Trigger download of new node info when the device is less than threshold away from the boundary of the area covered by the current info
Value: 2000
Default Value: 2000

Name: defaultCoverageRadius
Description: The coverage in meters each field node is assumed to have
Value: 1000
Default Value: 1000

Name: pathPredictionLength
Description: The Length of the predicted path to be computed
Value: 10000
Default Value: 10000

Name: speedDifferenceThresholdFactor
Description: The factor by which the speed needs to change to trigger a recalculation of reconnect predictions
Value: 1e-05
Default Value: 1e-05

Name: sendDevicePositionUpdateThreshold
Description: The distance in meters after which the device will report it's new position in meters
Value: 100
Default Value: 100

Name: pushPositionUpdates
Description: determines if position updates should be sent to the coordinator
Value: 1
Default Value: 1

Name: mobilityHandlerUpdateInterval
Description: the time which the thread running at the worker mobility handler will sleep after each iteration
Value: 10000
Default Value: 10000

Name: locationProviderType
Description: the kind of interface which the  mobile worker gets its geolocation info from
Value: BASE
Default Value: BASE

Name: locationProviderConfig
Description: the configuration data for the location interface
Value: 
Default Value: 

Name: locationProviderSimulatedStartTime
Description: The start time to be simulated if device movement is simulated
Value: 0
Default Value: 0


Name: numberOfQueues
Description: Number of processing queues.
Value: 1
Default Value: 1

Name: numberOfThreadsPerQueue
Description: Number of threads per processing queue.
Value: 0
Default Value: 0

Name: numberOfBuffersPerEpoch
Description: Number of tuple buffers allowed in one epoch.
Value: 100
Default Value: 100

Name: queryManagerMode
Description: Which mode the query manager is running in. (Dynamic, Static, NumaAware, Invalid)
Value: Dynamic
Default Value: Dynamic

Name: enableSourceSharing
Description: Enable source sharing
Value: 0
Default Value: 0

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 


Name: workerConfigPath
Description: Path to a configuration file for the internal worker.
Value: 
Default Value: 

Name: queryBatchSize
Description: The number of queryIdAndCatalogEntryMapping to be processed together
Value: 1
Default Value: 1

Name: queryMergerRule
Description: The rule to be used for performing query merging
Value: DefaultQueryMergerRule
Default Value: DefaultQueryMergerRule

Name: memoryLayoutPolicy
Description: selects the memory layout selection policy can be [FORCE_ROW_LAYOUT|FORCE_COLUMN_LAYOUT]
Value: FORCE_ROW_LAYOUT
Default Value: FORCE_ROW_LAYOUT

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: performDistributedWindowOptimization
Description: Enables the distribution of window aggregations.
Value: 1
Default Value: 1

Name: distributedWindowChildThreshold
Description: Threshold for the distribution of window aggregations.
Value: 1000
Default Value: 2

Name: distributedWindowCombinerThreshold
Description: Threshold for the insertion of pre-aggregation operators.
Value: 1
Default Value: 4

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: advanceSemanticValidation
Description: Perform advance semantic validation on the incoming queryIdAndCatalogEntryMapping. (Default: false)
Value: 0
Default Value: 0

Name: enableNemoPlacement
Description: Enables NEMO distributed window rule to use central windows instead of the distributed windows. (Default: false)
Value: 1
Default Value: 0


Name: logicalSources
Description: Logical Sources

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: restServerCorsAllowedOrigin
Description: The allowed origins to be set in the header of the responses to rest requests
Value: 
Default Value: 

[m
[32m[11:22:56.364086] [I] [thread 135070] [nesCoordinatorStarter.cpp:50] [main] creating coordinator[m
[36m[11:22:56.364313] [D] [thread 135070] [NesCoordinator.cpp:81] [NesCoordinator] NesCoordinator() restIp=192.168.2.11 restPort=8081 rpcIp=192.168.2.11 rpcPort=4000[m
[36m[11:22:56.365427] [D] [thread 135070] [ExecutablePath.cpp:80] [loadRuntimePathConfig] Detected a build dir as a execution location[m
[32m[11:22:56.365762] [I] [thread 135070] [ExecutablePath.cpp:113] [loadRuntimePathConfig] RuntimePathConfig: 
clangBinaryPath: /home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16
includePaths: 
	/home/ubuntu/git/nebulastream/build/include/nebulastream
libPaths:
	/home/ubuntu/git/nebulastream/build/nes-common/
	/home/ubuntu/git/nebulastream/build/nes-runtime/
	/home/ubuntu/git/nebulastream/build/nes-core/
	/home/ubuntu/git/nebulastream/build/nes-data-types/[m
[36m[11:22:56.366572] [D] [thread 135070] [SourceCatalog.cpp:41] [SourceCatalog] SourceCatalog: construct source catalog[m
[36m[11:22:56.366626] [D] [thread 135070] [SourceCatalog.cpp:31] [addDefaultSources] Sourcecatalog addDefaultSources[m
[36m[11:22:56.367351] [D] [thread 135070] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source default_logical already exist.[m
[36m[11:22:56.367450] [D] [thread 135070] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source default_logical[m
[36m[11:22:56.367562] [D] [thread 135070] [SourceCatalog.cpp:43] [SourceCatalog] SourceCatalog: construct source catalog successfully[m
[36m[11:22:56.367874] [D] [thread 135070] [SourceCatalogService.cpp:30] [SourceCatalogService] SourceCatalogService()[m
[36m[11:22:56.368040] [D] [thread 135070] [TopologyManagerService.cpp:36] [TopologyManagerService] TopologyManagerService()[m
[36m[11:22:56.420084] [D] [thread 135070] [RequestProcessorService.cpp:62] [RequestProcessorService] QueryRequestProcessorService()[m
[36m[11:22:56.420184] [D] [thread 135070] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[11:22:56.420683] [D] [thread 135070] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[11:22:56.421097] [D] [thread 135070] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[11:22:56.421431] [D] [thread 135070] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[11:22:56.421718] [D] [thread 135070] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[11:22:56.421905] [D] [thread 135070] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[11:22:56.422289] [D] [thread 135070] [BinaryOperatorSortRule.cpp:28] [BinaryOperatorSortRule] BinaryOperatorSortRule()[m
[36m[11:22:56.423459] [D] [thread 135070] [DistributedWindowRule.cpp:36] [DistributedWindowRule] Create DistributedWindowRule with distributedWindowChildThreshold: 1000 distributedWindowCombinerThreshold: 1[m
[36m[11:22:56.423537] [D] [thread 135070] [NemoWindowPinningRule.cpp:45] [NemoWindowPinningRule] Create NemoWindowPinningRule with distributedWindowChildThreshold: 1000 distributedWindowCombinerThreshold: 1[m
[36m[11:22:56.423829] [D] [thread 135070] [SignatureInferencePhase.cpp:26] [SignatureInferencePhase] SignatureInferencePhase()[m
[36m[11:22:56.424130] [D] [thread 135070] [QueryPlacementPhase.cpp:39] [QueryPlacementPhase] QueryPlacementPhase()[m
[36m[11:22:56.424471] [D] [thread 135070] [QueryUndeploymentPhase.cpp:35] [QueryUndeploymentPhase] QueryUndeploymentPhase()[m
[36m[11:22:56.425482] [D] [thread 135070] [QueryService.cpp:56] [QueryService] QueryService()[m
[36m[11:22:56.425989] [D] [thread 135070] [MonitoringService.cpp:37] [MonitoringService] MonitoringService: Initializing with monitoring= false[m
[36m[11:22:56.426196] [D] [thread 135070] [LatestEntriesMetricStore.cpp:23] [LatestEntriesMetricStore] LatestEntriesMetricStore: Init NewestMetricStore[m
[36m[11:22:56.426444] [D] [thread 135070] [MonitoringManager.cpp:70] [MonitoringManager] MonitoringManager: Init with monitoring= false , storage= NewestEntry [m
[33m[1m[11:22:56.426558] [W] [thread 135070] [MonitoringManager.cpp:194] [registerLogicalMonitoringStreams] MonitoringManager: Monitoring is disabled, registering of logical monitoring streams not possible.[m
[32m[11:22:56.426601] [I] [thread 135070] [nesCoordinatorStarter.cpp:53] [main] Starting Coordinator[m
[36m[11:22:56.426613] [D] [thread 135070] [NesCoordinator.cpp:159] [startCoordinator] NesCoordinator start[m
[36m[11:22:56.427035] [D] [thread 135070] [NesCoordinator.cpp:174] [startCoordinator] NesCoordinator: startCoordinatorRPCServer: Building GRPC Server[m
[32m[11:22:56.427071] [I] [thread 135079] [NesCoordinator.cpp:169] [operator()] NesCoordinator: started queryRequestProcessor[m
[36m[11:22:56.427148] [D] [thread 135079] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[11:22:56.427480] [D] [thread 135080] [NesCoordinator.cpp:180] [operator()] NesCoordinator: buildAndStartGRPCServer[m
[36m[11:22:56.434207] [D] [thread 135080] [NesCoordinator.cpp:354] [buildAndStartGRPCServer] NesCoordinator: buildAndStartGRPCServerServer listening on address=192.168.2.11:4000[m
[36m[11:22:56.434235] [D] [thread 135070] [NesCoordinator.cpp:185] [startCoordinator] NesCoordinator:buildAndStartGRPCServer: ready[m
[36m[11:22:56.434281] [D] [thread 135070] [NesCoordinator.cpp:187] [startCoordinator] NesCoordinator: Register Logical sources[m
[36m[11:22:56.434394] [D] [thread 135070] [NesCoordinator.cpp:192] [startCoordinator] NesCoordinator: Finished Registering Logical source[m
[36m[11:22:56.434405] [D] [thread 135070] [NesCoordinator.cpp:195] [startCoordinator] NesCoordinator::startCoordinator: start nes worker[m
[36m[11:22:56.434956] [D] [thread 135070] [NesWorker.cpp:65] [NesWorker] NesWorker: constructed[m
[36m[11:22:56.435156] [D] [thread 135070] [NesWorker.cpp:138] [start] NesWorker: start with blocking false workerId=0 coordinatorIp=192.168.2.11 coordinatorPort=4000 localWorkerIp=192.168.2.11 localWorkerRpcPort=0 localWorkerZmqPort=0 windowStrategy=LEGACY[m
[36m[11:22:56.435187] [D] [thread 135070] [NesWorker.cpp:140] [start] NesWorker::start: start Runtime[m
[36m[11:22:56.435297] [D] [thread 135070] [NesWorker.cpp:147] [start] NesWorker: MonitoringAgent configured with monitoring=false[m
[36m[11:22:56.435597] [D] [thread 135070] [MonitoringPlan.cpp:21] [MonitoringPlan] MonitoringPlan: Init with metrics of size 4[m
[36m[11:22:56.435677] [D] [thread 135070] [MonitoringCatalog.cpp:36] [defaultCatalog] MonitoringCatalog: Init default catalog[m
[32m[11:22:56.435767] [I] [thread 135070] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[11:22:56.436459] [I] [thread 135070] [CpuCollector.cpp:29] [CpuCollector] CpuCollector: Init CpuCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) coreNum:INTEGER(64 bits) user:INTEGER(64 bits) nice:INTEGER(64 bits) system:INTEGER(64 bits) idle:INTEGER(64 bits) iowait:INTEGER(64 bits) irq:INTEGER(64 bits) softirq:INTEGER(64 bits) steal:INTEGER(64 bits) guest:INTEGER(64 bits) guestnice:INTEGER(64 bits)[m
[32m[11:22:56.436539] [I] [thread 135070] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[11:22:56.436807] [I] [thread 135070] [DiskCollector.cpp:30] [DiskCollector] DiskCollector: Init DiskCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) F_BSIZE:INTEGER(64 bits) F_FRSIZE:INTEGER(64 bits) F_BLOCKS:INTEGER(64 bits) F_BFREE:INTEGER(64 bits) F_BAVAIL:INTEGER(64 bits)[m
[32m[11:22:56.436860] [I] [thread 135070] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[11:22:56.437367] [I] [thread 135070] [MemoryCollector.cpp:29] [MemoryCollector] MemoryCollector: Init MemoryCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) TOTAL_RAM:INTEGER(64 bits) TOTAL_SWAP:INTEGER(64 bits) FREE_RAM:INTEGER(64 bits) SHARED_RAM:INTEGER(64 bits) BUFFER_RAM:INTEGER(64 bits) FREE_SWAP:INTEGER(64 bits) TOTAL_HIGH:INTEGER(64 bits) FREE_HIGH:INTEGER(64 bits) PROCS:INTEGER(64 bits) MEM_UNIT:INTEGER(64 bits) LOADS_1MIN:INTEGER(64 bits) LOADS_5MIN:INTEGER(64 bits) LOADS_15MIN:INTEGER(64 bits)[m
[32m[11:22:56.437424] [I] [thread 135070] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[11:22:56.438286] [I] [thread 135070] [NetworkCollector.cpp:30] [NetworkCollector] NetworkCollector: Init NetworkCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)[m
[36m[11:22:56.438677] [D] [thread 135070] [MonitoringCatalog.cpp:28] [MonitoringCatalog] MonitoringCatalog: Init with collector map of size 4[m
[36m[11:22:56.438932] [D] [thread 135070] [MonitoringAgent.cpp:43] [MonitoringAgent] MonitoringAgent: Init with monitoring plan MonitoringPlan:disk(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True); and enabled=false[m
[33m[1m[11:22:56.439017] [W] [thread 135070] [MonitoringAgent.cpp:117] [addMonitoringStreams] MonitoringAgent: Monitoring is disabled, registering of physical monitoring streams not possible.[m
[36m[11:22:56.451093] [D] [thread 135070] [BufferManager.cpp:107] [initialize] NES memory allocation requires 32768000 out of 3975450624 available bytes[m
[36m[11:22:56.464161] [D] [thread 135070] [BufferManager.cpp:160] [initialize] BufferManager configuration bufferSize=32000 numOfBuffers=1024[m
[36m[11:22:56.515153] [D] [thread 135070] [QueryManager.cpp:78] [DynamicQueryManager] QueryManger: use dynamic mode with numThreads= 4[m
[33m[1m[11:22:56.515645] [W] [thread 135070] [NodeEngineBuilder.cpp:291] [createQueryCompilationOptions] The LEGACY window strategy is not supported by Nautilus. Switch to SLICING![m
[36m[11:22:56.515753] [D] [thread 135070] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[11:22:56.515858] [D] [thread 135070] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[11:22:56.515947] [D] [thread 135070] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[11:22:56.516018] [D] [thread 135070] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[11:22:56.516232] [D] [thread 135070] [NodeEngineBuilder.cpp:238] [build] Creating default OpenCLManager[m
[36m[11:22:56.516367] [D] [thread 135070] [OpenCLManager.cpp:230] [OpenCLManager] OpenCL support was disabled at build time[m
[36m[11:22:56.516669] [D] [thread 135070] [ExchangeProtocol.cpp:30] [ExchangeProtocol] ExchangeProtocol: Initializing ExchangeProtocol()[m
[36m[11:22:56.516874] [D] [thread 135070] [ZmqServer.cpp:69] [ZmqServer] ZmqServer(192.168.2.11:0) Creating ZmqServer()[m
[36m[11:22:56.516954] [D] [thread 135070] [ZmqServer.cpp:78] [start] ZmqServer(192.168.2.11:0): Starting server..[m
[36m[11:22:56.519330] [D] [thread 135085] [ZmqServer.cpp:156] [routerLoop] ZmqServer(192.168.2.11:0):  Trying to bind on tcp://192.168.2.11:0[m
[36m[11:22:56.520966] [D] [thread 135085] [ZmqServer.cpp:161] [routerLoop] ZmqServer(192.168.2.11:0):  Created socket on 192.168.2.11: 0[m
[36m[11:22:56.521119] [D] [thread 135085] [ZmqServer.cpp:176] [routerLoop] ZmqServer: Created socket on 192.168.2.11: 39645[m
[36m[11:22:56.522319] [D] [thread 135088] [ZmqServer.cpp:254] [messageHandlerEventLoop] Created Zmq Handler Thread #0 on 192.168.2.11: 39645[m
[36m[11:22:56.522319] [D] [thread 135089] [ZmqServer.cpp:254] [messageHandlerEventLoop] Created Zmq Handler Thread #1 on 192.168.2.11: 39645[m
[32m[11:22:56.522471] [I] [thread 135070] [NetworkManager.cpp:36] [NetworkManager] NetworkManager: Server started successfully on tcp://192.168.2.11:39645[m
[36m[11:22:56.522571] [D] [thread 135070] [QueryManager.cpp:140] [startThreadPool] startThreadPool: setup thread pool for nodeEngineId= 1699743887  with numThreads= 4[m
[36m[11:22:56.522914] [D] [thread 135070] [ThreadPool.cpp:108] [start] Threadpool: Spawning 4 threads[m
[36m[11:22:56.524055] [D] [thread 135070] [ThreadPool.cpp:152] [start] Threadpool: start return from start[m
[36m[11:22:56.524125] [D] [thread 135070] [NodeEngine.cpp:78] [NodeEngine] NodeEngine(): thread pool successfully started[m
[36m[11:22:56.524147] [D] [thread 135090] [ThreadPool.cpp:147] [operator()] worker 0 with workerId 1 pins to queue 0[m
[36m[11:22:56.524147] [D] [thread 135091] [ThreadPool.cpp:147] [operator()] worker 1 with workerId 2 pins to queue 0[m
[36m[11:22:56.524279] [D] [thread 135070] [NesWorker.cpp:156] [start] NesWorker: Node engine started successfully[m
[36m[11:22:56.524310] [D] [thread 135070] [NesWorker.cpp:164] [start] NesWorker: request startWorkerRPCServer for accepting messages for address=192.168.2.11:0: 0[m
[36m[11:22:56.524705] [D] [thread 135093] [ThreadPool.cpp:147] [operator()] worker 3 with workerId 0 pins to queue 0[m
[36m[11:22:56.524901] [D] [thread 135091] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=1024 requested buffers=128[m
[36m[11:22:56.525101] [D] [thread 135092] [ThreadPool.cpp:147] [operator()] worker 2 with workerId 3 pins to queue 0[m
[36m[11:22:56.525244] [D] [thread 135094] [NesWorker.cpp:176] [operator()] NesWorker: buildAndStartGRPCServer[m
[36m[11:22:56.525688] [D] [thread 135094] [WorkerRPCServer.cpp:38] [WorkerRPCServer] WorkerRPCServer::WorkerRPCServer()[m
[36m[11:22:56.525805] [D] [thread 135090] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=896 requested buffers=128[m
[36m[11:22:56.526388] [D] [thread 135093] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=768 requested buffers=128[m
[36m[11:22:56.527102] [D] [thread 135092] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=640 requested buffers=128[m
[36m[11:22:56.529029] [D] [thread 135094] [NesWorker.cpp:117] [buildAndStartGRPCServer] NesWorker: buildAndStartGRPCServer Server listening on address 192.168.2.11:0: 35597[m
[36m[11:22:56.529069] [D] [thread 135070] [NesWorker.cpp:184] [start] NesWorker: startWorkerRPCServer ready for accepting messages for address=192.168.2.11:35597: 35597[m
[36m[11:22:56.529094] [D] [thread 135070] [NesWorker.cpp:187] [start] NesWorker: start with connect[m
[36m[11:22:56.529122] [D] [thread 135070] [NesWorker.cpp:306] [connect] NesWorker::connect() Registering worker with coordinator at 192.168.2.11:4000[m
[36m[11:22:56.529228] [D] [thread 135070] [CoordinatorRPCClient.cpp:152] [CoordinatorRPCClient] CoordinatorRPCClient(): creating channels to address =192.168.2.11:4000[m
[36m[11:22:56.531385] [D] [thread 135094] [CallData.cpp:36] [proceed] RequestInSyncInCreate=[m
[36m[11:22:56.532038] [D] [thread 135070] [CoordinatorRPCClient.cpp:156] [CoordinatorRPCClient] CoordinatorRPCClient::connecting: channel successfully created[m
[33m[1m[11:22:56.533171] [W] [thread 135070] [MonitoringAgent.cpp:96] [getRegistrationMetrics] MonitoringAgent: Metrics disabled. Return empty metric object for registration.[m
[36m[11:22:56.533225] [D] [thread 135070] [RegistrationMetrics.cpp:32] [RegistrationMetrics] RegistrationMetrics: Default ctor[m
[36m[11:22:56.535356] [D] [thread 135070] [CoordinatorRPCClient.cpp:387] [registerWorker] CoordinatorRPCClient::RegisterNodeRequest request=address: "192.168.2.11"
grpcPort: 35597
dataPort: 39645
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:22:56.548913] [D] [thread 135081] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.11"
grpcPort: 35597
dataPort: 39645
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:22:56.549233] [D] [thread 135081] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.11"
grpcPort: 35597
dataPort: 39645
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:22:56.549401] [D] [thread 135081] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[33m[1m[11:22:56.549429] [W] [thread 135081] [Topology.cpp:280] [toString] Topology: No root node found[m
[36m[11:22:56.549443] [D] [thread 135081] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:22:56.549457] [D] [thread 135081] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:22:56.549500] [D] [thread 135081] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 1 and resources 65535[m
[36m[11:22:56.549729] [D] [thread 135081] [TopologyManagerService.cpp:99] [registerWorker] TopologyManagerService::registerWorker: tree is empty so this becomes new root[m
[32m[11:22:56.549836] [I] [thread 135081] [Topology.cpp:356] [setAsRoot] Topology: Setting physical node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0] as root to the topology.[m
[36m[11:22:56.549970] [D] [thread 135081] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:22:56.550243] [D] [thread 135081] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
[m
[32m[11:22:56.550354] [I] [thread 135081] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:22:56.550393] [D] [thread 135081] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:22:56.550435] [D] [thread 135081] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:22:56.550448] [D] [thread 135081] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:22:56.550485] [D] [thread 135081] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:22:56.551892] [D] [thread 135081] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=1[m
[36m[11:22:56.553780] [D] [thread 135070] [NesWorker.cpp:334] [connect] NesWorker::connect() Worker registered successfully and got id=1[m
[36m[11:22:56.553866] [D] [thread 135070] [NesWorker.cpp:341] [connect] NesWorker::connect() Persisting workerId=1 in yaml file for the first time.[m
[36m[11:22:56.553980] [D] [thread 135070] [NesWorker.cpp:347] [connect] NesWorker::connect() Persisted workerId=1 successfully in yaml file.[m
[36m[11:22:56.553996] [D] [thread 135070] [NesWorker.cpp:362] [connect] NesWorker::registerWorker rpc register success with id 1[m
[36m[11:22:56.588524] [D] [thread 135070] [NesWorker.cpp:368] [connect] NesWorker start health check[m
[36m[11:22:56.588654] [D] [thread 135070] [WorkerHealthCheckService.cpp:39] [startHealthCheck] WorkerHealthCheckService::startHealthCheck worker id= 1[m
[36m[11:22:56.588669] [D] [thread 135070] [WorkerHealthCheckService.cpp:41] [startHealthCheck] start health checking on worker[m
[36m[11:22:56.589269] [D] [thread 135070] [NesWorker.cpp:247] [start] NesWorker: started, return[m
[36m[11:22:56.589479] [D] [thread 135070] [NesCoordinator.cpp:210] [startCoordinator] NesCoordinator starting rest server[m
[36m[11:22:56.590221] [D] [thread 135070] [NesCoordinator.cpp:239] [startCoordinator] NesCoordinator::startCoordinatorRESTServer: ready[m
[32m[11:22:56.590307] [I] [thread 135098] [RestServer.cpp:64] [start] Starting Oatpp Server on 192.168.2.11:8081[m
[32m[11:22:56.606681] [I] [thread 135098] [RestServer.cpp:166] [run] NebulaStream REST Server listening on port 8081[m
[36m[11:22:56.606814] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:22:56.621734] [D] [thread 135070] [NesCoordinator.cpp:244] [startCoordinator] NesCoordinator start health check[m
[36m[11:22:56.621828] [D] [thread 135070] [CoordinatortHealthCheckService.cpp:34] [startHealthCheck] CoordinatorHealthCheckService::startHealthCheck[m
[36m[11:22:56.621892] [D] [thread 135070] [CoordinatortHealthCheckService.cpp:36] [startHealthCheck] start health checking on coordinator[m
[36m[11:22:56.622377] [D] [thread 135070] [NesCoordinator.cpp:248] [startCoordinator] NesCoordinator started, join now and waiting for work[m
[36m[11:22:57.608056] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:22:58.609355] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:22:59.610626] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:00.102009] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:00.103389] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:00.105549] [D] [thread 135101] [SourceCatalogController.hpp:125] [addLogicalSource] SourceCatalogController: addLogicalSource: REST received request to add new Logical Source.[m
[36m[11:23:00.108673] [D] [thread 135101] [SourceCatalogController.hpp:144] [addLogicalSource] SourceCatalogController: addLogicalSource: Try to add new Logical Source debs and Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));[m
[36m[11:23:00.108767] [D] [thread 135101] [SourceCatalogService.cpp:92] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source=debs schema= Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));[m
[36m[11:23:00.108881] [D] [thread 135101] [QueryParsingService.cpp:53] [createSchemaFromCode] QueryParsingService : generated code= #include <API/Schema.hpp>
#include <Common/DataTypes/DataTypeFactory.hpp>
namespace NES{
Schema createSchema(){
return Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));;}
}
[m
[36m[11:23:00.111286] [D] [thread 135102] [File.cpp:27] [createFile] Create File to file:///tmp/query_13-11-2023_11-23-00_6008683.cpp[m
[36m[11:23:00.112135] [D] [thread 135102] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[11:23:00.112808] [D] [thread 135102] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DFMT_HEADER_ONLY -DNES_COMPILE_TIME_LOG_LEVEL=6 -I/home/ubuntu/git/nebulastream/build/include/nebulastream -L/home/ubuntu/git/nebulastream/build/nes-core/ -L/home/ubuntu/git/nebulastream/build/nes-common/ -o/tmp/query_13-11-2023_11-23-00_6008683.so -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -shared -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -Wparentheses-equality -fpic -fno-trigraphs -std=c++20 -stdlib=libstdc++ /tmp/query_13-11-2023_11-23-00_6008683.cpp'[m
[36m[11:23:01.104638] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:23:01.843993] [I] [thread 135102] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 1732.81887ms[m
[36m[11:23:01.846805] [D] [thread 135101] [SourceCatalog.cpp:49] [addLogicalSource] SourceCatalog: schema successfully created[m
[36m[11:23:01.847111] [D] [thread 135101] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source debs already exist.[m
[36m[11:23:01.847183] [D] [thread 135101] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source debs[m
[36m[11:23:01.847289] [D] [thread 135101] [SourceCatalogController.hpp:146] [addLogicalSource] SourceCatalogController: addLogicalSource: Successfully added new logical Source ? true[m
[36m[11:23:02.069086] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:02.069627] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:23:02.070305] [I] [thread 135107] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:23:02.071547] [I] [thread 135107] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:23:02.371924] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:02.372395] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:23:02.373276] [I] [thread 135108] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:23:02.373860] [I] [thread 135108] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:23:02.543205] [D] [thread 135096] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.12"
grpcPort: 41303
dataPort: 36101
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:23:02.543482] [D] [thread 135096] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.12"
grpcPort: 41303
dataPort: 36101
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:23:02.543561] [D] [thread 135096] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:23:02.543815] [D] [thread 135096] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:23:02.543854] [D] [thread 135096] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:23:02.543914] [D] [thread 135096] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 2 and resources 65535[m
[36m[11:23:02.544109] [D] [thread 135096] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:23:02.544213] [I] [thread 135096] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:23:02.544499] [I] [thread 135096] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:23:02.544749] [D] [thread 135096] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 2[m
[36m[11:23:02.545046] [D] [thread 135096] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:23:02.545321] [D] [thread 135096] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[11:23:02.545434] [I] [thread 135096] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[11:23:02.545474] [D] [thread 135096] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[11:23:02.545522] [D] [thread 135096] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:23:02.545547] [D] [thread 135096] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:23:02.545573] [D] [thread 135096] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:23:02.546218] [D] [thread 135096] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=2[m
[36m[11:23:03.373749] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:04.375044] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:05.376400] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:06.016452] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:06.016934] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:23:06.017812] [I] [thread 135109] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:23:06.018892] [I] [thread 135109] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:23:06.163781] [D] [thread 135096] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.30"
grpcPort: 44835
dataPort: 36857
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:23:06.163946] [D] [thread 135096] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.30"
grpcPort: 44835
dataPort: 36857
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:23:06.163994] [D] [thread 135096] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:23:06.164184] [D] [thread 135096] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:23:06.164209] [D] [thread 135096] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:23:06.164259] [D] [thread 135096] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 3 and resources 65535[m
[36m[11:23:06.164450] [D] [thread 135096] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:23:06.164529] [I] [thread 135096] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:23:06.164644] [I] [thread 135096] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:23:06.164735] [D] [thread 135096] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 3[m
[36m[11:23:06.164822] [D] [thread 135096] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:23:06.165077] [D] [thread 135096] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[11:23:06.165136] [I] [thread 135096] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[11:23:06.165161] [D] [thread 135096] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[11:23:06.165197] [D] [thread 135096] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:23:06.165215] [D] [thread 135096] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:23:06.165236] [D] [thread 135096] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:23:06.165763] [D] [thread 135096] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=3[m
[36m[11:23:07.018208] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:08.019515] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:09.020821] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:09.757673] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:09.758140] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:23:09.758947] [I] [thread 135110] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:23:09.760125] [I] [thread 135110] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:23:09.903072] [D] [thread 135081] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.31"
grpcPort: 34183
dataPort: 43553
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:23:09.903336] [D] [thread 135081] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.31"
grpcPort: 34183
dataPort: 43553
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:23:09.903412] [D] [thread 135081] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:23:09.903734] [D] [thread 135081] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:23:09.903765] [D] [thread 135081] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:23:09.903823] [D] [thread 135081] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 4 and resources 65535[m
[36m[11:23:09.903986] [D] [thread 135081] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:23:09.904073] [I] [thread 135081] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:23:09.904215] [I] [thread 135081] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:23:09.904306] [D] [thread 135081] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 4[m
[36m[11:23:09.904474] [D] [thread 135081] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:23:09.904779] [D] [thread 135081] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[11:23:09.904846] [I] [thread 135081] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[11:23:09.904881] [D] [thread 135081] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[11:23:09.904924] [D] [thread 135081] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:23:09.904948] [D] [thread 135081] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:23:09.904974] [D] [thread 135081] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:23:09.905593] [D] [thread 135081] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=4[m
[36m[11:23:10.759368] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:11.760597] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:12.761791] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:13.698278] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:13.698753] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:23:13.699462] [I] [thread 135111] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:23:13.700952] [I] [thread 135111] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:23:13.854155] [D] [thread 135096] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.32"
grpcPort: 44765
dataPort: 43981
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:23:13.854414] [D] [thread 135096] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.32"
grpcPort: 44765
dataPort: 43981
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:23:13.854493] [D] [thread 135096] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:23:13.855052] [D] [thread 135096] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:23:13.855125] [D] [thread 135096] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:23:13.855260] [D] [thread 135096] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 5 and resources 65535[m
[36m[11:23:13.855480] [D] [thread 135096] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:23:13.855679] [I] [thread 135096] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:23:13.856012] [I] [thread 135096] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:23:13.856283] [D] [thread 135096] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 5[m
[36m[11:23:13.856500] [D] [thread 135096] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:23:13.857185] [D] [thread 135096] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[11:23:13.857295] [I] [thread 135096] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[11:23:13.857333] [D] [thread 135096] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[11:23:13.857382] [D] [thread 135096] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:23:13.857407] [D] [thread 135096] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:23:13.857469] [D] [thread 135096] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:23:13.858406] [D] [thread 135096] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=5[m
[36m[11:23:13.894960] [D] [thread 135096] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 5
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream4"
  logicalSourceName: "debs"
}
[m
[32m[11:23:13.895076] [I] [thread 135096] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[11:23:13.895109] [D] [thread 135096] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[11:23:13.895230] [D] [thread 135096] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= test_stream4 logical source= debs[m
[36m[11:23:13.895866] [D] [thread 135096] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:23:13.896016] [D] [thread 135096] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream4[m
[36m[11:23:13.896592] [D] [thread 135096] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream4 does not exist, try to add[m
[36m[11:23:13.896701] [D] [thread 135096] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:23:13.896810] [D] [thread 135096] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[11:23:13.896844] [D] [thread 135096] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:23:13.901017] [D] [thread 135112] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 5
oldParent: 1
newParent: 2
[m
[36m[11:23:13.901143] [D] [thread 135112] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 5  parentId= 1[m
[32m[11:23:13.901173] [I] [thread 135112] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[11:23:13.901202] [D] [thread 135112] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[11:23:13.901229] [D] [thread 135112] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  5  exists[m
[32m[11:23:13.901244] [I] [thread 135112] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:23:13.901260] [D] [thread 135112] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:23:13.901278] [D] [thread 135112] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:23:13.901358] [D] [thread 135112] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:23:13.901498] [I] [thread 135112] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:23:13.901555] [D] [thread 135112] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:23:13.901577] [D] [thread 135112] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:23:13.901606] [D] [thread 135112] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 5  parentId= 2[m
[32m[11:23:13.901624] [I] [thread 135112] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[11:23:13.901643] [D] [thread 135112] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[11:23:13.901663] [D] [thread 135112] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 5 exists[m
[32m[11:23:13.901678] [I] [thread 135112] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[11:23:13.901693] [D] [thread 135112] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[11:23:13.901712] [D] [thread 135112] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[11:23:13.901808] [I] [thread 135112] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[36m[11:23:13.901859] [D] [thread 135112] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:23:13.902128] [D] [thread 135112] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[11:23:13.902154] [D] [thread 135112] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:23:14.699986] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:15.701284] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:16.702581] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:17.681681] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:17.682159] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:23:17.683420] [I] [thread 135113] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:23:17.685435] [I] [thread 135113] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:23:17.827007] [D] [thread 135112] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.33"
grpcPort: 45805
dataPort: 45005
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:23:17.827225] [D] [thread 135112] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.33"
grpcPort: 45805
dataPort: 45005
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:23:17.827292] [D] [thread 135112] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:23:17.827620] [D] [thread 135112] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:23:17.827672] [D] [thread 135112] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:23:17.827744] [D] [thread 135112] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 6 and resources 65535[m
[36m[11:23:17.827885] [D] [thread 135112] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:23:17.827954] [I] [thread 135112] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:23:17.828066] [I] [thread 135112] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:23:17.828134] [D] [thread 135112] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 6[m
[36m[11:23:17.828220] [D] [thread 135112] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:23:17.828586] [D] [thread 135112] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[11:23:17.828645] [I] [thread 135112] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[11:23:17.828672] [D] [thread 135112] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[11:23:17.828708] [D] [thread 135112] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:23:17.828726] [D] [thread 135112] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:23:17.828746] [D] [thread 135112] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:23:17.829247] [D] [thread 135112] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=6[m
[36m[11:23:17.865493] [D] [thread 135112] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 6
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream5"
  logicalSourceName: "debs"
}
[m
[32m[11:23:17.865618] [I] [thread 135112] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[11:23:17.865660] [D] [thread 135112] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[11:23:17.865748] [D] [thread 135112] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= test_stream5 logical source= debs[m
[36m[11:23:17.865954] [D] [thread 135112] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:23:17.866004] [D] [thread 135112] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream5[m
[36m[11:23:17.866119] [D] [thread 135112] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[11:23:17.866173] [D] [thread 135112] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream5 does not exist, try to add[m
[36m[11:23:17.866205] [D] [thread 135112] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:23:17.866280] [D] [thread 135112] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[11:23:17.866308] [D] [thread 135112] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:23:17.870255] [D] [thread 135112] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 6
oldParent: 1
newParent: 2
[m
[36m[11:23:17.870367] [D] [thread 135112] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 6  parentId= 1[m
[32m[11:23:17.870396] [I] [thread 135112] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[11:23:17.870424] [D] [thread 135112] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[11:23:17.870451] [D] [thread 135112] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  6  exists[m
[32m[11:23:17.870466] [I] [thread 135112] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:23:17.870482] [D] [thread 135112] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:23:17.870500] [D] [thread 135112] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:23:17.870575] [D] [thread 135112] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:23:17.870715] [I] [thread 135112] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:23:17.870752] [D] [thread 135112] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:23:17.870774] [D] [thread 135112] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:23:17.870794] [D] [thread 135112] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 6  parentId= 2[m
[32m[11:23:17.870812] [I] [thread 135112] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[11:23:17.870830] [D] [thread 135112] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[11:23:17.870850] [D] [thread 135112] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 6 exists[m
[32m[11:23:17.870864] [I] [thread 135112] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[11:23:17.870880] [D] [thread 135112] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[11:23:17.870898] [D] [thread 135112] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[11:23:17.870997] [I] [thread 135112] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[36m[11:23:17.871063] [D] [thread 135112] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:23:17.871369] [D] [thread 135112] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[11:23:17.871398] [D] [thread 135112] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:23:18.683454] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:19.684749] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:20.686049] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:21.684222] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:21.684755] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:23:21.685540] [I] [thread 135116] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:23:21.687443] [I] [thread 135116] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:23:21.831391] [D] [thread 135114] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.34"
grpcPort: 43563
dataPort: 46309
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:23:21.831611] [D] [thread 135114] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.34"
grpcPort: 43563
dataPort: 46309
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:23:21.831675] [D] [thread 135114] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:23:21.832010] [D] [thread 135114] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:23:21.832056] [D] [thread 135114] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:23:21.832118] [D] [thread 135114] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 7 and resources 65535[m
[36m[11:23:21.832245] [D] [thread 135114] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:23:21.832308] [I] [thread 135114] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:23:21.832461] [I] [thread 135114] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:23:21.832530] [D] [thread 135114] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 7[m
[36m[11:23:21.832612] [D] [thread 135114] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:23:21.832955] [D] [thread 135114] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[11:23:21.833040] [I] [thread 135114] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[11:23:21.833068] [D] [thread 135114] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[11:23:21.833104] [D] [thread 135114] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:23:21.833120] [D] [thread 135114] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:23:21.833140] [D] [thread 135114] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:23:21.833608] [D] [thread 135114] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=7[m
[36m[11:23:21.870456] [D] [thread 135114] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 7
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream6"
  logicalSourceName: "debs"
}
[m
[32m[11:23:21.870735] [I] [thread 135114] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[11:23:21.870778] [D] [thread 135114] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[11:23:21.870871] [D] [thread 135114] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= test_stream6 logical source= debs[m
[36m[11:23:21.871075] [D] [thread 135114] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:23:21.871130] [D] [thread 135114] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream6[m
[36m[11:23:21.871205] [D] [thread 135114] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[11:23:21.871239] [D] [thread 135114] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[11:23:21.871276] [D] [thread 135114] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream6 does not exist, try to add[m
[36m[11:23:21.871325] [D] [thread 135114] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:23:21.871388] [D] [thread 135114] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[11:23:21.871416] [D] [thread 135114] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:23:21.876710] [D] [thread 135117] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 7
oldParent: 1
newParent: 3
[m
[36m[11:23:21.876831] [D] [thread 135117] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 7  parentId= 1[m
[32m[11:23:21.876863] [I] [thread 135117] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[11:23:21.876894] [D] [thread 135117] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[11:23:21.876923] [D] [thread 135117] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  7  exists[m
[32m[11:23:21.876941] [I] [thread 135117] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:23:21.876958] [D] [thread 135117] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:23:21.876980] [D] [thread 135117] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:23:21.877055] [D] [thread 135117] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:23:21.877208] [I] [thread 135117] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:23:21.877300] [D] [thread 135117] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:23:21.877335] [D] [thread 135117] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:23:21.877359] [D] [thread 135117] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 7  parentId= 3[m
[32m[11:23:21.877490] [I] [thread 135117] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[11:23:21.877527] [D] [thread 135117] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[11:23:21.877551] [D] [thread 135117] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 7 exists[m
[32m[11:23:21.877569] [I] [thread 135117] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[11:23:21.877586] [D] [thread 135117] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[11:23:21.877716] [D] [thread 135117] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[11:23:21.877943] [I] [thread 135117] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[11:23:21.878012] [D] [thread 135117] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:23:21.878881] [D] [thread 135117] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[11:23:21.878997] [D] [thread 135117] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:23:22.686027] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:23.687363] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:24.688585] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:25.564673] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:25.565132] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:23:25.566108] [I] [thread 135119] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:23:25.568464] [I] [thread 135119] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:23:25.707631] [D] [thread 135117] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.35"
grpcPort: 44745
dataPort: 46533
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:23:25.707897] [D] [thread 135117] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.35"
grpcPort: 44745
dataPort: 46533
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:23:25.707974] [D] [thread 135117] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:23:25.708560] [D] [thread 135117] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:23:25.708636] [D] [thread 135117] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:23:25.708713] [D] [thread 135117] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 8 and resources 65535[m
[36m[11:23:25.708883] [D] [thread 135117] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:23:25.708975] [I] [thread 135117] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:23:25.709116] [I] [thread 135117] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:23:25.709200] [D] [thread 135117] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 8[m
[36m[11:23:25.709300] [D] [thread 135117] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:23:25.709792] [D] [thread 135117] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[11:23:25.709856] [I] [thread 135117] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[11:23:25.709888] [D] [thread 135117] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[11:23:25.709933] [D] [thread 135117] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:23:25.709956] [D] [thread 135117] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:23:25.709983] [D] [thread 135117] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:23:25.710599] [D] [thread 135117] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=8[m
[36m[11:23:25.746895] [D] [thread 135114] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 8
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream7"
  logicalSourceName: "debs"
}
[m
[32m[11:23:25.747021] [I] [thread 135114] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[11:23:25.747064] [D] [thread 135114] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[11:23:25.747155] [D] [thread 135114] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= test_stream7 logical source= debs[m
[36m[11:23:25.747361] [D] [thread 135114] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:23:25.747412] [D] [thread 135114] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream7[m
[36m[11:23:25.747534] [D] [thread 135114] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[11:23:25.747577] [D] [thread 135114] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[11:23:25.747872] [D] [thread 135114] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[11:23:25.747981] [D] [thread 135114] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream7 does not exist, try to add[m
[36m[11:23:25.748032] [D] [thread 135114] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:23:25.748402] [D] [thread 135114] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[11:23:25.748554] [D] [thread 135114] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:23:25.753645] [D] [thread 135120] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 8
oldParent: 1
newParent: 3
[m
[36m[11:23:25.753780] [D] [thread 135120] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 8  parentId= 1[m
[32m[11:23:25.753817] [I] [thread 135120] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[11:23:25.753853] [D] [thread 135120] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[11:23:25.753886] [D] [thread 135120] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  8  exists[m
[32m[11:23:25.753906] [I] [thread 135120] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:23:25.753928] [D] [thread 135120] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:23:25.753952] [D] [thread 135120] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:23:25.754040] [D] [thread 135120] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:23:25.754211] [I] [thread 135120] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:23:25.754257] [D] [thread 135120] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:23:25.754301] [D] [thread 135120] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:23:25.754331] [D] [thread 135120] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 8  parentId= 3[m
[32m[11:23:25.754355] [I] [thread 135120] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[11:23:25.754381] [D] [thread 135120] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[11:23:25.754408] [D] [thread 135120] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 8 exists[m
[32m[11:23:25.754428] [I] [thread 135120] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[11:23:25.754450] [D] [thread 135120] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[11:23:25.754474] [D] [thread 135120] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[11:23:25.754616] [I] [thread 135120] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[11:23:25.754683] [D] [thread 135120] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:23:25.755168] [D] [thread 135120] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[11:23:25.755206] [D] [thread 135120] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:23:26.566387] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:27.567685] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:28.568996] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:29.553418] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:29.553908] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:23:29.554712] [I] [thread 135121] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:23:29.557128] [I] [thread 135121] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:23:29.703470] [D] [thread 135120] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.37"
grpcPort: 33647
dataPort: 43235
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:23:29.703734] [D] [thread 135120] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.37"
grpcPort: 33647
dataPort: 43235
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:23:29.703813] [D] [thread 135120] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:23:29.704434] [D] [thread 135120] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:23:29.704507] [D] [thread 135120] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:23:29.704584] [D] [thread 135120] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 9 and resources 65535[m
[36m[11:23:29.704763] [D] [thread 135120] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:23:29.704853] [I] [thread 135120] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:23:29.704997] [I] [thread 135120] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:23:29.705082] [D] [thread 135120] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 9[m
[36m[11:23:29.705184] [D] [thread 135120] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:23:29.705740] [D] [thread 135120] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[11:23:29.705888] [I] [thread 135120] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[11:23:29.705930] [D] [thread 135120] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[11:23:29.705982] [D] [thread 135120] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:23:29.706006] [D] [thread 135120] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:23:29.706032] [D] [thread 135120] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:23:29.706635] [D] [thread 135120] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=9[m
[36m[11:23:29.743243] [D] [thread 135120] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 9
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream8"
  logicalSourceName: "debs"
}
[m
[32m[11:23:29.743359] [I] [thread 135120] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[11:23:29.743396] [D] [thread 135120] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[11:23:29.743474] [D] [thread 135120] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= test_stream8 logical source= debs[m
[36m[11:23:29.743678] [D] [thread 135120] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:23:29.743730] [D] [thread 135120] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream8[m
[36m[11:23:29.743808] [D] [thread 135120] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[11:23:29.743842] [D] [thread 135120] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[11:23:29.743870] [D] [thread 135120] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[11:23:29.743898] [D] [thread 135120] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[11:23:29.743934] [D] [thread 135120] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream8 does not exist, try to add[m
[36m[11:23:29.743964] [D] [thread 135120] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:23:29.744016] [D] [thread 135120] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[11:23:29.744041] [D] [thread 135120] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:23:29.748603] [D] [thread 135114] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 9
oldParent: 1
newParent: 4
[m
[36m[11:23:29.748734] [D] [thread 135114] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 9  parentId= 1[m
[32m[11:23:29.748772] [I] [thread 135114] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[11:23:29.748808] [D] [thread 135114] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[11:23:29.748842] [D] [thread 135114] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  9  exists[m
[32m[11:23:29.748862] [I] [thread 135114] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:23:29.748884] [D] [thread 135114] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:23:29.748908] [D] [thread 135114] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:23:29.748997] [D] [thread 135114] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:23:29.749174] [I] [thread 135114] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:23:29.749284] [D] [thread 135114] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:23:29.749315] [D] [thread 135114] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:23:29.749439] [D] [thread 135114] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 9  parentId= 4[m
[32m[11:23:29.749508] [I] [thread 135114] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[11:23:29.749541] [D] [thread 135114] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[11:23:29.749568] [D] [thread 135114] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 9 exists[m
[32m[11:23:29.749636] [I] [thread 135114] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[11:23:29.749704] [D] [thread 135114] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[11:23:29.749741] [D] [thread 135114] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  4  exists[m
[32m[11:23:29.750031] [I] [thread 135114] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[11:23:29.750198] [D] [thread 135114] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:23:29.751555] [D] [thread 135114] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[11:23:29.751603] [D] [thread 135114] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:23:30.555176] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:31.556468] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:32.557767] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:33.559079] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:33.570558] [D] [thread 135122] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.38"
grpcPort: 40217
dataPort: 40449
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:23:33.570825] [D] [thread 135122] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.38"
grpcPort: 40217
dataPort: 40449
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:23:33.570907] [D] [thread 135122] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:23:33.571489] [D] [thread 135122] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:23:33.571520] [D] [thread 135122] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:23:33.571566] [D] [thread 135122] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 10 and resources 65535[m
[36m[11:23:33.571792] [D] [thread 135122] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:23:33.571862] [I] [thread 135122] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:23:33.571963] [I] [thread 135122] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:23:33.572030] [D] [thread 135122] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 10[m
[36m[11:23:33.572111] [D] [thread 135122] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:23:33.572565] [D] [thread 135122] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[11:23:33.572625] [I] [thread 135122] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[11:23:33.572652] [D] [thread 135122] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[11:23:33.572689] [D] [thread 135122] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:23:33.572705] [D] [thread 135122] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:23:33.572724] [D] [thread 135122] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:23:33.573197] [D] [thread 135122] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=10[m
[36m[11:23:33.609347] [D] [thread 135120] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 10
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream9"
  logicalSourceName: "debs"
}
[m
[32m[11:23:33.609443] [I] [thread 135120] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[11:23:33.609472] [D] [thread 135120] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[11:23:33.609537] [D] [thread 135120] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= test_stream9 logical source= debs[m
[36m[11:23:33.609690] [D] [thread 135120] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:23:33.609723] [D] [thread 135120] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream9[m
[36m[11:23:33.609779] [D] [thread 135120] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[11:23:33.609800] [D] [thread 135120] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[11:23:33.609818] [D] [thread 135120] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[11:23:33.609834] [D] [thread 135120] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[11:23:33.609850] [D] [thread 135120] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=test_stream8[m
[36m[11:23:33.609891] [D] [thread 135120] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream9 does not exist, try to add[m
[36m[11:23:33.609914] [D] [thread 135120] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:23:33.609936] [D] [thread 135120] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[11:23:33.609952] [D] [thread 135120] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:23:33.613783] [D] [thread 135120] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 10
oldParent: 1
newParent: 4
[m
[36m[11:23:33.613883] [D] [thread 135120] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 10  parentId= 1[m
[32m[11:23:33.613908] [I] [thread 135120] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[11:23:33.613933] [D] [thread 135120] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[11:23:33.613956] [D] [thread 135120] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  10  exists[m
[32m[11:23:33.613969] [I] [thread 135120] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:23:33.613982] [D] [thread 135120] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:23:33.613997] [D] [thread 135120] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:23:33.614062] [D] [thread 135120] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:23:33.614188] [I] [thread 135120] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:23:33.614236] [D] [thread 135120] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:23:33.614257] [D] [thread 135120] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:23:33.614275] [D] [thread 135120] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 10  parentId= 4[m
[32m[11:23:33.614291] [I] [thread 135120] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[11:23:33.614309] [D] [thread 135120] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[11:23:33.614328] [D] [thread 135120] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 10 exists[m
[32m[11:23:33.614339] [I] [thread 135120] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[11:23:33.614352] [D] [thread 135120] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[11:23:33.614367] [D] [thread 135120] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  4  exists[m
[32m[11:23:33.614476] [I] [thread 135120] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[11:23:33.614524] [D] [thread 135120] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:23:33.614882] [D] [thread 135120] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[11:23:33.614958] [D] [thread 135120] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:23:33.851857] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:33.852176] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:23:33.852898] [I] [thread 135124] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:23:33.854603] [I] [thread 135124] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:23:34.853376] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:35.428775] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:35.429119] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:35.596255] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:35.596773] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:35.599058] [D] [thread 135129] [QueryController.hpp:223] [submitQuery] QueryController: handlePost -execute-query: Params: userQuery= Query::from("debs").window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out","CSV_FORMAT","APPEND", true));, strategyName= BottomUp, faultTolerance= NONE, lineage= NONE[m
[32m[11:23:35.599195] [I] [thread 135129] [QueryService.cpp:69] [validateAndQueueAddQueryRequest] QueryService: Validating and registering the user query.[m
[32m[11:23:35.599223] [I] [thread 135129] [QueryService.cpp:73] [validateAndQueueAddQueryRequest] QueryService: check validation of a query.[m
[36m[11:23:35.599276] [D] [thread 135129] [SyntacticQueryValidation.cpp:40] [validate] SyntacticQueryValidation: parse C++ query from query string.[m
[36m[11:23:35.599383] [D] [thread 135129] [QueryParsingService.cpp:94] [createQueryFromCodeString]  QueryParsingService: source name = "debs"[m
[36m[11:23:35.599458] [D] [thread 135129] [QueryParsingService.cpp:100] [createQueryFromCodeString] QueryParsingService: parsed query = return Query::from("debs").window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out","CSV_FORMAT","APPEND", true));[m
[36m[11:23:35.599496] [D] [thread 135129] [QueryParsingService.cpp:104] [createQueryFromCodeString] QueryParsingService: query code
#include <API/QueryAPI.hpp>
namespace NES{
Query createQuery(){
return Query::from("debs").window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out","CSV_FORMAT","APPEND", true));
}
}
[m
[36m[11:23:35.601401] [D] [thread 135130] [File.cpp:27] [createFile] Create File to file:///tmp/query_13-11-2023_11-23-35_6300127.cpp[m
[36m[11:23:35.601985] [D] [thread 135130] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[11:23:35.602070] [D] [thread 135130] [CPPCompilerFlags.cpp:64] [enableProfilingFlags] Compilation Time tracing is activated open: chrome://tracing/[m
[36m[11:23:35.602438] [D] [thread 135130] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DNES_COMPILE_TIME_LOG_LEVEL=6 -fno-trigraphs -fpic -Wparentheses-equality -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -std=c++20 -stdlib=libstdc++ -shared -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -ftime-trace -L/home/ubuntu/git/nebulastream/build/nes-common/ -I/home/ubuntu/git/nebulastream/build/include/nebulastream -L/home/ubuntu/git/nebulastream/build/nes-core/ -o/tmp/query_13-11-2023_11-23-35_6300127.so -DFMT_HEADER_ONLY /tmp/query_13-11-2023_11-23-35_6300127.cpp'[m
[36m[11:23:36.598007] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:37.599255] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:23:38.482424] [I] [thread 135130] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 2881.118479ms[m
[36m[11:23:38.482828] [D] [thread 135129] [Query.cpp:231] [from] Query: create new Query with source debs[m
[36m[11:23:38.482917] [D] [thread 135129] [QueryPlanBuilder.cpp:43] [createQueryPlan] QueryPlanBuilder: create query plan for input source  debs[m
[32m[11:23:38.483375] [I] [thread 135129] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:23:38.485119] [D] [thread 135129] [WindowedQuery.cpp:122] [windowByKey] Query: add keyed window operator[m
[36m[11:23:38.485707] [D] [thread 135129] [WindowedQuery.cpp:142] [windowByKey] add default watermark strategy as non is provided[m
[32m[11:23:38.486260] [I] [thread 135129] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:23:38.486469] [D] [thread 135129] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WATERMARKASSIGNER(2) as new root of the plan.[m
[36m[11:23:38.486831] [D] [thread 135129] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:38.486876] [D] [thread 135129] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:23:38.487446] [I] [thread 135129] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[11:23:38.487629] [D] [thread 135129] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WINDOW AGGREGATION(OP-3, Min;) as new root of the plan.[m
[36m[11:23:38.487854] [D] [thread 135129] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:38.487893] [D] [thread 135129] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:23:38.488279] [D] [thread 135129] [Query.cpp:353] [sink] Query: add sink operator to query[m
[32m[11:23:38.488447] [I] [thread 135129] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[11:23:38.488616] [D] [thread 135129] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(4: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[11:23:38.488923] [D] [thread 135129] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:38.489026] [D] [thread 135129] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:23:38.490138] [D] [thread 135129] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:23:38.490411] [D] [thread 135129] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:23:38.490624] [D] [thread 135129] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:23:38.490850] [D] [thread 135129] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:23:38.490916] [D] [thread 135129] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:23:38.490989] [D] [thread 135129] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:23:38.491106] [D] [thread 135129] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[11:23:38.491288] [D] [thread 135129] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:23:38.491383] [D] [thread 135129] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:23:38.491436] [D] [thread 135129] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:23:38.492242] [D] [thread 135129] [TypeInferencePhase.cpp:76] [execute] TypeInferencePhase: update source descriptor for source debs with schema: debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.492306] [D] [thread 135129] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:23:38.492554] [D] [thread 135129] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:23:38.493605] [D] [thread 135129] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.494425] [D] [thread 135129] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[11:23:38.495048] [I] [thread 135129] [QueryCatalog.cpp:55] [createNewEntry] QueryCatalog: Creating query catalog entry for query with id 1[m
[32m[11:23:38.495812] [I] [thread 135129] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : RunQueryRequest { QueryId: 1, QueryPlan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
, QueryPlacementStrategy: BottomUp}[m
[32m[11:23:38.495907] [I] [thread 135129] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[11:23:38.495960] [I] [thread 135079] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[11:23:38.496075] [I] [thread 135079] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[11:23:38.496112] [I] [thread 135079] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[11:23:38.496449] [I] [thread 135079] [GlobalQueryPlanUpdatePhase.cpp:150] [processAddQueryRequest] QueryProcessingService: Request received for optimizing and deploying of the query 1[m
[36m[11:23:38.496609] [D] [thread 135079] [GlobalQueryPlanUpdatePhase.cpp:156] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[11:23:38.496648] [D] [thread 135079] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:23:38.496723] [D] [thread 135079] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:23:38.496768] [D] [thread 135079] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:23:38.496826] [D] [thread 135079] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:23:38.496870] [D] [thread 135079] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:23:38.497479] [D] [thread 135079] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.498053] [D] [thread 135079] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:23:38.498147] [D] [thread 135079] [GlobalQueryPlanUpdatePhase.cpp:160] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[11:23:38.498172] [D] [thread 135079] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[11:23:38.498421] [D] [thread 135079] [GlobalQueryPlanUpdatePhase.cpp:164] [processAddQueryRequest] QueryProcessingService: Performing Query rewrite phase for query:  1[m
[32m[11:23:38.498453] [I] [thread 135079] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[11:23:38.498658] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[11:23:38.499011] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[11:23:38.499471] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[11:23:38.499828] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:23:38.500187] [D] [thread 135079] [RenameSourceToProjectOperatorRule.cpp:27] [apply] RenameSourceToProjectOperatorRule: Convert all Rename Source operator to the project operator[m
[36m[11:23:38.500792] [D] [thread 135079] [ProjectBeforeUnionOperatorRule.cpp:32] [apply] Before applying ProjectBeforeUnionOperatorRule to the query plan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:23:38.501106] [D] [thread 135079] [ProjectBeforeUnionOperatorRule.cpp:52] [apply] After applying ProjectBeforeUnionOperatorRule to the query plan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[32m[11:23:38.501264] [I] [thread 135079] [FilterSplitUpRule.cpp:30] [apply] Applying FilterSplitUpRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:23:38.501412] [D] [thread 135079] [FilterSplitUpRule.cpp:38] [apply] FilterSplitUpRule: Sort all filter nodes in increasing order of the operator id[m
[32m[11:23:38.501442] [I] [thread 135079] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[11:23:38.501557] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[11:23:38.501790] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[11:23:38.502084] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[11:23:38.502338] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:23:38.502659] [D] [thread 135079] [FilterSplitUpRule.cpp:46] [apply] FilterSplitUpRule: Iterate over all the filter operators to split them[m
[32m[11:23:38.502945] [I] [thread 135079] [FilterPushDownRule.cpp:50] [apply] Applying FilterPushDownRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:23:38.503038] [D] [thread 135079] [FilterPushDownRule.cpp:58] [apply] FilterPushDownRule: Sort all filter nodes in increasing order of the operator id[m
[32m[11:23:38.503052] [I] [thread 135079] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[11:23:38.503172] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[11:23:38.503350] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[11:23:38.503567] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[11:23:38.503754] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:23:38.503963] [D] [thread 135079] [FilterPushDownRule.cpp:66] [apply] FilterPushDownRule: Iterate over all the filter operators to push them down in the query plan[m
[32m[11:23:38.504132] [I] [thread 135079] [FilterPushDownRule.cpp:71] [apply] FilterPushDownRule: Return the updated query plan SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[32m[11:23:38.504263] [I] [thread 135079] [FilterMergeRule.cpp:27] [apply] Applying FilterMergeRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:23:38.504467] [D] [thread 135079] [FilterMergeRule.cpp:30] [apply] FilterMergeRule: Identified 0 filter nodes in the query plan[m
[36m[11:23:38.504633] [D] [thread 135079] [FilterMergeRule.cpp:31] [apply] Query before applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:23:38.504740] [D] [thread 135079] [FilterMergeRule.cpp:77] [apply] Query after applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:23:38.504877] [D] [thread 135079] [PredicateReorderingRule.cpp:28] [apply] PredicateReorderingRule: Identified 0 filter nodes in the query plan[m
[36m[11:23:38.505006] [D] [thread 135079] [PredicateReorderingRule.cpp:29] [apply] Query before applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:23:38.505103] [D] [thread 135079] [PredicateReorderingRule.cpp:87] [apply] Query after applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:23:38.505218] [D] [thread 135079] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:23:38.505282] [D] [thread 135079] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:23:38.505327] [D] [thread 135079] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:23:38.505384] [D] [thread 135079] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:23:38.505423] [D] [thread 135079] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:23:38.506015] [D] [thread 135079] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.506523] [D] [thread 135079] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[11:23:38.506612] [I] [thread 135079] [SignatureInferencePhase.cpp:59] [execute] Skipping signature creation[m
[32m[11:23:38.506843] [I] [thread 135079] [LogicalSourceExpansionRule.cpp:49] [apply] LogicalSourceExpansionRule: Plan before
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:23:38.506866] [D] [thread 135079] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:23:38.506916] [D] [thread 135079] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:23:38.506959] [D] [thread 135079] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[32m[11:23:38.507628] [I] [thread 135079] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:23:38.507731] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:23:38.507848] [D] [thread 135079] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:23:38.507879] [D] [thread 135079] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:23:38.507919] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:23:38.508210] [D] [thread 135079] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[11:23:38.508843] [I] [thread 135079] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:23:38.508934] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:23:38.509035] [D] [thread 135079] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:23:38.509056] [D] [thread 135079] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:23:38.509092] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:23:38.509321] [D] [thread 135079] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[11:23:38.509663] [I] [thread 135079] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:23:38.509716] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:23:38.509795] [D] [thread 135079] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:23:38.509812] [D] [thread 135079] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:23:38.509843] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:23:38.510044] [D] [thread 135079] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[11:23:38.510376] [I] [thread 135079] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:23:38.510430] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:23:38.510536] [D] [thread 135079] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:23:38.510559] [D] [thread 135079] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:23:38.510593] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:23:38.510824] [D] [thread 135079] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[11:23:38.511164] [I] [thread 135079] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:23:38.511220] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:23:38.511299] [D] [thread 135079] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:23:38.511317] [D] [thread 135079] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:23:38.511346] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:23:38.511537] [D] [thread 135079] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[11:23:38.511866] [I] [thread 135079] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:23:38.511920] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:23:38.511995] [D] [thread 135079] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:23:38.512012] [D] [thread 135079] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:23:38.512040] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:23:38.512273] [D] [thread 135079] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[36m[11:23:38.513077] [D] [thread 135079] [LogicalSourceExpansionRule.cpp:151] [apply] LogicalSourceExpansionRule: Plan after
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[32m[11:23:38.513204] [I] [thread 135079] [DistributedJoinRule.cpp:31] [apply] DistributeJoinRule: Apply DistributeJoinRule.[m
[36m[11:23:38.513474] [D] [thread 135079] [DistributedJoinRule.cpp:32] [apply] DistributeJoinRule::apply: plan before replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:23:38.513791] [D] [thread 135079] [DistributedJoinRule.cpp:55] [apply] DistributeJoinRule::apply: no join operator in query[m
[36m[11:23:38.514190] [D] [thread 135079] [DistributedJoinRule.cpp:58] [apply] DistributeJoinRule::apply: plan after replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:23:38.514277] [D] [thread 135079] [NemoWindowPinningRule.cpp:58] [apply] NemoWindowPinningRule: Apply NemoWindowPinningRule.[m
[36m[11:23:38.514518] [D] [thread 135079] [NemoWindowPinningRule.cpp:59] [apply] NemoWindowPinningRule::apply: plan before replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:23:38.514874] [D] [thread 135079] [NemoWindowPinningRule.cpp:68] [apply] NemoWindowPinningRule::apply: found 1 window operators[m
[36m[11:23:38.514987] [D] [thread 135079] [NemoWindowPinningRule.cpp:70] [apply] NemoWindowPinningRule::apply: window operator WINDOW AGGREGATION(OP-3, Min;)[m
[36m[11:23:38.515034] [D] [thread 135079] [NemoWindowPinningRule.cpp:92] [createCentralWindowOperator] NemoWindowPinningRule::apply: introduce centralized window operator for window WINDOW AGGREGATION(OP-3, Min;)[m
[32m[11:23:38.515136] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[36m[11:23:38.515311] [D] [thread 135079] [NemoWindowPinningRule.cpp:94] [createCentralWindowOperator] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(17) old node=WINDOW AGGREGATION(OP-3, Min;)[m
[36m[11:23:38.515364] [D] [thread 135079] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:23:38.515396] [D] [thread 135079] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:23:38.515469] [I] [thread 135079] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:23:38.515483] [I] [thread 135079] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:23:38.515502] [I] [thread 135079] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:23:38.515574] [D] [thread 135079] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:23:38.515588] [D] [thread 135079] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[11:23:38.515668] [D] [thread 135079] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[11:23:38.515709] [D] [thread 135079] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[11:23:38.515774] [D] [thread 135079] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[11:23:38.515788] [D] [thread 135079] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[11:23:38.515847] [D] [thread 135079] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[11:23:38.515860] [D] [thread 135079] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[11:23:38.515926] [D] [thread 135079] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[11:23:38.515939] [D] [thread 135079] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[11:23:38.516006] [D] [thread 135079] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[11:23:38.516019] [D] [thread 135079] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[11:23:38.516093] [D] [thread 135079] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[11:23:38.516110] [D] [thread 135079] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[36m[11:23:38.516417] [D] [thread 135079] [NemoWindowPinningRule.cpp:81] [apply] NemoWindowPinningRule::apply: central op
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(17)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:23:38.516644] [D] [thread 135079] [NemoWindowPinningRule.cpp:87] [apply] NemoWindowPinningRule::apply: plan after replace
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(17)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:23:38.516901] [D] [thread 135079] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:23:38.516994] [D] [thread 135079] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:23:38.517063] [D] [thread 135079] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 6 source operators.[m
[36m[11:23:38.517122] [D] [thread 135079] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:23:38.517163] [D] [thread 135079] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:23:38.518557] [D] [thread 135079] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[11:23:38.518967] [I] [thread 135079] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:23:38.519118] [I] [thread 135079] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:23:38.519240] [D] [thread 135079] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:23:38.519942] [D] [thread 135079] [GlobalQueryPlanUpdatePhase.cpp:196] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[11:23:38.520013] [D] [thread 135079] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[11:23:38.520386] [D] [thread 135079] [GlobalQueryPlanUpdatePhase.cpp:203] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[11:23:38.520507] [D] [thread 135079] [GlobalQueryPlanUpdatePhase.cpp:207] [processAddQueryRequest] QueryProcessingService: Applying Query Merger Rules as Query Merging is enabled.[m
[36m[11:23:38.520526] [D] [thread 135079] [QueryMergerPhase.cpp:72] [execute] QueryMergerPhase: Executing query merger phase.[m
[32m[11:23:38.520589] [I] [thread 135079] [GlobalQueryPlan.cpp:173] [createNewSharedQueryPlan] Create new shared query plan[m
[32m[11:23:38.520635] [I] [thread 135079] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[11:23:38.520765] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[11:23:38.520951] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[32m[11:23:38.521280] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[32m[11:23:38.521474] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[32m[11:23:38.521720] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[32m[11:23:38.521900] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[32m[11:23:38.522074] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[32m[11:23:38.522283] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[32m[11:23:38.522524] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[11:23:38.522815] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[32m[11:23:38.523031] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[32m[11:23:38.523292] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[32m[11:23:38.523502] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[32m[11:23:38.523702] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[36m[11:23:38.524451] [D] [thread 135079] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[11:23:38.524521] [D] [thread 135079] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[11:23:38.524628] [D] [thread 135079] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:23:38.524678] [D] [thread 135079] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:23:38.524703] [D] [thread 135079] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:23:38.524736] [D] [thread 135079] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:23:38.524759] [D] [thread 135079] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:23:38.524778] [D] [thread 135079] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:23:38.524813] [D] [thread 135079] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:23:38.524837] [D] [thread 135079] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:23:38.524860] [D] [thread 135079] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:23:38.524871] [D] [thread 135079] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:23:38.524906] [D] [thread 135079] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:23:38.524919] [D] [thread 135079] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:23:38.524954] [D] [thread 135079] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:23:38.524966] [D] [thread 135079] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:23:38.525016] [D] [thread 135079] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:23:38.525031] [D] [thread 135079] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:23:38.525048] [D] [thread 135079] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:23:38.525061] [D] [thread 135079] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:23:38.525083] [D] [thread 135079] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:23:38.525096] [D] [thread 135079] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:23:38.526395] [D] [thread 135079] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[11:23:38.526433] [D] [thread 135079] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[11:23:38.526509] [D] [thread 135079] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[11:23:38.526529] [D] [thread 135079] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[11:23:38.526537] [D] [thread 135079] [RequestProcessorService.cpp:111] [start] QueryProcessingService: Shared Query Plan is new.[m
[36m[11:23:38.526548] [D] [thread 135079] [RequestProcessorService.cpp:115] [start] QueryProcessingService: Performing Operator placement for shared query plan[m
[32m[11:23:38.526577] [I] [thread 135079] [QueryPlacementPhase.cpp:54] [execute] QueryPlacementPhase: Perform query placement phase for shared query plan 1[m
[36m[11:23:38.527182] [D] [thread 135079] [QueryPlacementPhase.cpp:70] [execute] QueryPlacementPhase: Perform query placement for query plan
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(17)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:23:38.527220] [D] [thread 135079] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[11:23:38.527233] [D] [thread 135079] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[11:23:38.527296] [D] [thread 135079] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:23:38.527340] [D] [thread 135079] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:23:38.527386] [D] [thread 135079] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:23:38.527410] [D] [thread 135079] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:23:38.527431] [D] [thread 135079] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:23:38.527451] [D] [thread 135079] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:23:38.527470] [D] [thread 135079] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:23:38.527493] [D] [thread 135079] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:23:38.527513] [D] [thread 135079] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:23:38.527534] [D] [thread 135079] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:23:38.527570] [D] [thread 135079] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:23:38.527582] [D] [thread 135079] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:23:38.527606] [D] [thread 135079] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:23:38.527617] [D] [thread 135079] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:23:38.527635] [D] [thread 135079] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:23:38.527647] [D] [thread 135079] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:23:38.527662] [D] [thread 135079] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:23:38.527673] [D] [thread 135079] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:23:38.527691] [D] [thread 135079] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:23:38.527703] [D] [thread 135079] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:23:38.527955] [D] [thread 135079] [BottomUpStrategy.cpp:50] [updateGlobalExecutionPlan] Perform placement of the pinned and all their downstream operators.[m
[32m[11:23:38.528018] [I] [thread 135079] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[11:23:38.528042] [D] [thread 135079] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[11:23:38.528129] [I] [thread 135079] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[11:23:38.528142] [D] [thread 135079] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[11:23:38.528180] [I] [thread 135079] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[11:23:38.528191] [D] [thread 135079] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[11:23:38.528212] [I] [thread 135079] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[11:23:38.528223] [D] [thread 135079] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[11:23:38.528240] [I] [thread 135079] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[11:23:38.528264] [D] [thread 135079] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[11:23:38.528284] [I] [thread 135079] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[11:23:38.528295] [D] [thread 135079] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[11:23:38.528360] [I] [thread 135079] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:23:38.528376] [D] [thread 135079] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[32m[11:23:38.528460] [I] [thread 135079] [Topology.cpp:73] [findPathBetween] Topology: Finding path between set of start and destination nodes[m
[36m[11:23:38.528709] [D] [thread 135079] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:23:38.528945] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:23:38.529094] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:23:38.529193] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:23:38.529404] [D] [thread 135079] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:23:38.529508] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:23:38.529588] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:23:38.529701] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:23:38.529881] [D] [thread 135079] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:23:38.529958] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:23:38.530026] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:23:38.530103] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:23:38.530257] [D] [thread 135079] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:23:38.530322] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:23:38.530492] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:23:38.530606] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:23:38.530757] [D] [thread 135079] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:23:38.530822] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:23:38.530885] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:23:38.530955] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:23:38.531088] [D] [thread 135079] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:23:38.531183] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:23:38.531257] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:23:38.531335] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[32m[11:23:38.531393] [I] [thread 135079] [Topology.cpp:98] [mergeSubGraphs] Topology: Merge 6 sub-graphs to create a single sub-graph[m
[36m[11:23:38.531404] [D] [thread 135079] [Topology.cpp:100] [mergeSubGraphs] Topology: Compute a map storing number of times a node occurred in different sub-graphs[m
[36m[11:23:38.531762] [D] [thread 135079] [Topology.cpp:120] [mergeSubGraphs] Topology: Iterate over each sub-graph and compute a single merged sub-graph[m
[36m[11:23:38.531782] [D] [thread 135079] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:23:38.531876] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:23:38.531892] [D] [thread 135079] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[11:23:38.531931] [D] [thread 135079] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[11:23:38.532013] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:23:38.532137] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:23:38.532178] [D] [thread 135079] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:23:38.532226] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:23:38.532238] [D] [thread 135079] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[11:23:38.532263] [D] [thread 135079] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[11:23:38.532365] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:23:38.532459] [D] [thread 135079] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:23:38.532533] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:23:38.532546] [D] [thread 135079] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[11:23:38.532574] [D] [thread 135079] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[11:23:38.532660] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:23:38.532729] [D] [thread 135079] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:23:38.532782] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:23:38.532794] [D] [thread 135079] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[11:23:38.532808] [D] [thread 135079] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[11:23:38.532850] [W] [thread 135079] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[11:23:38.532864] [D] [thread 135079] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:23:38.532915] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:23:38.532927] [D] [thread 135079] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[11:23:38.532952] [D] [thread 135079] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[11:23:38.532992] [W] [thread 135079] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[11:23:38.533006] [D] [thread 135079] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:23:38.533057] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:23:38.533070] [D] [thread 135079] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[11:23:38.533084] [D] [thread 135079] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[11:23:38.533123] [W] [thread 135079] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[11:23:38.533214] [D] [thread 135079] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[11:23:38.533230] [D] [thread 135079] [Node.cpp:435] [getAllRootNodes] Node: Iterating over all parents to find more root nodes[m
[36m[11:23:38.533237] [D] [thread 135079] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[11:23:38.533243] [D] [thread 135079] [Node.cpp:426] [getAllRootNodes] Node: Inserting this node to the collection[m
[36m[11:23:38.533264] [D] [thread 135079] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[11:23:38.533272] [D] [thread 135079] [Node.cpp:438] [getAllRootNodes] Node: inserting parent nodes into the collection of parent nodes[m
[36m[11:23:38.533298] [D] [thread 135079] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[11:23:38.533499] [D] [thread 135079] [BottomUpStrategy.cpp:74] [pinOperators] BottomUpStrategy: Get the all source operators for performing the placement.[m
[36m[11:23:38.533586] [D] [thread 135079] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4)) placement.[m
[36m[11:23:38.533665] [D] [thread 135079] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))[m
[36m[11:23:38.533701] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:23:38.533764] [D] [thread 135079] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(6)[m
[36m[11:23:38.533780] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:23:38.533859] [D] [thread 135079] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(17)[m
[36m[11:23:38.533876] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:23:38.533896] [D] [thread 135079] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[11:23:38.533956] [W] [thread 135079] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[11:23:38.533977] [W] [thread 135079] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[11:23:38.534016] [D] [thread 135079] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5)) placement.[m
[36m[11:23:38.534054] [D] [thread 135079] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))[m
[36m[11:23:38.534069] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:23:38.534109] [D] [thread 135079] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(8)[m
[36m[11:23:38.534123] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:23:38.534202] [D] [thread 135079] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(17)[m
[36m[11:23:38.534221] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:23:38.534233] [D] [thread 135079] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[11:23:38.534295] [W] [thread 135079] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[11:23:38.534313] [W] [thread 135079] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[11:23:38.534352] [D] [thread 135079] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6)) placement.[m
[36m[11:23:38.534390] [D] [thread 135079] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))[m
[36m[11:23:38.534466] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:23:38.534516] [D] [thread 135079] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(10)[m
[36m[11:23:38.534532] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:23:38.534603] [D] [thread 135079] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(17)[m
[36m[11:23:38.534620] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:23:38.534633] [D] [thread 135079] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[11:23:38.534719] [W] [thread 135079] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[11:23:38.534741] [W] [thread 135079] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[11:23:38.534787] [D] [thread 135079] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7)) placement.[m
[36m[11:23:38.534829] [D] [thread 135079] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))[m
[36m[11:23:38.534846] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:23:38.534885] [D] [thread 135079] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(12)[m
[36m[11:23:38.534963] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:23:38.535036] [D] [thread 135079] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(17)[m
[36m[11:23:38.535058] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:23:38.535072] [D] [thread 135079] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[11:23:38.535155] [W] [thread 135079] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[11:23:38.535174] [W] [thread 135079] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[11:23:38.535214] [D] [thread 135079] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8)) placement.[m
[36m[11:23:38.535253] [D] [thread 135079] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))[m
[36m[11:23:38.535270] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:23:38.535310] [D] [thread 135079] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(14)[m
[36m[11:23:38.535324] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:23:38.535379] [D] [thread 135079] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(17)[m
[36m[11:23:38.535394] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:23:38.535405] [D] [thread 135079] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[11:23:38.535476] [W] [thread 135079] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[11:23:38.535492] [W] [thread 135079] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[11:23:38.535522] [D] [thread 135079] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9)) placement.[m
[36m[11:23:38.535555] [D] [thread 135079] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))[m
[36m[11:23:38.535569] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:23:38.535602] [D] [thread 135079] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(16)[m
[36m[11:23:38.535616] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:23:38.535658] [D] [thread 135079] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(17)[m
[36m[11:23:38.535672] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:23:38.535683] [D] [thread 135079] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[11:23:38.535752] [D] [thread 135079] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[11:23:38.535793] [D] [thread 135079] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[11:23:38.535807] [D] [thread 135079] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[11:23:38.536099] [D] [thread 135079] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[11:23:38.536125] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:23:38.536138] [D] [thread 135079] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[11:23:38.536180] [D] [thread 135079] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[11:23:38.536221] [D] [thread 135079] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[11:23:38.536233] [D] [thread 135079] [BottomUpStrategy.cpp:103] [pinOperators] BottomUpStrategy: Finished placing query operators into the global execution plan[m
[36m[11:23:38.536244] [D] [thread 135079] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:23:38.536310] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:23:38.536384] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:23:38.536636] [D] [thread 135079] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4)) on execution node with id 5[m
[36m[11:23:38.536656] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:23:38.536687] [W] [thread 135079] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:23:38.536899] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[36m[11:23:38.537078] [D] [thread 135079] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4)) as new root of the plan.[m
[36m[11:23:38.537093] [D] [thread 135079] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:38.537114] [D] [thread 135079] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:23:38.537141] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.537153] [D] [thread 135079] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:23:38.537290] [D] [thread 135079] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[11:23:38.537373] [D] [thread 135079] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:23:38.537409] [W] [thread 135079] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[11:23:38.537420] [D] [thread 135079] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[11:23:38.537508] [D] [thread 135079] [GlobalExecutionPlan.cpp:188] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Query Id 1 does not exists adding a new entry with execution node 5[m
[36m[11:23:38.537674] [D] [thread 135079] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:23:38.537692] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:23:38.537718] [I] [thread 135079] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[11:23:38.537738] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:23:38.537792] [D] [thread 135079] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:23:38.537857] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:23:38.537875] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:23:38.537940] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:23:38.537952] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[11:23:38.537986] [D] [thread 135079] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(6) on execution node with id 5[m
[36m[11:23:38.537998] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.538012] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.538040] [D] [thread 135079] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:23:38.538052] [D] [thread 135079] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:23:38.538082] [D] [thread 135079] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:23:38.538092] [D] [thread 135079] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:23:38.538153] [D] [thread 135079] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:23:38.538163] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.538191] [D] [thread 135079] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:23:38.538275] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[36m[11:23:38.538437] [D] [thread 135079] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:23:38.538453] [D] [thread 135079] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:23:38.538468] [D] [thread 135079] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[11:23:38.538477] [D] [thread 135079] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[11:23:38.538582] [D] [thread 135079] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4)) as root operator.[m
[36m[11:23:38.538638] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.538652] [D] [thread 135079] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:23:38.538683] [D] [thread 135079] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[11:23:38.538698] [D] [thread 135079] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:23:38.538712] [W] [thread 135079] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[11:23:38.538721] [D] [thread 135079] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[11:23:38.538818] [D] [thread 135079] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[11:23:38.538867] [D] [thread 135079] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:23:38.538883] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:23:38.538897] [I] [thread 135079] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[11:23:38.538916] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:23:38.538957] [D] [thread 135079] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:23:38.539007] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[11:23:38.539024] [W] [thread 135079] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[11:23:38.539032] [D] [thread 135079] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:23:38.539044] [D] [thread 135079] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:23:38.539084] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:23:38.539101] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:23:38.539174] [D] [thread 135079] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5)) on execution node with id 6[m
[36m[11:23:38.539187] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:23:38.539199] [W] [thread 135079] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:23:38.539295] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[36m[11:23:38.539432] [D] [thread 135079] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5)) as new root of the plan.[m
[36m[11:23:38.539456] [D] [thread 135079] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:38.539466] [D] [thread 135079] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:23:38.539485] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.539496] [D] [thread 135079] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:23:38.539542] [D] [thread 135079] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[11:23:38.539567] [D] [thread 135079] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:23:38.539581] [W] [thread 135079] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[11:23:38.539590] [D] [thread 135079] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[11:23:38.539639] [D] [thread 135079] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 6 to the query Id 1[m
[36m[11:23:38.539713] [D] [thread 135079] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:23:38.539730] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:23:38.539744] [I] [thread 135079] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[11:23:38.539772] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:23:38.539816] [D] [thread 135079] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:23:38.539870] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:23:38.539886] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:23:38.539932] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:23:38.539944] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[11:23:38.539971] [D] [thread 135079] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(8) on execution node with id 6[m
[36m[11:23:38.539982] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.539993] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.540013] [D] [thread 135079] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:23:38.540023] [D] [thread 135079] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:23:38.540057] [D] [thread 135079] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:23:38.540067] [D] [thread 135079] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:23:38.540111] [D] [thread 135079] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:23:38.540121] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.540137] [D] [thread 135079] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:23:38.540195] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[36m[11:23:38.540380] [D] [thread 135079] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:23:38.540399] [D] [thread 135079] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:23:38.540411] [D] [thread 135079] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 7 exists in the query plan or not[m
[36m[11:23:38.540420] [D] [thread 135079] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 7 in the query plan[m
[36m[11:23:38.540521] [D] [thread 135079] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5)) as root operator.[m
[36m[11:23:38.540563] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.540578] [D] [thread 135079] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:23:38.540607] [D] [thread 135079] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[11:23:38.540622] [D] [thread 135079] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:23:38.540634] [W] [thread 135079] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[11:23:38.540650] [D] [thread 135079] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[11:23:38.540701] [D] [thread 135079] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[11:23:38.540735] [D] [thread 135079] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:23:38.540748] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:23:38.540762] [I] [thread 135079] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[11:23:38.540780] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:23:38.540818] [D] [thread 135079] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:23:38.540865] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[11:23:38.540884] [W] [thread 135079] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[11:23:38.540892] [D] [thread 135079] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:23:38.540904] [D] [thread 135079] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:23:38.540943] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:23:38.540959] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:23:38.541034] [D] [thread 135079] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6)) on execution node with id 7[m
[36m[11:23:38.541047] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:23:38.541058] [W] [thread 135079] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:23:38.541139] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[36m[11:23:38.541289] [D] [thread 135079] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6)) as new root of the plan.[m
[36m[11:23:38.541306] [D] [thread 135079] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:38.541314] [D] [thread 135079] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:23:38.541332] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.541342] [D] [thread 135079] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:23:38.541393] [D] [thread 135079] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[11:23:38.541419] [D] [thread 135079] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:23:38.541432] [W] [thread 135079] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[11:23:38.541441] [D] [thread 135079] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[11:23:38.541483] [D] [thread 135079] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 7 to the query Id 1[m
[36m[11:23:38.541523] [D] [thread 135079] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:23:38.541538] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:23:38.541551] [I] [thread 135079] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[11:23:38.541567] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:23:38.541615] [D] [thread 135079] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:23:38.541664] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:23:38.541678] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:23:38.541722] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:23:38.541734] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[11:23:38.541761] [D] [thread 135079] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(10) on execution node with id 7[m
[36m[11:23:38.541772] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.541782] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.541799] [D] [thread 135079] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:23:38.541809] [D] [thread 135079] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:23:38.541832] [D] [thread 135079] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:23:38.541842] [D] [thread 135079] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:23:38.541883] [D] [thread 135079] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:23:38.541894] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.541909] [D] [thread 135079] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:23:38.541959] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[36m[11:23:38.542081] [D] [thread 135079] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:23:38.542097] [D] [thread 135079] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:23:38.542109] [D] [thread 135079] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 9 exists in the query plan or not[m
[36m[11:23:38.542118] [D] [thread 135079] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 9 in the query plan[m
[36m[11:23:38.542212] [D] [thread 135079] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6)) as root operator.[m
[36m[11:23:38.542252] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.542265] [D] [thread 135079] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:23:38.542290] [D] [thread 135079] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[11:23:38.542304] [D] [thread 135079] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:23:38.542316] [W] [thread 135079] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[11:23:38.542325] [D] [thread 135079] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[11:23:38.542365] [D] [thread 135079] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[11:23:38.542394] [D] [thread 135079] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:23:38.542408] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:23:38.542421] [I] [thread 135079] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[11:23:38.542437] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:23:38.542484] [D] [thread 135079] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:23:38.542534] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[11:23:38.542553] [W] [thread 135079] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[11:23:38.542561] [D] [thread 135079] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:23:38.542573] [D] [thread 135079] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:23:38.542611] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:23:38.542635] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:23:38.542705] [D] [thread 135079] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7)) on execution node with id 8[m
[36m[11:23:38.542718] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:23:38.542729] [W] [thread 135079] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:23:38.542797] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[36m[11:23:38.542916] [D] [thread 135079] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7)) as new root of the plan.[m
[36m[11:23:38.542929] [D] [thread 135079] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:38.542936] [D] [thread 135079] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:23:38.542958] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.542969] [D] [thread 135079] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:23:38.543007] [D] [thread 135079] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[11:23:38.543027] [D] [thread 135079] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:23:38.543040] [W] [thread 135079] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[11:23:38.543049] [D] [thread 135079] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[11:23:38.543087] [D] [thread 135079] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 8 to the query Id 1[m
[36m[11:23:38.543125] [D] [thread 135079] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:23:38.543140] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:23:38.543152] [I] [thread 135079] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[11:23:38.543166] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:23:38.543200] [D] [thread 135079] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:23:38.543246] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:23:38.543260] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:23:38.543302] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:23:38.543314] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[11:23:38.543340] [D] [thread 135079] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(12) on execution node with id 8[m
[36m[11:23:38.543351] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.543361] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.543378] [D] [thread 135079] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:23:38.543388] [D] [thread 135079] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:23:38.543421] [D] [thread 135079] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:23:38.543432] [D] [thread 135079] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:23:38.543471] [D] [thread 135079] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:23:38.543481] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.543496] [D] [thread 135079] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:23:38.543549] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[36m[11:23:38.543665] [D] [thread 135079] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:23:38.543686] [D] [thread 135079] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:23:38.543699] [D] [thread 135079] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 11 exists in the query plan or not[m
[36m[11:23:38.543708] [D] [thread 135079] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 11 in the query plan[m
[36m[11:23:38.543804] [D] [thread 135079] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7)) as root operator.[m
[36m[11:23:38.543844] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.543858] [D] [thread 135079] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:23:38.543883] [D] [thread 135079] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[11:23:38.543896] [D] [thread 135079] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:23:38.543908] [W] [thread 135079] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[11:23:38.543917] [D] [thread 135079] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[11:23:38.543959] [D] [thread 135079] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[11:23:38.543988] [D] [thread 135079] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:23:38.544002] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:23:38.544015] [I] [thread 135079] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[11:23:38.544031] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:23:38.544064] [D] [thread 135079] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:23:38.544109] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[11:23:38.544129] [W] [thread 135079] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[11:23:38.544137] [D] [thread 135079] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:23:38.544149] [D] [thread 135079] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:23:38.544187] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:23:38.544202] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:23:38.544268] [D] [thread 135079] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8)) on execution node with id 9[m
[36m[11:23:38.544281] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:23:38.544291] [W] [thread 135079] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:23:38.544450] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[36m[11:23:38.544659] [D] [thread 135079] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8)) as new root of the plan.[m
[36m[11:23:38.544683] [D] [thread 135079] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:38.544694] [D] [thread 135079] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:23:38.544717] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.544731] [D] [thread 135079] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:23:38.544792] [D] [thread 135079] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[11:23:38.544821] [D] [thread 135079] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:23:38.544836] [W] [thread 135079] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[11:23:38.544845] [D] [thread 135079] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[11:23:38.544907] [D] [thread 135079] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 9 to the query Id 1[m
[36m[11:23:38.544953] [D] [thread 135079] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:23:38.544969] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:23:38.544983] [I] [thread 135079] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[11:23:38.545002] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:23:38.545050] [D] [thread 135079] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:23:38.545104] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:23:38.545120] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:23:38.545165] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:23:38.545177] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[11:23:38.545208] [D] [thread 135079] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(14) on execution node with id 9[m
[36m[11:23:38.545219] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.545230] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.545252] [D] [thread 135079] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:23:38.545262] [D] [thread 135079] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:23:38.545290] [D] [thread 135079] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:23:38.545301] [D] [thread 135079] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:23:38.545350] [D] [thread 135079] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:23:38.545362] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.545379] [D] [thread 135079] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:23:38.545445] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[36m[11:23:38.545603] [D] [thread 135079] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:23:38.545619] [D] [thread 135079] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:23:38.545632] [D] [thread 135079] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 13 exists in the query plan or not[m
[36m[11:23:38.545641] [D] [thread 135079] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 13 in the query plan[m
[36m[11:23:38.545746] [D] [thread 135079] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8)) as root operator.[m
[36m[11:23:38.545792] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.545808] [D] [thread 135079] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:23:38.545845] [D] [thread 135079] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[11:23:38.545877] [D] [thread 135079] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:23:38.545893] [W] [thread 135079] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[11:23:38.545901] [D] [thread 135079] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[11:23:38.545956] [D] [thread 135079] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[11:23:38.546068] [D] [thread 135079] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:23:38.546116] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:23:38.546134] [I] [thread 135079] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[11:23:38.546156] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:23:38.546218] [D] [thread 135079] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:23:38.546295] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[11:23:38.546320] [W] [thread 135079] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[11:23:38.546328] [D] [thread 135079] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:23:38.546341] [D] [thread 135079] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:23:38.546386] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:23:38.546405] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:23:38.546504] [D] [thread 135079] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9)) on execution node with id 10[m
[36m[11:23:38.546561] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:23:38.546578] [W] [thread 135079] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:23:38.546683] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[36m[11:23:38.546862] [D] [thread 135079] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9)) as new root of the plan.[m
[36m[11:23:38.546879] [D] [thread 135079] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:38.546886] [D] [thread 135079] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:23:38.546907] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.546918] [D] [thread 135079] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:23:38.546970] [D] [thread 135079] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[11:23:38.547000] [D] [thread 135079] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:23:38.547016] [W] [thread 135079] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[11:23:38.547025] [D] [thread 135079] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[11:23:38.547094] [D] [thread 135079] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 10 to the query Id 1[m
[36m[11:23:38.547146] [D] [thread 135079] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:23:38.547164] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:23:38.547180] [I] [thread 135079] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[11:23:38.547199] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:23:38.547246] [D] [thread 135079] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:23:38.547308] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:23:38.547325] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:23:38.547375] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:23:38.547387] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[11:23:38.547417] [D] [thread 135079] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(16) on execution node with id 10[m
[36m[11:23:38.547429] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.547441] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.547463] [D] [thread 135079] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:23:38.547474] [D] [thread 135079] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:23:38.547502] [D] [thread 135079] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:23:38.547512] [D] [thread 135079] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:23:38.547560] [D] [thread 135079] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:23:38.547570] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.547587] [D] [thread 135079] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:23:38.547648] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[36m[11:23:38.547811] [D] [thread 135079] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:23:38.547829] [D] [thread 135079] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:23:38.547841] [D] [thread 135079] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 15 exists in the query plan or not[m
[36m[11:23:38.547850] [D] [thread 135079] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 15 in the query plan[m
[36m[11:23:38.547965] [D] [thread 135079] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9)) as root operator.[m
[36m[11:23:38.548012] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.548044] [D] [thread 135079] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:23:38.548078] [D] [thread 135079] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[11:23:38.548095] [D] [thread 135079] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:23:38.548108] [W] [thread 135079] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[11:23:38.548117] [D] [thread 135079] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[11:23:38.548171] [D] [thread 135079] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[11:23:38.548210] [D] [thread 135079] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:23:38.548226] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:23:38.548240] [I] [thread 135079] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[11:23:38.548259] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:23:38.548315] [D] [thread 135079] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:23:38.548411] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:23:38.548440] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:23:38.548530] [D] [thread 135079] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(17) on execution node with id 1[m
[36m[11:23:38.548544] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:23:38.548556] [W] [thread 135079] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:23:38.548673] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[36m[11:23:38.548873] [D] [thread 135079] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator CENTRALWINDOW(17) as new root of the plan.[m
[36m[11:23:38.548893] [D] [thread 135079] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:38.548900] [D] [thread 135079] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:23:38.548922] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.548934] [D] [thread 135079] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:23:38.548986] [D] [thread 135079] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[11:23:38.549020] [D] [thread 135079] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:23:38.549036] [W] [thread 135079] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 1 already scheduled[m
[36m[11:23:38.549044] [D] [thread 135079] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 1 to the query Id index.[m
[36m[11:23:38.549098] [D] [thread 135079] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 1 to the query Id 1[m
[36m[11:23:38.549149] [D] [thread 135079] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:23:38.549167] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:23:38.549182] [I] [thread 135079] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 1[m
[36m[11:23:38.549201] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:23:38.549249] [D] [thread 135079] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:23:38.549315] [D] [thread 135079] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:23:38.549337] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:23:38.549389] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:23:38.549400] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:23:38.549432] [D] [thread 135079] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SINK(4: {FileSinkDescriptor()}) on execution node with id 1[m
[36m[11:23:38.549443] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.549455] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.549477] [D] [thread 135079] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:23:38.549488] [D] [thread 135079] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:23:38.549515] [D] [thread 135079] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:23:38.549525] [D] [thread 135079] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:23:38.549566] [D] [thread 135079] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:23:38.549622] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.549645] [D] [thread 135079] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:23:38.549754] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[11:23:38.549930] [D] [thread 135079] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:23:38.549948] [D] [thread 135079] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:23:38.549961] [D] [thread 135079] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[11:23:38.549970] [D] [thread 135079] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 17 in the query plan[m
[36m[11:23:38.550076] [D] [thread 135079] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(17) as root operator.[m
[36m[11:23:38.550117] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.550132] [D] [thread 135079] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:23:38.550170] [D] [thread 135079] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[11:23:38.550189] [D] [thread 135079] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:23:38.550204] [W] [thread 135079] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 1 already scheduled[m
[36m[11:23:38.550225] [D] [thread 135079] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 1 to the query Id index.[m
[36m[11:23:38.550287] [D] [thread 135079] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 1 already mapped to the query Id 1[m
[36m[11:23:38.550331] [D] [thread 135079] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:23:38.550347] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:23:38.550363] [I] [thread 135079] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 1[m
[36m[11:23:38.550384] [D] [thread 135079] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:23:38.550406] [D] [thread 135079] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:23:38.550421] [D] [thread 135079] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:23:38.550429] [D] [thread 135079] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:23:38.550438] [D] [thread 135079] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:23:38.550453] [D] [thread 135079] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[32m[11:23:38.550494] [I] [thread 135079] [BasePlacementStrategy.cpp:361] [addNetworkSourceAndSinkOperators] [m
[36m[11:23:38.550518] [D] [thread 135079] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:23:38.550577] [D] [thread 135079] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 6 exists in the query plan or not[m
[36m[11:23:38.550593] [D] [thread 135079] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 6 in the query plan[m
[36m[11:23:38.550619] [D] [thread 135079] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:23:38.550744] [D] [thread 135079] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:23:38.550768] [D] [thread 135079] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:23:38.550803] [D] [thread 135079] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[11:23:38.550850] [D] [thread 135079] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:23:38.550920] [D] [thread 135079] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:23:38.550935] [D] [thread 135079] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:23:38.550960] [D] [thread 135079] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:23:38.550993] [D] [thread 135079] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:23:38.551002] [D] [thread 135079] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:23:38.551124] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:23:38.551201] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:23:38.551227] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[11:23:38.551248] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.551264] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.551293] [D] [thread 135079] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 6 exists in the query plan or not[m
[36m[11:23:38.551306] [D] [thread 135079] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 6 in the query plan[m
[32m[11:23:38.551450] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[36m[11:23:38.551633] [D] [thread 135079] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(6) as root operator.[m
[36m[11:23:38.551710] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[32m[11:23:38.551970] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[36m[11:23:38.552100] [D] [thread 135079] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(18,,NetworkSourceDescriptor{tcp://192.168.2.32:43981 1::18::0::0}) as new root of the plan.[m
[36m[11:23:38.552119] [D] [thread 135079] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:38.552126] [D] [thread 135079] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:23:38.552212] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[36m[11:23:38.552286] [D] [thread 135079] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(23: {NetworkSinkDescriptor(partition=1::21::0::0;nodeLocation=tcp://192.168.2.11:39645)}) as new root of the plan.[m
[36m[11:23:38.552455] [D] [thread 135079] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:38.552474] [D] [thread 135079] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:23:38.552508] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.552524] [D] [thread 135079] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:23:38.552586] [D] [thread 135079] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[11:23:38.552626] [D] [thread 135079] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:23:38.552643] [W] [thread 135079] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[11:23:38.552652] [D] [thread 135079] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[11:23:38.552715] [D] [thread 135079] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 2 to the query Id 1[m
[36m[11:23:38.552769] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:23:38.552783] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[11:23:38.552794] [D] [thread 135079] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[11:23:38.552807] [D] [thread 135079] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:23:38.552839] [D] [thread 135079] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[11:23:38.552855] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:23:38.552912] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:23:38.552924] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:23:38.552938] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.552949] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:23:38.553064] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[11:23:38.553116] [D] [thread 135079] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[11:23:38.553270] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:23:38.553288] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[11:23:38.553299] [D] [thread 135079] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[11:23:38.553363] [D] [thread 135079] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:23:38.553393] [D] [thread 135079] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[11:23:38.553426] [D] [thread 135079] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:23:38.553479] [D] [thread 135079] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[11:23:38.553494] [D] [thread 135079] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[36m[11:23:38.553519] [D] [thread 135079] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:23:38.553635] [D] [thread 135079] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:23:38.553680] [D] [thread 135079] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:23:38.553714] [D] [thread 135079] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:23:38.553753] [D] [thread 135079] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:23:38.553868] [D] [thread 135079] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:23:38.553884] [D] [thread 135079] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:23:38.553907] [D] [thread 135079] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:23:38.553919] [D] [thread 135079] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:23:38.553925] [D] [thread 135079] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:23:38.553998] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:23:38.554082] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:23:38.554095] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[11:23:38.554114] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.554130] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.554160] [D] [thread 135079] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[11:23:38.554173] [D] [thread 135079] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[32m[11:23:38.554248] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[36m[11:23:38.554409] [D] [thread 135079] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(8) as root operator.[m
[36m[11:23:38.554481] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:23:38.554523] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:23:38.554535] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[11:23:38.554709] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[36m[11:23:38.554802] [D] [thread 135079] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(24,,NetworkSourceDescriptor{tcp://192.168.2.33:45005 1::24::0::0}) as new root of the plan.[m
[36m[11:23:38.554819] [D] [thread 135079] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:38.554827] [D] [thread 135079] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:23:38.554910] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 29[m
[36m[11:23:38.554980] [D] [thread 135079] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(29: {NetworkSinkDescriptor(partition=1::27::0::0;nodeLocation=tcp://192.168.2.11:39645)}) as new root of the plan.[m
[36m[11:23:38.555091] [D] [thread 135079] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:38.555104] [D] [thread 135079] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:23:38.555129] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.555145] [D] [thread 135079] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:23:38.555205] [D] [thread 135079] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[11:23:38.555223] [D] [thread 135079] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:23:38.555247] [W] [thread 135079] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[11:23:38.555258] [D] [thread 135079] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[11:23:38.555323] [D] [thread 135079] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[11:23:38.555356] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:23:38.555368] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[11:23:38.555380] [D] [thread 135079] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  6[m
[36m[11:23:38.555388] [D] [thread 135079] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:23:38.555436] [D] [thread 135079] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[11:23:38.555454] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:23:38.555508] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:23:38.555534] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:23:38.555550] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.555562] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:23:38.555672] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 27[m
[36m[11:23:38.555718] [D] [thread 135079] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[11:23:38.555876] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:23:38.555895] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[11:23:38.555907] [D] [thread 135079] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[11:23:38.555916] [D] [thread 135079] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:23:38.555930] [D] [thread 135079] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[11:23:38.555956] [D] [thread 135079] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:23:38.555999] [D] [thread 135079] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[11:23:38.556012] [D] [thread 135079] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 10 in the query plan[m
[36m[11:23:38.556037] [D] [thread 135079] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:23:38.556145] [D] [thread 135079] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:23:38.556194] [D] [thread 135079] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:23:38.556233] [D] [thread 135079] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[11:23:38.556273] [D] [thread 135079] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:23:38.556370] [D] [thread 135079] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:23:38.556388] [D] [thread 135079] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:23:38.556413] [D] [thread 135079] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:23:38.556438] [D] [thread 135079] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:23:38.556446] [D] [thread 135079] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:23:38.556522] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:23:38.556597] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:23:38.556651] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[11:23:38.556672] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.556688] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.556718] [D] [thread 135079] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[11:23:38.556731] [D] [thread 135079] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 10 in the query plan[m
[32m[11:23:38.556836] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 32[m
[36m[11:23:38.557002] [D] [thread 135079] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(10) as root operator.[m
[36m[11:23:38.557078] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[32m[11:23:38.557295] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 30[m
[36m[11:23:38.557392] [D] [thread 135079] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.34:46309 1::30::0::0}) as new root of the plan.[m
[36m[11:23:38.557416] [D] [thread 135079] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:38.557465] [D] [thread 135079] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:23:38.557550] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 35[m
[36m[11:23:38.557625] [D] [thread 135079] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:39645)}) as new root of the plan.[m
[36m[11:23:38.557735] [D] [thread 135079] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:38.557748] [D] [thread 135079] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:23:38.557775] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.557790] [D] [thread 135079] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:23:38.557847] [D] [thread 135079] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[11:23:38.557879] [D] [thread 135079] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:23:38.557895] [W] [thread 135079] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[11:23:38.557904] [D] [thread 135079] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[11:23:38.557967] [D] [thread 135079] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 3 to the query Id 1[m
[36m[11:23:38.558015] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:23:38.558028] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[11:23:38.558039] [D] [thread 135079] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  7[m
[36m[11:23:38.558048] [D] [thread 135079] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:23:38.558079] [D] [thread 135079] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[11:23:38.558095] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:23:38.558151] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:23:38.558163] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:23:38.558177] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.558188] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:23:38.558288] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 33[m
[36m[11:23:38.558335] [D] [thread 135079] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[11:23:38.558560] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:23:38.558586] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[11:23:38.558599] [D] [thread 135079] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[11:23:38.558608] [D] [thread 135079] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:23:38.558635] [D] [thread 135079] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[11:23:38.558664] [D] [thread 135079] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:23:38.558707] [D] [thread 135079] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[11:23:38.558720] [D] [thread 135079] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 12 in the query plan[m
[36m[11:23:38.558746] [D] [thread 135079] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:23:38.558855] [D] [thread 135079] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:23:38.558908] [D] [thread 135079] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:23:38.558961] [D] [thread 135079] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 3 source operators.[m
[36m[11:23:38.559004] [D] [thread 135079] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:23:38.559068] [D] [thread 135079] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:23:38.559084] [D] [thread 135079] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:23:38.559108] [D] [thread 135079] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:23:38.559119] [D] [thread 135079] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:23:38.559125] [D] [thread 135079] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:23:38.559200] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:23:38.559269] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:23:38.559281] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[11:23:38.559298] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.559314] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.559342] [D] [thread 135079] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[11:23:38.559354] [D] [thread 135079] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 12 in the query plan[m
[32m[11:23:38.559528] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 38[m
[36m[11:23:38.559703] [D] [thread 135079] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(12) as root operator.[m
[36m[11:23:38.559783] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:23:38.559841] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:23:38.559854] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[32m[11:23:38.559996] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 36[m
[36m[11:23:38.560081] [D] [thread 135079] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.35:46533 1::36::0::0}) as new root of the plan.[m
[36m[11:23:38.560096] [D] [thread 135079] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:38.560104] [D] [thread 135079] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:23:38.560187] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 41[m
[36m[11:23:38.560257] [D] [thread 135079] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.11:39645)}) as new root of the plan.[m
[36m[11:23:38.560409] [D] [thread 135079] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:38.560426] [D] [thread 135079] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:23:38.560456] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.560472] [D] [thread 135079] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:23:38.560521] [D] [thread 135079] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[11:23:38.560538] [D] [thread 135079] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:23:38.560552] [W] [thread 135079] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[11:23:38.560561] [D] [thread 135079] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[11:23:38.560623] [D] [thread 135079] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 3 already mapped to the query Id 1[m
[36m[11:23:38.560662] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:23:38.560675] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[11:23:38.560686] [D] [thread 135079] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  8[m
[36m[11:23:38.560694] [D] [thread 135079] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:23:38.560731] [D] [thread 135079] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[11:23:38.560746] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:23:38.560803] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:23:38.560816] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:23:38.560831] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.560843] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:23:38.560942] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 39[m
[36m[11:23:38.561001] [D] [thread 135079] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[11:23:38.561219] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:23:38.561240] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[11:23:38.561263] [D] [thread 135079] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[11:23:38.561273] [D] [thread 135079] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:23:38.561289] [D] [thread 135079] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  3[m
[36m[11:23:38.561317] [D] [thread 135079] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:23:38.561365] [D] [thread 135079] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[11:23:38.561379] [D] [thread 135079] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[36m[11:23:38.561406] [D] [thread 135079] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:23:38.561521] [D] [thread 135079] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:23:38.561576] [D] [thread 135079] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:23:38.561618] [D] [thread 135079] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 4 source operators.[m
[36m[11:23:38.561659] [D] [thread 135079] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:23:38.561726] [D] [thread 135079] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:23:38.561741] [D] [thread 135079] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:23:38.561764] [D] [thread 135079] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:23:38.561775] [D] [thread 135079] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:23:38.561782] [D] [thread 135079] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:23:38.561863] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:23:38.561938] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:23:38.561951] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[11:23:38.561968] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.561984] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.562013] [D] [thread 135079] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[11:23:38.562025] [D] [thread 135079] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[32m[11:23:38.562096] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 44[m
[36m[11:23:38.562254] [D] [thread 135079] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(14) as root operator.[m
[36m[11:23:38.562325] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[32m[11:23:38.562519] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 42[m
[36m[11:23:38.562609] [D] [thread 135079] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.37:43235 1::42::0::0}) as new root of the plan.[m
[36m[11:23:38.562623] [D] [thread 135079] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:38.562630] [D] [thread 135079] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:23:38.562704] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 47[m
[36m[11:23:38.562769] [D] [thread 135079] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.11:39645)}) as new root of the plan.[m
[36m[11:23:38.562876] [D] [thread 135079] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:38.562888] [D] [thread 135079] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:23:38.562910] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.562923] [D] [thread 135079] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:23:38.562977] [D] [thread 135079] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[11:23:38.563008] [D] [thread 135079] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:23:38.563023] [W] [thread 135079] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[11:23:38.563033] [D] [thread 135079] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[11:23:38.563093] [D] [thread 135079] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 4 to the query Id 1[m
[36m[11:23:38.563142] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:23:38.563155] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[11:23:38.563166] [D] [thread 135079] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  9[m
[36m[11:23:38.563174] [D] [thread 135079] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:23:38.563230] [D] [thread 135079] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[11:23:38.563250] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:23:38.563305] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:23:38.563317] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:23:38.563331] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.563343] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:23:38.563440] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 45[m
[36m[11:23:38.563486] [D] [thread 135079] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[11:23:38.563655] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:23:38.563673] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[11:23:38.563684] [D] [thread 135079] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[11:23:38.563693] [D] [thread 135079] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:23:38.563721] [D] [thread 135079] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[11:23:38.563750] [D] [thread 135079] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:23:38.563858] [D] [thread 135079] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[11:23:38.563873] [D] [thread 135079] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 16 in the query plan[m
[36m[11:23:38.563911] [D] [thread 135079] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:23:38.564030] [D] [thread 135079] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:23:38.564088] [D] [thread 135079] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:23:38.564132] [D] [thread 135079] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 5 source operators.[m
[36m[11:23:38.564174] [D] [thread 135079] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:23:38.564241] [D] [thread 135079] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:23:38.564264] [D] [thread 135079] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:23:38.564290] [D] [thread 135079] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:23:38.564301] [D] [thread 135079] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:23:38.564307] [D] [thread 135079] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:23:38.564416] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:23:38.564497] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:23:38.564510] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[11:23:38.564528] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.564543] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.564574] [D] [thread 135079] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[11:23:38.564587] [D] [thread 135079] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 16 in the query plan[m
[32m[11:23:38.564658] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 50[m
[36m[11:23:38.564815] [D] [thread 135079] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(16) as root operator.[m
[36m[11:23:38.564894] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:23:38.564939] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:23:38.564951] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[32m[11:23:38.565086] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 48[m
[36m[11:23:38.565165] [D] [thread 135079] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.38:40449 1::48::0::0}) as new root of the plan.[m
[36m[11:23:38.565178] [D] [thread 135079] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:38.565185] [D] [thread 135079] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:23:38.565257] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 53[m
[36m[11:23:38.565371] [D] [thread 135079] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:39645)}) as new root of the plan.[m
[36m[11:23:38.565490] [D] [thread 135079] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:38.565558] [D] [thread 135079] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:23:38.565594] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.565611] [D] [thread 135079] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:23:38.565662] [D] [thread 135079] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[11:23:38.565690] [D] [thread 135079] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:23:38.565708] [W] [thread 135079] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[11:23:38.565717] [D] [thread 135079] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[11:23:38.565783] [D] [thread 135079] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 4 already mapped to the query Id 1[m
[36m[11:23:38.565815] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:23:38.565827] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[11:23:38.565838] [D] [thread 135079] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  10[m
[36m[11:23:38.565846] [D] [thread 135079] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:23:38.565895] [D] [thread 135079] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[11:23:38.565914] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:23:38.565971] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:23:38.565983] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:23:38.565997] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.566008] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:23:38.566110] [I] [thread 135079] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 51[m
[36m[11:23:38.566157] [D] [thread 135079] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[11:23:38.566327] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:23:38.566346] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[11:23:38.566357] [D] [thread 135079] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[11:23:38.566367] [D] [thread 135079] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:23:38.566381] [D] [thread 135079] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  4[m
[36m[11:23:38.566415] [D] [thread 135079] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:23:38.566450] [D] [thread 135079] [GlobalExecutionPlan.cpp:33] [checkIfExecutionNodeIsARoot] GlobalExecutionPlan: Checking if Execution node with id 1 is a root node[m
[36m[11:23:38.566483] [D] [thread 135079] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:23:38.566495] [D] [thread 135079] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:23:38.566510] [D] [thread 135079] [GlobalExecutionPlan.cpp:68] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node as root node[m
[36m[11:23:38.566576] [D] [thread 135079] [GlobalExecutionPlan.cpp:72] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[11:23:38.566618] [D] [thread 135079] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[11:23:38.566631] [D] [thread 135079] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[11:23:38.566668] [D] [thread 135079] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:23:38.566737] [D] [thread 135079] [BasePlacementStrategy.cpp:337] [runTypeInferencePhase] BasePlacementStrategy: Run type inference phase for all the query sub plans to be deployed.[m
[36m[11:23:38.566761] [D] [thread 135079] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[11:23:38.566784] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.566800] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.567026] [D] [thread 135079] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:23:38.567088] [D] [thread 135079] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:23:38.567126] [D] [thread 135079] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:23:38.567172] [D] [thread 135079] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:23:38.567197] [D] [thread 135079] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:23:38.567627] [D] [thread 135079] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:23:38.567676] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.567706] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.567841] [D] [thread 135079] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:23:38.567877] [D] [thread 135079] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:23:38.567903] [D] [thread 135079] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:23:38.567937] [D] [thread 135079] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:23:38.567956] [D] [thread 135079] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:23:38.568382] [D] [thread 135079] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:23:38.568433] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.568463] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.568606] [D] [thread 135079] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:23:38.568644] [D] [thread 135079] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:23:38.568673] [D] [thread 135079] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:23:38.568709] [D] [thread 135079] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:23:38.568731] [D] [thread 135079] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:23:38.569104] [D] [thread 135079] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:23:38.569147] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.569162] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.569277] [D] [thread 135079] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:23:38.569310] [D] [thread 135079] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:23:38.569334] [D] [thread 135079] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:23:38.569365] [D] [thread 135079] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:23:38.569385] [D] [thread 135079] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:23:38.569734] [D] [thread 135079] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:23:38.569770] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.569784] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.569892] [D] [thread 135079] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:23:38.569921] [D] [thread 135079] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:23:38.569944] [D] [thread 135079] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:23:38.569973] [D] [thread 135079] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:23:38.569993] [D] [thread 135079] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:23:38.570350] [D] [thread 135079] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:23:38.570388] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.570402] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.570532] [D] [thread 135079] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:23:38.570566] [D] [thread 135079] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:23:38.570590] [D] [thread 135079] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:23:38.570620] [D] [thread 135079] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:23:38.570640] [D] [thread 135079] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:23:38.571043] [D] [thread 135079] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:23:38.571087] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.571103] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.571271] [D] [thread 135079] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:23:38.571322] [D] [thread 135079] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:23:38.571358] [D] [thread 135079] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 6 source operators.[m
[36m[11:23:38.571447] [D] [thread 135079] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:23:38.571471] [D] [thread 135079] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:23:38.571948] [D] [thread 135079] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[11:23:38.572241] [I] [thread 135079] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:23:38.572375] [I] [thread 135079] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:23:38.572487] [D] [thread 135079] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:23:38.572539] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.572556] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.572706] [D] [thread 135079] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:23:38.572747] [D] [thread 135079] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:23:38.572779] [D] [thread 135079] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:23:38.572814] [D] [thread 135079] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:23:38.572835] [D] [thread 135079] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:23:38.573029] [D] [thread 135079] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:23:38.573132] [D] [thread 135079] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:23:38.573159] [D] [thread 135079] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:23:38.573182] [D] [thread 135079] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:23:38.573206] [D] [thread 135079] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:23:38.573224] [D] [thread 135079] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:23:38.573442] [D] [thread 135079] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:23:38.573481] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.573495] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.573599] [D] [thread 135079] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:23:38.573627] [D] [thread 135079] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:23:38.573660] [D] [thread 135079] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:23:38.573690] [D] [thread 135079] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:23:38.573710] [D] [thread 135079] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:23:38.573890] [D] [thread 135079] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:23:38.573980] [D] [thread 135079] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:23:38.574007] [D] [thread 135079] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:23:38.574028] [D] [thread 135079] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:23:38.574050] [D] [thread 135079] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:23:38.574068] [D] [thread 135079] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:23:38.574276] [D] [thread 135079] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:23:38.574313] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.574328] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.574426] [D] [thread 135079] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:23:38.574455] [D] [thread 135079] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:23:38.574479] [D] [thread 135079] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:23:38.574504] [D] [thread 135079] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:23:38.574524] [D] [thread 135079] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:23:38.574751] [D] [thread 135079] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:23:38.574854] [D] [thread 135079] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:23:38.574881] [D] [thread 135079] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:23:38.574904] [D] [thread 135079] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:23:38.574928] [D] [thread 135079] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:23:38.574959] [D] [thread 135079] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:23:38.575134] [D] [thread 135079] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:23:38.575182] [D] [thread 135079] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[36m[11:23:38.577023] [D] [thread 135079] [QueryPlacementPhase.cpp:140] [execute] QueryPlacementPhase: Update Global Execution Plan:
ExecutionNode(id:1, ip:192.168.2.11, topologyId:1)
| QuerySubPlan(queryId:1, querySubPlanId:7)
|  SINK(4: {FileSinkDescriptor()})
|    CENTRALWINDOW(17)
|      SOURCE(21,,NetworkSourceDescriptor{tcp://192.168.2.12:36101 1::21::0::0})
|      SOURCE(27,,NetworkSourceDescriptor{tcp://192.168.2.12:36101 1::27::0::0})
|      SOURCE(33,,NetworkSourceDescriptor{tcp://192.168.2.30:36857 1::33::0::0})
|      SOURCE(39,,NetworkSourceDescriptor{tcp://192.168.2.30:36857 1::39::0::0})
|      SOURCE(45,,NetworkSourceDescriptor{tcp://192.168.2.31:43553 1::45::0::0})
|      SOURCE(51,,NetworkSourceDescriptor{tcp://192.168.2.31:43553 1::51::0::0})
|--ExecutionNode(id:2, ip:192.168.2.12, topologyId:2)
|  | QuerySubPlan(queryId:1, querySubPlanId:8)
|  |  SINK(23: {NetworkSinkDescriptor(partition=1::21::0::0;nodeLocation=tcp://192.168.2.11:39645)})
|  |    SOURCE(18,,NetworkSourceDescriptor{tcp://192.168.2.32:43981 1::18::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:9)
|  |  SINK(29: {NetworkSinkDescriptor(partition=1::27::0::0;nodeLocation=tcp://192.168.2.11:39645)})
|  |    SOURCE(24,,NetworkSourceDescriptor{tcp://192.168.2.33:45005 1::24::0::0})
|  |--ExecutionNode(id:5, ip:192.168.2.32, topologyId:5)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:1)
|  |  |  SINK(20: {NetworkSinkDescriptor(partition=1::18::0::0;nodeLocation=tcp://192.168.2.12:36101)})
|  |  |    WATERMARKASSIGNER(6)
|  |  |      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
|  |--ExecutionNode(id:6, ip:192.168.2.33, topologyId:6)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:2)
|  |  |  SINK(26: {NetworkSinkDescriptor(partition=1::24::0::0;nodeLocation=tcp://192.168.2.12:36101)})
|  |  |    WATERMARKASSIGNER(8)
|  |  |      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
|--ExecutionNode(id:3, ip:192.168.2.30, topologyId:3)
|  | QuerySubPlan(queryId:1, querySubPlanId:10)
|  |  SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:39645)})
|  |    SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.34:46309 1::30::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:11)
|  |  SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.11:39645)})
|  |    SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.35:46533 1::36::0::0})
|  |--ExecutionNode(id:7, ip:192.168.2.34, topologyId:7)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:3)
|  |  |  SINK(32: {NetworkSinkDescriptor(partition=1::30::0::0;nodeLocation=tcp://192.168.2.30:36857)})
|  |  |    WATERMARKASSIGNER(10)
|  |  |      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
|  |--ExecutionNode(id:8, ip:192.168.2.35, topologyId:8)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:4)
|  |  |  SINK(38: {NetworkSinkDescriptor(partition=1::36::0::0;nodeLocation=tcp://192.168.2.30:36857)})
|  |  |    WATERMARKASSIGNER(12)
|  |  |      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
|--ExecutionNode(id:4, ip:192.168.2.31, topologyId:4)
|  | QuerySubPlan(queryId:1, querySubPlanId:12)
|  |  SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.11:39645)})
|  |    SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.37:43235 1::42::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:13)
|  |  SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:39645)})
|  |    SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.38:40449 1::48::0::0})
|  |--ExecutionNode(id:9, ip:192.168.2.37, topologyId:9)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:5)
|  |  |  SINK(44: {NetworkSinkDescriptor(partition=1::42::0::0;nodeLocation=tcp://192.168.2.31:43553)})
|  |  |    WATERMARKASSIGNER(14)
|  |  |      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
|  |--ExecutionNode(id:10, ip:192.168.2.38, topologyId:10)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:6)
|  |  |  SINK(50: {NetworkSinkDescriptor(partition=1::48::0::0;nodeLocation=tcp://192.168.2.31:43553)})
|  |  |    WATERMARKASSIGNER(16)
|  |  |      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:23:38.577166] [D] [thread 135079] [QueryDeploymentPhase.cpp:54] [execute] QueryDeploymentPhase: deploy the query[m
[36m[11:23:38.577199] [D] [thread 135079] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[11:23:38.577468] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.577491] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.577708] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.577727] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.577788] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.577800] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.577836] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.577847] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.577880] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.577891] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.577924] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.577935] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.577969] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.577981] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.578017] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.578028] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.578080] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.578091] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.578142] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.578153] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.578330] [D] [thread 135079] [QueryDeploymentPhase.cpp:106] [deployQuery] QueryDeploymentPhase::deployQuery queryId= 1[m
[36m[11:23:38.578361] [D] [thread 135079] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=5[m
[36m[11:23:38.578371] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.578380] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.578597] [D] [thread 135079] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.32:44765[m
[36m[11:23:38.578641] [D] [thread 135079] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:44765 queryId=1 querySubPlanId = 1[m
[36m[11:23:38.578923] [D] [thread 135079] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(20: {NetworkSinkDescriptor(partition=1::18::0::0;nodeLocation=tcp://192.168.2.12:36101)})
  WATERMARKASSIGNER(6)
    SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
[m
[36m[11:23:38.578962] [D] [thread 135079] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:23:38.579232] [D] [thread 135079] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:23:38.583184] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.584213] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.584685] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.585030] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.585796] [D] [thread 135079] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[11:23:38.586885] [D] [thread 135079] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:23:38.587268] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.587620] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.587870] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.588190] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.588718] [D] [thread 135079] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream4)[m
[36m[11:23:38.589007] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.589362] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.589898] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.590240] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.590468] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.590780] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.600437] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:38.603529] [D] [thread 135079] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=6[m
[36m[11:23:38.603563] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.603583] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.603717] [D] [thread 135079] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.33:45805[m
[36m[11:23:38.603747] [D] [thread 135079] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:45805 queryId=1 querySubPlanId = 2[m
[36m[11:23:38.603941] [D] [thread 135079] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(26: {NetworkSinkDescriptor(partition=1::24::0::0;nodeLocation=tcp://192.168.2.12:36101)})
  WATERMARKASSIGNER(8)
    SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
[m
[36m[11:23:38.603976] [D] [thread 135079] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:23:38.604129] [D] [thread 135079] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:23:38.604487] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.604865] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.605121] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.605445] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.605930] [D] [thread 135079] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[11:23:38.606011] [D] [thread 135079] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:23:38.606258] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.606584] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.606815] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.607127] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.607521] [D] [thread 135079] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream5)[m
[36m[11:23:38.607708] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.608031] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.608430] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.608772] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.609012] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.609327] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.618343] [D] [thread 135079] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=7[m
[36m[11:23:38.618378] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.618396] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.618528] [D] [thread 135079] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.34:43563[m
[36m[11:23:38.618557] [D] [thread 135079] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.34:43563 queryId=1 querySubPlanId = 3[m
[36m[11:23:38.618756] [D] [thread 135079] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(32: {NetworkSinkDescriptor(partition=1::30::0::0;nodeLocation=tcp://192.168.2.30:36857)})
  WATERMARKASSIGNER(10)
    SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
[m
[36m[11:23:38.618791] [D] [thread 135079] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:23:38.618940] [D] [thread 135079] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:23:38.619250] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.619607] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.619859] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.620181] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.620755] [D] [thread 135079] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[11:23:38.620847] [D] [thread 135079] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:23:38.621077] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.621406] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.621640] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.621970] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.622381] [D] [thread 135079] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream6)[m
[36m[11:23:38.622570] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.622908] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.623268] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.623577] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.623794] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.624108] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.633097] [D] [thread 135079] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=8[m
[36m[11:23:38.633134] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.633152] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.633282] [D] [thread 135079] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.35:44745[m
[36m[11:23:38.633314] [D] [thread 135079] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.35:44745 queryId=1 querySubPlanId = 4[m
[36m[11:23:38.633510] [D] [thread 135079] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(38: {NetworkSinkDescriptor(partition=1::36::0::0;nodeLocation=tcp://192.168.2.30:36857)})
  WATERMARKASSIGNER(12)
    SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
[m
[36m[11:23:38.633547] [D] [thread 135079] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:23:38.633704] [D] [thread 135079] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:23:38.634033] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.634397] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.634650] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.634974] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.635479] [D] [thread 135079] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[11:23:38.635565] [D] [thread 135079] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:23:38.635793] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.636123] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.636393] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.636720] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.637160] [D] [thread 135079] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream7)[m
[36m[11:23:38.637348] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.637684] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.638075] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.638399] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.638626] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.638934] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.647668] [D] [thread 135079] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=9[m
[36m[11:23:38.647754] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.647775] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.647891] [D] [thread 135079] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.37:33647[m
[36m[11:23:38.647922] [D] [thread 135079] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.37:33647 queryId=1 querySubPlanId = 5[m
[36m[11:23:38.648115] [D] [thread 135079] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(44: {NetworkSinkDescriptor(partition=1::42::0::0;nodeLocation=tcp://192.168.2.31:43553)})
  WATERMARKASSIGNER(14)
    SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
[m
[36m[11:23:38.648148] [D] [thread 135079] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:23:38.648298] [D] [thread 135079] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:23:38.648661] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.649088] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.649369] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.649706] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.650221] [D] [thread 135079] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[11:23:38.650335] [D] [thread 135079] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:23:38.650564] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.650921] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.651176] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.651508] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.651925] [D] [thread 135079] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream8)[m
[36m[11:23:38.652133] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.652537] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.652931] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.653270] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.653517] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.653851] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.662128] [D] [thread 135079] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=10[m
[36m[11:23:38.662212] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.662238] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.662355] [D] [thread 135079] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.38:40217[m
[36m[11:23:38.662385] [D] [thread 135079] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.38:40217 queryId=1 querySubPlanId = 6[m
[36m[11:23:38.662576] [D] [thread 135079] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(50: {NetworkSinkDescriptor(partition=1::48::0::0;nodeLocation=tcp://192.168.2.31:43553)})
  WATERMARKASSIGNER(16)
    SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:23:38.662610] [D] [thread 135079] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:23:38.662762] [D] [thread 135079] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:23:38.663071] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.663479] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.663747] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.664076] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.664631] [D] [thread 135079] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[11:23:38.664743] [D] [thread 135079] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:23:38.664976] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.665325] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.665581] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.665911] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.666341] [D] [thread 135079] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream9)[m
[36m[11:23:38.666552] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.666904] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.667298] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.667642] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.667891] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.668222] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.676582] [D] [thread 135079] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=1[m
[36m[11:23:38.676658] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.676710] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.676831] [D] [thread 135079] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.11:35597[m
[36m[11:23:38.676861] [D] [thread 135079] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.11:35597 queryId=1 querySubPlanId = 7[m
[36m[11:23:38.677171] [D] [thread 135079] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(17)
    SOURCE(21,,NetworkSourceDescriptor{tcp://192.168.2.12:36101 1::21::0::0})
    SOURCE(27,,NetworkSourceDescriptor{tcp://192.168.2.12:36101 1::27::0::0})
    SOURCE(33,,NetworkSourceDescriptor{tcp://192.168.2.30:36857 1::33::0::0})
    SOURCE(39,,NetworkSourceDescriptor{tcp://192.168.2.30:36857 1::39::0::0})
    SOURCE(45,,NetworkSourceDescriptor{tcp://192.168.2.31:43553 1::45::0::0})
    SOURCE(51,,NetworkSourceDescriptor{tcp://192.168.2.31:43553 1::51::0::0})
[m
[36m[11:23:38.677208] [D] [thread 135079] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:23:38.677346] [D] [thread 135079] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:23:38.677631] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:23:38.677852] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.678012] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:23:38.678154] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.678556] [D] [thread 135079] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[11:23:38.678697] [D] [thread 135079] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:23:38.678961] [D] [thread 135079] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:23:38.679077] [D] [thread 135079] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:23:38.679115] [D] [thread 135079] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:23:38.679178] [D] [thread 135079] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:23:38.679692] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.680063] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.680259] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:23:38.680461] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.680890] [D] [thread 135079] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:36101 1::21::0::0}[m
[36m[11:23:38.681123] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.681484] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.682008] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.682365] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.682622] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.683008] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.683498] [D] [thread 135079] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:36101 1::27::0::0}[m
[36m[11:23:38.683694] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.684054] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.684507] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.684855] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.685106] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.685440] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.685915] [D] [thread 135079] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:36857 1::33::0::0}[m
[36m[11:23:38.686107] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.686464] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.686889] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.687237] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.687534] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.687936] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.688622] [D] [thread 135079] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:36857 1::39::0::0}[m
[36m[11:23:38.688860] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.689248] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.689725] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.690075] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.690323] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.690658] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.691155] [D] [thread 135079] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:43553 1::45::0::0}[m
[36m[11:23:38.691352] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.691712] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.692125] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.692519] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.692778] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.693149] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.693622] [D] [thread 135079] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:43553 1::51::0::0}[m
[36m[11:23:38.693812] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.694160] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.694568] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.694901] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.695135] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.695465] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.710096] [D] [thread 135079] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=2[m
[36m[11:23:38.710192] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.710263] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.710405] [D] [thread 135079] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.12:41303[m
[36m[11:23:38.710470] [D] [thread 135079] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:41303 queryId=1 querySubPlanId = 8[m
[36m[11:23:38.710676] [D] [thread 135079] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(23: {NetworkSinkDescriptor(partition=1::21::0::0;nodeLocation=tcp://192.168.2.11:39645)})
  SOURCE(18,,NetworkSourceDescriptor{tcp://192.168.2.32:43981 1::18::0::0})
[m
[36m[11:23:38.710713] [D] [thread 135079] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:23:38.710865] [D] [thread 135079] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:23:38.711202] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.711579] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.711846] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.712176] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.712689] [D] [thread 135079] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:43981 1::18::0::0}[m
[36m[11:23:38.712892] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.713249] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.713776] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.714136] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.714391] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.714765] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.722158] [D] [thread 135079] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:41303 queryId=1 querySubPlanId = 9[m
[36m[11:23:38.722439] [D] [thread 135079] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(29: {NetworkSinkDescriptor(partition=1::27::0::0;nodeLocation=tcp://192.168.2.11:39645)})
  SOURCE(24,,NetworkSourceDescriptor{tcp://192.168.2.33:45005 1::24::0::0})
[m
[36m[11:23:38.722488] [D] [thread 135079] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:23:38.722650] [D] [thread 135079] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:23:38.722973] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.723338] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.723601] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.723932] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.724449] [D] [thread 135079] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:45005 1::24::0::0}[m
[36m[11:23:38.724652] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.725012] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.725446] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.725796] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.726044] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.726380] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.733661] [D] [thread 135079] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=3[m
[36m[11:23:38.733744] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.733807] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.733931] [D] [thread 135079] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.30:44835[m
[36m[11:23:38.733963] [D] [thread 135079] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:44835 queryId=1 querySubPlanId = 10[m
[36m[11:23:38.734152] [D] [thread 135079] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:39645)})
  SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.34:46309 1::30::0::0})
[m
[36m[11:23:38.734186] [D] [thread 135079] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:23:38.734338] [D] [thread 135079] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:23:38.734673] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.735042] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.735309] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.735646] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.736117] [D] [thread 135079] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.34:46309 1::30::0::0}[m
[36m[11:23:38.736364] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.736742] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.737179] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.737524] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.737778] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.738117] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.745429] [D] [thread 135079] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:44835 queryId=1 querySubPlanId = 11[m
[36m[11:23:38.745753] [D] [thread 135079] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.11:39645)})
  SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.35:46533 1::36::0::0})
[m
[36m[11:23:38.745805] [D] [thread 135079] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:23:38.745968] [D] [thread 135079] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:23:38.746293] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.746655] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.746916] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.747252] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.747726] [D] [thread 135079] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.35:46533 1::36::0::0}[m
[36m[11:23:38.747928] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.748293] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.748758] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.749110] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.749362] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.749700] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.756956] [D] [thread 135079] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=4[m
[36m[11:23:38.757033] [D] [thread 135079] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:23:38.757055] [D] [thread 135079] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:23:38.757171] [D] [thread 135079] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.31:34183[m
[36m[11:23:38.757202] [D] [thread 135079] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:34183 queryId=1 querySubPlanId = 12[m
[36m[11:23:38.757393] [D] [thread 135079] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.11:39645)})
  SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.37:43235 1::42::0::0})
[m
[36m[11:23:38.757426] [D] [thread 135079] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:23:38.757578] [D] [thread 135079] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:23:38.757914] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.758288] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.758553] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.758880] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.759342] [D] [thread 135079] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.37:43235 1::42::0::0}[m
[36m[11:23:38.759536] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.759891] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.760314] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.760705] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.760955] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.761290] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.768656] [D] [thread 135079] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:34183 queryId=1 querySubPlanId = 13[m
[36m[11:23:38.768922] [D] [thread 135079] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:39645)})
  SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.38:40449 1::48::0::0})
[m
[36m[11:23:38.768972] [D] [thread 135079] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:23:38.769131] [D] [thread 135079] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:23:38.769460] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.769835] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.770111] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.770446] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.770921] [D] [thread 135079] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.38:40449 1::48::0::0}[m
[36m[11:23:38.771119] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.771483] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.771908] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.772255] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.772537] [D] [thread 135079] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:38.772881] [D] [thread 135079] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:23:38.780248] [D] [thread 135079] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Register for 10 queues[m
[36m[11:23:39.013749] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:39.014144] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:40.015316] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:40.069879] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:40.070194] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:40.253046] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:40.253366] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:41.254710] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:41.443057] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:41.443379] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:41.557202] [D] [thread 135095] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[11:23:41.557423] [D] [thread 135095] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:23:41.558622] [D] [thread 135095] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:23:41.558864] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 54[m
[36m[11:23:41.558959] [D] [thread 135095] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:23:41.560049] [D] [thread 135095] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:23:41.560130] [D] [thread 135095] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:23:41.561190] [D] [thread 135095] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:23:41.563412] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 55[m
[36m[11:23:41.563646] [D] [thread 135095] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:23:41.564114] [D] [thread 135095] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:23:41.564184] [D] [thread 135095] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:23:41.564580] [D] [thread 135095] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:23:41.566866] [D] [thread 135095] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[11:23:41.567016] [D] [thread 135095] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:23:41.567952] [D] [thread 135095] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:23:41.568126] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 56[m
[36m[11:23:41.568197] [D] [thread 135095] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:23:41.569167] [D] [thread 135095] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:23:41.569230] [D] [thread 135095] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:23:41.570095] [D] [thread 135095] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:23:41.573136] [D] [thread 135095] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[11:23:41.573289] [D] [thread 135095] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:23:41.574223] [D] [thread 135095] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:23:41.574424] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 57[m
[36m[11:23:41.574497] [D] [thread 135095] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:23:41.575420] [D] [thread 135095] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:23:41.575480] [D] [thread 135095] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:23:41.576375] [D] [thread 135095] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:23:41.579367] [D] [thread 135095] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[11:23:41.579523] [D] [thread 135095] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:23:41.580505] [D] [thread 135095] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:23:41.580679] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 58[m
[36m[11:23:41.580751] [D] [thread 135095] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:23:41.581732] [D] [thread 135095] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:23:41.581805] [D] [thread 135095] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:23:41.582747] [D] [thread 135095] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:23:41.585300] [D] [thread 135095] [ExpressionSerializationUtil.cpp:170] [deserializeExpression] ExpressionSerializationUtil:: deserialize expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:23:41.585389] [D] [thread 135095] [ExpressionSerializationUtil.cpp:691] [deserializeLogicalExpressions] ExpressionSerializationUtil:: de-serialize logical expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:23:41.585559] [D] [thread 135095] [ExpressionSerializationUtil.cpp:762] [deserializeGeographyExpressions] ExpressionSerializationUtil:: de-serialize geography expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:23:41.585601] [D] [thread 135095] [ExpressionSerializationUtil.cpp:830] [deserializeUDFCallExpressions] ExpressionSerializationUtil:: de-serialize udf call expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:23:41.585994] [D] [thread 135095] [ExpressionSerializationUtil.cpp:284] [deserializeExpression] ExpressionSerializationUtil:: deserialized expression node to the following node: FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:23:41.586073] [D] [thread 135095] [ExpressionSerializationUtil.cpp:170] [deserializeExpression] ExpressionSerializationUtil:: deserialize expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:23:41.586088] [D] [thread 135095] [ExpressionSerializationUtil.cpp:691] [deserializeLogicalExpressions] ExpressionSerializationUtil:: de-serialize logical expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:23:41.586132] [D] [thread 135095] [ExpressionSerializationUtil.cpp:762] [deserializeGeographyExpressions] ExpressionSerializationUtil:: de-serialize geography expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:23:41.586148] [D] [thread 135095] [ExpressionSerializationUtil.cpp:830] [deserializeUDFCallExpressions] ExpressionSerializationUtil:: de-serialize udf call expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:23:41.586398] [D] [thread 135095] [ExpressionSerializationUtil.cpp:284] [deserializeExpression] ExpressionSerializationUtil:: deserialized expression node to the following node: FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:23:41.586857] [D] [thread 135095] [OperatorSerializationUtil.cpp:783] [deserializeWindowOperator] OperatorSerializationUtil::deserializeWindowOperator: SerializableOperator_WindowDetails_DistributionCharacteristic_Distribution_Complete[m
[36m[11:23:41.586969] [D] [thread 135095] [ExpressionSerializationUtil.cpp:170] [deserializeExpression] ExpressionSerializationUtil:: deserialize expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:23:41.586986] [D] [thread 135095] [ExpressionSerializationUtil.cpp:691] [deserializeLogicalExpressions] ExpressionSerializationUtil:: de-serialize logical expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:23:41.587030] [D] [thread 135095] [ExpressionSerializationUtil.cpp:762] [deserializeGeographyExpressions] ExpressionSerializationUtil:: de-serialize geography expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:23:41.587049] [D] [thread 135095] [ExpressionSerializationUtil.cpp:830] [deserializeUDFCallExpressions] ExpressionSerializationUtil:: de-serialize udf call expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:23:41.587357] [D] [thread 135095] [ExpressionSerializationUtil.cpp:284] [deserializeExpression] ExpressionSerializationUtil:: deserialized expression node to the following node: FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[32m[11:23:41.587556] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 59[m
[36m[11:23:41.587748] [D] [thread 135095] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:23:41.588251] [D] [thread 135095] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:23:41.588354] [D] [thread 135095] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:23:41.589384] [D] [thread 135095] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:23:41.592233] [D] [thread 135095] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[11:23:41.592662] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 0:1::27::0::0[m
[32m[11:23:41.592783] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=0) Data[m
[33m[1m[11:23:41.592902] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=0) NOT REGISTERED[m
[36m[11:23:41.592941] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 2:1::27::0::0[m
[32m[11:23:41.592982] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=2) Data[m
[33m[1m[11:23:41.592992] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::27::0::0[m
[33m[1m[11:23:41.593016] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[11:23:41.593060] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::27::0::0[m
[33m[1m[11:23:41.593152] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::27::0::0[m
[33m[1m[11:23:41.593152] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::27::0::0[m
[36m[11:23:41.593314] [D] [thread 135095] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:23:41.594533] [D] [thread 135095] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:23:41.594802] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 60[m
[36m[11:23:41.594892] [D] [thread 135095] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:23:41.595493] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 3:1::27::0::0[m
[32m[11:23:41.595595] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=3) Data[m
[33m[1m[11:23:41.595651] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[11:23:41.595690] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::27::0::0[m
[33m[1m[11:23:41.595771] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::27::0::0[m
[36m[11:23:41.595801] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 1:1::27::0::0[m
[32m[11:23:41.595840] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=1) Data[m
[33m[1m[11:23:41.595876] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[11:23:41.595909] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::27::0::0[m
[33m[1m[11:23:41.596003] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::27::0::0[m
[36m[11:23:41.596021] [D] [thread 135095] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:23:41.596065] [D] [thread 135095] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:23:41.597244] [D] [thread 135095] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:23:41.599904] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 3:1::39::0::0[m
[32m[11:23:41.600015] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) Data[m
[33m[1m[11:23:41.600073] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[11:23:41.600112] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::39::0::0[m
[33m[1m[11:23:41.600238] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::39::0::0[m
[36m[11:23:41.600406] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 2:1::39::0::0[m
[32m[11:23:41.600451] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) Data[m
[33m[1m[11:23:41.600492] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[11:23:41.600525] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::39::0::0[m
[33m[1m[11:23:41.600610] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::39::0::0[m
[36m[11:23:41.600684] [D] [thread 135095] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[11:23:41.600827] [D] [thread 135095] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:23:41.601790] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 1:1::39::0::0[m
[32m[11:23:41.601895] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) Data[m
[33m[1m[11:23:41.601948] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[11:23:41.601987] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::39::0::0[m
[36m[11:23:41.602048] [D] [thread 135095] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[33m[1m[11:23:41.602066] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::39::0::0[m
[32m[11:23:41.602210] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 61[m
[36m[11:23:41.602278] [D] [thread 135095] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:23:41.602314] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 0:1::39::0::0[m
[32m[11:23:41.602360] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) Data[m
[33m[1m[11:23:41.602407] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[11:23:41.602440] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::39::0::0[m
[33m[1m[11:23:41.602550] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::39::0::0[m
[36m[11:23:41.603390] [D] [thread 135095] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:23:41.603486] [D] [thread 135095] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:23:41.604575] [D] [thread 135095] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:23:41.604801] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 0:1::45::0::0[m
[32m[11:23:41.604891] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) Data[m
[33m[1m[11:23:41.604943] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[11:23:41.604978] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::45::0::0[m
[33m[1m[11:23:41.605111] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::45::0::0[m
[36m[11:23:41.604801] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 3:1::45::0::0[m
[32m[11:23:41.605206] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=3) Data[m
[33m[1m[11:23:41.605249] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[11:23:41.605279] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::45::0::0[m
[33m[1m[11:23:41.605371] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::45::0::0[m
[36m[11:23:41.605738] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 2:1::45::0::0[m
[32m[11:23:41.605789] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=2) Data[m
[33m[1m[11:23:41.605832] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[11:23:41.605865] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::45::0::0[m
[33m[1m[11:23:41.605948] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::45::0::0[m
[36m[11:23:41.606254] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 1:1::45::0::0[m
[32m[11:23:41.606305] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=1) Data[m
[33m[1m[11:23:41.606346] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[11:23:41.606377] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::45::0::0[m
[33m[1m[11:23:41.606443] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::45::0::0[m
[36m[11:23:41.607898] [D] [thread 135095] [WorkerRPCServer.cpp:45] [RegisterQuery] WorkerRPCServer::RegisterQuery: got request for queryId: 1 plan=SINK(55: {FileSinkDescriptor()})
  CENTRALWINDOW(59)
    SOURCE(56,,NetworkSourceDescriptor{tcp://192.168.2.12:36101 1::21::0::0})
    SOURCE(60,,NetworkSourceDescriptor{tcp://192.168.2.12:36101 1::27::0::0})
    SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.30:36857 1::33::0::0})
    SOURCE(58,,NetworkSourceDescriptor{tcp://192.168.2.30:36857 1::39::0::0})
    SOURCE(61,,NetworkSourceDescriptor{tcp://192.168.2.31:43553 1::45::0::0})
    SOURCE(57,,NetworkSourceDescriptor{tcp://192.168.2.31:43553 1::51::0::0})
[m
[32m[11:23:41.607985] [I] [thread 135095] [NodeEngine.cpp:112] [registerQueryInNodeEngine] Creating ExecutableQueryPlan for 1 7 [m
[32m[11:23:41.608119] [I] [thread 135095] [NautilusQueryCompiler.cpp:59] [compileQuery] Compile Query with Nautilus[m
Dumping queryPlan: [36m[11:23:41.608228] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 2:1::27::0::0[m
[32m[11:23:41.608282] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=2) Data[m
SINK(55: {FileSinkDescriptor()})
  CENTRALWINDOW(59)
    SOURCE(56,,NetworkSourceDescriptor{tcp://192.168.2.12:36101 1::21::0::0})
    SOURCE(60,,NetworkSourceDescriptor{tcp://192.168.2.12:36101 1::27::0::0})
    SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.30:36857 1::33::0::0})
    SOURCE(58,,NetworkSourceDescriptor{tcp://192.168.2.30:36857 1::39::0::0})
    SOURCE(61,,NetworkSourceDescriptor{tcp://192.168.2.31:43553 1::45::0::0})
    SOURCE(57,,NetworkSourceDescriptor{tcp://192.168.2.31:43553 1::51::0::0})

[33m[1m[11:23:41.608363] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[11:23:41.608402] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::27::0::0[m
[36m[11:23:41.608483] [D] [thread 135095] [NautilusQueryCompiler.cpp:70] [compileQuery] compile query with id: 1 subPlanId: 7[m
[33m[1m[11:23:41.608519] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::27::0::0[m
[36m[11:23:41.608523] [D] [thread 135095] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-7-2023-11-13 11:23:41 - 1. LogicalQueryPlan[m
[36m[11:23:41.608710] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 0:1::27::0::0[m
[32m[11:23:41.608755] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=0) Data[m
[33m[1m[11:23:41.608813] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[11:23:41.608844] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::27::0::0[m
[33m[1m[11:23:41.608929] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::27::0::0[m
[36m[11:23:41.609165] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 3:1::27::0::0[m
[32m[11:23:41.609215] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=3) Data[m
[32m[11:23:41.609238] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 62[m
[33m[1m[11:23:41.609262] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[11:23:41.609295] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::27::0::0[m
[33m[1m[11:23:41.609362] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::27::0::0[m
[36m[11:23:41.609437] [D] [thread 135095] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[32m[11:23:41.609458] [I] [thread 135095] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:23:41.609465] [I] [thread 135095] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[36m[11:23:41.609564] [D] [thread 135095] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:23:41.609561] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 1:1::27::0::0[m
[36m[11:23:41.609589] [D] [thread 135095] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[32m[11:23:41.609618] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=1) Data[m
[36m[11:23:41.609663] [D] [thread 135095] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[33m[1m[11:23:41.609663] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=1) NOT REGISTERED[m
[36m[11:23:41.609691] [D] [thread 135095] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[33m[1m[11:23:41.609705] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::27::0::0[m
[33m[1m[11:23:41.609792] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::27::0::0[m
[32m[11:23:41.609828] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 63[m
[32m[11:23:41.609914] [I] [thread 135095] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[32m[11:23:41.609929] [I] [thread 135095] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[11:23:41.609938] [I] [thread 135095] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:23:41.609952] [I] [thread 135095] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:23:41.610050] [I] [thread 135095] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:23:41.610067] [I] [thread 135095] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:23:41.610076] [I] [thread 135095] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:23:41.610085] [I] [thread 135095] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:23:41.610094] [I] [thread 135095] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:23:41.610191] [I] [thread 135095] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[36m[11:23:41.610805] [D] [thread 135095] [DefaultPhysicalOperatorProvider.cpp:853] [lowerWindowOperator] DefaultPhysicalOperatorProvider::lowerWindowOperator: Plan before
PhysicalSinkOperator
  CENTRALWINDOW(59)
    PhysicalMultiplexOperator
      SOURCE(56,,NetworkSourceDescriptor{tcp://192.168.2.12:36101 1::21::0::0})
      SOURCE(60,,NetworkSourceDescriptor{tcp://192.168.2.12:36101 1::27::0::0})
      SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.30:36857 1::33::0::0})
      SOURCE(58,,NetworkSourceDescriptor{tcp://192.168.2.30:36857 1::39::0::0})
      SOURCE(61,,NetworkSourceDescriptor{tcp://192.168.2.31:43553 1::45::0::0})
      SOURCE(57,,NetworkSourceDescriptor{tcp://192.168.2.31:43553 1::51::0::0})
[m
[36m[11:23:41.610962] [D] [thread 135095] [DefaultPhysicalOperatorProvider.cpp:784] [lowerThreadLocalWindowOperator] Create Thread local window aggregation[m
[36m[11:23:41.614006] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 3:1::39::0::0[m
[36m[11:23:41.614006] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 2:1::39::0::0[m
[32m[11:23:41.614116] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 64[m
[32m[11:23:41.614120] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) Data[m
[32m[11:23:41.614120] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) Data[m
[33m[1m[11:23:41.614184] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[11:23:41.614190] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[11:23:41.614221] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::39::0::0[m
[33m[1m[11:23:41.614222] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::39::0::0[m
[32m[11:23:41.614352] [I] [thread 135095] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[33m[1m[11:23:41.614356] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::39::0::0[m
[33m[1m[11:23:41.614356] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::39::0::0[m
[32m[11:23:41.614401] [I] [thread 135095] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[11:23:41.614409] [I] [thread 135095] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[11:23:41.614424] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 1:1::39::0::0[m
[32m[11:23:41.614426] [I] [thread 135095] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[11:23:41.614433] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 0:1::39::0::0[m
[32m[11:23:41.614461] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) Data[m
[32m[11:23:41.614463] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) Data[m
[33m[1m[11:23:41.614514] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[11:23:41.614525] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) NOT REGISTERED[m
[32m[11:23:41.614535] [I] [thread 135095] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[33m[1m[11:23:41.614541] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::39::0::0[m
[33m[1m[11:23:41.614554] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::39::0::0[m
[33m[1m[11:23:41.614616] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::39::0::0[m
[33m[1m[11:23:41.614616] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::39::0::0[m
[32m[11:23:41.614722] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 65[m
[32m[11:23:41.614840] [I] [thread 135095] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[32m[11:23:41.614855] [I] [thread 135095] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[11:23:41.614862] [I] [thread 135095] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:23:41.614874] [I] [thread 135095] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:23:41.614947] [I] [thread 135095] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:23:41.615074] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 66[m
[36m[11:23:41.615150] [D] [thread 135095] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:23:41.615169] [D] [thread 135095] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:23:41.615206] [I] [thread 135095] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:23:41.615215] [I] [thread 135095] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:23:41.615225] [I] [thread 135095] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:23:41.615279] [D] [thread 135095] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:23:41.615291] [D] [thread 135095] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[11:23:41.615333] [D] [thread 135095] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[11:23:41.615353] [D] [thread 135095] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[36m[11:23:41.615627] [D] [thread 135095] [DefaultPhysicalOperatorProvider.cpp:937] [lowerWindowOperator] DefaultPhysicalOperatorProvider::lowerWindowOperator: Plan after
PhysicalSinkOperator
  PhysicalKeyedTumblingWindowSink
    PhysicalKeyedSliceMergingOperator
      PhysicalKeyedThreadLocalPreAggregationOperator
        PhysicalMultiplexOperator
          SOURCE(56,,NetworkSourceDescriptor{tcp://192.168.2.12:36101 1::21::0::0})
          SOURCE(60,,NetworkSourceDescriptor{tcp://192.168.2.12:36101 1::27::0::0})
          SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.30:36857 1::33::0::0})
          SOURCE(58,,NetworkSourceDescriptor{tcp://192.168.2.30:36857 1::39::0::0})
          SOURCE(61,,NetworkSourceDescriptor{tcp://192.168.2.31:43553 1::45::0::0})
          SOURCE(57,,NetworkSourceDescriptor{tcp://192.168.2.31:43553 1::51::0::0})
[m
[36m[11:23:41.615669] [D] [thread 135095] [WindowOperatorHandler.hpp:95] [~WindowOperatorHandler] ~WindowOperatorHandler() 0[m
[32m[11:23:41.615812] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 67[m
[36m[11:23:41.615932] [D] [thread 135095] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:23:41.615949] [D] [thread 135095] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:23:41.616000] [I] [thread 135095] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:23:41.616010] [I] [thread 135095] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:23:41.616020] [I] [thread 135095] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:23:41.616097] [D] [thread 135095] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:23:41.616112] [D] [thread 135095] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[11:23:41.616158] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 68[m
[36m[11:23:41.616212] [D] [thread 135095] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
Dumping queryPlan: [36m[11:23:41.616227] [D] [thread 135095] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
PhysicalSinkOperator
  PhysicalKeyedTumblingWindowSink
    PhysicalKeyedSliceMergingOperator
      PhysicalKeyedThreadLocalPreAggregationOperator
        PhysicalMultiplexOperator
          PhysicalSourceOperator
          PhysicalSourceOperator
          PhysicalSourceOperator
          PhysicalSourceOperator
          PhysicalSourceOperator
          PhysicalSourceOperator

[32m[11:23:41.616267] [I] [thread 135095] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:23:41.616275] [I] [thread 135095] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:23:41.616284] [I] [thread 135095] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:23:41.616496] [D] [thread 135095] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:23:41.616515] [D] [thread 135095] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[11:23:41.616556] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 69[m
[36m[11:23:41.616617] [D] [thread 135095] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:23:41.616632] [D] [thread 135095] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:23:41.616668] [I] [thread 135095] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:23:41.616676] [I] [thread 135095] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:23:41.616684] [I] [thread 135095] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:23:41.616751] [D] [thread 135095] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:23:41.616765] [D] [thread 135095] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[11:23:41.616800] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 70[m
[36m[11:23:41.616859] [D] [thread 135095] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:23:41.616875] [D] [thread 135095] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:23:41.616916] [I] [thread 135095] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:23:41.616925] [I] [thread 135095] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:23:41.616934] [I] [thread 135095] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:23:41.617009] [D] [thread 135095] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:23:41.617034] [D] [thread 135095] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[11:23:41.617084] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 71[m
[36m[11:23:41.617157] [D] [thread 135095] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:23:41.617186] [D] [thread 135095] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[36m[11:23:41.617189] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 3:1::45::0::0[m
[32m[11:23:41.617236] [I] [thread 135095] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[36m[11:23:41.617238] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 0:1::45::0::0[m
[32m[11:23:41.617236] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=3) Data[m
[32m[11:23:41.617251] [I] [thread 135095] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:23:41.617263] [I] [thread 135095] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[11:23:41.617274] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) Data[m
[33m[1m[11:23:41.617295] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[11:23:41.617304] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[11:23:41.617327] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::45::0::0[m
[33m[1m[11:23:41.617330] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::45::0::0[m
[36m[11:23:41.617338] [D] [thread 135095] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:23:41.617355] [D] [thread 135095] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[11:23:41.617399] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 72[m
[33m[1m[11:23:41.617415] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::45::0::0[m
[33m[1m[11:23:41.617433] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::45::0::0[m
[36m[11:23:41.617466] [D] [thread 135095] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:23:41.617483] [D] [thread 135095] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:23:41.617528] [I] [thread 135095] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
Dumping pipelineQueryPlan: [32m[11:23:41.617536] [I] [thread 135095] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:23:41.617546] [I] [thread 135095] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:23:41.617617] [D] [thread 135095] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:23:41.617644] [D] [thread 135095] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[36m[11:23:41.617820] [D] [thread 135095] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-7-2023-11-13 11:23:41 - 2. PhysicalQueryPlan[m
[36m[11:23:41.618128] [D] [thread 135095] [DefaultPipeliningPhase.cpp:42] [apply] Pipeline: query id: 1 - 7[m
[36m[11:23:41.618128] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 2:1::45::0::0[m
[36m[11:23:41.618156] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 1:1::45::0::0[m
PipelineQueryPlan: 
- queryId: 1, subPlanId: 7, no. pipelines: 9
- pipeline: - Id: 1, Type: SinkPipelineType, Successors: , Predecessors: 2
- Queryplan: PhysicalSinkOperator

- pipeline: - Id: 2, Type: OperatorPipelineType, Successors: 1, Predecessors: 3
- Queryplan: PhysicalKeyedSliceMergingOperator
  PhysicalKeyedTumblingWindowSink

- pipeline: - Id: 3, Type: OperatorPipelineType, Successors: 2, Predecessors: 4, 5, 6, 7, 8, 9
- Queryplan: PhysicalKeyedThreadLocalPreAggregationOperator

- pipeline: - Id: 4, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 5, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 6, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 7, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 8, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 9, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator


[32m[11:23:41.618193] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=1) Data[m
[32m[11:23:41.618194] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=2) Data[m
[33m[1m[11:23:41.618265] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[11:23:41.618277] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[11:23:41.618304] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::45::0::0[m
[33m[1m[11:23:41.618310] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::45::0::0[m
[33m[1m[11:23:41.618387] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::45::0::0[m
[33m[1m[11:23:41.618405] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::45::0::0[m
[32m[11:23:41.618527] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 62[m
[36m[11:23:41.618745] [D] [thread 135095] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSinkOperator as new root of the plan.[m
[36m[11:23:41.618765] [D] [thread 135095] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
Dumping pipelineQueryPlan: [36m[11:23:41.618774] [D] [thread 135095] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:23:41.619149] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 73[m
[36m[11:23:41.619224] [D] [thread 135095] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalKeyedTumblingWindowSink as new root of the plan.[m
[36m[11:23:41.619237] [D] [thread 135095] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:41.619245] [D] [thread 135095] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:23:41.619336] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 74[m
PipelineQueryPlan: 
- queryId: 1, subPlanId: 7, no. pipelines: 9
- pipeline: - Id: 1, Type: SinkPipelineType, Successors: , Predecessors: 2
- Queryplan: PhysicalSinkOperator

- pipeline: - Id: 2, Type: OperatorPipelineType, Successors: 1, Predecessors: 3
- Queryplan: PhysicalKeyedSliceMergingOperator
  PhysicalKeyedTumblingWindowSink
    PhysicalEmitOperator

- pipeline: - Id: 3, Type: OperatorPipelineType, Successors: 2, Predecessors: 4, 5, 6, 7, 8, 9
- Queryplan: PhysicalScanOperator
  PhysicalKeyedThreadLocalPreAggregationOperator

- pipeline: - Id: 4, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 5, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 6, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 7, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 8, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 9, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator


[36m[11:23:41.619394] [D] [thread 135095] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalKeyedSliceMergingOperator as new root of the plan.[m
[36m[11:23:41.619460] [D] [thread 135095] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:41.619471] [D] [thread 135095] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:23:41.619606] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 75[m
[36m[11:23:41.619693] [D] [thread 135095] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalKeyedThreadLocalPreAggregationOperator as new root of the plan.[m
[36m[11:23:41.619705] [D] [thread 135095] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:41.619713] [D] [thread 135095] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:23:41.619825] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 67[m
[36m[11:23:41.619937] [D] [thread 135095] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[11:23:41.619949] [D] [thread 135095] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:41.619956] [D] [thread 135095] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:23:41.620039] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 68[m
[36m[11:23:41.620106] [D] [thread 135095] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[11:23:41.620118] [D] [thread 135095] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:41.620125] [D] [thread 135095] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:23:41.620189] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 69[m
[36m[11:23:41.620248] [D] [thread 135095] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[11:23:41.620267] [D] [thread 135095] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:41.620275] [D] [thread 135095] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:23:41.620375] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 70[m
[36m[11:23:41.620450] [D] [thread 135095] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[11:23:41.620463] [D] [thread 135095] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:41.620470] [D] [thread 135095] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:23:41.620537] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 71[m
[36m[11:23:41.620603] [D] [thread 135095] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[11:23:41.620621] [D] [thread 135095] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:41.620631] [D] [thread 135095] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:23:41.620693] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 72[m
[36m[11:23:41.620757] [D] [thread 135095] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[11:23:41.620769] [D] [thread 135095] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:41.620776] [D] [thread 135095] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:23:41.620824] [D] [thread 135095] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-7-2023-11-13 11:23:41 - 3. AfterPipelinedQueryPlan[m
[36m[11:23:41.621448] [D] [thread 135095] [Node.cpp:448] [getAllLeafNodes] Node: Get all leaf nodes for this node[m
[36m[11:23:41.621488] [D] [thread 135095] [Node.cpp:458] [getAllLeafNodes] Node: Inserting leaf node to the collection[m
[36m[11:23:41.621516] [D] [thread 135095] [Node.cpp:469] [getAllLeafNodes] Node: Found 1 leaf nodes[m
[32m[11:23:41.621619] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 76[m
[32m[11:23:41.621840] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 77[m
[36m[11:23:41.621908] [D] [thread 135095] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalScanOperator as new root of the plan.[m
[36m[11:23:41.621954] [D] [thread 135095] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:23:41.621965] [D] [thread 135095] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:23:41.621978] [D] [thread 135095] [Node.cpp:448] [getAllLeafNodes] Node: Get all leaf nodes for this node[m
[36m[11:23:41.621986] [D] [thread 135095] [Node.cpp:452] [getAllLeafNodes] Node: found no children. Returning itself as leaf.[m
[36m[11:23:41.622004] [D] [thread 135095] [Node.cpp:469] [getAllLeafNodes] Node: Found 1 leaf nodes[m
[36m[11:23:41.622038] [D] [thread 135095] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-7-2023-11-13 11:23:41 - 4. AfterAddScanAndEmitPhase[m
[32m[11:23:41.622671] [I] [thread 135095] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalKeyedSliceMergingOperator[m
[32m[11:23:41.622730] [I] [thread 135095] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalKeyedSliceMergingOperator to NautilusOperator.[m
[32m[11:23:41.622918] [I] [thread 135095] [LowerPhysicalToNautilusOperators.cpp:877] [lowerAggregations] Lower Window Aggregations to Nautilus Operator[m
[32m[11:23:41.623144] [I] [thread 135095] [ExpressionProvider.cpp:54] [lowerExpression] Lower Expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[32m[11:23:41.624381] [I] [thread 135095] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalKeyedTumblingWindowSink[m
[32m[11:23:41.624430] [I] [thread 135095] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalKeyedTumblingWindowSink to NautilusOperator.[m
[32m[11:23:41.624471] [I] [thread 135095] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalEmitOperator[m
[32m[11:23:41.624487] [I] [thread 135095] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalEmitOperator to NautilusOperator.[m
[36m[11:23:41.625304] [D] [thread 135095] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PhysicalKeyedSliceMergingOperator as root operator.[m
[32m[11:23:41.625446] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7953757509803730293[m
[32m[11:23:41.625783] [I] [thread 135095] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalScanOperator[m
[32m[11:23:41.625845] [I] [thread 135095] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalScanOperator to NautilusOperator.[m
[32m[11:23:41.626315] [I] [thread 135095] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalKeyedThreadLocalPreAggregationOperator[m
[32m[11:23:41.626471] [I] [thread 135095] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalKeyedThreadLocalPreAggregationOperator to NautilusOperator.[m
[32m[11:23:41.626564] [I] [thread 135095] [LowerPhysicalToNautilusOperators.cpp:877] [lowerAggregations] Lower Window Aggregations to Nautilus Operator[m
[32m[11:23:41.626654] [I] [thread 135095] [ExpressionProvider.cpp:54] [lowerExpression] Lower Expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[32m[11:23:41.627011] [I] [thread 135095] [ExpressionProvider.cpp:54] [lowerExpression] Lower Expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[11:23:41.627708] [D] [thread 135095] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PhysicalScanOperator as root operator.[m
[32m[11:23:41.627839] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 281473560021008[m
[36m[11:23:41.628132] [D] [thread 135095] [NautilusCompilationPhase.cpp:38] [apply] Generate code for query plan 1 - 7[m
[32m[11:23:41.628664] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 78[m
[32m[11:23:41.629130] [I] [thread 135095] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 79[m
[36m[11:23:41.629580] [D] [thread 135095] [ConvertLogicalToPhysicalSink.cpp:43] [createDataSink] Convert sink  62[m
[32m[11:23:41.629670] [I] [thread 135095] [ConvertLogicalToPhysicalSink.cpp:157] [createDataSink] ConvertLogicalToPhysicalSink: Creating file sink for format=CSV_FORMAT[m
[36m[11:23:41.629992] [D] [thread 135095] [FileSink.cpp:56] [FileSink] FileSink: open file= /home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out[m
[36m[11:23:41.631238] [D] [thread 135095] [LowerToExecutableQueryPlanPhase.cpp:291] [processOperatorPipeline] Adding current pipeline: 3 as a predecessor to its child pipeline: 2[m
[36m[11:23:41.631382] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 0:1::27::0::0[m
[36m[11:23:41.631383] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 3:1::27::0::0[m
[32m[11:23:41.631440] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=0) Data[m
[32m[11:23:41.631440] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=3) Data[m
[33m[1m[11:23:41.631511] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[11:23:41.631526] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[11:23:41.631552] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::27::0::0[m
[33m[1m[11:23:41.631559] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::27::0::0[m
[33m[1m[11:23:41.631658] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::27::0::0[m
[32m[11:23:41.631680] [I] [thread 135095] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[33m[1m[11:23:41.631649] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::27::0::0[m
[36m[11:23:41.631719] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 1:1::27::0::0[m
[32m[11:23:41.631756] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=1) Data[m
[36m[11:23:41.631758] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 2:1::27::0::0[m
[32m[11:23:41.631788] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=2) Data[m
[33m[1m[11:23:41.631793] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[11:23:41.631818] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[11:23:41.631820] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::27::0::0[m
[33m[1m[11:23:41.631842] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::27::0::0[m
[33m[1m[11:23:41.631870] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::27::0::0[m
[33m[1m[11:23:41.631884] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::27::0::0[m
[36m[11:23:41.632442] [D] [thread 135095] [DataSource.cpp:75] [DataSource] DataSource  21 : Init Data Source with schema  debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:41.632922] [D] [thread 135095] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 21 as a predecessor to its child pipeline: 3[m
[32m[11:23:41.633255] [I] [thread 135095] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[11:23:41.633609] [D] [thread 135095] [DataSource.cpp:75] [DataSource] DataSource  27 : Init Data Source with schema  debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:41.633973] [D] [thread 135095] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 27 as a predecessor to its child pipeline: 3[m
[32m[11:23:41.634297] [I] [thread 135095] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[11:23:41.634623] [D] [thread 135095] [DataSource.cpp:75] [DataSource] DataSource  33 : Init Data Source with schema  debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:41.634979] [D] [thread 135095] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 33 as a predecessor to its child pipeline: 3[m
[32m[11:23:41.635164] [I] [thread 135095] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[11:23:41.635480] [D] [thread 135095] [DataSource.cpp:75] [DataSource] DataSource  39 : Init Data Source with schema  debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:41.635821] [D] [thread 135095] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 39 as a predecessor to its child pipeline: 3[m
[32m[11:23:41.635989] [I] [thread 135095] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[11:23:41.636348] [D] [thread 135095] [DataSource.cpp:75] [DataSource] DataSource  45 : Init Data Source with schema  debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:41.636481] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 1:1::39::0::0[m
[36m[11:23:41.636535] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 2:1::39::0::0[m
[32m[11:23:41.636543] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) Data[m
[32m[11:23:41.636569] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) Data[m
[33m[1m[11:23:41.636591] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[11:23:41.636600] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[11:23:41.636624] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::39::0::0[m
[33m[1m[11:23:41.636627] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::39::0::0[m
[33m[1m[11:23:41.636714] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::39::0::0[m
[33m[1m[11:23:41.636730] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::39::0::0[m
[36m[11:23:41.636744] [D] [thread 135095] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 45 as a predecessor to its child pipeline: 3[m
[36m[11:23:41.636762] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 3:1::39::0::0[m
[36m[11:23:41.636775] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 0:1::39::0::0[m
[32m[11:23:41.636793] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) Data[m
[32m[11:23:41.636804] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) Data[m
[33m[1m[11:23:41.636827] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[11:23:41.636832] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[11:23:41.636855] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::39::0::0[m
[33m[1m[11:23:41.636859] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::39::0::0[m
[33m[1m[11:23:41.636900] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::39::0::0[m
[33m[1m[11:23:41.636901] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::39::0::0[m
[32m[11:23:41.636952] [I] [thread 135095] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[11:23:41.637291] [D] [thread 135095] [DataSource.cpp:75] [DataSource] DataSource  51 : Init Data Source with schema  debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:23:41.637683] [D] [thread 135095] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 51 as a predecessor to its child pipeline: 3[m
[36m[11:23:41.638671] [D] [thread 135095] [NodeEngine.cpp:131] [registerQueryInNodeEngine] Runtime: registerQueryInNodeEngine query with queryId= 1 querySubPlanId = 7[m
[36m[11:23:41.638905] [D] [thread 135095] [NodeEngine.cpp:137] [registerQueryInNodeEngine] Runtime: register of QEP  7  as a singleton[m
[36m[11:23:41.638945] [D] [thread 135095] [QueryManagerLifecycle.cpp:38] [registerQuery] AbstractQueryManager::registerQueryInNodeEngine: query 1 subquery=7[m
[36m[11:23:41.638967] [D] [thread 135095] [QueryManagerLifecycle.cpp:48] [registerQuery] AbstractQueryManager: resolving sources for query  1  with sources= 6[m
[36m[11:23:41.638992] [D] [thread 135095] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  21  not found. Creating new element with with qep [m
[36m[11:23:41.639009] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 3:1::45::0::0[m
2023-11-13 11:23:41.639 setup: queryId=1, querySubPlanId=7; 
[32m[11:23:41.639059] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=3) Data[m
[33m[1m[11:23:41.639118] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[11:23:41.639197] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::45::0::0[m
[36m[11:23:41.639250] [D] [thread 135095] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  27  not found. Creating new element with with qep [m
[36m[11:23:41.639301] [D] [thread 135095] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  33  not found. Creating new element with with qep [m
[33m[1m[11:23:41.639312] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::45::0::0[m
[36m[11:23:41.639323] [D] [thread 135095] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  39  not found. Creating new element with with qep [m
[36m[11:23:41.639343] [D] [thread 135095] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  45  not found. Creating new element with with qep [m
[36m[11:23:41.639362] [D] [thread 135095] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  51  not found. Creating new element with with qep [m
[36m[11:23:41.639398] [D] [thread 135095] [QueryManagerLifecycle.cpp:68] [registerQuery] queryToStatisticsMap add for= 7  pair queryId= 1  subplanId= 7[m
[36m[11:23:41.639844] [D] [thread 135095] [ExecutableQueryPlan.cpp:126] [setup] QueryExecutionPlan: setup queryId=1 querySubPlanId=7[m
[36m[11:23:41.639885] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 0:1::45::0::0[m
[32m[11:23:41.639935] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) Data[m
[33m[1m[11:23:41.639983] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[11:23:41.640018] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::45::0::0[m
[33m[1m[11:23:41.640114] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::45::0::0[m
[36m[11:23:41.640401] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 2:1::45::0::0[m
[32m[11:23:41.640453] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=2) Data[m
[33m[1m[11:23:41.640515] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[11:23:41.640559] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::45::0::0[m
[33m[1m[11:23:41.640702] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::45::0::0[m
[36m[11:23:41.641256] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 1:1::45::0::0[m
[32m[11:23:41.641320] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=1) Data[m
[33m[1m[11:23:41.641370] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[11:23:41.641404] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::45::0::0[m
[33m[1m[11:23:41.641507] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::45::0::0[m
[36m[11:23:41.647147] [D] [thread 135095] [KeyedSliceMerging.cpp:115] [combineThreadLocalSlices] combine 0 slices[m
[36m[11:23:41.655397] [D] [thread 135095] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff4c03d400[m
[36m[11:23:41.656742] [D] [thread 135095] [KeyedSliceMerging.cpp:115] [combineThreadLocalSlices] combine 0 slices[m
[36m[11:23:41.666584] [D] [thread 135095] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[11:23:41.668506] [D] [thread 135095] [KeyedSliceMerging.cpp:115] [combineThreadLocalSlices] combine 0 slices[m
[36m[11:23:41.673782] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 1:1::27::0::0[m
[36m[11:23:41.673782] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 0:1::27::0::0[m
[32m[11:23:41.673886] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=1) Data[m
[32m[11:23:41.673886] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=0) Data[m
[33m[1m[11:23:41.673952] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[11:23:41.673962] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[11:23:41.673988] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::27::0::0[m
[33m[1m[11:23:41.673993] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::27::0::0[m
[33m[1m[11:23:41.674076] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::27::0::0[m
[33m[1m[11:23:41.674091] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::27::0::0[m
[36m[11:23:41.674126] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 3:1::27::0::0[m
[36m[11:23:41.674136] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 2:1::27::0::0[m
[32m[11:23:41.674164] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=2) Data[m
[32m[11:23:41.674158] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=3) Data[m
[33m[1m[11:23:41.674233] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[11:23:41.674245] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[11:23:41.674264] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::27::0::0[m
[33m[1m[11:23:41.674274] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::27::0::0[m
[33m[1m[11:23:41.674315] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::27::0::0[m
[33m[1m[11:23:41.674316] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::27::0::0[m
[36m[11:23:41.678921] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 2:1::39::0::0[m
[36m[11:23:41.678921] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 0:1::39::0::0[m
[32m[11:23:41.679033] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) Data[m
[32m[11:23:41.679033] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) Data[m
[33m[1m[11:23:41.679102] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[11:23:41.679112] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[11:23:41.679142] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::39::0::0[m
[33m[1m[11:23:41.679145] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::39::0::0[m
[33m[1m[11:23:41.679277] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::39::0::0[m
[33m[1m[11:23:41.679278] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::39::0::0[m
[36m[11:23:41.679375] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 3:1::39::0::0[m
[32m[11:23:41.679451] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) Data[m
[33m[1m[11:23:41.679491] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[11:23:41.679522] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::39::0::0[m
[33m[1m[11:23:41.679603] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::39::0::0[m
[36m[11:23:41.680020] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 1:1::39::0::0[m
[32m[11:23:41.680068] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) Data[m
[33m[1m[11:23:41.680110] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[11:23:41.680225] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::39::0::0[m
[33m[1m[11:23:41.680433] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::39::0::0[m
[36m[11:23:41.681243] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 3:1::45::0::0[m
[32m[11:23:41.681376] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=3) Data[m
[33m[1m[11:23:41.681428] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[11:23:41.681465] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::45::0::0[m
[33m[1m[11:23:41.681577] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::45::0::0[m
[36m[11:23:41.682815] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 0:1::45::0::0[m
[32m[11:23:41.682910] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) Data[m
[33m[1m[11:23:41.682959] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[11:23:41.682997] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::45::0::0[m
[33m[1m[11:23:41.683124] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::45::0::0[m
[36m[11:23:41.683215] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 1:1::45::0::0[m
[32m[11:23:41.683250] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=1) Data[m
[33m[1m[11:23:41.683423] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[11:23:41.683468] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::45::0::0[m
[33m[1m[11:23:41.683563] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::45::0::0[m
[36m[11:23:41.683677] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 2:1::45::0::0[m
[32m[11:23:41.683717] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=2) Data[m
[33m[1m[11:23:41.683754] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[11:23:41.683782] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::45::0::0[m
[33m[1m[11:23:41.683891] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::45::0::0[m
[36m[11:23:41.684243] [D] [thread 135095] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[11:23:41.685664] [D] [thread 135095] [KeyedSliceMerging.cpp:115] [combineThreadLocalSlices] combine 0 slices[m
[36m[11:23:41.690012] [D] [thread 135095] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[11:23:41.691183] [D] [thread 135095] [KeyedSliceMerging.cpp:115] [combineThreadLocalSlices] combine 0 slices[m
[36m[11:23:41.694062] [D] [thread 135095] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[11:23:41.694486] [D] [thread 135095] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff4c059750[m
[36m[11:23:41.694547] [D] [thread 135095] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff4c05d740[m
[36m[11:23:41.695537] [D] [thread 135095] [KeyedSliceMerging.cpp:115] [combineThreadLocalSlices] combine 0 slices[m
[36m[11:23:41.699861] [D] [thread 135095] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[11:23:41.700208] [D] [thread 135095] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff4c06dea0[m
[36m[11:23:41.700280] [D] [thread 135095] [TraceContext.cpp:231] [apply] Iterations: 6[m
[36m[11:23:41.718387] [D] [thread 135095] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 0 JMP	$0_0	Block5($0_125,$0_124,$0_4,$0_5,$0_19,$0_18,$0_15,$0_9,$0_22,$0_21,$0_20,$0_12,$0_6,)	[m
[36m[11:23:41.720616] [D] [thread 135095] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 1 JMP	$0_0	Block16($1_116,$1_117,$1_118,$1_119,$1_120,$1_121,$1_122,$1_123,$1_124,$1_125,$1_4,$1_11,$1_0,$1_8,$1_3,$1_5,$1_126,$1_7,$1_127,$1_128,)	[m
[36m[11:23:41.722152] [D] [thread 135095] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 3 JMP	$0_0	Block5($3_103,$3_104,$3_105,$3_106,$3_107,$3_108,$3_109,$3_110,$3_1,$3_111,$3_113,$3_114,$3_115,)	[m
[36m[11:23:41.723981] [D] [thread 135095] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 4 JMP	$0_0	Block25($4_108,$4_109,$4_110,$4_111,$4_112,$4_113,$4_114,$4_115,$4_116,$4_117,$4_118,$4_119,$4_120,$4_121,$4_122,$4_123,$4_2,$4_124,$4_6,$4_125,$4_126,$4_127,)	[m
[36m[11:23:41.727485] [D] [thread 135095] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 10 JMP	$0_0	Block22($10_119,$10_120,$10_121,$10_122,$10_123,$10_124,$10_125,$10_126,$10_127,$10_128,$10_129,$10_130,$10_131,$10_132,$10_133,$10_134,$10_135,$10_136,$10_137,$10_138,$10_139,$10_140,)	[m
[36m[11:23:41.729785] [D] [thread 135095] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 12 JMP	$0_0	Block23($12_111,$12_112,$12_113,$12_114,$12_115,$12_116,$12_117,$12_118,$12_119,$12_120,$12_121,$12_122,$12_123,$12_124,$12_125,$12_126,$12_128,$12_129,$12_130,$12_131,)	[m
[36m[11:23:41.731604] [D] [thread 135095] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 14 JMP	$0_0	Block24($14_105,$14_106,$14_107,$14_108,$14_109,$14_110,$14_111,$14_112,$14_113,$14_114,$14_115,$14_116,$14_117,$14_3,$14_119,$14_0,$14_120,$14_5,$14_121,$14_122,)	[m
[36m[11:23:41.732747] [D] [thread 135095] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 24 JMP	$0_0	Block16($24_103,$24_104,$24_105,$24_106,$24_107,$24_108,$24_109,$24_110,$24_111,$24_112,$14_8,$24_113,$24_115,$24_116,$24_117,$24_118,$24_119,$24_120,$24_121,$24_122,)	[m
[36m[11:23:41.734246] [D] [thread 135095] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 15 JMP	$0_0	Block24($15_101,$15_102,$15_103,$15_104,$15_105,$15_106,$15_107,$15_108,$15_109,$15_110,$15_111,$15_112,$15_113,$15_114,$15_115,$15_116,$15_117,$15_118,$15_119,$15_120,)	[m
[36m[11:23:41.736403] [D] [thread 135095] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 13 JMP	$0_0	Block23($13_101,$13_102,$13_103,$13_104,$13_105,$13_106,$13_107,$13_108,$13_109,$13_110,$13_111,$13_112,$13_113,$13_114,$13_115,$13_116,$13_117,$13_118,$13_119,$13_120,)	[m
[36m[11:23:41.738553] [D] [thread 135095] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 11 JMP	$0_0	Block25($11_104,$11_105,$11_106,$11_107,$11_108,$11_109,$11_110,$11_111,$11_112,$11_113,$11_114,$11_115,$11_116,$11_117,$11_118,$11_119,$11_120,$11_121,$11_2,$11_123,$11_124,$11_125,)	[m
[36m[11:23:41.740389] [D] [thread 135095] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 9 JMP	$0_0	Block22($9_101,$9_102,$9_103,$9_104,$9_105,$9_106,$9_107,$9_108,$9_109,$9_110,$9_111,$9_112,$9_113,$9_114,$9_115,$9_116,$9_117,$9_118,$9_119,$9_120,$9_121,$9_122,)	[m
[36m[11:23:41.743244] [D] [thread 135095] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 2 JMP	$0_0	Block21($2_118,$2_119,$2_120,$2_123,$2_2,$2_124,$2_121,$2_122,$2_9,$2_16,$2_5,$2_13,$2_8,$2_10,$2_124,$2_126,$2_127,$2_12,)	[m
[36m[11:23:41.747769] [D] [thread 135095] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 17 JMP	$0_0	Block26($17_109,$17_110,$17_5,$17_111,$17_112,$17_113,$17_9,$17_114,$17_115,$17_116,$17_117,$17_118,$17_119,$17_120,$17_123,$17_124,$17_7,$17_125,)	[m
[36m[11:23:41.749721] [D] [thread 135095] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 19 JMP	$0_0	Block27($19_105,$19_106,$19_107,$19_108,$19_109,$19_110,$19_111,$19_112,$19_113,$19_114,$19_115,$19_3,$19_117,$19_0,$19_118,$19_119,$19_120,$19_5,)	[m
[36m[11:23:41.750893] [D] [thread 135095] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 27 JMP	$0_0	Block21($27_103,$27_104,$27_105,$27_106,$27_107,$27_108,$27_109,$27_110,$19_8,$27_111,$27_113,$27_114,$27_115,$27_116,$27_117,$27_118,$27_119,$27_120,)	[m
[36m[11:23:41.752391] [D] [thread 135095] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 20 JMP	$0_0	Block27($20_101,$20_102,$20_103,$20_104,$20_105,$20_106,$20_107,$20_108,$20_109,$20_110,$20_111,$20_112,$20_113,$20_114,$20_115,$20_116,$20_117,$20_118,)	[m
[36m[11:23:41.754143] [D] [thread 135095] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 18 JMP	$0_0	Block26($18_101,$18_102,$18_103,$18_104,$18_105,$18_106,$18_107,$18_108,$18_109,$18_110,$18_111,$18_112,$18_113,$18_114,$18_115,$18_116,$18_117,$18_118,)	[m
[36m[11:23:41.756156] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 0:1::27::0::0[m
[36m[11:23:41.756156] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 1:1::27::0::0[m
[32m[11:23:41.756270] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=1) Data[m
[32m[11:23:41.756270] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=0) Data[m
[33m[1m[11:23:41.756364] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[11:23:41.756411] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::27::0::0[m
[33m[1m[11:23:41.756496] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[11:23:41.756512] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::27::0::0[m
[33m[1m[11:23:41.756530] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::27::0::0[m
[33m[1m[11:23:41.756601] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::27::0::0[m
[36m[11:23:41.756658] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 2:1::27::0::0[m
[36m[11:23:41.756660] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 3:1::27::0::0[m
[32m[11:23:41.756692] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=2) Data[m
[32m[11:23:41.756692] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=3) Data[m
[33m[1m[11:23:41.756730] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[11:23:41.756734] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[11:23:41.756759] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::27::0::0[m
[33m[1m[11:23:41.756761] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::27::0::0[m
[33m[1m[11:23:41.756817] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::27::0::0[m
[33m[1m[11:23:41.756839] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::27::0::0[m
[36m[11:23:41.761301] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 0:1::39::0::0[m
[32m[11:23:41.761387] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) Data[m
[33m[1m[11:23:41.761437] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[11:23:41.761469] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::39::0::0[m
[33m[1m[11:23:41.761570] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::39::0::0[m
[36m[11:23:41.761623] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 3:1::39::0::0[m
[32m[11:23:41.761653] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) Data[m
[33m[1m[11:23:41.761688] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[11:23:41.761714] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::39::0::0[m
[33m[1m[11:23:41.761773] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::39::0::0[m
[36m[11:23:41.761872] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 2:1::39::0::0[m
[32m[11:23:41.761904] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) Data[m
[33m[1m[11:23:41.761935] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[11:23:41.761961] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::39::0::0[m
[33m[1m[11:23:41.762047] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::39::0::0[m
[36m[11:23:41.762098] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 1:1::39::0::0[m
[32m[11:23:41.762143] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) Data[m
[33m[1m[11:23:41.762178] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[11:23:41.762204] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::39::0::0[m
[33m[1m[11:23:41.762249] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::39::0::0[m
[36m[11:23:41.763345] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 3:1::45::0::0[m
[32m[11:23:41.763416] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=3) Data[m
[33m[1m[11:23:41.763460] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[11:23:41.763492] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::45::0::0[m
[33m[1m[11:23:41.763577] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::45::0::0[m
[36m[11:23:41.764702] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 0:1::45::0::0[m
[32m[11:23:41.764773] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) Data[m
[33m[1m[11:23:41.764816] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[11:23:41.764844] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::45::0::0[m
[33m[1m[11:23:41.764928] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::45::0::0[m
[36m[11:23:41.765270] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 1:1::45::0::0[m
[32m[11:23:41.765330] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=1) Data[m
[33m[1m[11:23:41.765369] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[11:23:41.765400] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::45::0::0[m
[33m[1m[11:23:41.765485] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::45::0::0[m
[36m[11:23:41.765825] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 2:1::45::0::0[m
[32m[11:23:41.765885] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=2) Data[m
[33m[1m[11:23:41.765926] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[11:23:41.765956] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::45::0::0[m
[33m[1m[11:23:41.766055] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::45::0::0[m
[36m[11:23:41.899812] [D] [thread 135095] [MLIRLoweringProvider.cpp:170] [~MLIRLoweringProvider] ~MLIRLoweringProvider[m
[32m[11:23:41.901192] [I] [thread 135095] [CompiledExecutablePipelineStage.cpp:97] [compilePipeline] overall runtime: 259.131 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-2_Trace Generation:	73.8626 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-2_IR Generation:	40.3523 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-2_Compilation:	144.916 ms[m
[36m[11:23:41.919149] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 1:1::27::0::0[m
[36m[11:23:41.919221] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 0:1::27::0::0[m
[32m[11:23:41.919274] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=0) Data[m
[32m[11:23:41.919274] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=1) Data[m
[33m[1m[11:23:41.919352] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[11:23:41.919395] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::27::0::0[m
[33m[1m[11:23:41.919581] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::27::0::0[m
[36m[11:23:41.919663] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 2:1::27::0::0[m
[32m[11:23:41.919705] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=2) Data[m
[33m[1m[11:23:41.919751] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[11:23:41.919792] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::27::0::0[m
[33m[1m[11:23:41.919860] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::27::0::0[m
[33m[1m[11:23:41.920828] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[11:23:41.921006] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::27::0::0[m
[33m[1m[11:23:41.921211] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::27::0::0[m
[36m[11:23:41.921347] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 3:1::27::0::0[m
[32m[11:23:41.921427] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=3) Data[m
[33m[1m[11:23:41.921477] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[11:23:41.921512] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::27::0::0[m
[33m[1m[11:23:41.921590] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::27::0::0[m
[36m[11:23:41.923454] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 3:1::39::0::0[m
[32m[11:23:41.923571] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) Data[m
[33m[1m[11:23:41.923632] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[11:23:41.923676] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::39::0::0[m
[33m[1m[11:23:41.923812] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::39::0::0[m
[36m[11:23:41.923973] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 0:1::39::0::0[m
[32m[11:23:41.924020] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) Data[m
[33m[1m[11:23:41.924066] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[11:23:41.924099] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::39::0::0[m
[33m[1m[11:23:41.924196] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::39::0::0[m
[36m[11:23:41.924735] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 2:1::39::0::0[m
[36m[11:23:41.924745] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 1:1::39::0::0[m
[32m[11:23:41.924852] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) Data[m
[32m[11:23:41.924852] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) Data[m
[33m[1m[11:23:41.924929] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[11:23:41.924974] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::39::0::0[m
[33m[1m[11:23:41.925099] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::39::0::0[m
[33m[1m[11:23:41.925416] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[11:23:41.925513] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::39::0::0[m
[33m[1m[11:23:41.925644] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::39::0::0[m
[36m[11:23:41.926115] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 3:1::45::0::0[m
[32m[11:23:41.926204] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=3) Data[m
[33m[1m[11:23:41.926261] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[11:23:41.926304] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::45::0::0[m
[33m[1m[11:23:41.926397] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::45::0::0[m
[36m[11:23:41.926756] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 0:1::45::0::0[m
[32m[11:23:41.926825] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) Data[m
[33m[1m[11:23:41.926877] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[11:23:41.926915] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::45::0::0[m
[33m[1m[11:23:41.927037] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::45::0::0[m
[36m[11:23:41.928128] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 1:1::45::0::0[m
[36m[11:23:41.928087] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 2:1::45::0::0[m
[32m[11:23:41.928231] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=1) Data[m
[33m[1m[11:23:41.928281] [W] [thread 135088] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=1) NOT REGISTERED[m
[32m[11:23:41.928231] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=2) Data[m
[33m[1m[11:23:41.928316] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::45::0::0[m
[33m[1m[11:23:41.928366] [W] [thread 135089] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[11:23:41.928400] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::45::0::0[m
[33m[1m[11:23:41.928469] [W] [thread 135089] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::45::0::0[m
[33m[1m[11:23:41.928469] [W] [thread 135088] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::45::0::0[m
[36m[11:23:41.979484] [D] [thread 135095] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff4c050aa0[m
[36m[11:23:41.984736] [D] [thread 135095] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[11:23:41.989292] [D] [thread 135095] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[11:23:41.989775] [D] [thread 135095] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff4c0f9550[m
[36m[11:23:41.989854] [D] [thread 135095] [TraceContext.cpp:231] [apply] Iterations: 3[m
[36m[11:23:41.996353] [D] [thread 135095] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 0 JMP	$0_0	Block9($0_116,$0_115,$0_6,$0_8,$0_4,$0_16,$0_14,$0_13,$0_15,)	[m
[36m[11:23:41.999465] [D] [thread 135095] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 1 JMP	$0_0	Block12($1_147,$1_148,$1_149,$1_150,$1_151,$1_152,$1_153,$1_20,$1_5,$1_43,$1_45,$1_47,$1_154,$1_155,)	[m
[36m[11:23:42.002211] [D] [thread 135095] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 5 JMP	$0_0	Block10($5_101,$5_102,$5_103,$5_104,$5_105,$5_106,$5_107,$5_108,$5_109,$5_110,$5_111,$5_112,$5_113,$5_114,)	[m
[36m[11:23:42.004376] [D] [thread 135095] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 7 JMP	$0_0	Block11($7_113,$7_114,$7_115,$7_116,$7_117,$7_118,$7_119,$7_120,$7_0,$7_124,$7_125,)	[m
[36m[11:23:42.005766] [D] [thread 135095] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 11 JMP	$0_0	Block9($11_110,$11_111,$11_112,$11_113,$11_114,$7_24,$11_115,$11_119,$11_120,)	[m
[36m[11:23:42.007027] [D] [thread 135095] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 8 JMP	$0_0	Block11($8_101,$8_102,$8_103,$8_104,$8_105,$8_106,$8_107,$8_108,$8_109,$8_110,$8_111,)	[m
[36m[11:23:42.008868] [D] [thread 135095] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 6 JMP	$0_0	Block12($6_104,$6_105,$6_106,$6_107,$6_108,$6_109,$6_110,$6_111,$6_112,$6_113,$6_114,$6_2,$6_115,$6_116,)	[m
[36m[11:23:42.010347] [D] [thread 135095] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 4 JMP	$0_0	Block10($4_101,$4_102,$4_103,$4_104,$4_105,$4_106,$4_107,$4_108,$4_109,$4_110,$4_111,$4_112,$4_113,$4_114,)	[m
[36m[11:23:42.065130] [D] [thread 135095] [MLIRLoweringProvider.cpp:170] [~MLIRLoweringProvider] ~MLIRLoweringProvider[m
[32m[11:23:42.066100] [I] [thread 135095] [CompiledExecutablePipelineStage.cpp:97] [compilePipeline] overall runtime: 109.51 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-3_Trace Generation:	38.9279 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-3_IR Generation:	17.1679 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-3_Compilation:	53.4143 ms[m
2023-11-13 11:23:42.92 start: queryId=1, querySubPlanId=7; 
[36m[11:23:42.092211] [D] [thread 135095] [ExecutableQueryPlan.cpp:144] [start] QueryExecutionPlan: start query=1 subplan=7[m
[36m[11:23:42.092307] [D] [thread 135095] [ExecutableQueryPlan.cpp:148] [start] ExecutableQueryPlan::start qep=7 pipe=2[m
[36m[11:23:42.092475] [D] [thread 135095] [KeyedSliceMergingHandler.cpp:33] [start] start GlobalSliceMergingHandler[m
[36m[11:23:42.092546] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:23:42.092911] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:23:42.093659] [D] [thread 135092] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 2 belonging to query id: 7 stage id: 2[m
[36m[11:23:42.093659] [D] [thread 135093] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 2 belonging to query id: 7 stage id: 2[m
[36m[11:23:42.093659] [D] [thread 135090] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 2 belonging to query id: 7 stage id: 2[m
[36m[11:23:42.093659] [D] [thread 135091] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 2 belonging to query id: 7 stage id: 2[m
[36m[11:23:42.094126] [D] [thread 135095] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 7 stage id: 2[m
[36m[11:23:42.094219] [D] [thread 135095] [ExecutableQueryPlan.cpp:148] [start] ExecutableQueryPlan::start qep=7 pipe=3[m
[36m[11:23:42.094282] [D] [thread 135095] [AbstractSlicePreAggregationHandler.cpp:110] [start] start AbstractSlicePreAggregationHandler[m
[36m[11:23:42.094324] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:23:42.094515] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:23:42.094912] [D] [thread 135090] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[11:23:42.094911] [D] [thread 135092] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[11:23:42.094912] [D] [thread 135093] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[11:23:42.094912] [D] [thread 135091] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[11:23:42.095115] [D] [thread 135095] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 7 stage id: 3[m
[36m[11:23:42.095462] [D] [thread 135095] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::21::0::0 from 192.168.2.12[m
[36m[11:23:42.095769] [D] [thread 135095] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::21::0::0=1[m
[36m[11:23:42.095816] [D] [thread 135095] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff4c034250  started successfully[m
[36m[11:23:42.095870] [D] [thread 135095] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::27::0::0 from 192.168.2.12[m
[36m[11:23:42.095930] [D] [thread 135095] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::27::0::0=1[m
[36m[11:23:42.095945] [D] [thread 135095] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff4c034630  started successfully[m
[36m[11:23:42.095990] [D] [thread 135095] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::33::0::0 from 192.168.2.30[m
[36m[11:23:42.096030] [D] [thread 135095] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::33::0::0=1[m
[36m[11:23:42.096043] [D] [thread 135095] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff4c034b20  started successfully[m
[36m[11:23:42.096073] [D] [thread 135095] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::39::0::0 from 192.168.2.30[m
[36m[11:23:42.096107] [D] [thread 135095] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::39::0::0=1[m
[36m[11:23:42.096120] [D] [thread 135095] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff4c035190  started successfully[m
[36m[11:23:42.096160] [D] [thread 135095] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::45::0::0 from 192.168.2.31[m
[36m[11:23:42.096195] [D] [thread 135095] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::45::0::0=1[m
[36m[11:23:42.096208] [D] [thread 135095] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff4c0354e0  started successfully[m
[36m[11:23:42.096236] [D] [thread 135095] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::51::0::0 from 192.168.2.31[m
[36m[11:23:42.096269] [D] [thread 135095] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::51::0::0=1[m
[36m[11:23:42.096282] [D] [thread 135095] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff4c035b90  started successfully[m
[36m[11:23:42.096380] [D] [thread 135095] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:21 PartitionId: 0 SubpartitionID: 0[m
[36m[11:23:42.096475] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:23:42.096614] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:23:42.097408] [D] [thread 135090] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::21::0::0[m
[36m[11:23:42.097408] [D] [thread 135093] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::21::0::0[m
[36m[11:23:42.097408] [D] [thread 135092] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::21::0::0[m
[36m[11:23:42.097408] [D] [thread 135091] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::21::0::0[m
[36m[11:23:42.097628] [D] [thread 135095] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::21::0::0[m
[36m[11:23:42.097703] [D] [thread 135095] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:21 PartitionId: 0 SubpartitionID: 0[m
[36m[11:23:42.097725] [D] [thread 135095] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff4c034250  started successfully[m
[36m[11:23:42.097756] [D] [thread 135095] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:27 PartitionId: 0 SubpartitionID: 0[m
[36m[11:23:42.097886] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:23:42.098112] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:23:42.098628] [D] [thread 135090] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::27::0::0[m
[36m[11:23:42.098628] [D] [thread 135092] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::27::0::0[m
[36m[11:23:42.098628] [D] [thread 135091] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::27::0::0[m
[36m[11:23:42.098628] [D] [thread 135093] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::27::0::0[m
[36m[11:23:42.099147] [D] [thread 135095] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::27::0::0[m
[36m[11:23:42.099299] [D] [thread 135095] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:27 PartitionId: 0 SubpartitionID: 0[m
[36m[11:23:42.099368] [D] [thread 135095] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff4c034630  started successfully[m
[36m[11:23:42.099408] [D] [thread 135095] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[11:23:42.099473] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:23:42.099610] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:23:42.099990] [D] [thread 135090] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[11:23:42.099990] [D] [thread 135091] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[11:23:42.100038] [D] [thread 135092] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[11:23:42.100061] [D] [thread 135093] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[11:23:42.100182] [D] [thread 135095] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::33::0::0[m
[36m[11:23:42.100234] [D] [thread 135095] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[11:23:42.100253] [D] [thread 135095] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff4c034b20  started successfully[m
[36m[11:23:42.100285] [D] [thread 135095] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[11:23:42.100401] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:23:42.100524] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:23:42.100967] [D] [thread 135090] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[11:23:42.100966] [D] [thread 135092] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[11:23:42.101075] [D] [thread 135091] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[11:23:42.101138] [D] [thread 135093] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[11:23:42.101223] [D] [thread 135095] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::39::0::0[m
[36m[11:23:42.101277] [D] [thread 135095] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[11:23:42.101297] [D] [thread 135095] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff4c035190  started successfully[m
[36m[11:23:42.101329] [D] [thread 135095] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[36m[11:23:42.101392] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:23:42.101555] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:23:42.101993] [D] [thread 135090] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[11:23:42.101993] [D] [thread 135093] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[11:23:42.102103] [D] [thread 135092] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[11:23:42.102164] [D] [thread 135091] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[11:23:42.102251] [D] [thread 135095] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::45::0::0[m
[36m[11:23:42.102328] [D] [thread 135095] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[36m[11:23:42.102349] [D] [thread 135095] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff4c0354e0  started successfully[m
[36m[11:23:42.102381] [D] [thread 135095] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[11:23:42.102446] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:23:42.102556] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:23:42.102998] [D] [thread 135090] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[11:23:42.102998] [D] [thread 135091] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[11:23:42.103112] [D] [thread 135092] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[11:23:42.103173] [D] [thread 135093] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[11:23:42.103258] [D] [thread 135095] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::51::0::0[m
[36m[11:23:42.103309] [D] [thread 135095] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[11:23:42.103328] [D] [thread 135095] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff4c035b90  started successfully[m
[36m[11:23:42.103386] [D] [thread 135095] [QueryManagerLifecycle.cpp:158] [registerQuery] AbstractQueryManager: start sink  FileSink()[m
[36m[11:23:42.103702] [D] [thread 135095] [NodeEngine.cpp:144] [registerQueryInNodeEngine] Runtime: register of subqep  7  succeeded[m
[36m[11:23:42.103823] [D] [thread 135095] [WorkerRPCServer.cpp:54] [RegisterQuery] WorkerRPCServer::RegisterQuery: success[m
[36m[11:23:42.242425] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 0:1::27::0::0[m
[36m[11:23:42.242425] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 2:1::27::0::0[m
[32m[11:23:42.242616] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=0) Data[m
[32m[11:23:42.242615] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=2) Data[m
[36m[11:23:42.242815] [D] [thread 135089] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::27::0::0(threadId=0) REGISTERED[m
[36m[11:23:42.242852] [D] [thread 135088] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::27::0::0(threadId=2) REGISTERED[m
[36m[11:23:42.244787] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 1:1::27::0::0[m
[36m[11:23:42.244819] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 3:1::27::0::0[m
[32m[11:23:42.244915] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=3) Data[m
[32m[11:23:42.244919] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=1) Data[m
[36m[11:23:42.245054] [D] [thread 135089] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::27::0::0(threadId=3) REGISTERED[m
[36m[11:23:42.245089] [D] [thread 135088] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::27::0::0(threadId=1) REGISTERED[m
[36m[11:23:42.246853] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 3:1::39::0::0[m
[32m[11:23:42.246993] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) Data[m
[36m[11:23:42.246853] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 0:1::39::0::0[m
[32m[11:23:42.247094] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) Data[m
[36m[11:23:42.247110] [D] [thread 135089] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::39::0::0(threadId=3) REGISTERED[m
[36m[11:23:42.247302] [D] [thread 135088] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::39::0::0(threadId=0) REGISTERED[m
[36m[11:23:42.247621] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 1:1::39::0::0[m
[32m[11:23:42.247716] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) Data[m
[36m[11:23:42.247849] [D] [thread 135088] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::39::0::0(threadId=1) REGISTERED[m
[36m[11:23:42.249130] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 3:1::45::0::0[m
[32m[11:23:42.249382] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=3) Data[m
[36m[11:23:42.249485] [D] [thread 135088] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::45::0::0(threadId=3) REGISTERED[m
[36m[11:23:42.249818] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 2:1::39::0::0[m
[32m[11:23:42.249933] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) Data[m
[36m[11:23:42.250015] [D] [thread 135089] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::39::0::0(threadId=2) REGISTERED[m
[36m[11:23:42.250169] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 0:1::45::0::0[m
[32m[11:23:42.250223] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) Data[m
[36m[11:23:42.250283] [D] [thread 135089] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::45::0::0(threadId=0) REGISTERED[m
[36m[11:23:42.250364] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 2:1::45::0::0[m
[36m[11:23:42.250414] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 1:1::45::0::0[m
[32m[11:23:42.250464] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=1) Data[m
[32m[11:23:42.250483] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=2) Data[m
[36m[11:23:42.250522] [D] [thread 135089] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::45::0::0(threadId=1) REGISTERED[m
[36m[11:23:42.250561] [D] [thread 135088] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::45::0::0(threadId=2) REGISTERED[m
[36m[11:23:42.257544] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 0:1::21::0::0[m
[32m[11:23:42.257678] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=0) Data[m
[36m[11:23:42.257771] [D] [thread 135088] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::21::0::0(threadId=0) REGISTERED[m
[36m[11:23:42.257833] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 3:1::21::0::0[m
[32m[11:23:42.257890] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=3) Data[m
[36m[11:23:42.257953] [D] [thread 135089] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::21::0::0(threadId=3) REGISTERED[m
[36m[11:23:42.259520] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 1:1::21::0::0[m
[32m[11:23:42.259619] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=1) Data[m
[36m[11:23:42.259687] [D] [thread 135088] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::21::0::0(threadId=1) REGISTERED[m
[36m[11:23:42.261534] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 2:1::21::0::0[m
[32m[11:23:42.261637] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=2) Data[m
[36m[11:23:42.261708] [D] [thread 135089] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::21::0::0(threadId=2) REGISTERED[m
[36m[11:23:42.265350] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 2:1::51::0::0[m
[32m[11:23:42.265453] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) Data[m
[36m[11:23:42.265524] [D] [thread 135088] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=2) REGISTERED[m
[36m[11:23:42.266451] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 1:1::51::0::0[m
[32m[11:23:42.266546] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) Data[m
[36m[11:23:42.266611] [D] [thread 135089] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=1) REGISTERED[m
[36m[11:23:42.267689] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 3:1::51::0::0[m
[32m[11:23:42.267781] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) Data[m
[36m[11:23:42.267847] [D] [thread 135088] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=3) REGISTERED[m
[36m[11:23:42.269088] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 0:1::51::0::0[m
[32m[11:23:42.269179] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) Data[m
[36m[11:23:42.269240] [D] [thread 135089] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=0) REGISTERED[m
[36m[11:23:42.269493] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 1:1::33::0::0[m
[32m[11:23:42.269558] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=1) Data[m
[36m[11:23:42.269613] [D] [thread 135088] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=1) REGISTERED[m
[36m[11:23:42.270471] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 2:1::33::0::0[m
[32m[11:23:42.270551] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=2) Data[m
[36m[11:23:42.270610] [D] [thread 135089] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=2) REGISTERED[m
[36m[11:23:42.271137] [D] [thread 135088] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 3:1::33::0::0[m
[32m[11:23:42.271202] [I] [thread 135088] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=3) Data[m
[36m[11:23:42.271254] [D] [thread 135088] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=3) REGISTERED[m
[36m[11:23:42.271937] [D] [thread 135089] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): ClientAnnouncement received for channel 0:1::33::0::0[m
[32m[11:23:42.272012] [I] [thread 135089] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=0) Data[m
[36m[11:23:42.272065] [D] [thread 135089] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=0) REGISTERED[m
[36m[11:23:42.444607] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:42.796391] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:42.796732] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:43.797928] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:43.978154] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:43.978485] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:44.246650] [D] [thread 135079] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Register succeed[m
[36m[11:23:44.246817] [D] [thread 135079] [QueryDeploymentPhase.cpp:215] [deployQuery] QueryDeploymentPhase: Finished deploying execution plan for query with Id 1 [m
[36m[11:23:44.247387] [D] [thread 135079] [QueryDeploymentPhase.cpp:94] [execute] QueryDeploymentPhase: deployment for shared query 1 successful[m
[36m[11:23:44.247577] [D] [thread 135079] [QueryDeploymentPhase.cpp:101] [execute] QueryService: start query[m
[36m[11:23:44.247611] [D] [thread 135079] [QueryDeploymentPhase.cpp:219] [startQuery] QueryDeploymentPhase::startQuery queryId= 1[m
[36m[11:23:44.247775] [D] [thread 135079] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=5 and IP=192.168.2.32[m
[36m[11:23:44.247837] [D] [thread 135079] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.32:44765 queryId=1[m
[36m[11:23:44.251720] [D] [thread 135079] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=6 and IP=192.168.2.33[m
[36m[11:23:44.251811] [D] [thread 135079] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.33:45805 queryId=1[m
[36m[11:23:44.256408] [D] [thread 135079] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=7 and IP=192.168.2.34[m
[36m[11:23:44.256487] [D] [thread 135079] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.34:43563 queryId=1[m
[36m[11:23:44.261186] [D] [thread 135079] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=8 and IP=192.168.2.35[m
[36m[11:23:44.261282] [D] [thread 135079] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.35:44745 queryId=1[m
[36m[11:23:44.266008] [D] [thread 135079] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=9 and IP=192.168.2.37[m
[36m[11:23:44.266093] [D] [thread 135079] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.37:33647 queryId=1[m
[36m[11:23:44.270761] [D] [thread 135079] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=10 and IP=192.168.2.38[m
[36m[11:23:44.270851] [D] [thread 135079] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.38:40217 queryId=1[m
[36m[11:23:44.275291] [D] [thread 135079] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=1 and IP=192.168.2.11[m
[36m[11:23:44.275386] [D] [thread 135079] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.11:35597 queryId=1[m
[36m[11:23:44.280158] [D] [thread 135079] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=2 and IP=192.168.2.12[m
[36m[11:23:44.280251] [D] [thread 135079] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.12:41303 queryId=1[m
[36m[11:23:44.284879] [D] [thread 135079] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=3 and IP=192.168.2.30[m
[36m[11:23:44.284970] [D] [thread 135079] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.30:44835 queryId=1[m
[36m[11:23:44.289666] [D] [thread 135079] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=4 and IP=192.168.2.31[m
[36m[11:23:44.289790] [D] [thread 135079] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.31:34183 queryId=1[m
[36m[11:23:44.294343] [D] [thread 135079] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Start for 10 queues[m
[36m[11:23:44.350974] [D] [thread 135151] [WorkerRPCServer.cpp:77] [StartQuery] WorkerRPCServer::StartQuery: got request for 1[m
[36m[11:23:44.351077] [D] [thread 135151] [NodeEngine.cpp:158] [startQuery] Runtime: startQuery= 1[m
[36m[11:23:44.351208] [D] [thread 135151] [QueryManagerLifecycle.cpp:183] [startQuery] AbstractQueryManager::startQuery: query id  7   1[m
[36m[11:23:44.351336] [D] [thread 135151] [QueryStatistics.cpp:48] [setTimestampQueryStart] QueryStatistics::setTimestampQueryStart called with  1699874624351[m
[36m[11:23:44.351357] [D] [thread 135151] [NodeEngine.cpp:170] [startQuery] Runtime: start of QEP  7  succeeded[m
[36m[11:23:44.351381] [D] [thread 135151] [WorkerRPCServer.cpp:80] [StartQuery] WorkerRPCServer::StartQuery: success[m
[36m[11:23:44.356502] [D] [thread 135079] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Start succeed[m
[36m[11:23:44.356593] [D] [thread 135079] [QueryDeploymentPhase.cpp:238] [startQuery] QueryDeploymentPhase: Finished starting execution plan for query with Id 1[m
[32m[11:23:44.357218] [I] [thread 135079] [GlobalQueryPlan.cpp:124] [removeFailedOrStoppedSharedQueryPlans] GlobalQueryPlan: remove empty metadata information.[m
[36m[11:23:44.357386] [D] [thread 135079] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[11:23:44.627750] [D] [thread 135093] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10620000-10680000[m
[36m[11:23:44.630590] [D] [thread 135093] [QueryStatistics.cpp:54] [setTimestampFirstProcessedTask] QueryStatistics::setTimestampFirstProcessedTask called with  1699874624630[m
[36m[11:23:44.811222] [D] [thread 135092] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10620000-10680000[m
[36m[11:23:44.815911] [D] [thread 135091] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10620000-10680000[m
[36m[11:23:44.856140] [D] [thread 135090] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10620000-10680000[m
[36m[11:23:44.979742] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:45.123535] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:45.123864] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:46.125077] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:47.121837] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:47.122163] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:47.123827] [D] [thread 135169] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:23:47.123958] [I] [thread 135169] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:23:47.123979] [I] [thread 135169] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:23:47.124142] [I] [thread 135169] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:23:47.124158] [I] [thread 135169] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:23:47.330115] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:47.330435] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:48.331713] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:49.332984] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:49.381152] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:49.381506] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:49.382450] [D] [thread 135174] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:23:49.382576] [I] [thread 135174] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:23:49.382594] [I] [thread 135174] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:23:49.382712] [I] [thread 135174] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:23:49.382725] [I] [thread 135174] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:23:49.581991] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:49.582356] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:50.583599] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:51.584627] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:51.599331] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:51.599699] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:51.601375] [D] [thread 135179] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:23:51.601474] [I] [thread 135179] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:23:51.601492] [I] [thread 135179] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:23:51.601610] [I] [thread 135179] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:23:51.601623] [I] [thread 135179] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:23:51.861969] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:51.862321] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:52.863609] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:53.788191] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:53.788809] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:53.789583] [D] [thread 135185] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:23:53.789679] [I] [thread 135185] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:23:53.789697] [I] [thread 135185] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:23:53.789813] [I] [thread 135185] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:23:53.789827] [I] [thread 135185] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:23:53.998366] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:53.998980] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:55.000263] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:55.961522] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:55.962194] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:55.963137] [D] [thread 135190] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:23:55.963248] [I] [thread 135190] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:23:55.963266] [I] [thread 135190] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:23:55.963400] [I] [thread 135190] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:23:55.963414] [I] [thread 135190] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:23:56.168634] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:56.169111] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:57.170322] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:58.171535] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:58.207781] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:58.208144] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:58.209340] [D] [thread 135195] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:23:58.209464] [I] [thread 135195] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:23:58.209483] [I] [thread 135195] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:23:58.209612] [I] [thread 135195] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:23:58.209628] [I] [thread 135195] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:23:58.386828] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:58.387193] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:23:59.388379] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:00.389622] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:00.529823] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:00.530177] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:00.531300] [D] [thread 135201] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:24:00.531407] [I] [thread 135201] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:00.531426] [I] [thread 135201] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:24:00.531541] [I] [thread 135201] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:00.531555] [I] [thread 135201] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:24:00.734230] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:00.734629] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:01.735911] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:02.714616] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:02.714967] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:02.716019] [D] [thread 135206] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:24:02.716117] [I] [thread 135206] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:02.716134] [I] [thread 135206] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:24:02.716253] [I] [thread 135206] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:02.716277] [I] [thread 135206] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:24:02.970540] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:02.970890] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:03.972081] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:04.930698] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:04.931040] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:04.932036] [D] [thread 135212] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:24:04.932130] [I] [thread 135212] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:04.932148] [I] [thread 135212] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:24:04.932266] [I] [thread 135212] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:04.932280] [I] [thread 135212] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:24:05.189011] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:05.189335] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:06.190550] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:07.191840] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:07.228098] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:07.228478] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:07.229467] [D] [thread 135217] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:24:07.229563] [I] [thread 135217] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:07.229581] [I] [thread 135217] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:24:07.229699] [I] [thread 135217] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:07.229713] [I] [thread 135217] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:24:07.429126] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:07.429458] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:08.430714] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:09.353833] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:09.354190] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:09.355270] [D] [thread 135222] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:24:09.355367] [I] [thread 135222] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:09.355384] [I] [thread 135222] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:24:09.355502] [I] [thread 135222] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:09.355527] [I] [thread 135222] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:24:09.526396] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:09.526754] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:10.527959] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:11.450650] [D] [thread 135091] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10680000-10740000[m
[36m[11:24:11.529227] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:11.585961] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:11.586311] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:11.587355] [D] [thread 135227] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:24:11.587458] [I] [thread 135227] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:11.587476] [I] [thread 135227] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:24:11.587592] [I] [thread 135227] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:11.587659] [I] [thread 135227] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:24:11.610840] [D] [thread 135090] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10680000-10740000[m
[36m[11:24:11.782793] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:11.783154] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:12.210222] [D] [thread 135092] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10680000-10740000[m
[36m[11:24:12.784423] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:13.404977] [D] [thread 135093] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10680000-10740000[m
[36m[11:24:13.745848] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:13.746210] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:13.747358] [D] [thread 135232] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:24:13.747454] [I] [thread 135232] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:13.747471] [I] [thread 135232] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:24:13.747588] [I] [thread 135232] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:13.747601] [I] [thread 135232] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:24:14.013733] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:14.014091] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:14.694808] [D] [thread 135091] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 60000 Deploy merge task for slice 10620000-10680000 [m
[36m[11:24:14.695606] [D] [thread 135092] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 10620000-10680000-1[m
[36m[11:24:14.695712] [D] [thread 135092] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10620000-10680000[m
[36m[11:24:14.695832] [D] [thread 135092] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10620000-10680000[m
[36m[11:24:14.695871] [D] [thread 135092] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10620000-10680000[m
[36m[11:24:14.695927] [D] [thread 135092] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10620000-10680000[m
[36m[11:24:14.695992] [D] [thread 135092] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10620000-10680000[m
[36m[11:24:14.696286] [D] [thread 135092] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[11:24:14.700104] [D] [thread 135092] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out following content 10620000,10680000,63,1699874624318,1699874654696
10620000,10680000,100,1699874624266,1699874654696
10620000,10680000,47,1699874624305,1699874654696
10620000,10680000,13,1699874624289,1699874654696
10620000,10680000,54,1699874624312,1699874654696
10620000,10680000,24,1699874624297,1699874654696
[m
[36m[11:24:15.015306] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:15.990369] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:15.990882] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:15.991667] [D] [thread 135237] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:24:15.991741] [I] [thread 135237] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:15.991756] [I] [thread 135237] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:24:15.991864] [I] [thread 135237] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:15.991876] [I] [thread 135237] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:24:16.256439] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:16.257063] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:17.258285] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:18.259690] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:18.270247] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:18.270592] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:18.271672] [D] [thread 135244] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:24:18.271771] [I] [thread 135244] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:18.271789] [I] [thread 135244] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:24:18.271906] [I] [thread 135244] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:18.271932] [I] [thread 135244] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:24:18.485450] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:18.485892] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:19.487230] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:20.408837] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:20.409359] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:20.410255] [D] [thread 135250] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:24:20.410352] [I] [thread 135250] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:20.410372] [I] [thread 135250] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:24:20.410488] [I] [thread 135250] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:20.410502] [I] [thread 135250] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:24:20.606951] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:20.607427] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:21.608515] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:22.609766] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:22.610084] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:22.611160] [D] [thread 135255] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:24:22.611287] [I] [thread 135255] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:22.611308] [I] [thread 135255] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:24:22.611433] [I] [thread 135255] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:22.611455] [I] [thread 135255] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:24:22.875719] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:22.876101] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:23.876530] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:24.851119] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:24.851534] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:24.853197] [D] [thread 135261] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:24:24.853296] [I] [thread 135261] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:24.853313] [I] [thread 135261] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:24:24.853428] [I] [thread 135261] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:24.853441] [I] [thread 135261] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:24:25.014994] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:25.015316] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:26.016548] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:27.017838] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:27.058704] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:27.059207] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:27.060112] [D] [thread 135266] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:24:27.060212] [I] [thread 135266] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:27.060229] [I] [thread 135266] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:24:27.060385] [I] [thread 135266] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:27.060404] [I] [thread 135266] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:24:27.263718] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:27.264310] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:28.265710] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:29.246702] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:29.247286] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:29.248067] [D] [thread 135271] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:24:29.248166] [I] [thread 135271] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:29.248184] [I] [thread 135271] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:24:29.248301] [I] [thread 135271] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:29.248314] [I] [thread 135271] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:24:29.510156] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:29.510765] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:30.512024] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:31.513293] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:31.565385] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:31.565990] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:31.566684] [D] [thread 135276] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:24:31.566779] [I] [thread 135276] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:31.566797] [I] [thread 135276] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:24:31.566916] [I] [thread 135276] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:31.566930] [I] [thread 135276] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:24:31.739235] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:31.739743] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:32.741040] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:33.667437] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:33.668025] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:33.668864] [D] [thread 135281] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:24:33.668961] [I] [thread 135281] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:33.668978] [I] [thread 135281] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:24:33.669096] [I] [thread 135281] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:33.669110] [I] [thread 135281] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:24:33.882310] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:33.882717] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:34.883945] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:35.885215] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:35.902062] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:35.902407] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:35.903403] [D] [thread 135288] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:24:35.903503] [I] [thread 135288] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:35.903521] [I] [thread 135288] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:24:35.903639] [I] [thread 135288] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:35.903653] [I] [thread 135288] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:24:36.121682] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:36.122038] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:37.123253] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:38.124544] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:38.167950] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:38.168289] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:38.169383] [D] [thread 135293] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:24:38.169481] [I] [thread 135293] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:38.169498] [I] [thread 135293] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:24:38.169615] [I] [thread 135293] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:38.169629] [I] [thread 135293] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:24:38.799407] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:38.799742] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:39.800953] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:40.802234] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:40.825587] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:40.825948] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:40.826952] [D] [thread 135298] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:24:40.827051] [I] [thread 135298] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:40.827069] [I] [thread 135298] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:24:40.827187] [I] [thread 135298] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:40.827239] [I] [thread 135298] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:24:41.120629] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:41.120989] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:42.122219] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:43.123498] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:43.267919] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:43.268258] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:43.269331] [D] [thread 135303] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:24:43.269408] [I] [thread 135303] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:43.269423] [I] [thread 135303] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:24:43.269533] [I] [thread 135303] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:43.269545] [I] [thread 135303] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:24:43.486769] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:43.487136] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:43.536134] [D] [thread 135090] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10740000-10800000[m
[36m[11:24:44.228438] [D] [thread 135092] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10740000-10800000[m
[36m[11:24:44.488508] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:44.870454] [D] [thread 135093] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10740000-10800000[m
[36m[11:24:45.489782] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:45.510000] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:45.510345] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:45.511335] [D] [thread 135308] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:24:45.511436] [I] [thread 135308] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:45.511454] [I] [thread 135308] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:24:45.511572] [I] [thread 135308] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:45.511585] [I] [thread 135308] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:24:45.734069] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:45.734466] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:46.735665] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:47.736918] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:47.805128] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:47.805482] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:47.806477] [D] [thread 135313] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:24:47.806610] [I] [thread 135313] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:47.806628] [I] [thread 135313] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:24:47.806749] [I] [thread 135313] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:47.806763] [I] [thread 135313] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:24:48.122120] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:48.122484] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:49.105701] [D] [thread 135091] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10740000-10800000[m
[36m[11:24:49.123664] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:50.118878] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:50.119204] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:50.120711] [D] [thread 135319] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:24:50.120816] [I] [thread 135319] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:50.120836] [I] [thread 135319] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:24:50.120979] [I] [thread 135319] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:50.121049] [I] [thread 135319] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:24:50.336171] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:50.336825] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:51.338127] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:52.326318] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:52.326975] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:52.327716] [D] [thread 135324] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:24:52.327806] [I] [thread 135324] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:52.327823] [I] [thread 135324] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:24:52.327939] [I] [thread 135324] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:52.327952] [I] [thread 135324] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:24:52.549419] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:52.549998] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:53.551252] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:54.547144] [D] [thread 135091] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 60000 Deploy merge task for slice 10680000-10740000 [m
[36m[11:24:54.547698] [D] [thread 135090] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 10680000-10740000-2[m
[36m[11:24:54.547769] [D] [thread 135090] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10680000-10740000[m
[36m[11:24:54.547822] [D] [thread 135090] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10680000-10740000[m
[36m[11:24:54.547860] [D] [thread 135090] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10680000-10740000[m
[36m[11:24:54.547894] [D] [thread 135090] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10680000-10740000[m
[36m[11:24:54.547929] [D] [thread 135090] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10680000-10740000[m
[36m[11:24:54.548035] [D] [thread 135090] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[11:24:54.548062] [D] [thread 135090] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:24:54.550386] [D] [thread 135090] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out following content 10680000,10740000,100,1699874651190,1699874694548
10680000,10740000,54,1699874652685,1699874694548
10680000,10740000,24,1699874652953,1699874694548
10680000,10740000,47,1699874653236,1699874694548
10680000,10740000,13,1699874654262,1699874694548
10680000,10740000,63,1699874650984,1699874694548
[m
[36m[11:24:54.552551] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:54.581560] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:54.581891] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:54.583046] [D] [thread 135329] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:24:54.583142] [I] [thread 135329] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:54.583159] [I] [thread 135329] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:24:54.583276] [I] [thread 135329] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:54.583289] [I] [thread 135329] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:24:54.810976] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:54.811327] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:55.812687] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:56.813985] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:56.851785] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:56.852453] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:56.853208] [D] [thread 135334] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:24:56.853303] [I] [thread 135334] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:56.853320] [I] [thread 135334] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:24:56.853436] [I] [thread 135334] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:56.853449] [I] [thread 135334] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:24:57.029515] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:57.030168] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:58.031463] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:59.017886] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:59.018208] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:59.019261] [D] [thread 135339] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:24:59.019361] [I] [thread 135339] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:59.019379] [I] [thread 135339] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:24:59.019494] [I] [thread 135339] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:24:59.019520] [I] [thread 135339] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:24:59.282463] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:24:59.283050] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:00.284481] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:01.285913] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:01.542553] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:01.543069] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:01.543956] [D] [thread 135344] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:25:01.544053] [I] [thread 135344] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:01.544070] [I] [thread 135344] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:25:01.544187] [I] [thread 135344] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:01.544200] [I] [thread 135344] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:25:01.768691] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:01.769017] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:02.770247] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:03.678167] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:03.678697] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:03.679555] [D] [thread 135349] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:25:03.679650] [I] [thread 135349] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:03.679667] [I] [thread 135349] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:25:03.679782] [I] [thread 135349] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:03.679795] [I] [thread 135349] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:25:03.942476] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:03.943041] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:04.944407] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:05.852105] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:05.852494] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:05.853453] [D] [thread 135354] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:25:05.853548] [I] [thread 135354] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:05.853566] [I] [thread 135354] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:25:05.853682] [I] [thread 135354] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:05.853695] [I] [thread 135354] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:25:06.113589] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:06.113960] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:07.115260] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:08.024627] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:08.024989] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:08.025997] [D] [thread 135359] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:25:08.026118] [I] [thread 135359] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:08.026137] [I] [thread 135359] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:25:08.026265] [I] [thread 135359] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:08.026288] [I] [thread 135359] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:25:08.277385] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:08.277713] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:09.278946] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:10.280205] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:10.824923] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:10.825254] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:10.826449] [D] [thread 135365] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:25:10.826580] [I] [thread 135365] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:10.826599] [I] [thread 135365] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:25:10.826715] [I] [thread 135365] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:10.826729] [I] [thread 135365] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:25:11.090827] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:11.091169] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:12.092571] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:12.934512] [D] [thread 135093] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10800000-10860000[m
[36m[11:25:13.069717] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:13.070086] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:13.071100] [D] [thread 135370] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:25:13.071202] [I] [thread 135370] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:13.071220] [I] [thread 135370] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:25:13.071336] [I] [thread 135370] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:13.071364] [I] [thread 135370] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:25:13.238400] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:13.238797] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:13.537461] [D] [thread 135090] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10800000-10860000[m
[36m[11:25:14.196906] [D] [thread 135091] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10800000-10860000[m
[36m[11:25:14.240098] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:14.742300] [D] [thread 135092] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10800000-10860000[m
[36m[11:25:15.207339] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:15.207687] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:15.208849] [D] [thread 135376] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:25:15.208943] [I] [thread 135376] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:15.208960] [I] [thread 135376] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:25:15.209077] [I] [thread 135376] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:15.209102] [I] [thread 135376] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:25:15.474527] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:15.475014] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:16.476438] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:17.442198] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:17.442801] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:17.443540] [D] [thread 135383] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:25:17.443632] [I] [thread 135383] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:17.443650] [I] [thread 135383] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:25:17.443766] [I] [thread 135383] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:17.443780] [I] [thread 135383] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:25:17.633426] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:17.633754] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:18.635004] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:19.630257] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:19.630607] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:19.631643] [D] [thread 135388] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:25:19.631762] [I] [thread 135388] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:19.631782] [I] [thread 135388] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:25:19.631915] [I] [thread 135388] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:19.631936] [I] [thread 135388] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:25:19.798170] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:19.798547] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:20.799732] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:21.777060] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:21.777393] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:21.778442] [D] [thread 135393] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:25:21.778639] [I] [thread 135393] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:21.778661] [I] [thread 135393] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:25:21.778798] [I] [thread 135393] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:21.778883] [I] [thread 135393] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:25:22.041206] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:22.041839] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:23.043152] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:24.018139] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:24.018838] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:24.019546] [D] [thread 135398] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:25:24.019632] [I] [thread 135398] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:24.019649] [I] [thread 135398] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:25:24.019764] [I] [thread 135398] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:24.019777] [I] [thread 135398] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:25:24.229280] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:24.229792] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:25.231001] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:26.188239] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:26.188747] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:26.189647] [D] [thread 135403] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:25:26.189744] [I] [thread 135403] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:26.189762] [I] [thread 135403] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:25:26.189879] [I] [thread 135403] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:26.189892] [I] [thread 135403] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:25:26.403033] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:26.403559] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:27.404825] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:28.406051] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:28.406808] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:28.407306] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:28.408134] [D] [thread 135408] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:25:28.408229] [I] [thread 135408] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:28.408247] [I] [thread 135408] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:25:28.408396] [I] [thread 135408] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:28.408415] [I] [thread 135408] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:25:28.622938] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:28.623476] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:29.624824] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:30.617982] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:30.618321] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:30.619508] [D] [thread 135413] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:25:30.619607] [I] [thread 135413] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:30.619624] [I] [thread 135413] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:25:30.619738] [I] [thread 135413] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:30.619751] [I] [thread 135413] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:25:30.886887] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:30.887223] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:31.772202] [D] [thread 135091] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 60000 Deploy merge task for slice 10740000-10800000 [m
[36m[11:25:31.772864] [D] [thread 135092] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 10740000-10800000-3[m
[36m[11:25:31.772974] [D] [thread 135092] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10740000-10800000[m
[36m[11:25:31.773046] [D] [thread 135092] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10740000-10800000[m
[36m[11:25:31.773095] [D] [thread 135092] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10740000-10800000[m
[36m[11:25:31.773136] [D] [thread 135092] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10740000-10800000[m
[36m[11:25:31.773184] [D] [thread 135092] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10740000-10800000[m
[36m[11:25:31.773309] [D] [thread 135092] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[11:25:31.773346] [D] [thread 135092] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:25:31.776123] [D] [thread 135092] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out following content 10740000,10800000,100,1699874683149,1699874731773
10740000,10800000,63,1699874688186,1699874731773
10740000,10800000,54,1699874691608,1699874731773
10740000,10800000,24,1699874691860,1699874731773
10740000,10800000,47,1699874690513,1699874731773
10740000,10800000,13,1699874694240,1699874731773
[m
[36m[11:25:31.888504] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:32.889788] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:33.115285] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:33.115621] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:33.116682] [D] [thread 135418] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:25:33.116783] [I] [thread 135418] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:33.116801] [I] [thread 135418] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:25:33.116917] [I] [thread 135418] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:33.116949] [I] [thread 135418] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:25:33.281057] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:33.281427] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:34.282670] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:35.283950] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:35.285770] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:35.286103] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:35.287124] [D] [thread 135423] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:25:35.287265] [I] [thread 135423] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:35.287285] [I] [thread 135423] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:25:35.287400] [I] [thread 135423] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:35.287432] [I] [thread 135423] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:25:35.510448] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:35.510984] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:36.512271] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:37.513617] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:37.522928] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:37.523488] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:37.524304] [D] [thread 135429] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:25:37.524424] [I] [thread 135429] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:37.524441] [I] [thread 135429] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:25:37.524558] [I] [thread 135429] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:37.524571] [I] [thread 135429] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:25:37.740748] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:37.741152] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:38.742400] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:39.716196] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:39.716597] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:39.717624] [D] [thread 135434] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:25:39.717727] [I] [thread 135434] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:39.717745] [I] [thread 135434] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:25:39.717862] [I] [thread 135434] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:39.717886] [I] [thread 135434] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:25:39.886432] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:39.886824] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:40.888131] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:41.889466] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:42.033658] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:42.034069] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:42.035115] [D] [thread 135439] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:25:42.035212] [I] [thread 135439] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:42.035229] [I] [thread 135439] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:25:42.035347] [I] [thread 135439] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:42.035362] [I] [thread 135439] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:25:42.249915] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:42.250261] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:43.251502] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:44.252789] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:44.320770] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:44.321147] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:44.322249] [D] [thread 135445] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:25:44.322345] [I] [thread 135445] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:44.322363] [I] [thread 135445] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:25:44.322479] [I] [thread 135445] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:44.322492] [I] [thread 135445] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:25:44.518256] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:44.518588] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:45.519829] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:46.521060] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:46.666026] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:46.666417] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:46.667493] [D] [thread 135452] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:25:46.667591] [I] [thread 135452] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:46.667608] [I] [thread 135452] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:25:46.667722] [I] [thread 135452] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:46.667735] [I] [thread 135452] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:25:46.878785] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:46.879126] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:47.757051] [D] [thread 135093] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10860000-10920000[m
[36m[11:25:47.880548] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:48.834429] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:48.834797] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:48.836123] [D] [thread 135458] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:25:48.836247] [I] [thread 135458] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:48.836268] [I] [thread 135458] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:25:48.836429] [I] [thread 135458] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:48.836449] [I] [thread 135458] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:25:49.023086] [D] [thread 135092] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10860000-10920000[m
[36m[11:25:49.030191] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:49.030574] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:49.714092] [D] [thread 135091] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10860000-10920000[m
[36m[11:25:50.031802] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:51.004452] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:51.004813] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:51.005783] [D] [thread 135463] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:25:51.005885] [I] [thread 135463] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:51.005905] [I] [thread 135463] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:25:51.006037] [I] [thread 135463] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:51.006052] [I] [thread 135463] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:25:51.267634] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:51.268002] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:51.590098] [D] [thread 135090] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10860000-10920000[m
[36m[11:25:52.268454] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:53.269722] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:53.299050] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:53.299648] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:53.300385] [D] [thread 135469] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:25:53.300473] [I] [thread 135469] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:53.300492] [I] [thread 135469] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:25:53.300611] [I] [thread 135469] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:53.300625] [I] [thread 135469] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:25:53.466993] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:53.467598] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:54.468547] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:55.469862] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:55.505810] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:55.506190] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:55.507299] [D] [thread 135476] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:25:55.507395] [I] [thread 135476] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:55.507412] [I] [thread 135476] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:25:55.507528] [I] [thread 135476] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:55.507541] [I] [thread 135476] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:25:55.703133] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:55.703490] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:56.704713] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:57.706000] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:57.740584] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:57.740899] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:57.741955] [D] [thread 135481] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:25:57.742052] [I] [thread 135481] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:57.742070] [I] [thread 135481] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:25:57.742180] [I] [thread 135481] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:57.742193] [I] [thread 135481] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:25:57.928477] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:57.928813] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:58.930080] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:59.931469] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:59.990144] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:59.990648] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:25:59.991461] [D] [thread 135488] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:25:59.991557] [I] [thread 135488] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:59.991574] [I] [thread 135488] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:25:59.991690] [I] [thread 135488] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:25:59.991704] [I] [thread 135488] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:26:00.162112] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:00.162531] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:01.163728] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:02.129548] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:02.129901] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:02.130933] [D] [thread 135493] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:26:02.131032] [I] [thread 135493] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:02.131052] [I] [thread 135493] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:26:02.131171] [I] [thread 135493] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:02.131185] [I] [thread 135493] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:26:02.344708] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:02.345060] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:03.346288] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:04.347605] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:04.399893] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:04.400205] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:04.402067] [D] [thread 135498] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:26:04.402176] [I] [thread 135498] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:04.402193] [I] [thread 135498] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:26:04.402303] [I] [thread 135498] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:04.402317] [I] [thread 135498] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:26:04.569983] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:04.570375] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:05.571600] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:06.538241] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:06.538607] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:06.539601] [D] [thread 135503] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:26:06.539696] [I] [thread 135503] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:06.539713] [I] [thread 135503] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:26:06.539830] [I] [thread 135503] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:06.539889] [I] [thread 135503] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:26:06.802737] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:06.803066] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:07.804281] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:08.805580] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:08.821500] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:08.821847] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:08.822870] [D] [thread 135508] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:26:08.822969] [I] [thread 135508] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:08.822986] [I] [thread 135508] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:26:08.823105] [I] [thread 135508] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:08.823119] [I] [thread 135508] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:26:09.038189] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:09.038554] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:10.039818] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:11.041107] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:11.185446] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:11.185849] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:11.186948] [D] [thread 135513] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:26:11.187041] [I] [thread 135513] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:11.187059] [I] [thread 135513] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:26:11.187175] [I] [thread 135513] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:11.187188] [I] [thread 135513] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:26:11.441138] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:11.441500] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:11.536142] [D] [thread 135092] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 60000 Deploy merge task for slice 10800000-10860000 [m
[36m[11:26:11.536649] [D] [thread 135090] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 10800000-10860000-4[m
[36m[11:26:11.536803] [D] [thread 135090] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10800000-10860000[m
[36m[11:26:11.536857] [D] [thread 135090] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10800000-10860000[m
[36m[11:26:11.536887] [D] [thread 135090] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10800000-10860000[m
[36m[11:26:11.536915] [D] [thread 135090] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10800000-10860000[m
[36m[11:26:11.536950] [D] [thread 135090] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10800000-10860000[m
[36m[11:26:11.537048] [D] [thread 135090] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[11:26:11.537071] [D] [thread 135090] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:26:11.539048] [D] [thread 135090] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out following content 10800000,10860000,100,1699874712581,1699874771537
10800000,10860000,63,1699874723031,1699874771537
10800000,10860000,54,1699874728883,1699874771537
10800000,10860000,47,1699874726655,1699874771537
10800000,10860000,13,1699874731266,1699874771537
10800000,10860000,24,1699874731231,1699874771537
[m
[36m[11:26:12.442867] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:13.444123] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:13.454556] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:13.454910] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:13.455997] [D] [thread 135519] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:26:13.456096] [I] [thread 135519] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:13.456114] [I] [thread 135519] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:26:13.456229] [I] [thread 135519] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:13.456242] [I] [thread 135519] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:26:13.669417] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:13.669774] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:14.671089] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:15.672420] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:15.816787] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:15.817375] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:15.818135] [D] [thread 135525] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:26:15.818227] [I] [thread 135525] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:15.818244] [I] [thread 135525] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:26:15.818358] [I] [thread 135525] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:15.818372] [I] [thread 135525] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:26:15.985786] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:15.986373] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:16.987652] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:17.988982] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:18.037214] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:18.037845] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:18.038625] [D] [thread 135530] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:26:18.038715] [I] [thread 135530] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:18.038732] [I] [thread 135530] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:26:18.038849] [I] [thread 135530] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:18.038865] [I] [thread 135530] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:26:18.253716] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:18.254314] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:19.255744] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:20.256506] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:20.326017] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:20.326353] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:20.327396] [D] [thread 135535] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:26:20.327497] [I] [thread 135535] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:20.327515] [I] [thread 135535] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:26:20.327633] [I] [thread 135535] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:20.327648] [I] [thread 135535] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:26:20.525356] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:20.525687] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:21.199476] [D] [thread 135090] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10920000-10980000[m
[36m[11:26:21.526893] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:21.813462] [D] [thread 135091] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10920000-10980000[m
[36m[11:26:22.528154] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:22.553594] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:22.553999] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:22.555923] [D] [thread 135540] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:26:22.556050] [I] [thread 135540] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:22.556070] [I] [thread 135540] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:26:22.556202] [I] [thread 135540] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:22.556223] [I] [thread 135540] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:26:22.821857] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:22.822270] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:23.823515] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:24.810499] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:24.810831] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:24.812083] [D] [thread 135545] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:26:24.812179] [I] [thread 135545] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:24.812197] [I] [thread 135545] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:26:24.812316] [I] [thread 135545] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:24.812364] [I] [thread 135545] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:26:24.819738] [D] [thread 135093] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10920000-10980000[m
[36m[11:26:25.018571] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:25.018928] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:25.441931] [D] [thread 135092] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10920000-10980000[m
[36m[11:26:26.020090] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:27.021337] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:27.035022] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:27.035378] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:27.036434] [D] [thread 135550] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:26:27.036527] [I] [thread 135550] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:27.036546] [I] [thread 135550] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:26:27.036663] [I] [thread 135550] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:27.036679] [I] [thread 135550] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:26:27.305504] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:27.305867] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:28.307046] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:29.308400] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:29.345931] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:29.346273] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:29.347271] [D] [thread 135555] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:26:29.347365] [I] [thread 135555] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:29.347383] [I] [thread 135555] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:26:29.347500] [I] [thread 135555] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:29.347513] [I] [thread 135555] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:26:29.540964] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:29.541299] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:30.542667] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:31.473990] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:31.474309] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:31.475581] [D] [thread 135560] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:26:31.475705] [I] [thread 135560] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:31.475724] [I] [thread 135560] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:26:31.475850] [I] [thread 135560] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:31.475870] [I] [thread 135560] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:26:31.690418] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:31.690748] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:32.691949] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:33.693233] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:33.734806] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:33.735415] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:33.736112] [D] [thread 135565] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:26:33.736208] [I] [thread 135565] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:33.736226] [I] [thread 135565] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:26:33.736384] [I] [thread 135565] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:33.736400] [I] [thread 135565] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:26:33.931657] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:33.932259] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:34.933624] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:35.934932] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:35.944938] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:35.945535] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:35.946268] [D] [thread 135570] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:26:35.946361] [I] [thread 135570] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:35.946379] [I] [thread 135570] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:26:35.946498] [I] [thread 135570] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:35.946512] [I] [thread 135570] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:26:36.123380] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:36.124007] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:37.125300] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:38.126535] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:38.141600] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:38.142162] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:38.142915] [D] [thread 135575] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:26:38.143010] [I] [thread 135575] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:38.143027] [I] [thread 135575] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:26:38.143145] [I] [thread 135575] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:38.143159] [I] [thread 135575] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:26:38.346420] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:38.347047] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:39.348311] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:40.338731] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:40.339099] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:40.340070] [D] [thread 135580] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:26:40.340163] [I] [thread 135580] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:40.340181] [I] [thread 135580] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:26:40.340297] [I] [thread 135580] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:40.340311] [I] [thread 135580] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:26:40.600945] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:40.601279] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:41.602493] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:42.602367] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:42.602694] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:42.603685] [D] [thread 135585] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:26:42.603780] [I] [thread 135585] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:42.603800] [I] [thread 135585] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:26:42.603919] [I] [thread 135585] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:42.603935] [I] [thread 135585] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:26:42.798023] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:42.798406] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:43.799618] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:44.800918] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:44.840935] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:44.841304] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:44.842465] [D] [thread 135590] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:26:44.842662] [I] [thread 135590] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:44.842682] [I] [thread 135590] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:26:44.842819] [I] [thread 135590] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:44.842856] [I] [thread 135590] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:26:45.033612] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:45.033943] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:46.035184] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:47.020001] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:47.020351] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:47.021357] [D] [thread 135595] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:26:47.021462] [I] [thread 135595] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:47.021480] [I] [thread 135595] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:26:47.021598] [I] [thread 135595] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:47.021623] [I] [thread 135595] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:26:47.238088] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:47.238444] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:48.239698] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:49.227560] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:49.227881] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:49.229035] [D] [thread 135600] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:26:49.229143] [I] [thread 135600] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:49.229161] [I] [thread 135600] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:26:49.229278] [I] [thread 135600] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:49.229301] [I] [thread 135600] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:26:49.442053] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:49.442444] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:50.443598] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:50.861613] [D] [thread 135091] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 60000 Deploy merge task for slice 10860000-10920000 [m
[36m[11:26:50.862253] [D] [thread 135092] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 10860000-10920000-5[m
[36m[11:26:50.862364] [D] [thread 135092] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10860000-10920000[m
[36m[11:26:50.862438] [D] [thread 135092] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10860000-10920000[m
[36m[11:26:50.862488] [D] [thread 135092] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10860000-10920000[m
[36m[11:26:50.862530] [D] [thread 135092] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10860000-10920000[m
[36m[11:26:50.862576] [D] [thread 135092] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10860000-10920000[m
[36m[11:26:50.862702] [D] [thread 135092] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[11:26:50.862758] [D] [thread 135092] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:26:50.865596] [D] [thread 135092] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out following content 10860000,10920000,100,1699874747250,1699874810862
10860000,10920000,63,1699874756632,1699874810862
10860000,10920000,47,1699874762664,1699874810862
10860000,10920000,54,1699874767027,1699874810862
10860000,10920000,24,1699874770897,1699874810862
10860000,10920000,13,1699874771176,1699874810862
[m
[36m[11:26:51.444840] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:51.510027] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:51.510358] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:51.511337] [D] [thread 135605] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:26:51.511434] [I] [thread 135605] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:51.511452] [I] [thread 135605] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:26:51.511570] [I] [thread 135605] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:51.511586] [I] [thread 135605] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:26:51.701535] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:51.701866] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:52.703071] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:53.702768] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:53.703111] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:53.704256] [D] [thread 135610] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:26:53.704382] [I] [thread 135610] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:53.704403] [I] [thread 135610] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:26:53.704523] [I] [thread 135610] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:53.704536] [I] [thread 135610] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:26:53.910473] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:53.910806] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:54.912171] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:55.913474] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:55.935960] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:55.936286] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:55.937461] [D] [thread 135615] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:26:55.937562] [I] [thread 135615] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:55.937579] [I] [thread 135615] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:26:55.937697] [I] [thread 135615] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:55.937724] [I] [thread 135615] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:26:56.098163] [D] [thread 135090] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10980000-11040000[m
[36m[11:26:56.105286] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:56.105609] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:56.713046] [D] [thread 135091] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10980000-11040000[m
[36m[11:26:57.106870] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:57.310305] [D] [thread 135092] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10980000-11040000[m
[36m[11:26:58.050178] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:58.050763] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:58.051484] [D] [thread 135621] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:26:58.051579] [I] [thread 135621] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:58.051597] [I] [thread 135621] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:26:58.051715] [I] [thread 135621] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:26:58.051730] [I] [thread 135621] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:26:58.313884] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:58.314342] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:26:58.649408] [D] [thread 135093] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10980000-11040000[m
[36m[11:26:59.315907] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:00.277919] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:00.278580] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:00.279270] [D] [thread 135626] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:27:00.279343] [I] [thread 135626] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:00.279358] [I] [thread 135626] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:27:00.279469] [I] [thread 135626] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:00.279481] [I] [thread 135626] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:27:00.452965] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:00.453293] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:01.454525] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:02.455765] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:02.464702] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:02.465242] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:02.466009] [D] [thread 135632] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:27:02.466104] [I] [thread 135632] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:02.466121] [I] [thread 135632] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:27:02.466239] [I] [thread 135632] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:02.466252] [I] [thread 135632] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:27:02.675139] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:02.675570] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:03.676829] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:04.678237] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:04.821874] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:04.822454] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:04.823231] [D] [thread 135638] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:27:04.823328] [I] [thread 135638] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:04.823347] [I] [thread 135638] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:27:04.823464] [I] [thread 135638] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:04.823478] [I] [thread 135638] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:27:05.042580] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:05.043093] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:06.044414] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:07.045729] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:07.095528] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:07.096093] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:07.096901] [D] [thread 135645] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:27:07.096998] [I] [thread 135645] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:07.097016] [I] [thread 135645] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:27:07.097133] [I] [thread 135645] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:07.097147] [I] [thread 135645] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:27:07.292795] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:07.293399] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:08.294767] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:09.296065] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:09.359359] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:09.359918] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:09.360762] [D] [thread 135650] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:27:09.360859] [I] [thread 135650] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:09.360876] [I] [thread 135650] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:27:09.360993] [I] [thread 135650] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:09.361007] [I] [thread 135650] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:27:09.536485] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:09.537125] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:10.538502] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:11.539848] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:11.555185] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:11.555748] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:11.556693] [D] [thread 135655] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:27:11.556799] [I] [thread 135655] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:11.556819] [I] [thread 135655] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:27:11.556951] [I] [thread 135655] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:11.556967] [I] [thread 135655] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:27:11.758193] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:11.758675] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:12.759945] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:13.718510] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:13.719162] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:13.720053] [D] [thread 135661] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:27:13.720195] [I] [thread 135661] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:13.720218] [I] [thread 135661] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:27:13.720419] [I] [thread 135661] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:13.720499] [I] [thread 135661] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:27:13.937420] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:13.937994] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:14.939167] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:15.940424] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:15.945443] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:15.945756] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:15.946800] [D] [thread 135667] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:27:15.946899] [I] [thread 135667] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:15.946916] [I] [thread 135667] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:27:15.947032] [I] [thread 135667] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:15.947047] [I] [thread 135667] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:27:16.160637] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:16.160983] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:17.162223] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:18.163582] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:18.189149] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:18.189475] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:18.190542] [D] [thread 135672] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:27:18.190678] [I] [thread 135672] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:18.190697] [I] [thread 135672] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:27:18.190814] [I] [thread 135672] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:18.190827] [I] [thread 135672] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:27:18.457839] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:18.458193] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:19.459454] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:20.460753] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:20.507527] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:20.507849] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:20.508974] [D] [thread 135677] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:27:20.509082] [I] [thread 135677] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:20.509100] [I] [thread 135677] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:27:20.509215] [I] [thread 135677] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:20.509230] [I] [thread 135677] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:27:20.715482] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:20.715828] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:21.717049] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:22.710778] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:22.711146] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:22.712118] [D] [thread 135682] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:27:22.712211] [I] [thread 135682] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:22.712228] [I] [thread 135682] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:27:22.712379] [I] [thread 135682] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:22.712397] [I] [thread 135682] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:27:22.973950] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:22.974357] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:23.975576] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:24.976532] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:25.035590] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:25.035911] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:25.036960] [D] [thread 135689] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:27:25.037058] [I] [thread 135689] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:25.037075] [I] [thread 135689] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:27:25.037194] [I] [thread 135689] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:25.037207] [I] [thread 135689] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:27:25.230356] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:25.230713] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:26.231963] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:27.232583] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:27.258273] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:27.258633] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:27.259635] [D] [thread 135694] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:27:27.259728] [I] [thread 135694] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:27.259746] [I] [thread 135694] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:27:27.259864] [I] [thread 135694] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:27.259877] [I] [thread 135694] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:27:27.474275] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:27.474650] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:27.543468] [D] [thread 135092] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11040000-11100000[m
[36m[11:27:28.183586] [D] [thread 135090] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11040000-11100000[m
[36m[11:27:28.318235] [D] [thread 135092] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 60000 Deploy merge task for slice 10920000-10980000 [m
[36m[11:27:28.318785] [D] [thread 135091] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 10920000-10980000-6[m
[36m[11:27:28.318871] [D] [thread 135091] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10920000-10980000[m
[36m[11:27:28.318926] [D] [thread 135091] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10920000-10980000[m
[36m[11:27:28.319023] [D] [thread 135091] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10920000-10980000[m
[36m[11:27:28.319060] [D] [thread 135091] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10920000-10980000[m
[36m[11:27:28.319096] [D] [thread 135091] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10920000-10980000[m
[36m[11:27:28.319202] [D] [thread 135091] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[11:27:28.319230] [D] [thread 135091] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:27:28.321499] [D] [thread 135091] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out following content 10920000,10980000,100,1699874780759,1699874848319
10920000,10980000,63,1699874791322,1699874848319
10920000,10980000,47,1699874798850,1699874848319
10920000,10980000,54,1699874803800,1699874848319
10920000,10980000,24,1699874808898,1699874848319
10920000,10980000,13,1699874810312,1699874848319
[m
[36m[11:27:28.475880] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:28.717822] [D] [thread 135091] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11040000-11100000[m
[36m[11:27:29.273601] [D] [thread 135093] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11040000-11100000[m
[36m[11:27:29.442215] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:29.442579] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:29.443701] [D] [thread 135699] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:27:29.443798] [I] [thread 135699] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:29.443815] [I] [thread 135699] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:27:29.443933] [I] [thread 135699] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:29.443945] [I] [thread 135699] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:27:29.657731] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:29.658069] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:30.659293] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:31.660509] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:31.668191] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:31.668788] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:31.669623] [D] [thread 135705] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:27:31.669718] [I] [thread 135705] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:31.669735] [I] [thread 135705] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:27:31.669852] [I] [thread 135705] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:31.669865] [I] [thread 135705] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:27:31.885890] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:31.886430] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:32.887712] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:33.889001] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:33.945349] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:33.945869] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:33.946638] [D] [thread 135710] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:27:33.946731] [I] [thread 135710] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:33.946748] [I] [thread 135710] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:27:33.946862] [I] [thread 135710] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:33.946876] [I] [thread 135710] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:27:34.138987] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:34.139496] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:35.140521] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:36.141822] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:36.209022] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:36.209649] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:36.210319] [D] [thread 135715] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:27:36.210412] [I] [thread 135715] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:36.210430] [I] [thread 135715] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:27:36.210547] [I] [thread 135715] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:36.210560] [I] [thread 135715] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:27:36.414754] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:36.415297] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:37.416603] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:38.381697] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:38.382315] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:38.383133] [D] [thread 135720] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:27:38.383230] [I] [thread 135720] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:38.383247] [I] [thread 135720] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:27:38.383363] [I] [thread 135720] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:38.383376] [I] [thread 135720] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:27:38.598658] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:38.599116] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:39.600458] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:40.601756] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:40.627314] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:40.627862] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:40.628757] [D] [thread 135725] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:27:40.628854] [I] [thread 135725] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:40.628873] [I] [thread 135725] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:27:40.628991] [I] [thread 135725] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:40.629005] [I] [thread 135725] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:27:40.835304] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:40.835809] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:41.837079] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:42.838341] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:42.885136] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:42.885516] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:42.886633] [D] [thread 135730] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:27:42.886738] [I] [thread 135730] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:42.886758] [I] [thread 135730] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:27:42.886872] [I] [thread 135730] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:42.886885] [I] [thread 135730] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:27:43.051311] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:43.051951] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:44.052450] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:45.053661] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:45.054545] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:45.054873] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:45.055875] [D] [thread 135735] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:27:45.055970] [I] [thread 135735] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:45.055987] [I] [thread 135735] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:27:45.056101] [I] [thread 135735] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:45.056114] [I] [thread 135735] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:27:45.256388] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:45.256742] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:46.257926] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:47.234865] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:47.235203] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:47.236208] [D] [thread 135740] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:27:47.236305] [I] [thread 135740] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:47.236353] [I] [thread 135740] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:27:47.236475] [I] [thread 135740] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:47.236500] [I] [thread 135740] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:27:47.442803] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:47.443344] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:48.444596] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:49.445868] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:49.485731] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:49.486334] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:49.487040] [D] [thread 135745] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:27:49.487133] [I] [thread 135745] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:49.487150] [I] [thread 135745] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:27:49.487267] [I] [thread 135745] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:49.487281] [I] [thread 135745] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:27:49.669753] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:49.670339] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:50.671646] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:51.672938] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:51.721105] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:51.721448] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:51.722533] [D] [thread 135750] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:27:51.722635] [I] [thread 135750] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:51.722653] [I] [thread 135750] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:27:51.722759] [I] [thread 135750] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:51.722784] [I] [thread 135750] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:27:51.921980] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:51.922507] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:52.923766] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:53.924484] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:53.938591] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:53.939185] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:53.939950] [D] [thread 135756] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:27:53.940044] [I] [thread 135756] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:53.940062] [I] [thread 135756] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:27:53.940180] [I] [thread 135756] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:53.940194] [I] [thread 135756] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:27:54.153776] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:54.154360] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:55.155688] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:56.156800] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:56.205157] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:56.205523] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:56.206451] [D] [thread 135761] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:27:56.206544] [I] [thread 135761] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:56.206562] [I] [thread 135761] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:27:56.206677] [I] [thread 135761] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:56.206691] [I] [thread 135761] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:27:56.409436] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:56.409760] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:57.410994] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:58.408348] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:58.408701] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:58.409652] [D] [thread 135767] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:27:58.409734] [I] [thread 135767] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:58.409750] [I] [thread 135767] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:27:58.409858] [I] [thread 135767] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:27:58.409869] [I] [thread 135767] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:27:58.625604] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:58.625935] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:27:59.031645] [D] [thread 135092] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11100000-11160000[m
[36m[11:27:59.575876] [D] [thread 135091] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11100000-11160000[m
[36m[11:27:59.627172] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:00.176942] [D] [thread 135090] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11100000-11160000[m
[36m[11:28:00.606385] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:00.606774] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:00.607757] [D] [thread 135772] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:28:00.607861] [I] [thread 135772] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:00.607879] [I] [thread 135772] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:28:00.607995] [I] [thread 135772] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:00.608019] [I] [thread 135772] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:28:00.830090] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:00.830638] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:01.831874] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:02.681721] [D] [thread 135093] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11100000-11160000[m
[36m[11:28:02.832597] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:02.853965] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:02.854658] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:02.855382] [D] [thread 135777] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:28:02.855472] [I] [thread 135777] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:02.855490] [I] [thread 135777] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:28:02.855605] [I] [thread 135777] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:02.855619] [I] [thread 135777] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:28:03.100695] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:03.101241] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:04.102551] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:05.103806] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:05.122084] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:05.122718] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:05.123490] [D] [thread 135782] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:28:05.123584] [I] [thread 135782] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:05.123603] [I] [thread 135782] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:28:05.123719] [I] [thread 135782] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:05.123732] [I] [thread 135782] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:28:05.335307] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:05.335640] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:05.977904] [D] [thread 135093] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 60000 Deploy merge task for slice 10980000-11040000 [m
[36m[11:28:05.978591] [D] [thread 135092] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 10980000-11040000-7[m
[36m[11:28:05.978697] [D] [thread 135092] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10980000-11040000[m
[36m[11:28:05.978767] [D] [thread 135092] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10980000-11040000[m
[36m[11:28:05.978816] [D] [thread 135092] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10980000-11040000[m
[36m[11:28:05.978857] [D] [thread 135092] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10980000-11040000[m
[36m[11:28:05.978904] [D] [thread 135092] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10980000-11040000[m
[36m[11:28:05.979032] [D] [thread 135092] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[11:28:05.979091] [D] [thread 135092] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:28:05.981954] [D] [thread 135092] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out following content 10980000,11040000,100,1699874815623,1699874885979
10980000,11040000,63,1699874824842,1699874885979
10980000,11040000,47,1699874835947,1699874885979
10980000,11040000,54,1699874840308,1699874885979
10980000,11040000,24,1699874847579,1699874885979
10980000,11040000,13,1699874847908,1699874885979
[m
[36m[11:28:06.336886] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:07.290828] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:07.291504] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:07.292405] [D] [thread 135787] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:28:07.292617] [I] [thread 135787] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:07.292643] [I] [thread 135787] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:28:07.292797] [I] [thread 135787] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:07.292817] [I] [thread 135787] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:28:07.498787] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:07.499313] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:08.500566] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:09.485649] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:09.486290] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:09.487045] [D] [thread 135792] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:28:09.487118] [I] [thread 135792] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:09.487134] [I] [thread 135792] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:28:09.487243] [I] [thread 135792] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:09.487254] [I] [thread 135792] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:28:09.765472] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:09.765986] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:10.767172] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:11.766373] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:11.766956] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:11.767734] [D] [thread 135797] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:28:11.767829] [I] [thread 135797] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:11.767846] [I] [thread 135797] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:28:11.767961] [I] [thread 135797] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:11.767973] [I] [thread 135797] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:28:12.024861] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:12.025455] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:13.026704] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:14.027999] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:14.165775] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:14.166413] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:14.167081] [D] [thread 135802] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:28:14.167177] [I] [thread 135802] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:14.167195] [I] [thread 135802] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:28:14.167310] [I] [thread 135802] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:14.167323] [I] [thread 135802] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:28:14.371061] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:14.371407] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:15.372510] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:16.373761] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:16.419692] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:16.420046] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:16.421473] [D] [thread 135807] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:28:16.421573] [I] [thread 135807] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:16.421589] [I] [thread 135807] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:28:16.421679] [I] [thread 135807] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:16.421693] [I] [thread 135807] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:28:16.567458] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:16.567794] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:17.569043] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:18.570297] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:18.580966] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:18.581283] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:18.582320] [D] [thread 135812] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:28:18.582421] [I] [thread 135812] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:18.582438] [I] [thread 135812] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:28:18.582554] [I] [thread 135812] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:18.582576] [I] [thread 135812] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:28:18.804153] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:18.804536] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:19.805779] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:20.807071] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:20.812384] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:20.812739] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:20.813702] [D] [thread 135817] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:28:20.813798] [I] [thread 135817] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:20.813815] [I] [thread 135817] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:28:20.813927] [I] [thread 135817] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:20.813940] [I] [thread 135817] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:28:21.023198] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:21.023559] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:22.024542] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:23.021466] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:23.021821] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:23.022784] [D] [thread 135822] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:28:23.022877] [I] [thread 135822] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:23.022895] [I] [thread 135822] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:28:23.023010] [I] [thread 135822] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:23.023022] [I] [thread 135822] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:28:23.241981] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:23.242311] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:24.243527] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:25.235349] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:25.235672] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:25.236757] [D] [thread 135827] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:28:25.236861] [I] [thread 135827] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:25.236879] [I] [thread 135827] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:28:25.236995] [I] [thread 135827] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:25.237047] [I] [thread 135827] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:28:25.433561] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:25.433896] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:25.470968] [D] [thread 135092] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11160000-11220000[m
[36m[11:28:26.016703] [D] [thread 135093] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11160000-11220000[m
[36m[11:28:26.435141] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:26.602715] [D] [thread 135091] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11160000-11220000[m
[36m[11:28:27.381505] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:27.382115] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:27.382831] [D] [thread 135832] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:28:27.382902] [I] [thread 135832] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:27.382918] [I] [thread 135832] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:28:27.383024] [I] [thread 135832] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:27.383037] [I] [thread 135832] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:28:27.551005] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:27.551333] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:28.552521] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:29.553787] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:29.618202] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:29.618555] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:29.619556] [D] [thread 135837] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:28:29.619654] [I] [thread 135837] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:29.619672] [I] [thread 135837] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:28:29.619788] [I] [thread 135837] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:29.619846] [I] [thread 135837] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:28:29.656142] [D] [thread 135090] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11160000-11220000[m
[36m[11:28:29.824375] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:29.824733] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:30.825961] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:31.827221] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:31.829342] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:31.829694] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:31.830841] [D] [thread 135842] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:28:31.830934] [I] [thread 135842] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:31.830954] [I] [thread 135842] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:28:31.831070] [I] [thread 135842] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:31.831087] [I] [thread 135842] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:28:32.033126] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:32.033528] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:33.034747] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:33.995623] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:33.995962] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:33.997087] [D] [thread 135847] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:28:33.997200] [I] [thread 135847] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:33.997219] [I] [thread 135847] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:28:33.997351] [I] [thread 135847] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:33.997366] [I] [thread 135847] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:28:34.160464] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:34.160994] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:35.162169] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:36.158403] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:36.158761] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:36.160013] [D] [thread 135852] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:28:36.160202] [I] [thread 135852] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:36.160225] [I] [thread 135852] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:28:36.160382] [I] [thread 135852] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:36.160401] [I] [thread 135852] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:28:36.424496] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:36.425507] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:37.426839] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:38.428135] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:38.437562] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:38.438138] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:38.438920] [D] [thread 135857] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:28:38.438994] [I] [thread 135857] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:38.439011] [I] [thread 135857] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:28:38.439128] [I] [thread 135857] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:38.439142] [I] [thread 135857] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:28:38.653061] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:38.653385] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:39.654601] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:40.655900] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:40.688372] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:40.688718] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:40.689847] [D] [thread 135862] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:28:40.689944] [I] [thread 135862] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:40.689961] [I] [thread 135862] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:28:40.690077] [I] [thread 135862] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:40.690090] [I] [thread 135862] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:28:40.911419] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:40.911753] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:41.912997] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:42.909389] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:42.909706] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:42.910691] [D] [thread 135867] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:28:42.910786] [I] [thread 135867] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:42.910803] [I] [thread 135867] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:28:42.910914] [I] [thread 135867] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:42.910927] [I] [thread 135867] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:28:43.174016] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:43.174349] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:44.107432] [D] [thread 135091] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 60000 Deploy merge task for slice 11040000-11100000 [m
[36m[11:28:44.108146] [D] [thread 135090] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 11040000-11100000-8[m
[36m[11:28:44.108255] [D] [thread 135090] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11040000-11100000[m
[36m[11:28:44.108377] [D] [thread 135090] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11040000-11100000[m
[36m[11:28:44.108440] [D] [thread 135090] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11040000-11100000[m
[36m[11:28:44.108488] [D] [thread 135090] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11040000-11100000[m
[36m[11:28:44.108537] [D] [thread 135090] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11040000-11100000[m
[36m[11:28:44.108668] [D] [thread 135090] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[11:28:44.108704] [D] [thread 135090] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:28:44.111466] [D] [thread 135090] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out following content 11040000,11100000,100,1699874847081,1699874924108
11040000,11100000,63,1699874859542,1699874924108
11040000,11100000,47,1699874872921,1699874924108
11040000,11100000,54,1699874877346,1699874924108
11040000,11100000,24,1699874885494,1699874924108
11040000,11100000,13,1699874885454,1699874924108
[m
[36m[11:28:44.175615] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:45.176833] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:45.178834] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:45.179164] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:45.180241] [D] [thread 135872] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:28:45.180367] [I] [thread 135872] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:45.180389] [I] [thread 135872] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:28:45.180507] [I] [thread 135872] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:28:45.180528] [I] [thread 135872] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:28:45.396238] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:45.396721] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:45.657568] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:28:45.657893] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:28:45.659101] [I] [thread 135876] [QueryCatalogService.cpp:65] [checkAndMarkForHardStop] QueryCatalogService: Handle hard stop request.[m
[36m[11:28:45.659233] [D] [thread 135876] [QueryCatalogService.cpp:83] [checkAndMarkForHardStop] QueryCatalog: Changing query status to Mark query for stop.[m
[32m[11:28:45.659392] [I] [thread 135876] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : StopQueryRequest { QueryId: 1}[m
[32m[11:28:45.659419] [I] [thread 135876] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[11:28:45.659493] [I] [thread 135079] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[11:28:45.659565] [I] [thread 135079] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[11:28:45.659586] [I] [thread 135079] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[11:28:45.659629] [I] [thread 135079] [GlobalQueryPlanUpdatePhase.cpp:133] [processStopQueryRequest] QueryProcessingService: Request received for stopping the query 1[m
[36m[11:28:45.659642] [D] [thread 135079] [GlobalQueryPlan.cpp:45] [removeQuery] GlobalQueryPlan: Removing query information from the meta data[m
[36m[11:28:45.659686] [D] [thread 135079] [SharedQueryPlan.cpp:194] [removeQuery] SharedQueryPlan: Remove the Query Id 1 and associated Global Query Nodes with sink operators.[m
[36m[11:28:45.659829] [D] [thread 135079] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SINK(4: {FileSinkDescriptor()}) as root operator.[m
[36m[11:28:45.660307] [D] [thread 135079] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[11:28:45.660447] [D] [thread 135079] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[11:28:45.660517] [D] [thread 135079] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[11:28:45.660534] [D] [thread 135079] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[11:28:45.660543] [D] [thread 135079] [RequestProcessorService.cpp:162] [start] QueryProcessingService: Shared Query Plan is empty and an older version is already running.[m
[36m[11:28:45.660573] [D] [thread 135079] [QueryUndeploymentPhase.cpp:44] [execute] QueryUndeploymentPhase::stopAndUndeployQuery : queryId= 1[m
[36m[11:28:45.660593] [D] [thread 135079] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[11:28:45.660624] [D] [thread 135079] [QueryUndeploymentPhase.cpp:54] [execute] QueryUndeploymentPhase:removeQuery: stop query[m
[36m[11:28:45.660637] [D] [thread 135079] [QueryUndeploymentPhase.cpp:80] [stopQuery] QueryUndeploymentPhase:markQueryForStop queryId= 1[m
[36m[11:28:45.660750] [D] [thread 135079] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=5 and IP=192.168.2.32:44765[m
[36m[11:28:45.660780] [D] [thread 135079] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.32:44765 queryId=1[m
[36m[11:28:45.667013] [D] [thread 135079] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=6 and IP=192.168.2.33:45805[m
[36m[11:28:45.667109] [D] [thread 135079] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.33:45805 queryId=1[m
[36m[11:28:45.672021] [D] [thread 135079] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=7 and IP=192.168.2.34:43563[m
[36m[11:28:45.672114] [D] [thread 135079] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.34:43563 queryId=1[m
[36m[11:28:45.677007] [D] [thread 135079] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=8 and IP=192.168.2.35:44745[m
[36m[11:28:45.677097] [D] [thread 135079] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.35:44745 queryId=1[m
[36m[11:28:45.681916] [D] [thread 135079] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=9 and IP=192.168.2.37:33647[m
[36m[11:28:45.681996] [D] [thread 135079] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.37:33647 queryId=1[m
[36m[11:28:45.686787] [D] [thread 135079] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=10 and IP=192.168.2.38:40217[m
[36m[11:28:45.686877] [D] [thread 135079] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.38:40217 queryId=1[m
[36m[11:28:45.691569] [D] [thread 135079] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=1 and IP=192.168.2.11:35597[m
[36m[11:28:45.691654] [D] [thread 135079] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.11:35597 queryId=1[m
[36m[11:28:45.696420] [D] [thread 135079] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=2 and IP=192.168.2.12:41303[m
[36m[11:28:45.696516] [D] [thread 135079] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.12:41303 queryId=1[m
[36m[11:28:45.700989] [D] [thread 135079] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=3 and IP=192.168.2.30:44835[m
[36m[11:28:45.701086] [D] [thread 135079] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.30:44835 queryId=1[m
[36m[11:28:45.705688] [D] [thread 135079] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=4 and IP=192.168.2.31:34183[m
[36m[11:28:45.705774] [D] [thread 135079] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.31:34183 queryId=1[m
[36m[11:28:45.710412] [D] [thread 135079] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Stop for 10 queues[m
[36m[11:28:45.948662] [D] [thread 135095] [WorkerRPCServer.cpp:90] [StopQuery] WorkerRPCServer::StopQuery: got request for 1[m
[36m[11:28:45.948843] [D] [thread 135095] [NodeEngine.cpp:250] [stopQuery] Runtime:stopQuery for qep= 1  termination= HardStop[m
[36m[11:28:45.948991] [D] [thread 135095] [QueryManagerLifecycle.cpp:312] [stopQuery] AbstractQueryManager::stopQuery: query sub-plan id  7  type= HardStop[m
[36m[11:28:45.949062] [D] [thread 135095] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:21 PartitionId: 0 SubpartitionID: 0[m
[36m[11:28:45.949156] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:28:45.949395] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:28:45.950016] [D] [thread 135095] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 21 is notifying completion: HardStop[m
[36m[11:28:45.950165] [D] [thread 135095] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 21 is terminated; tokens left = 9[m
[36m[11:28:45.950225] [D] [thread 135092] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::21::0::0[m
[36m[11:28:45.950233] [D] [thread 135095] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 21 terminationType=HardStop[m
[36m[11:28:45.950415] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:28:45.950445] [D] [thread 135092] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::21::0::0 Thread 3[m
[36m[11:28:45.950597] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:28:45.950707] [D] [thread 135093] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::21::0::0[m
[36m[11:28:45.950798] [D] [thread 135093] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::21::0::0 Thread 0[m
[36m[11:28:45.951017] [D] [thread 135090] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::21::0::0[m
[36m[11:28:45.951100] [D] [thread 135090] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::21::0::0 Thread 1[m
[36m[11:28:45.951291] [D] [thread 135091] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::21::0::0[m
[36m[11:28:45.951370] [D] [thread 135091] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::21::0::0 Thread 2[m
[36m[11:28:45.951396] [D] [thread 135095] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=21 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[11:28:45.951421] [D] [thread 135091] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::21::0::0[m
[36m[11:28:45.951463] [D] [thread 135091] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::21::0::0[m
[36m[11:28:45.951492] [D] [thread 135095] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:21 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[11:28:45.951513] [D] [thread 135091] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::21::0::0[m
[36m[11:28:45.951543] [D] [thread 135095] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:27 PartitionId: 0 SubpartitionID: 0[m
[36m[11:28:45.951615] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[32m[11:28:45.951633] [I] [thread 135091] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::21::0::0; newCnt(4)[m
[36m[11:28:45.951787] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:28:45.952125] [D] [thread 135095] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 27 is notifying completion: HardStop[m
[36m[11:28:45.952197] [D] [thread 135095] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 27 is terminated; tokens left = 8[m
[36m[11:28:45.952245] [D] [thread 135095] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 27 terminationType=HardStop[m
[36m[11:28:45.952398] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:28:45.952523] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:28:45.952841] [D] [thread 135090] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[11:28:45.952885] [D] [thread 135091] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[11:28:45.952842] [D] [thread 135092] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[11:28:45.953079] [D] [thread 135093] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[11:28:45.953115] [D] [thread 135093] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 7 stage id: 3[m
[36m[11:28:45.953157] [D] [thread 135093] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 7 stage id: 3 but refCount was 6 and now is 5[m
[36m[11:28:45.953427] [D] [thread 135090] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::27::0::0[m
[36m[11:28:45.953427] [D] [thread 135093] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::27::0::0[m
[36m[11:28:45.953496] [D] [thread 135093] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::27::0::0 Thread 0[m
[36m[11:28:45.953496] [D] [thread 135090] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::27::0::0 Thread 1[m
[36m[11:28:45.953619] [D] [thread 135092] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::27::0::0[m
[36m[11:28:45.953661] [D] [thread 135092] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::27::0::0 Thread 3[m
[36m[11:28:45.953761] [D] [thread 135091] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::27::0::0[m
[36m[11:28:45.953799] [D] [thread 135091] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::27::0::0 Thread 2[m
[36m[11:28:45.953825] [D] [thread 135091] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::27::0::0[m
[36m[11:28:45.953848] [D] [thread 135091] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::27::0::0[m
[36m[11:28:45.953872] [D] [thread 135091] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::27::0::0[m
[32m[11:28:45.953927] [I] [thread 135091] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::27::0::0; newCnt(4)[m
[36m[11:28:45.954447] [D] [thread 135095] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=27 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[11:28:45.954566] [D] [thread 135095] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:27 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[11:28:45.954572] [D] [thread 135091] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[11:28:45.954602] [D] [thread 135095] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[11:28:45.954653] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:28:45.954708] [D] [thread 135090] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[11:28:45.954782] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:28:45.954820] [D] [thread 135092] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[11:28:45.954921] [D] [thread 135093] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[11:28:45.954959] [D] [thread 135093] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 7 stage id: 3[m
[36m[11:28:45.954986] [D] [thread 135093] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 7 stage id: 3 but refCount was 5 and now is 4[m
[36m[11:28:45.955092] [D] [thread 135095] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 33 is notifying completion: HardStop[m
[36m[11:28:45.955133] [D] [thread 135095] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 33 is terminated; tokens left = 7[m
[36m[11:28:45.955162] [D] [thread 135095] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 33 terminationType=HardStop[m
[36m[11:28:45.955232] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:28:45.955340] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:28:45.955417] [D] [thread 135091] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[11:28:45.955480] [D] [thread 135091] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 2[m
[36m[11:28:45.955529] [D] [thread 135095] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=33 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[11:28:45.955580] [D] [thread 135095] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[11:28:45.955609] [D] [thread 135095] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[11:28:45.955646] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:28:45.955648] [D] [thread 135090] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[11:28:45.955697] [D] [thread 135090] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 1[m
[36m[11:28:45.955744] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:28:45.955858] [D] [thread 135092] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[11:28:45.955908] [D] [thread 135092] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 3[m
[36m[11:28:45.955946] [D] [thread 135095] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 39 is notifying completion: HardStop[m
[36m[11:28:45.955980] [D] [thread 135095] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 39 is terminated; tokens left = 6[m
[36m[11:28:45.956006] [D] [thread 135095] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 39 terminationType=HardStop[m
[36m[11:28:45.956051] [D] [thread 135093] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[11:28:45.956065] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:28:45.956096] [D] [thread 135093] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 0[m
[36m[11:28:45.956127] [D] [thread 135093] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::33::0::0[m
[36m[11:28:45.956150] [D] [thread 135093] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::33::0::0[m
[36m[11:28:45.956184] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:28:45.956190] [D] [thread 135093] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::33::0::0[m
[32m[11:28:45.956253] [I] [thread 135093] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(4)[m
[36m[11:28:45.956436] [D] [thread 135095] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=39 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[11:28:45.956497] [D] [thread 135095] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[11:28:45.956527] [D] [thread 135095] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[36m[11:28:45.956547] [D] [thread 135093] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[11:28:45.956568] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:28:45.956714] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:28:45.956720] [D] [thread 135090] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
2023-11-13 [36m[11:28:45.956868] [D] [thread 135092] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
11:28:45.965 postReconfigurationCallback: queryId=1, querySubPlanId=7; queryId=1 subPlanId=7 processedTasks=3005 processedTuple=599408 processedBuffers=3005 processedWatermarks=0 latencyAVG=1699874775562 queueSizeAVG=0 availableGlobalBufferAVG=510 availableFixedBufferAVG=0
[36m[11:28:45.956941] [D] [thread 135095] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 45 is notifying completion: HardStop[m
[36m[11:28:45.956994] [D] [thread 135095] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 45 is terminated; tokens left = 5[m
[36m[11:28:45.957008] [D] [thread 135091] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[11:28:45.957026] [D] [thread 135095] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 45 terminationType=HardStop[m
[36m[11:28:45.957040] [D] [thread 135091] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 7 stage id: 3[m
[36m[11:28:45.957065] [D] [thread 135091] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 7 stage id: 3 but refCount was 4 and now is 3[m
[36m[11:28:45.957092] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:28:45.957274] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:28:45.957346] [D] [thread 135091] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[11:28:45.957407] [D] [thread 135091] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::39::0::0 Thread 2[m
[36m[11:28:45.957491] [D] [thread 135095] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=45 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[11:28:45.957557] [D] [thread 135095] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[11:28:45.957573] [D] [thread 135090] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[11:28:45.957591] [D] [thread 135095] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[11:28:45.957619] [D] [thread 135090] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::39::0::0 Thread 1[m
[36m[11:28:45.957633] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:28:45.957737] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:28:45.957771] [D] [thread 135092] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[11:28:45.957816] [D] [thread 135092] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::39::0::0 Thread 3[m
[36m[11:28:45.957962] [D] [thread 135095] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 51 is notifying completion: HardStop[m
[36m[11:28:45.957969] [D] [thread 135093] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[11:28:45.958047] [D] [thread 135095] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 51 is terminated; tokens left = 4[m
[36m[11:28:45.958027] [D] [thread 135093] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::39::0::0 Thread 0[m
[36m[11:28:45.958083] [D] [thread 135095] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 51 terminationType=HardStop[m
[36m[11:28:45.958098] [D] [thread 135093] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::39::0::0[m
[36m[11:28:45.958123] [D] [thread 135093] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::39::0::0[m
[36m[11:28:45.958149] [D] [thread 135093] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::39::0::0[m
[36m[11:28:45.958156] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[32m[11:28:45.958209] [I] [thread 135093] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(4)[m
[36m[11:28:45.958271] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:28:45.958487] [D] [thread 135095] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=51 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[11:28:45.958498] [D] [thread 135093] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[11:28:45.958546] [D] [thread 135095] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[11:28:45.958691] [D] [thread 135090] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[11:28:45.958867] [D] [thread 135092] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[11:28:45.959022] [D] [thread 135091] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[11:28:45.959057] [D] [thread 135091] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 7 stage id: 3[m
[36m[11:28:45.959080] [D] [thread 135091] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 7 stage id: 3 but refCount was 3 and now is 2[m
[36m[11:28:45.959361] [D] [thread 135091] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[11:28:45.959361] [D] [thread 135093] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[11:28:45.959430] [D] [thread 135093] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::45::0::0 Thread 0[m
[36m[11:28:45.959430] [D] [thread 135091] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::45::0::0 Thread 2[m
[36m[11:28:45.959609] [D] [thread 135092] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[11:28:45.959667] [D] [thread 135092] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::45::0::0 Thread 3[m
[36m[11:28:45.959799] [D] [thread 135090] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[11:28:45.959840] [D] [thread 135090] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::45::0::0 Thread 1[m
[36m[11:28:45.959869] [D] [thread 135090] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::45::0::0[m
[36m[11:28:45.959891] [D] [thread 135090] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::45::0::0[m
[36m[11:28:45.959916] [D] [thread 135090] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::45::0::0[m
[32m[11:28:45.959970] [I] [thread 135090] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(4)[m
[36m[11:28:45.960217] [D] [thread 135090] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[11:28:45.960217] [D] [thread 135091] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[11:28:45.960451] [D] [thread 135092] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[11:28:45.960587] [D] [thread 135093] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[11:28:45.960621] [D] [thread 135093] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 7 stage id: 3[m
[36m[11:28:45.960645] [D] [thread 135093] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 7 stage id: 3 but refCount was 2 and now is 1[m
[36m[11:28:45.960883] [D] [thread 135093] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[11:28:45.960958] [D] [thread 135093] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 0[m
[36m[11:28:45.960883] [D] [thread 135090] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[11:28:45.961070] [D] [thread 135090] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 1[m
[36m[11:28:45.961115] [D] [thread 135092] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[11:28:45.961158] [D] [thread 135092] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 3[m
[36m[11:28:45.961282] [D] [thread 135091] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[11:28:45.961324] [D] [thread 135091] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 2[m
[36m[11:28:45.961354] [D] [thread 135091] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::51::0::0[m
[36m[11:28:45.961376] [D] [thread 135091] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::51::0::0[m
[36m[11:28:45.961399] [D] [thread 135091] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::51::0::0[m
[32m[11:28:45.961452] [I] [thread 135091] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(4)[m
[36m[11:28:45.961687] [D] [thread 135091] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[11:28:45.961688] [D] [thread 135093] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[11:28:45.961921] [D] [thread 135092] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[11:28:45.962042] [D] [thread 135090] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[11:28:45.962088] [D] [thread 135090] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 7 stage id: 3[m
[36m[11:28:45.962108] [D] [thread 135090] [ExecutablePipeline.cpp:259] [postReconfigurationCallback] Reconfiguration of pipeline belonging to subplanId:7 stage id:3 reached prev=1[m
[36m[11:28:45.962154] [D] [thread 135090] [AbstractSlicePreAggregationHandler.cpp:116] [stop] shutdown AbstractSlicePreAggregationHandler: HardStop[m
[36m[11:28:45.962311] [D] [thread 135090] [ExecutableQueryPlan.cpp:330] [notifyPipelineCompletion] QEP 7 Pipeline 3 is terminated; tokens left = 3[m
[36m[11:28:45.962374] [D] [thread 135090] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:28:45.962497] [D] [thread 135090] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:28:45.962783] [D] [thread 135090] [ExecutablePipeline.cpp:286] [postReconfigurationCallback] Going to reconfigure next pipeline belonging to subplanId: 7 stage id: 2 got EndOfStream  with nextPipeline[m
[36m[11:28:45.963068] [D] [thread 135093] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 2 belonging to query id: 7 stage id: 2[m
[36m[11:28:45.963068] [D] [thread 135091] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 2 belonging to query id: 7 stage id: 2[m
[36m[11:28:45.963106] [D] [thread 135090] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 2 belonging to query id: 7 stage id: 2[m
[36m[11:28:45.963068] [D] [thread 135092] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 2 belonging to query id: 7 stage id: 2[m
[36m[11:28:45.963250] [D] [thread 135092] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 7 stage id: 2[m
[36m[11:28:45.963268] [D] [thread 135092] [ExecutablePipeline.cpp:259] [postReconfigurationCallback] Reconfiguration of pipeline belonging to subplanId:7 stage id:2 reached prev=1[m
[36m[11:28:45.963291] [D] [thread 135092] [KeyedSliceMergingHandler.cpp:38] [stop] stop GlobalSliceMergingHandler: HardStop[m
[36m[11:28:45.963370] [D] [thread 135092] [ExecutableQueryPlan.cpp:330] [notifyPipelineCompletion] QEP 7 Pipeline 2 is terminated; tokens left = 2[m
[36m[11:28:45.963425] [D] [thread 135092] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:28:45.963528] [D] [thread 135092] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:28:45.963798] [D] [thread 135092] [ExecutablePipeline.cpp:293] [postReconfigurationCallback] Going to reconfigure next sink belonging to subplanId: 7 sink id: FileSink() got EndOfStream  with nextPipeline[m
[36m[11:28:45.964121] [D] [thread 135092] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[11:28:45.964231] [D] [thread 135092] [ExecutableQueryPlan.cpp:352] [notifySinkCompletion] QEP 7 Sink FileSink() is terminated; tokens left = 1[m
[36m[11:28:45.964287] [D] [thread 135092] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:28:45.964461] [D] [thread 135092] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:28:45.964768] [D] [thread 135092] [SinkMedium.cpp:136] [postReconfigurationCallback] Sink [ FileSink() ] is completed with  HardStop[m
[36m[11:28:45.965358] [D] [thread 135092] [ExecutableQueryPlan.cpp:231] [postReconfigurationCallback] Executing HardEndOfStream on qep queryId=1 querySubPlanId=7[m
[36m[11:28:45.965389] [D] [thread 135092] [ExecutableQueryPlan.cpp:172] [stop] QueryExecutionPlan: stop queryId=1 querySubPlanId=7[m
[36m[11:28:45.965402] [D] [thread 135092] [ExecutableQueryPlan.cpp:174] [stop] QueryExecutionPlan: stop 1-7 is marked as stopped now[m
[36m[11:28:45.965595] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Destroy[m
[36m[11:28:45.965756] [D] [thread 135095] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Destroy[m
[36m[11:28:45.966446] [D] [thread 135095] [QueryManager.cpp:312] [postReconfigurationCallback] AbstractQueryManager: removed running QEP  7[m
[36m[11:28:45.966590] [D] [thread 135095] [QueryManagerLifecycle.cpp:380] [stopQuery] AbstractQueryManager::stopQuery: query 7 was successful[m
[36m[11:28:45.966614] [D] [thread 135095] [NodeEngine.cpp:265] [stopQuery] Runtime: stop of QEP  7  succeeded[m
[36m[11:28:45.966631] [D] [thread 135095] [WorkerRPCServer.cpp:97] [StopQuery] WorkerRPCServer::StopQuery: success[m
[36m[11:28:46.048499] [D] [thread 135088] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): EndOfStream received for channel [m
[36m[11:28:46.048548] [D] [thread 135089] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): EndOfStream received for channel [m
[36m[11:28:46.048804] [D] [thread 135088] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::21::0::0(threadId=2)[m
[36m[11:28:46.048893] [D] [thread 135089] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::21::0::0(threadId=0)[m
[32m[11:28:46.048948] [I] [thread 135088] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::21::0::0; newCnt(3)[m
[36m[11:28:46.049156] [D] [thread 135088] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::21::0::0(threadId=2) but there is still some active subpartition: 3[m
[32m[11:28:46.049328] [I] [thread 135089] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::21::0::0; newCnt(2)[m
[36m[11:28:46.049439] [D] [thread 135089] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::21::0::0(threadId=0) but there is still some active subpartition: 2[m
[36m[11:28:46.049524] [D] [thread 135089] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): EndOfStream received for channel [m
[36m[11:28:46.049588] [D] [thread 135089] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::21::0::0(threadId=1)[m
[32m[11:28:46.049663] [I] [thread 135089] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::21::0::0; newCnt(1)[m
[36m[11:28:46.049723] [D] [thread 135089] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::21::0::0, counter is at 1.[m
[36m[11:28:46.049839] [D] [thread 135089] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:21 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[11:28:46.049892] [W] [thread 135089] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:21 PartitionId: 0 SubpartitionID: 0[m
[36m[11:28:46.051399] [D] [thread 135088] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): EndOfStream received for channel [m
[36m[11:28:46.051538] [D] [thread 135088] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::21::0::0(threadId=3)[m
[32m[11:28:46.051643] [I] [thread 135088] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::21::0::0; newCnt(0)[m
[36m[11:28:46.051716] [D] [thread 135088] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::21::0::0(threadId=3) but there is still some active subpartition: 0[m
[36m[11:28:46.053531] [D] [thread 135089] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): EndOfStream received for channel [m
[36m[11:28:46.053666] [D] [thread 135089] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::27::0::0(threadId=2)[m
[32m[11:28:46.053763] [I] [thread 135089] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::27::0::0; newCnt(3)[m
[36m[11:28:46.053833] [D] [thread 135089] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::27::0::0(threadId=2) but there is still some active subpartition: 3[m
[36m[11:28:46.053895] [D] [thread 135089] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): EndOfStream received for channel [m
[36m[11:28:46.053947] [D] [thread 135089] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::27::0::0(threadId=1)[m
[32m[11:28:46.054036] [I] [thread 135089] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::27::0::0; newCnt(2)[m
[36m[11:28:46.054103] [D] [thread 135089] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::27::0::0(threadId=1) but there is still some active subpartition: 2[m
[36m[11:28:46.054269] [D] [thread 135088] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): EndOfStream received for channel [m
[36m[11:28:46.054338] [D] [thread 135088] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::27::0::0(threadId=0)[m
[32m[11:28:46.054412] [I] [thread 135088] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::27::0::0; newCnt(1)[m
[36m[11:28:46.054454] [D] [thread 135088] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::27::0::0, counter is at 1.[m
[36m[11:28:46.054527] [D] [thread 135088] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:27 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[11:28:46.054570] [W] [thread 135088] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:27 PartitionId: 0 SubpartitionID: 0[m
[36m[11:28:46.055371] [D] [thread 135088] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): EndOfStream received for channel [m
[36m[11:28:46.055507] [D] [thread 135088] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::27::0::0(threadId=3)[m
[32m[11:28:46.055595] [I] [thread 135088] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::27::0::0; newCnt(0)[m
[36m[11:28:46.055749] [D] [thread 135088] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::27::0::0(threadId=3) but there is still some active subpartition: 0[m
[36m[11:28:46.321374] [D] [thread 135089] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): EndOfStream received for channel [m
[36m[11:28:46.321405] [D] [thread 135088] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): EndOfStream received for channel [m
[36m[11:28:46.321552] [D] [thread 135088] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=0)[m
[36m[11:28:46.321553] [D] [thread 135089] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=3)[m
[32m[11:28:46.321723] [I] [thread 135088] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(3)[m
[32m[11:28:46.321869] [I] [thread 135089] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(2)[m
[36m[11:28:46.321983] [D] [thread 135088] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::33::0::0(threadId=0) but there is still some active subpartition: 2[m
[36m[11:28:46.321999] [D] [thread 135089] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::33::0::0(threadId=3) but there is still some active subpartition: 2[m
[36m[11:28:46.324074] [D] [thread 135089] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): EndOfStream received for channel [m
[36m[11:28:46.324211] [D] [thread 135088] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): EndOfStream received for channel [m
[36m[11:28:46.324222] [D] [thread 135089] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=1)[m
[32m[11:28:46.324415] [I] [thread 135089] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(1)[m
[36m[11:28:46.324458] [D] [thread 135088] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=2)[m
[36m[11:28:46.324476] [D] [thread 135089] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::33::0::0, counter is at 1.[m
[36m[11:28:46.324650] [D] [thread 135089] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[11:28:46.324708] [W] [thread 135089] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[32m[11:28:46.324733] [I] [thread 135088] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(0)[m
[36m[11:28:46.324862] [D] [thread 135088] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::33::0::0(threadId=2) but there is still some active subpartition: 0[m
[36m[11:28:46.327599] [D] [thread 135089] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): EndOfStream received for channel [m
[36m[11:28:46.327712] [D] [thread 135089] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::39::0::0(threadId=1)[m
[32m[11:28:46.327814] [I] [thread 135089] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(3)[m
[36m[11:28:46.327848] [D] [thread 135088] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): EndOfStream received for channel [m
[36m[11:28:46.327893] [D] [thread 135089] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::39::0::0(threadId=1) but there is still some active subpartition: 3[m
[36m[11:28:46.327932] [D] [thread 135088] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::39::0::0(threadId=0)[m
[36m[11:28:46.327990] [D] [thread 135089] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): EndOfStream received for channel [m
[32m[11:28:46.328017] [I] [thread 135088] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(2)[m
[36m[11:28:46.328056] [D] [thread 135089] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::39::0::0(threadId=2)[m
[36m[11:28:46.328110] [D] [thread 135088] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::39::0::0(threadId=0) but there is still some active subpartition: 2[m
[32m[11:28:46.328154] [I] [thread 135089] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(1)[m
[36m[11:28:46.328178] [D] [thread 135088] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): EndOfStream received for channel [m
[36m[11:28:46.328208] [D] [thread 135089] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::39::0::0, counter is at 1.[m
[36m[11:28:46.328245] [D] [thread 135088] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::39::0::0(threadId=3)[m
[36m[11:28:46.328287] [D] [thread 135089] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[32m[11:28:46.328379] [I] [thread 135088] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(0)[m
[33m[1m[11:28:46.328392] [W] [thread 135089] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[11:28:46.328477] [D] [thread 135088] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::39::0::0(threadId=3) but there is still some active subpartition: 0[m
[36m[11:28:46.543850] [D] [thread 135089] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): EndOfStream received for channel [m
[36m[11:28:46.544003] [D] [thread 135088] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): EndOfStream received for channel [m
[36m[11:28:46.544019] [D] [thread 135089] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::45::0::0(threadId=0)[m
[36m[11:28:46.544080] [D] [thread 135088] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::45::0::0(threadId=1)[m
[32m[11:28:46.544131] [I] [thread 135089] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(3)[m
[36m[11:28:46.544218] [D] [thread 135089] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::45::0::0(threadId=0) but there is still some active subpartition: 3[m
[32m[11:28:46.544271] [I] [thread 135088] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(2)[m
[36m[11:28:46.544284] [D] [thread 135089] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): EndOfStream received for channel [m
[36m[11:28:46.544400] [D] [thread 135088] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::45::0::0(threadId=1) but there is still some active subpartition: 2[m
[36m[11:28:46.544447] [D] [thread 135089] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::45::0::0(threadId=3)[m
[32m[11:28:46.544526] [I] [thread 135089] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(1)[m
[36m[11:28:46.544572] [D] [thread 135089] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::45::0::0, counter is at 1.[m
[36m[11:28:46.544645] [D] [thread 135089] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[11:28:46.544684] [W] [thread 135089] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[36m[11:28:46.545933] [D] [thread 135088] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): EndOfStream received for channel [m
[36m[11:28:46.546051] [D] [thread 135088] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::45::0::0(threadId=2)[m
[32m[11:28:46.546132] [I] [thread 135088] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(0)[m
[36m[11:28:46.546184] [D] [thread 135088] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::45::0::0(threadId=2) but there is still some active subpartition: 0[m
[36m[11:28:46.649933] [D] [thread 135089] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): EndOfStream received for channel [m
[36m[11:28:46.650141] [D] [thread 135089] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=0)[m
[32m[11:28:46.650284] [I] [thread 135089] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(3)[m
[36m[11:28:46.650385] [D] [thread 135089] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::51::0::0(threadId=0) but there is still some active subpartition: 3[m
[36m[11:28:46.650902] [D] [thread 135089] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): EndOfStream received for channel [m
[36m[11:28:46.651068] [D] [thread 135089] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=3)[m
[32m[11:28:46.651191] [I] [thread 135089] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(2)[m
[36m[11:28:46.651279] [D] [thread 135089] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::51::0::0(threadId=3) but there is still some active subpartition: 2[m
[36m[11:28:46.651515] [D] [thread 135088] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): EndOfStream received for channel [m
[36m[11:28:46.651609] [D] [thread 135088] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=2)[m
[32m[11:28:46.651706] [I] [thread 135088] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(1)[m
[36m[11:28:46.651759] [D] [thread 135088] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::51::0::0, counter is at 1.[m
[36m[11:28:46.651885] [D] [thread 135088] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[11:28:46.651933] [W] [thread 135088] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[11:28:46.652018] [D] [thread 135088] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39645): EndOfStream received for channel [m
[36m[11:28:46.652096] [D] [thread 135088] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=1)[m
[32m[11:28:46.652184] [I] [thread 135088] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(0)[m
[36m[11:28:46.652266] [D] [thread 135088] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::51::0::0(threadId=1) but there is still some active subpartition: 0[m
[36m[11:28:46.659032] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:28:46.824947] [E] [thread 135099] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:28:46.826112] [W] [thread 135099] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:44835 went dead so we remove it[m
[32m[11:28:46.826277] [I] [thread 135099] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[11:28:46.826305] [I] [thread 135099] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:28:46.826336] [I] [thread 135099] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[11:28:46.826357] [I] [thread 135099] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:28:46.826372] [I] [thread 135099] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:28:46.826382] [I] [thread 135099] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[11:28:46.826428] [D] [thread 135099] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[11:28:46.832361] [E] [thread 135099] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: Socket closed[m
[33m[1m[11:28:46.833255] [W] [thread 135099] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34183 went dead so we remove it[m
[32m[11:28:46.833399] [I] [thread 135099] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[32m[11:28:46.833427] [I] [thread 135099] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:28:46.833451] [I] [thread 135099] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[11:28:46.833459] [I] [thread 135099] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:28:46.833491] [I] [thread 135099] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:28:46.833504] [I] [thread 135099] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[11:28:46.833530] [D] [thread 135099] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[11:28:46.880102] [E] [thread 135686] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 2 Reason for failure: onFatalException: exception=[Failed assertion on metadata.count() == 0 error message: PartitionManager: Consumer Partition 1::18::0::0 is still alive: 4:: callstack:
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaabe72326f, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffffb00d8d4f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaabe723c27, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb9fb741f, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb9dd0053, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffb21746c7, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffffb07ecb17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffb2186ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffb2187c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaabe72326f, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffffb00d8d4f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaabe723c27, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb9fb741f, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb9dd0053, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffb21746c7, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffffb07ecb17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffb2186ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffb2187c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[1m[41m[11:28:46.921263] [C] [thread 135079] [RequestProcessorService.cpp:236] [start] QueryProcessingService: Received unexpected exception while scheduling the queryIdAndCatalogEntryMapping: [m
[32m[11:28:46.921351] [I] [thread 135079] [RequestProcessorService.cpp:255] [shutDown] Request Processor Service is shutting down! No further requests can be processed![m
[32m[11:28:46.921418] [I] [thread 135079] [RequestQueue.cpp:63] [insertPoisonPill] QueryRequestQueue: Shutdown is called. Inserting Poison pill in the query request queue.[m
[33m[1m[11:28:46.921496] [W] [thread 135079] [RequestProcessorService.cpp:240] [start] QueryProcessingService: Terminated[m
[32m[11:28:46.921507] [I] [thread 135079] [RequestProcessorService.cpp:255] [shutDown] Request Processor Service is shutting down! No further requests can be processed![m
[33m[1m[11:28:46.921515] [W] [thread 135079] [NesCoordinator.cpp:171] [operator()] NesCoordinator: finished queryRequestProcessor[m
[36m[11:28:47.660312] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:28:47.969283] [E] [thread 135099] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:28:47.970300] [W] [thread 135099] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.12:41303 went dead so we remove it[m
[32m[11:28:47.970445] [I] [thread 135099] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[32m[11:28:47.970471] [I] [thread 135099] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:28:47.970492] [I] [thread 135099] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[11:28:47.970500] [I] [thread 135099] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:28:47.970517] [I] [thread 135099] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:28:47.970525] [I] [thread 135099] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[11:28:47.970547] [D] [thread 135099] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[11:28:47.975873] [E] [thread 135099] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:28:47.976934] [W] [thread 135099] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:44835 went dead so we remove it[m
[32m[11:28:47.977083] [I] [thread 135099] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[33m[1m[11:28:47.977113] [W] [thread 135099] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[31m[1m[11:28:47.982415] [E] [thread 135099] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:28:47.983454] [W] [thread 135099] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34183 went dead so we remove it[m
[32m[11:28:47.983607] [I] [thread 135099] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[33m[1m[11:28:47.983639] [W] [thread 135099] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[31m[1m[11:28:48.002536] [E] [thread 135099] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:28:48.003707] [W] [thread 135099] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.33:45805 went dead so we remove it[m
[32m[11:28:48.003861] [I] [thread 135099] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=2][m
[32m[11:28:48.003889] [I] [thread 135099] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:28:48.003900] [I] [thread 135099] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[11:28:48.003925] [D] [thread 135099] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[11:28:48.661716] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:28:49.108949] [E] [thread 135099] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:28:49.109951] [W] [thread 135099] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.12:41303 went dead so we remove it[m
[32m[11:28:49.110099] [I] [thread 135099] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[33m[1m[11:28:49.110128] [W] [thread 135099] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[11:28:49.115296] [E] [thread 135099] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:28:49.116290] [W] [thread 135099] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:44835 went dead so we remove it[m
[32m[11:28:49.116485] [I] [thread 135099] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[33m[1m[11:28:49.116516] [W] [thread 135099] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[31m[1m[11:28:49.121748] [E] [thread 135099] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:28:49.122854] [W] [thread 135099] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34183 went dead so we remove it[m
[32m[11:28:49.123004] [I] [thread 135099] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[33m[1m[11:28:49.123037] [W] [thread 135099] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[31m[1m[11:28:49.140946] [E] [thread 135099] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:28:49.142014] [W] [thread 135099] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.33:45805 went dead so we remove it[m
[32m[11:28:49.142172] [I] [thread 135099] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=2][m
[33m[1m[11:28:49.142202] [W] [thread 135099] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 6 doesn't exists in the system.[m
[31m[1m[11:28:49.148028] [E] [thread 135099] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:28:49.149164] [W] [thread 135099] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.34:43563 went dead so we remove it[m
[32m[11:28:49.149324] [I] [thread 135099] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=2][m
[32m[11:28:49.149353] [I] [thread 135099] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:28:49.149365] [I] [thread 135099] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[11:28:49.149390] [D] [thread 135099] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[11:28:49.155644] [E] [thread 135099] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:28:49.156709] [W] [thread 135099] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.35:44745 went dead so we remove it[m
[32m[11:28:49.156854] [I] [thread 135099] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=2][m
[32m[11:28:49.156881] [I] [thread 135099] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:28:49.156891] [I] [thread 135099] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[11:28:49.156914] [D] [thread 135099] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[11:28:49.162358] [E] [thread 135099] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:28:49.163419] [W] [thread 135099] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.37:33647 went dead so we remove it[m
[32m[11:28:49.163569] [I] [thread 135099] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=2][m
[32m[11:28:49.163593] [I] [thread 135099] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:28:49.163603] [I] [thread 135099] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[11:28:49.163628] [D] [thread 135099] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[11:28:49.663029] [D] [thread 135098] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
