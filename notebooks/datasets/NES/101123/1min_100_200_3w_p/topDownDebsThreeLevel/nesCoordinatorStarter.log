
███╗░░██╗███████╗██████╗░██╗░░░██╗██╗░░░░░░█████╗░░██████╗████████╗██████╗░███████╗░█████╗░███╗░░░███╗
████╗░██║██╔════╝██╔══██╗██║░░░██║██║░░░░░██╔══██╗██╔════╝╚══██╔══╝██╔══██╗██╔════╝██╔══██╗████╗░████║
██╔██╗██║█████╗░░██████╦╝██║░░░██║██║░░░░░███████║╚█████╗░░░░██║░░░██████╔╝█████╗░░███████║██╔████╔██║
██║╚████║██╔══╝░░██╔══██╗██║░░░██║██║░░░░░██╔══██║░╚═══██╗░░░██║░░░██╔══██╗██╔══╝░░██╔══██║██║╚██╔╝██║
██║░╚███║███████╗██████╦╝╚██████╔╝███████╗██║░░██║██████╔╝░░░██║░░░██║░░██║███████╗██║░░██║██║░╚═╝░██║
╚═╝░░╚══╝╚══════╝╚═════╝░░╚═════╝░╚══════╝╚═╝░░╚═╝╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝╚══════╝╚═╝░░╚═╝╚═╝░░░░░╚═╝

▒█▀▀█ █▀▀█ █▀▀█ █▀▀█ █▀▀▄ ░▀░ █▀▀▄ █▀▀█ ▀▀█▀▀ █▀▀█ █▀▀█ 
▒█░░░ █░░█ █░░█ █▄▄▀ █░░█ ▀█▀ █░░█ █▄▄█ ░░█░░ █░░█ █▄▄▀ 
▒█▄▄█ ▀▀▀▀ ▀▀▀▀ ▀░▀▀ ▀▀▀░ ▀▀▀ ▀░░▀ ▀░░▀ ░░▀░░ ▀▀▀▀ ▀░▀▀ v0.5.215-SNAPSHOT
[32m[10:19:42.064864] [I] [thread 132305] [nesCoordinatorStarter.cpp:48] [main] start coordinator with Name: restIp
Description: NES ip of the REST server.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: coordinatorIp
Description: RPC IP address of NES Coordinator.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the Coordinator
Value: 4000
Default Value: 4000

Name: restPort
Description: Port exposed for rest endpoints
Value: 8081
Default Value: 8081

Name: dataPort
Description: Data server port of the Coordinator
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_DEBUG
Default Value: LOG_INFO

Name: enableQueryReconfiguration
Description: Enable reconfiguration of running query plans. (Default: false)
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 

Name: workerId
Description: Worker id.
Value: 0
Default Value: 0

Name: localWorkerIp
Description: Worker IP.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: coordinatorIp
Description: Server IP of the NES Coordinator to which the NES Worker should connect.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the NES Worker.
Value: 0
Default Value: 0

Name: dataPort
Description: Data port of the NES Worker.
Value: 0
Default Value: 0

Name: coordinatorPort
Description: RPC server Port of the NES Coordinator to which the NES Worker should connect. Needs to be set and needs to be the same as rpcPort in Coordinator.
Value: 4000
Default Value: 4000

Name: numberOfSlots
Description: Number of computing slots for the NES Worker.
Value: 65535
Default Value: 65535

Name: numWorkerThreads
Description: Number of worker threads.
Value: 4
Default Value: 1

Name: numberOfBuffersInGlobalBufferManager
Description: Number buffers in global buffer pool.
Value: 1024
Default Value: 1024

Name: numberOfBuffersPerWorker
Description: Number buffers in task local buffer pool.
Value: 128
Default Value: 128

Name: numberOfBuffersInSourceLocalBufferPool
Description: Number buffers in source local buffer pool.
Value: 64
Default Value: 64

Name: bufferSizeInBytes
Description: BufferSizeInBytes.
Value: 32000
Default Value: 4096

Name: parentId
Description: Parent ID of this node.
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_INFO
Default Value: LOG_INFO

Name: sourcePinList
Description: comma separated list of where to map the sources
Value: 
Default Value: 

Name: workerPinList
Description: comma separated list of where to map the worker
Value: 
Default Value: 

Name: queuePinList
Description: comma separated list of where to map the worker on the queue
Value: 
Default Value: 

Name: numaAwareness
Description: Enable Numa-Aware execution
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: monitoringWaitTime
Description: Sampling period of metrics (ms).
Value: 1000
Default Value: 1000

Name: queryCompilerType
Description: Indicates the type for the query compiler [DEFAULT_QUERY_COMPILER|NAUTILUS_QUERY_COMPILER].
Value: NAUTILUS_QUERY_COMPILER
Default Value: DEFAULT_QUERY_COMPILER

Name: compilationStrategy
Description: Indicates the optimization strategy for the query compiler [FAST|DEBUG|OPTIMIZE|PROXY_INLINING].
Value: OPTIMIZE
Default Value: OPTIMIZE

Name: pipeliningStrategy
Description: Indicates the pipelining strategy for the query compiler [OPERATOR_FUSION|OPERATOR_AT_A_TIME].
Value: OPERATOR_FUSION
Default Value: OPERATOR_FUSION

Name: queryCompilerNautilusBackendConfig
Description: Indicates the nautilus backend for the nautilus query compiler [MLIR_COMPILER|INTERPRETER|BC_INTERPRETER|FLOUNDER_COMPILER].
Value: MLIR_COMPILER
Default Value: MLIR_COMPILER

Name: outputBufferOptimizationLevel
Description: Indicates the OutputBufferAllocationStrategy [ALL|NO|ONLY_INPLACE_OPERATIONS_NO_FALLBACK,|REUSE_INPUT_BUFFER_AND_OMIT_OVERFLOW_CHECK_NO_FALLBACK,|REUSE_INPUT_BUFFER_NO_FALLBACK|OMIT_OVERFLOW_CHECK_NO_FALLBACK]. 
Value: ALL
Default Value: ALL

Name: windowingStrategy
Description: Indicates the windowingStrategy [LEGACY|SLICING|BUCKETING]. 
Value: LEGACY
Default Value: LEGACY

Name: useCompilationCache
Description: Enable use compilation caching
Value: 0
Default Value: 0

Name: numberOfPartitions
Description: Partitions in the hash table
Value: 1
Default Value: 1

Name: pageSize
Description: Page size of hash table
Value: 131072
Default Value: 131072

Name: preAllocPageCnt
Description: Page count of pre allocated pages in each bucket hash table
Value: 1
Default Value: 1

Name: cudaSdkPath
Description: Path to CUDA SDK.
Value: /usr/local/cuda
Default Value: /usr/local/cuda

Name: maxHashTableSize
Description: Maximum size of hash table
Value: 2097152
Default Value: 2097152

Name: joinStrategy
Description: Indicates the windowingStrategy[HASH_JOIN_LOCAL|HASH_JOIN_GLOBAL_LOCKING|HASH_JOIN_GLOBAL_LOCK_FREE|NESTED_LOOP_JOIN]. 
Value: NESTED_LOOP_JOIN
Default Value: NESTED_LOOP_JOIN


Name: physicalSources
Description: Physical sources


Name: nodeSpatialType
Description: specifies if the worker has no known location or if it is a fixed location node or mobile node
Value: NO_LOCATION
Default Value: NO_LOCATION

Name: locationBufferSize
Description: The amount of past locations to be recorded in order to predict the future trajectory
Value: 30
Default Value: 30

Name: locationBufferSaveRate
Description: Determines after how many location updates a new location will be inserted in the location buffer
Value: 4
Default Value: 4

Name: pathDistanceDelta
Description: when deviating further than delta meters from the current predicted path, an update of the prediction will be triggered
Value: 20
Default Value: 20

Name: nodeInfoDownloadRadius
Description: The radius in meters in which nodes will be downloaded
Value: 10000
Default Value: 10000

Name: nodeIndexUpdateThreshold
Description: Trigger download of new node info when the device is less than threshold away from the boundary of the area covered by the current info
Value: 2000
Default Value: 2000

Name: defaultCoverageRadius
Description: The coverage in meters each field node is assumed to have
Value: 1000
Default Value: 1000

Name: pathPredictionLength
Description: The Length of the predicted path to be computed
Value: 10000
Default Value: 10000

Name: speedDifferenceThresholdFactor
Description: The factor by which the speed needs to change to trigger a recalculation of reconnect predictions
Value: 1e-05
Default Value: 1e-05

Name: sendDevicePositionUpdateThreshold
Description: The distance in meters after which the device will report it's new position in meters
Value: 100
Default Value: 100

Name: pushPositionUpdates
Description: determines if position updates should be sent to the coordinator
Value: 1
Default Value: 1

Name: mobilityHandlerUpdateInterval
Description: the time which the thread running at the worker mobility handler will sleep after each iteration
Value: 10000
Default Value: 10000

Name: locationProviderType
Description: the kind of interface which the  mobile worker gets its geolocation info from
Value: BASE
Default Value: BASE

Name: locationProviderConfig
Description: the configuration data for the location interface
Value: 
Default Value: 

Name: locationProviderSimulatedStartTime
Description: The start time to be simulated if device movement is simulated
Value: 0
Default Value: 0


Name: numberOfQueues
Description: Number of processing queues.
Value: 1
Default Value: 1

Name: numberOfThreadsPerQueue
Description: Number of threads per processing queue.
Value: 0
Default Value: 0

Name: numberOfBuffersPerEpoch
Description: Number of tuple buffers allowed in one epoch.
Value: 100
Default Value: 100

Name: queryManagerMode
Description: Which mode the query manager is running in. (Dynamic, Static, NumaAware, Invalid)
Value: Dynamic
Default Value: Dynamic

Name: enableSourceSharing
Description: Enable source sharing
Value: 0
Default Value: 0

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 


Name: workerConfigPath
Description: Path to a configuration file for the internal worker.
Value: 
Default Value: 

Name: queryBatchSize
Description: The number of queryIdAndCatalogEntryMapping to be processed together
Value: 1
Default Value: 1

Name: queryMergerRule
Description: The rule to be used for performing query merging
Value: DefaultQueryMergerRule
Default Value: DefaultQueryMergerRule

Name: memoryLayoutPolicy
Description: selects the memory layout selection policy can be [FORCE_ROW_LAYOUT|FORCE_COLUMN_LAYOUT]
Value: FORCE_ROW_LAYOUT
Default Value: FORCE_ROW_LAYOUT

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: performDistributedWindowOptimization
Description: Enables the distribution of window aggregations.
Value: 1
Default Value: 1

Name: distributedWindowChildThreshold
Description: Threshold for the distribution of window aggregations.
Value: 1000
Default Value: 2

Name: distributedWindowCombinerThreshold
Description: Threshold for the insertion of pre-aggregation operators.
Value: 1
Default Value: 4

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: advanceSemanticValidation
Description: Perform advance semantic validation on the incoming queryIdAndCatalogEntryMapping. (Default: false)
Value: 0
Default Value: 0

Name: enableNemoPlacement
Description: Enables NEMO distributed window rule to use central windows instead of the distributed windows. (Default: false)
Value: 1
Default Value: 0


Name: logicalSources
Description: Logical Sources

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: restServerCorsAllowedOrigin
Description: The allowed origins to be set in the header of the responses to rest requests
Value: 
Default Value: 

[m
[32m[10:19:42.065058] [I] [thread 132305] [nesCoordinatorStarter.cpp:50] [main] creating coordinator[m
[36m[10:19:42.065290] [D] [thread 132305] [NesCoordinator.cpp:81] [NesCoordinator] NesCoordinator() restIp=192.168.2.11 restPort=8081 rpcIp=192.168.2.11 rpcPort=4000[m
[36m[10:19:42.066281] [D] [thread 132305] [ExecutablePath.cpp:80] [loadRuntimePathConfig] Detected a build dir as a execution location[m
[32m[10:19:42.066620] [I] [thread 132305] [ExecutablePath.cpp:113] [loadRuntimePathConfig] RuntimePathConfig: 
clangBinaryPath: /home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16
includePaths: 
	/home/ubuntu/git/nebulastream/build/include/nebulastream
libPaths:
	/home/ubuntu/git/nebulastream/build/nes-common/
	/home/ubuntu/git/nebulastream/build/nes-runtime/
	/home/ubuntu/git/nebulastream/build/nes-core/
	/home/ubuntu/git/nebulastream/build/nes-data-types/[m
[36m[10:19:42.067391] [D] [thread 132305] [SourceCatalog.cpp:41] [SourceCatalog] SourceCatalog: construct source catalog[m
[36m[10:19:42.067471] [D] [thread 132305] [SourceCatalog.cpp:31] [addDefaultSources] Sourcecatalog addDefaultSources[m
[36m[10:19:42.068170] [D] [thread 132305] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source default_logical already exist.[m
[36m[10:19:42.068267] [D] [thread 132305] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source default_logical[m
[36m[10:19:42.068422] [D] [thread 132305] [SourceCatalog.cpp:43] [SourceCatalog] SourceCatalog: construct source catalog successfully[m
[36m[10:19:42.068795] [D] [thread 132305] [SourceCatalogService.cpp:30] [SourceCatalogService] SourceCatalogService()[m
[36m[10:19:42.068959] [D] [thread 132305] [TopologyManagerService.cpp:36] [TopologyManagerService] TopologyManagerService()[m
[36m[10:19:42.121462] [D] [thread 132305] [RequestProcessorService.cpp:62] [RequestProcessorService] QueryRequestProcessorService()[m
[36m[10:19:42.121558] [D] [thread 132305] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[10:19:42.122027] [D] [thread 132305] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[10:19:42.122424] [D] [thread 132305] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[10:19:42.122759] [D] [thread 132305] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[10:19:42.123069] [D] [thread 132305] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[10:19:42.123253] [D] [thread 132305] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[10:19:42.123649] [D] [thread 132305] [BinaryOperatorSortRule.cpp:28] [BinaryOperatorSortRule] BinaryOperatorSortRule()[m
[36m[10:19:42.124849] [D] [thread 132305] [DistributedWindowRule.cpp:36] [DistributedWindowRule] Create DistributedWindowRule with distributedWindowChildThreshold: 1000 distributedWindowCombinerThreshold: 1[m
[36m[10:19:42.124923] [D] [thread 132305] [NemoWindowPinningRule.cpp:45] [NemoWindowPinningRule] Create NemoWindowPinningRule with distributedWindowChildThreshold: 1000 distributedWindowCombinerThreshold: 1[m
[36m[10:19:42.125249] [D] [thread 132305] [SignatureInferencePhase.cpp:26] [SignatureInferencePhase] SignatureInferencePhase()[m
[36m[10:19:42.125553] [D] [thread 132305] [QueryPlacementPhase.cpp:39] [QueryPlacementPhase] QueryPlacementPhase()[m
[36m[10:19:42.125856] [D] [thread 132305] [QueryUndeploymentPhase.cpp:35] [QueryUndeploymentPhase] QueryUndeploymentPhase()[m
[36m[10:19:42.126846] [D] [thread 132305] [QueryService.cpp:56] [QueryService] QueryService()[m
[36m[10:19:42.127368] [D] [thread 132305] [MonitoringService.cpp:37] [MonitoringService] MonitoringService: Initializing with monitoring= false[m
[36m[10:19:42.127566] [D] [thread 132305] [LatestEntriesMetricStore.cpp:23] [LatestEntriesMetricStore] LatestEntriesMetricStore: Init NewestMetricStore[m
[36m[10:19:42.127815] [D] [thread 132305] [MonitoringManager.cpp:70] [MonitoringManager] MonitoringManager: Init with monitoring= false , storage= NewestEntry [m
[33m[1m[10:19:42.127932] [W] [thread 132305] [MonitoringManager.cpp:194] [registerLogicalMonitoringStreams] MonitoringManager: Monitoring is disabled, registering of logical monitoring streams not possible.[m
[32m[10:19:42.127973] [I] [thread 132305] [nesCoordinatorStarter.cpp:53] [main] Starting Coordinator[m
[36m[10:19:42.127985] [D] [thread 132305] [NesCoordinator.cpp:159] [startCoordinator] NesCoordinator start[m
[36m[10:19:42.128402] [D] [thread 132305] [NesCoordinator.cpp:174] [startCoordinator] NesCoordinator: startCoordinatorRPCServer: Building GRPC Server[m
[32m[10:19:42.128420] [I] [thread 132313] [NesCoordinator.cpp:169] [operator()] NesCoordinator: started queryRequestProcessor[m
[36m[10:19:42.128465] [D] [thread 132313] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[10:19:42.128869] [D] [thread 132314] [NesCoordinator.cpp:180] [operator()] NesCoordinator: buildAndStartGRPCServer[m
[36m[10:19:42.135955] [D] [thread 132314] [NesCoordinator.cpp:354] [buildAndStartGRPCServer] NesCoordinator: buildAndStartGRPCServerServer listening on address=192.168.2.11:4000[m
[36m[10:19:42.135976] [D] [thread 132305] [NesCoordinator.cpp:185] [startCoordinator] NesCoordinator:buildAndStartGRPCServer: ready[m
[36m[10:19:42.136037] [D] [thread 132305] [NesCoordinator.cpp:187] [startCoordinator] NesCoordinator: Register Logical sources[m
[36m[10:19:42.136165] [D] [thread 132305] [NesCoordinator.cpp:192] [startCoordinator] NesCoordinator: Finished Registering Logical source[m
[36m[10:19:42.136177] [D] [thread 132305] [NesCoordinator.cpp:195] [startCoordinator] NesCoordinator::startCoordinator: start nes worker[m
[36m[10:19:42.136847] [D] [thread 132305] [NesWorker.cpp:65] [NesWorker] NesWorker: constructed[m
[36m[10:19:42.137034] [D] [thread 132305] [NesWorker.cpp:138] [start] NesWorker: start with blocking false workerId=0 coordinatorIp=192.168.2.11 coordinatorPort=4000 localWorkerIp=192.168.2.11 localWorkerRpcPort=0 localWorkerZmqPort=0 windowStrategy=LEGACY[m
[36m[10:19:42.137066] [D] [thread 132305] [NesWorker.cpp:140] [start] NesWorker::start: start Runtime[m
[36m[10:19:42.137108] [D] [thread 132305] [NesWorker.cpp:147] [start] NesWorker: MonitoringAgent configured with monitoring=false[m
[36m[10:19:42.137409] [D] [thread 132305] [MonitoringPlan.cpp:21] [MonitoringPlan] MonitoringPlan: Init with metrics of size 4[m
[36m[10:19:42.137478] [D] [thread 132305] [MonitoringCatalog.cpp:36] [defaultCatalog] MonitoringCatalog: Init default catalog[m
[32m[10:19:42.137591] [I] [thread 132305] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[10:19:42.138295] [I] [thread 132305] [CpuCollector.cpp:29] [CpuCollector] CpuCollector: Init CpuCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) coreNum:INTEGER(64 bits) user:INTEGER(64 bits) nice:INTEGER(64 bits) system:INTEGER(64 bits) idle:INTEGER(64 bits) iowait:INTEGER(64 bits) irq:INTEGER(64 bits) softirq:INTEGER(64 bits) steal:INTEGER(64 bits) guest:INTEGER(64 bits) guestnice:INTEGER(64 bits)[m
[32m[10:19:42.138374] [I] [thread 132305] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[10:19:42.138651] [I] [thread 132305] [DiskCollector.cpp:30] [DiskCollector] DiskCollector: Init DiskCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) F_BSIZE:INTEGER(64 bits) F_FRSIZE:INTEGER(64 bits) F_BLOCKS:INTEGER(64 bits) F_BFREE:INTEGER(64 bits) F_BAVAIL:INTEGER(64 bits)[m
[32m[10:19:42.138709] [I] [thread 132305] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[10:19:42.139265] [I] [thread 132305] [MemoryCollector.cpp:29] [MemoryCollector] MemoryCollector: Init MemoryCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) TOTAL_RAM:INTEGER(64 bits) TOTAL_SWAP:INTEGER(64 bits) FREE_RAM:INTEGER(64 bits) SHARED_RAM:INTEGER(64 bits) BUFFER_RAM:INTEGER(64 bits) FREE_SWAP:INTEGER(64 bits) TOTAL_HIGH:INTEGER(64 bits) FREE_HIGH:INTEGER(64 bits) PROCS:INTEGER(64 bits) MEM_UNIT:INTEGER(64 bits) LOADS_1MIN:INTEGER(64 bits) LOADS_5MIN:INTEGER(64 bits) LOADS_15MIN:INTEGER(64 bits)[m
[32m[10:19:42.139324] [I] [thread 132305] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[10:19:42.140248] [I] [thread 132305] [NetworkCollector.cpp:30] [NetworkCollector] NetworkCollector: Init NetworkCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)[m
[36m[10:19:42.140665] [D] [thread 132305] [MonitoringCatalog.cpp:28] [MonitoringCatalog] MonitoringCatalog: Init with collector map of size 4[m
[36m[10:19:42.140928] [D] [thread 132305] [MonitoringAgent.cpp:43] [MonitoringAgent] MonitoringAgent: Init with monitoring plan MonitoringPlan:disk(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True); and enabled=false[m
[33m[1m[10:19:42.141016] [W] [thread 132305] [MonitoringAgent.cpp:117] [addMonitoringStreams] MonitoringAgent: Monitoring is disabled, registering of physical monitoring streams not possible.[m
[36m[10:19:42.153272] [D] [thread 132305] [BufferManager.cpp:107] [initialize] NES memory allocation requires 32768000 out of 3975450624 available bytes[m
[36m[10:19:42.165061] [D] [thread 132305] [BufferManager.cpp:160] [initialize] BufferManager configuration bufferSize=32000 numOfBuffers=1024[m
[36m[10:19:42.214618] [D] [thread 132305] [QueryManager.cpp:78] [DynamicQueryManager] QueryManger: use dynamic mode with numThreads= 4[m
[33m[1m[10:19:42.215051] [W] [thread 132305] [NodeEngineBuilder.cpp:291] [createQueryCompilationOptions] The LEGACY window strategy is not supported by Nautilus. Switch to SLICING![m
[36m[10:19:42.215224] [D] [thread 132305] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[10:19:42.215328] [D] [thread 132305] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[10:19:42.215420] [D] [thread 132305] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[10:19:42.215482] [D] [thread 132305] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[10:19:42.215696] [D] [thread 132305] [NodeEngineBuilder.cpp:238] [build] Creating default OpenCLManager[m
[36m[10:19:42.215801] [D] [thread 132305] [OpenCLManager.cpp:230] [OpenCLManager] OpenCL support was disabled at build time[m
[36m[10:19:42.216077] [D] [thread 132305] [ExchangeProtocol.cpp:30] [ExchangeProtocol] ExchangeProtocol: Initializing ExchangeProtocol()[m
[36m[10:19:42.216285] [D] [thread 132305] [ZmqServer.cpp:69] [ZmqServer] ZmqServer(192.168.2.11:0) Creating ZmqServer()[m
[36m[10:19:42.216401] [D] [thread 132305] [ZmqServer.cpp:78] [start] ZmqServer(192.168.2.11:0): Starting server..[m
[36m[10:19:42.218846] [D] [thread 132320] [ZmqServer.cpp:156] [routerLoop] ZmqServer(192.168.2.11:0):  Trying to bind on tcp://192.168.2.11:0[m
[36m[10:19:42.220491] [D] [thread 132320] [ZmqServer.cpp:161] [routerLoop] ZmqServer(192.168.2.11:0):  Created socket on 192.168.2.11: 0[m
[36m[10:19:42.220641] [D] [thread 132320] [ZmqServer.cpp:176] [routerLoop] ZmqServer: Created socket on 192.168.2.11: 41695[m
[36m[10:19:42.221893] [D] [thread 132323] [ZmqServer.cpp:254] [messageHandlerEventLoop] Created Zmq Handler Thread #0 on 192.168.2.11: 41695[m
[36m[10:19:42.221893] [D] [thread 132324] [ZmqServer.cpp:254] [messageHandlerEventLoop] Created Zmq Handler Thread #1 on 192.168.2.11: 41695[m
[32m[10:19:42.222041] [I] [thread 132305] [NetworkManager.cpp:36] [NetworkManager] NetworkManager: Server started successfully on tcp://192.168.2.11:41695[m
[36m[10:19:42.222144] [D] [thread 132305] [QueryManager.cpp:140] [startThreadPool] startThreadPool: setup thread pool for nodeEngineId= 1700003056  with numThreads= 4[m
[36m[10:19:42.222394] [D] [thread 132305] [ThreadPool.cpp:108] [start] Threadpool: Spawning 4 threads[m
[36m[10:19:42.223528] [D] [thread 132305] [ThreadPool.cpp:152] [start] Threadpool: start return from start[m
[36m[10:19:42.223594] [D] [thread 132305] [NodeEngine.cpp:78] [NodeEngine] NodeEngine(): thread pool successfully started[m
[36m[10:19:42.223737] [D] [thread 132305] [NesWorker.cpp:156] [start] NesWorker: Node engine started successfully[m
[36m[10:19:42.223773] [D] [thread 132305] [NesWorker.cpp:164] [start] NesWorker: request startWorkerRPCServer for accepting messages for address=192.168.2.11:0: 0[m
[36m[10:19:42.224128] [D] [thread 132327] [ThreadPool.cpp:147] [operator()] worker 2 with workerId 0 pins to queue 0[m
[36m[10:19:42.224175] [D] [thread 132328] [ThreadPool.cpp:147] [operator()] worker 3 with workerId 1 pins to queue 0[m
[36m[10:19:42.224251] [D] [thread 132326] [ThreadPool.cpp:147] [operator()] worker 1 with workerId 2 pins to queue 0[m
[36m[10:19:42.224435] [D] [thread 132325] [ThreadPool.cpp:147] [operator()] worker 0 with workerId 3 pins to queue 0[m
[36m[10:19:42.224446] [D] [thread 132326] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=1024 requested buffers=128[m
[36m[10:19:42.224829] [D] [thread 132329] [NesWorker.cpp:176] [operator()] NesWorker: buildAndStartGRPCServer[m
[36m[10:19:42.225349] [D] [thread 132329] [WorkerRPCServer.cpp:38] [WorkerRPCServer] WorkerRPCServer::WorkerRPCServer()[m
[36m[10:19:42.225364] [D] [thread 132327] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=896 requested buffers=128[m
[36m[10:19:42.226060] [D] [thread 132328] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=768 requested buffers=128[m
[36m[10:19:42.226711] [D] [thread 132325] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=640 requested buffers=128[m
[36m[10:19:42.228752] [D] [thread 132329] [NesWorker.cpp:117] [buildAndStartGRPCServer] NesWorker: buildAndStartGRPCServer Server listening on address 192.168.2.11:0: 38421[m
[36m[10:19:42.228788] [D] [thread 132305] [NesWorker.cpp:184] [start] NesWorker: startWorkerRPCServer ready for accepting messages for address=192.168.2.11:38421: 38421[m
[36m[10:19:42.228814] [D] [thread 132305] [NesWorker.cpp:187] [start] NesWorker: start with connect[m
[36m[10:19:42.228842] [D] [thread 132305] [NesWorker.cpp:306] [connect] NesWorker::connect() Registering worker with coordinator at 192.168.2.11:4000[m
[36m[10:19:42.228953] [D] [thread 132305] [CoordinatorRPCClient.cpp:152] [CoordinatorRPCClient] CoordinatorRPCClient(): creating channels to address =192.168.2.11:4000[m
[36m[10:19:42.231247] [D] [thread 132329] [CallData.cpp:36] [proceed] RequestInSyncInCreate=[m
[36m[10:19:42.231524] [D] [thread 132305] [CoordinatorRPCClient.cpp:156] [CoordinatorRPCClient] CoordinatorRPCClient::connecting: channel successfully created[m
[33m[1m[10:19:42.232547] [W] [thread 132305] [MonitoringAgent.cpp:96] [getRegistrationMetrics] MonitoringAgent: Metrics disabled. Return empty metric object for registration.[m
[36m[10:19:42.232704] [D] [thread 132305] [RegistrationMetrics.cpp:32] [RegistrationMetrics] RegistrationMetrics: Default ctor[m
[36m[10:19:42.234874] [D] [thread 132305] [CoordinatorRPCClient.cpp:387] [registerWorker] CoordinatorRPCClient::RegisterNodeRequest request=address: "192.168.2.11"
grpcPort: 38421
dataPort: 41695
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:19:42.247919] [D] [thread 132316] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.11"
grpcPort: 38421
dataPort: 41695
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:19:42.248222] [D] [thread 132316] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.11"
grpcPort: 38421
dataPort: 41695
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:19:42.248496] [D] [thread 132316] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[33m[1m[10:19:42.248561] [W] [thread 132316] [Topology.cpp:280] [toString] Topology: No root node found[m
[36m[10:19:42.248576] [D] [thread 132316] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:19:42.248590] [D] [thread 132316] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:19:42.248640] [D] [thread 132316] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 1 and resources 65535[m
[36m[10:19:42.249084] [D] [thread 132316] [TopologyManagerService.cpp:99] [registerWorker] TopologyManagerService::registerWorker: tree is empty so this becomes new root[m
[32m[10:19:42.249231] [I] [thread 132316] [Topology.cpp:356] [setAsRoot] Topology: Setting physical node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0] as root to the topology.[m
[36m[10:19:42.249388] [D] [thread 132316] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:19:42.249707] [D] [thread 132316] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
[m
[32m[10:19:42.249820] [I] [thread 132316] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:19:42.249858] [D] [thread 132316] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:19:42.249915] [D] [thread 132316] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:19:42.249929] [D] [thread 132316] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:19:42.249965] [D] [thread 132316] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:19:42.251377] [D] [thread 132316] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=1[m
[36m[10:19:42.253242] [D] [thread 132305] [NesWorker.cpp:334] [connect] NesWorker::connect() Worker registered successfully and got id=1[m
[36m[10:19:42.253324] [D] [thread 132305] [NesWorker.cpp:341] [connect] NesWorker::connect() Persisting workerId=1 in yaml file for the first time.[m
[36m[10:19:42.253427] [D] [thread 132305] [NesWorker.cpp:347] [connect] NesWorker::connect() Persisted workerId=1 successfully in yaml file.[m
[36m[10:19:42.253441] [D] [thread 132305] [NesWorker.cpp:362] [connect] NesWorker::registerWorker rpc register success with id 1[m
[36m[10:19:42.286193] [D] [thread 132305] [NesWorker.cpp:368] [connect] NesWorker start health check[m
[36m[10:19:42.286323] [D] [thread 132305] [WorkerHealthCheckService.cpp:39] [startHealthCheck] WorkerHealthCheckService::startHealthCheck worker id= 1[m
[36m[10:19:42.286337] [D] [thread 132305] [WorkerHealthCheckService.cpp:41] [startHealthCheck] start health checking on worker[m
[36m[10:19:42.286854] [D] [thread 132305] [NesWorker.cpp:247] [start] NesWorker: started, return[m
[36m[10:19:42.287103] [D] [thread 132305] [NesCoordinator.cpp:210] [startCoordinator] NesCoordinator starting rest server[m
[36m[10:19:42.287748] [D] [thread 132305] [NesCoordinator.cpp:239] [startCoordinator] NesCoordinator::startCoordinatorRESTServer: ready[m
[32m[10:19:42.287835] [I] [thread 132333] [RestServer.cpp:64] [start] Starting Oatpp Server on 192.168.2.11:8081[m
[32m[10:19:42.304401] [I] [thread 132333] [RestServer.cpp:166] [run] NebulaStream REST Server listening on port 8081[m
[36m[10:19:42.304536] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:42.318361] [D] [thread 132305] [NesCoordinator.cpp:244] [startCoordinator] NesCoordinator start health check[m
[36m[10:19:42.318511] [D] [thread 132305] [CoordinatortHealthCheckService.cpp:34] [startHealthCheck] CoordinatorHealthCheckService::startHealthCheck[m
[36m[10:19:42.318525] [D] [thread 132305] [CoordinatortHealthCheckService.cpp:36] [startHealthCheck] start health checking on coordinator[m
[36m[10:19:42.318959] [D] [thread 132305] [NesCoordinator.cpp:248] [startCoordinator] NesCoordinator started, join now and waiting for work[m
[36m[10:19:43.305814] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:44.307138] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:45.029731] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:45.031323] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:45.033377] [D] [thread 132336] [SourceCatalogController.hpp:125] [addLogicalSource] SourceCatalogController: addLogicalSource: REST received request to add new Logical Source.[m
[36m[10:19:45.036380] [D] [thread 132336] [SourceCatalogController.hpp:144] [addLogicalSource] SourceCatalogController: addLogicalSource: Try to add new Logical Source debs and Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));[m
[36m[10:19:45.036522] [D] [thread 132336] [SourceCatalogService.cpp:92] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source=debs schema= Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));[m
[36m[10:19:45.036649] [D] [thread 132336] [QueryParsingService.cpp:53] [createSchemaFromCode] QueryParsingService : generated code= #include <API/Schema.hpp>
#include <Common/DataTypes/DataTypeFactory.hpp>
namespace NES{
Schema createSchema(){
return Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));;}
}
[m
[36m[10:19:45.038974] [D] [thread 132337] [File.cpp:27] [createFile] Create File to file:///tmp/query_13-11-2023_10-19-45_1966616.cpp[m
[36m[10:19:45.040138] [D] [thread 132337] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[10:19:45.040983] [D] [thread 132337] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DFMT_HEADER_ONLY -o/tmp/query_13-11-2023_10-19-45_1966616.so -DNES_COMPILE_TIME_LOG_LEVEL=6 -I/home/ubuntu/git/nebulastream/build/include/nebulastream -L/home/ubuntu/git/nebulastream/build/nes-core/ -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -shared -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -Wparentheses-equality -fpic -fno-trigraphs -std=c++20 -stdlib=libstdc++ /tmp/query_13-11-2023_10-19-45_1966616.cpp'[m
[36m[10:19:46.032565] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:19:46.748058] [I] [thread 132337] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 1709.284743ms[m
[36m[10:19:46.749809] [D] [thread 132336] [SourceCatalog.cpp:49] [addLogicalSource] SourceCatalog: schema successfully created[m
[36m[10:19:46.749905] [D] [thread 132336] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source debs already exist.[m
[36m[10:19:46.749948] [D] [thread 132336] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source debs[m
[36m[10:19:46.750003] [D] [thread 132336] [SourceCatalogController.hpp:146] [addLogicalSource] SourceCatalogController: addLogicalSource: Successfully added new logical Source ? true[m
[36m[10:19:47.033850] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:47.070688] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:47.071351] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:19:47.071813] [I] [thread 132342] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:19:47.073149] [I] [thread 132342] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:19:47.402199] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:47.402917] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:19:47.403368] [I] [thread 132343] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:19:47.404026] [I] [thread 132343] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:19:47.576231] [D] [thread 132316] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.12"
grpcPort: 43279
dataPort: 38829
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:19:47.576486] [D] [thread 132316] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.12"
grpcPort: 43279
dataPort: 38829
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:19:47.576539] [D] [thread 132316] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:19:47.576680] [D] [thread 132316] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:19:47.576700] [D] [thread 132316] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:19:47.576733] [D] [thread 132316] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 2 and resources 65535[m
[36m[10:19:47.576848] [D] [thread 132316] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:19:47.576897] [I] [thread 132316] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:19:47.577001] [I] [thread 132316] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:19:47.577169] [D] [thread 132316] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 2[m
[36m[10:19:47.593285] [D] [thread 132316] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:19:47.593655] [D] [thread 132316] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[10:19:47.593756] [I] [thread 132316] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[10:19:47.593782] [D] [thread 132316] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[10:19:47.593818] [D] [thread 132316] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:19:47.593828] [D] [thread 132316] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:19:47.593846] [D] [thread 132316] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:19:47.594335] [D] [thread 132316] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=2[m
[36m[10:19:48.404206] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:49.405493] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:50.406777] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:51.042375] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:51.043151] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:19:51.043934] [I] [thread 132344] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:19:51.044907] [I] [thread 132344] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:19:51.189122] [D] [thread 132316] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.30"
grpcPort: 33875
dataPort: 33039
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:19:51.189402] [D] [thread 132316] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.30"
grpcPort: 33875
dataPort: 33039
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:19:51.189478] [D] [thread 132316] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:19:51.189756] [D] [thread 132316] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:19:51.189786] [D] [thread 132316] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:19:51.189846] [D] [thread 132316] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 3 and resources 65535[m
[36m[10:19:51.190061] [D] [thread 132316] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:19:51.190149] [I] [thread 132316] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:19:51.190294] [I] [thread 132316] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:19:51.190405] [D] [thread 132316] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 3[m
[36m[10:19:51.190508] [D] [thread 132316] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:19:51.190777] [D] [thread 132316] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[10:19:51.190840] [I] [thread 132316] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[10:19:51.190870] [D] [thread 132316] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[10:19:51.190914] [D] [thread 132316] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:19:51.190938] [D] [thread 132316] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:19:51.190963] [D] [thread 132316] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:19:51.191556] [D] [thread 132316] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=3[m
[36m[10:19:52.044526] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:53.045830] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:54.047107] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:54.906127] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:54.906791] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:19:54.907438] [I] [thread 132345] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:19:54.908715] [I] [thread 132345] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:19:55.042721] [D] [thread 132331] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.31"
grpcPort: 42073
dataPort: 45699
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:19:55.042890] [D] [thread 132331] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.31"
grpcPort: 42073
dataPort: 45699
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:19:55.042938] [D] [thread 132331] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:19:55.043176] [D] [thread 132331] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:19:55.043218] [D] [thread 132331] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:19:55.043354] [D] [thread 132331] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 4 and resources 65535[m
[36m[10:19:55.043600] [D] [thread 132331] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:19:55.043713] [I] [thread 132331] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:19:55.043790] [I] [thread 132331] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:19:55.043856] [D] [thread 132331] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 4[m
[36m[10:19:55.090178] [D] [thread 132331] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:19:55.090615] [D] [thread 132331] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[10:19:55.090733] [I] [thread 132331] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[10:19:55.090763] [D] [thread 132331] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[10:19:55.090798] [D] [thread 132331] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:19:55.090809] [D] [thread 132331] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:19:55.090911] [D] [thread 132331] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:19:55.091532] [D] [thread 132331] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=4[m
[36m[10:19:55.908155] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:56.909475] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:57.910829] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:58.006857] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:19:58.007554] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:19:58.007981] [I] [thread 132346] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:19:58.009454] [I] [thread 132346] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:19:58.157649] [D] [thread 132331] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.32"
grpcPort: 33899
dataPort: 42335
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:19:58.157863] [D] [thread 132331] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.32"
grpcPort: 33899
dataPort: 42335
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:19:58.157919] [D] [thread 132331] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:19:58.158195] [D] [thread 132331] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:19:58.158308] [D] [thread 132331] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:19:58.158364] [D] [thread 132331] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 5 and resources 65535[m
[36m[10:19:58.158497] [D] [thread 132331] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:19:58.158558] [I] [thread 132331] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:19:58.158661] [I] [thread 132331] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:19:58.158730] [D] [thread 132331] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 5[m
[36m[10:19:58.158832] [D] [thread 132331] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:19:58.159145] [D] [thread 132331] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[10:19:58.159219] [I] [thread 132331] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[10:19:58.159248] [D] [thread 132331] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[10:19:58.159290] [D] [thread 132331] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:19:58.159307] [D] [thread 132331] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:19:58.159327] [D] [thread 132331] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:19:58.159841] [D] [thread 132331] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=5[m
[36m[10:19:58.195674] [D] [thread 132331] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 5
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream4"
  logicalSourceName: "debs"
}
[m
[32m[10:19:58.195810] [I] [thread 132331] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[10:19:58.195852] [D] [thread 132331] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[10:19:58.196001] [D] [thread 132331] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= test_stream4 logical source= debs[m
[36m[10:19:58.196615] [D] [thread 132331] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:19:58.196712] [D] [thread 132331] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream4[m
[36m[10:19:58.197047] [D] [thread 132331] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream4 does not exist, try to add[m
[36m[10:19:58.197168] [D] [thread 132331] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:19:58.197306] [D] [thread 132331] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[10:19:58.197376] [D] [thread 132331] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:19:58.201875] [D] [thread 132348] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 5
oldParent: 1
newParent: 2
[m
[36m[10:19:58.202028] [D] [thread 132348] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 5  parentId= 1[m
[32m[10:19:58.202065] [I] [thread 132348] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[10:19:58.202100] [D] [thread 132348] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[10:19:58.202132] [D] [thread 132348] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  5  exists[m
[32m[10:19:58.202153] [I] [thread 132348] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:19:58.202174] [D] [thread 132348] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:19:58.202199] [D] [thread 132348] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:19:58.202295] [D] [thread 132348] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:19:58.202470] [I] [thread 132348] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:19:58.202544] [D] [thread 132348] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:19:58.202574] [D] [thread 132348] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:19:58.202611] [D] [thread 132348] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 5  parentId= 2[m
[32m[10:19:58.202634] [I] [thread 132348] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[10:19:58.202658] [D] [thread 132348] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[10:19:58.202685] [D] [thread 132348] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 5 exists[m
[32m[10:19:58.202704] [I] [thread 132348] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[10:19:58.202724] [D] [thread 132348] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[10:19:58.202748] [D] [thread 132348] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[10:19:58.202875] [I] [thread 132348] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[36m[10:19:58.202938] [D] [thread 132348] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:19:58.203293] [D] [thread 132348] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:19:58.203341] [D] [thread 132348] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:19:59.008845] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:00.010165] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:00.978006] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:00.978757] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:20:00.979314] [I] [thread 132349] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:20:00.981056] [I] [thread 132349] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:20:01.125000] [D] [thread 132331] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.33"
grpcPort: 44393
dataPort: 34273
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:20:01.125255] [D] [thread 132331] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.33"
grpcPort: 44393
dataPort: 34273
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:20:01.125372] [D] [thread 132331] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:20:01.125791] [D] [thread 132331] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:20:01.125854] [D] [thread 132331] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:20:01.125931] [D] [thread 132331] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 6 and resources 65535[m
[36m[10:20:01.126067] [D] [thread 132331] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:20:01.126136] [I] [thread 132331] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:20:01.126251] [I] [thread 132331] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:20:01.126324] [D] [thread 132331] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 6[m
[36m[10:20:01.126421] [D] [thread 132331] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:20:01.126713] [D] [thread 132331] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:20:01.126764] [I] [thread 132331] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[10:20:01.126788] [D] [thread 132331] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[10:20:01.126825] [D] [thread 132331] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:20:01.126843] [D] [thread 132331] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:20:01.126864] [D] [thread 132331] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:20:01.127373] [D] [thread 132331] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=6[m
[36m[10:20:01.162896] [D] [thread 132331] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 6
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream5"
  logicalSourceName: "debs"
}
[m
[32m[10:20:01.162994] [I] [thread 132331] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[10:20:01.163027] [D] [thread 132331] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[10:20:01.163097] [D] [thread 132331] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= test_stream5 logical source= debs[m
[36m[10:20:01.163260] [D] [thread 132331] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:20:01.163296] [D] [thread 132331] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream5[m
[36m[10:20:01.163382] [D] [thread 132331] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[10:20:01.163422] [D] [thread 132331] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream5 does not exist, try to add[m
[36m[10:20:01.163444] [D] [thread 132331] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:20:01.163500] [D] [thread 132331] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[10:20:01.163520] [D] [thread 132331] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:20:01.167184] [D] [thread 132331] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 6
oldParent: 1
newParent: 2
[m
[36m[10:20:01.167290] [D] [thread 132331] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 6  parentId= 1[m
[32m[10:20:01.167320] [I] [thread 132331] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[10:20:01.167346] [D] [thread 132331] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[10:20:01.167371] [D] [thread 132331] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  6  exists[m
[32m[10:20:01.167385] [I] [thread 132331] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:20:01.167399] [D] [thread 132331] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:20:01.167415] [D] [thread 132331] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:20:01.167484] [D] [thread 132331] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:20:01.167612] [I] [thread 132331] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:20:01.167646] [D] [thread 132331] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:20:01.167667] [D] [thread 132331] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:20:01.167688] [D] [thread 132331] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 6  parentId= 2[m
[32m[10:20:01.167703] [I] [thread 132331] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[10:20:01.167719] [D] [thread 132331] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[10:20:01.167755] [D] [thread 132331] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 6 exists[m
[32m[10:20:01.167770] [I] [thread 132331] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[10:20:01.167784] [D] [thread 132331] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[10:20:01.167801] [D] [thread 132331] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[10:20:01.167903] [I] [thread 132331] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[36m[10:20:01.167953] [D] [thread 132331] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:20:01.168230] [D] [thread 132331] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:20:01.168254] [D] [thread 132331] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:20:01.980056] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:02.981388] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:03.982705] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:04.242245] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:04.242933] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:20:04.243514] [I] [thread 132351] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:20:04.245384] [I] [thread 132351] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:20:04.389878] [D] [thread 132348] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.34"
grpcPort: 35677
dataPort: 43321
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:20:04.390109] [D] [thread 132348] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.34"
grpcPort: 35677
dataPort: 43321
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:20:04.390174] [D] [thread 132348] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:20:04.390543] [D] [thread 132348] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:20:04.390594] [D] [thread 132348] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:20:04.390666] [D] [thread 132348] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 7 and resources 65535[m
[36m[10:20:04.390830] [D] [thread 132348] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:20:04.390904] [I] [thread 132348] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:20:04.391017] [I] [thread 132348] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:20:04.391089] [D] [thread 132348] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 7[m
[36m[10:20:04.391195] [D] [thread 132348] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:20:04.391569] [D] [thread 132348] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:20:04.391653] [I] [thread 132348] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[10:20:04.391686] [D] [thread 132348] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[10:20:04.391725] [D] [thread 132348] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:20:04.391744] [D] [thread 132348] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:20:04.391766] [D] [thread 132348] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:20:04.392270] [D] [thread 132348] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=7[m
[36m[10:20:04.427278] [D] [thread 132348] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 7
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream6"
  logicalSourceName: "debs"
}
[m
[32m[10:20:04.427371] [I] [thread 132348] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[10:20:04.427400] [D] [thread 132348] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[10:20:04.427465] [D] [thread 132348] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= test_stream6 logical source= debs[m
[36m[10:20:04.427622] [D] [thread 132348] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:20:04.427655] [D] [thread 132348] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream6[m
[36m[10:20:04.427729] [D] [thread 132348] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[10:20:04.427751] [D] [thread 132348] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[10:20:04.427774] [D] [thread 132348] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream6 does not exist, try to add[m
[36m[10:20:04.427794] [D] [thread 132348] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:20:04.427831] [D] [thread 132348] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[10:20:04.427848] [D] [thread 132348] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:20:04.431476] [D] [thread 132348] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 7
oldParent: 1
newParent: 3
[m
[36m[10:20:04.431573] [D] [thread 132348] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 7  parentId= 1[m
[32m[10:20:04.431597] [I] [thread 132348] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[10:20:04.431621] [D] [thread 132348] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[10:20:04.431644] [D] [thread 132348] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  7  exists[m
[32m[10:20:04.431656] [I] [thread 132348] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:20:04.431668] [D] [thread 132348] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:20:04.431684] [D] [thread 132348] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:20:04.431748] [D] [thread 132348] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:20:04.431870] [I] [thread 132348] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:20:04.431919] [D] [thread 132348] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:20:04.431939] [D] [thread 132348] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:20:04.431958] [D] [thread 132348] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 7  parentId= 3[m
[32m[10:20:04.431980] [I] [thread 132348] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[10:20:04.431998] [D] [thread 132348] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[10:20:04.432015] [D] [thread 132348] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 7 exists[m
[32m[10:20:04.432027] [I] [thread 132348] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[10:20:04.432040] [D] [thread 132348] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[10:20:04.432055] [D] [thread 132348] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[10:20:04.432215] [I] [thread 132348] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:20:04.432263] [D] [thread 132348] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:20:04.432602] [D] [thread 132348] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:20:04.432635] [D] [thread 132348] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:20:05.244216] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:06.245513] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:07.246859] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:07.402771] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:07.403244] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:20:07.403956] [I] [thread 132353] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:20:07.405949] [I] [thread 132353] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:20:07.549722] [D] [thread 132352] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.35"
grpcPort: 45919
dataPort: 45185
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:20:07.549953] [D] [thread 132352] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.35"
grpcPort: 45919
dataPort: 45185
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:20:07.550019] [D] [thread 132352] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:20:07.550473] [D] [thread 132352] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:20:07.550615] [D] [thread 132352] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:20:07.550678] [D] [thread 132352] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 8 and resources 65535[m
[36m[10:20:07.550819] [D] [thread 132352] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:20:07.550889] [I] [thread 132352] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:20:07.551001] [I] [thread 132352] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:20:07.551072] [D] [thread 132352] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 8[m
[36m[10:20:07.551158] [D] [thread 132352] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:20:07.551528] [D] [thread 132352] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:20:07.551630] [I] [thread 132352] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[10:20:07.551658] [D] [thread 132352] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[10:20:07.551697] [D] [thread 132352] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:20:07.551716] [D] [thread 132352] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:20:07.551737] [D] [thread 132352] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:20:07.552247] [D] [thread 132352] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=8[m
[36m[10:20:07.587258] [D] [thread 132350] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 8
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream7"
  logicalSourceName: "debs"
}
[m
[32m[10:20:07.587391] [I] [thread 132350] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[10:20:07.587432] [D] [thread 132350] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[10:20:07.587521] [D] [thread 132350] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= test_stream7 logical source= debs[m
[36m[10:20:07.587726] [D] [thread 132350] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:20:07.587780] [D] [thread 132350] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream7[m
[36m[10:20:07.587858] [D] [thread 132350] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[10:20:07.587893] [D] [thread 132350] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[10:20:07.587922] [D] [thread 132350] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[10:20:07.587957] [D] [thread 132350] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream7 does not exist, try to add[m
[36m[10:20:07.587988] [D] [thread 132350] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:20:07.588021] [D] [thread 132350] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[10:20:07.588046] [D] [thread 132350] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:20:07.592378] [D] [thread 132352] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 8
oldParent: 1
newParent: 3
[m
[36m[10:20:07.592497] [D] [thread 132352] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 8  parentId= 1[m
[32m[10:20:07.592532] [I] [thread 132352] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[10:20:07.592566] [D] [thread 132352] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[10:20:07.592600] [D] [thread 132352] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  8  exists[m
[32m[10:20:07.592620] [I] [thread 132352] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:20:07.592641] [D] [thread 132352] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:20:07.592666] [D] [thread 132352] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:20:07.592752] [D] [thread 132352] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:20:07.592936] [I] [thread 132352] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:20:07.592985] [D] [thread 132352] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:20:07.593014] [D] [thread 132352] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:20:07.593043] [D] [thread 132352] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 8  parentId= 3[m
[32m[10:20:07.593066] [I] [thread 132352] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[10:20:07.593091] [D] [thread 132352] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[10:20:07.593119] [D] [thread 132352] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 8 exists[m
[32m[10:20:07.593139] [I] [thread 132352] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[10:20:07.593160] [D] [thread 132352] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[10:20:07.593185] [D] [thread 132352] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[10:20:07.593318] [I] [thread 132352] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:20:07.593382] [D] [thread 132352] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:20:07.593875] [D] [thread 132352] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:20:07.593913] [D] [thread 132352] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:20:08.404488] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:09.405776] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:10.407073] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:10.609677] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:10.610027] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:20:10.610621] [I] [thread 132354] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:20:10.611968] [I] [thread 132354] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:20:10.777257] [D] [thread 132352] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.37"
grpcPort: 44265
dataPort: 41851
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:20:10.777530] [D] [thread 132352] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.37"
grpcPort: 44265
dataPort: 41851
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:20:10.777617] [D] [thread 132352] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:20:10.778170] [D] [thread 132352] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:20:10.778237] [D] [thread 132352] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:20:10.778390] [D] [thread 132352] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 9 and resources 65535[m
[36m[10:20:10.778568] [D] [thread 132352] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:20:10.778657] [I] [thread 132352] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:20:10.778802] [I] [thread 132352] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:20:10.778889] [D] [thread 132352] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 9[m
[36m[10:20:10.778994] [D] [thread 132352] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:20:10.779516] [D] [thread 132352] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:20:10.779581] [I] [thread 132352] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[10:20:10.779613] [D] [thread 132352] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[10:20:10.779687] [D] [thread 132352] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:20:10.779713] [D] [thread 132352] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:20:10.779740] [D] [thread 132352] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:20:10.780410] [D] [thread 132352] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=9[m
[36m[10:20:10.815377] [D] [thread 132352] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 9
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream8"
  logicalSourceName: "debs"
}
[m
[32m[10:20:10.815490] [I] [thread 132352] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[10:20:10.815530] [D] [thread 132352] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[10:20:10.815614] [D] [thread 132352] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= test_stream8 logical source= debs[m
[36m[10:20:10.815823] [D] [thread 132352] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:20:10.815876] [D] [thread 132352] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream8[m
[36m[10:20:10.815972] [D] [thread 132352] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[10:20:10.816009] [D] [thread 132352] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[10:20:10.816038] [D] [thread 132352] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[10:20:10.816065] [D] [thread 132352] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[10:20:10.816101] [D] [thread 132352] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream8 does not exist, try to add[m
[36m[10:20:10.816133] [D] [thread 132352] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:20:10.816186] [D] [thread 132352] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[10:20:10.816214] [D] [thread 132352] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:20:10.821088] [D] [thread 132352] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 9
oldParent: 1
newParent: 4
[m
[36m[10:20:10.821208] [D] [thread 132352] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 9  parentId= 1[m
[32m[10:20:10.821243] [I] [thread 132352] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[10:20:10.821277] [D] [thread 132352] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[10:20:10.821311] [D] [thread 132352] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  9  exists[m
[32m[10:20:10.821331] [I] [thread 132352] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:20:10.821353] [D] [thread 132352] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:20:10.821377] [D] [thread 132352] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:20:10.821463] [D] [thread 132352] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:20:10.821633] [I] [thread 132352] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:20:10.821680] [D] [thread 132352] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:20:10.821732] [D] [thread 132352] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:20:10.821762] [D] [thread 132352] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 9  parentId= 4[m
[32m[10:20:10.821784] [I] [thread 132352] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[10:20:10.821809] [D] [thread 132352] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[10:20:10.821837] [D] [thread 132352] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 9 exists[m
[32m[10:20:10.821857] [I] [thread 132352] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[10:20:10.821878] [D] [thread 132352] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[10:20:10.821903] [D] [thread 132352] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  4  exists[m
[32m[10:20:10.822033] [I] [thread 132352] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[10:20:10.822096] [D] [thread 132352] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:20:10.822629] [D] [thread 132352] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:20:10.822666] [D] [thread 132352] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:20:11.611284] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:12.612577] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:13.613867] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:13.677156] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:13.677617] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:20:13.678522] [I] [thread 132358] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:20:13.681169] [I] [thread 132358] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:20:13.826797] [D] [thread 132355] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.38"
grpcPort: 37017
dataPort: 34819
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:20:13.827083] [D] [thread 132355] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.38"
grpcPort: 37017
dataPort: 34819
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:20:13.827163] [D] [thread 132355] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:20:13.827776] [D] [thread 132355] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:20:13.827842] [D] [thread 132355] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:20:13.827933] [D] [thread 132355] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 10 and resources 65535[m
[36m[10:20:13.828108] [D] [thread 132355] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[10:20:13.828196] [I] [thread 132355] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:20:13.828396] [I] [thread 132355] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:20:13.828487] [D] [thread 132355] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 10[m
[36m[10:20:13.828593] [D] [thread 132355] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:20:13.829173] [D] [thread 132355] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:20:13.829340] [I] [thread 132355] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[10:20:13.829379] [D] [thread 132355] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[10:20:13.829431] [D] [thread 132355] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:20:13.829455] [D] [thread 132355] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:20:13.829482] [D] [thread 132355] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:20:13.830084] [D] [thread 132355] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=10[m
[36m[10:20:13.865948] [D] [thread 132352] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 10
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream9"
  logicalSourceName: "debs"
}
[m
[32m[10:20:13.866064] [I] [thread 132352] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[10:20:13.866101] [D] [thread 132352] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[10:20:13.866182] [D] [thread 132352] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= test_stream9 logical source= debs[m
[36m[10:20:13.866374] [D] [thread 132352] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:20:13.866418] [D] [thread 132352] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream9[m
[36m[10:20:13.866487] [D] [thread 132352] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[10:20:13.866556] [D] [thread 132352] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[10:20:13.866584] [D] [thread 132352] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[10:20:13.866608] [D] [thread 132352] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[10:20:13.866631] [D] [thread 132352] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=test_stream8[m
[36m[10:20:13.866754] [D] [thread 132352] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream9 does not exist, try to add[m
[36m[10:20:13.866796] [D] [thread 132352] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:20:13.866829] [D] [thread 132352] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[10:20:13.866916] [D] [thread 132352] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:20:13.871678] [D] [thread 132359] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 10
oldParent: 1
newParent: 4
[m
[36m[10:20:13.871788] [D] [thread 132359] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 10  parentId= 1[m
[32m[10:20:13.871817] [I] [thread 132359] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[10:20:13.871846] [D] [thread 132359] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[10:20:13.871872] [D] [thread 132359] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  10  exists[m
[32m[10:20:13.871887] [I] [thread 132359] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:20:13.871903] [D] [thread 132359] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:20:13.871922] [D] [thread 132359] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:20:13.871993] [D] [thread 132359] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:20:13.872132] [I] [thread 132359] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[10:20:13.872170] [D] [thread 132359] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:20:13.872193] [D] [thread 132359] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:20:13.872215] [D] [thread 132359] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 10  parentId= 4[m
[32m[10:20:13.872232] [I] [thread 132359] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[10:20:13.872250] [D] [thread 132359] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[10:20:13.872270] [D] [thread 132359] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 10 exists[m
[32m[10:20:13.872285] [I] [thread 132359] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[10:20:13.872300] [D] [thread 132359] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[10:20:13.872363] [D] [thread 132359] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  4  exists[m
[32m[10:20:13.872497] [I] [thread 132359] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[10:20:13.872554] [D] [thread 132359] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:20:13.873014] [D] [thread 132359] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:20:13.873045] [D] [thread 132359] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:20:14.679021] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:15.680469] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:15.829679] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:15.830172] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:20:15.830990] [I] [thread 132360] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:20:15.834178] [I] [thread 132360] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:20:16.831452] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:17.122669] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:17.123041] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:17.270091] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:17.270616] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:17.272684] [D] [thread 132365] [QueryController.hpp:223] [submitQuery] QueryController: handlePost -execute-query: Params: userQuery= Query::from("debs").window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out","CSV_FORMAT","APPEND", true));, strategyName= BottomUp, faultTolerance= NONE, lineage= NONE[m
[32m[10:20:17.272812] [I] [thread 132365] [QueryService.cpp:69] [validateAndQueueAddQueryRequest] QueryService: Validating and registering the user query.[m
[32m[10:20:17.272845] [I] [thread 132365] [QueryService.cpp:73] [validateAndQueueAddQueryRequest] QueryService: check validation of a query.[m
[36m[10:20:17.272898] [D] [thread 132365] [SyntacticQueryValidation.cpp:40] [validate] SyntacticQueryValidation: parse C++ query from query string.[m
[36m[10:20:17.273005] [D] [thread 132365] [QueryParsingService.cpp:94] [createQueryFromCodeString]  QueryParsingService: source name = "debs"[m
[36m[10:20:17.273077] [D] [thread 132365] [QueryParsingService.cpp:100] [createQueryFromCodeString] QueryParsingService: parsed query = return Query::from("debs").window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out","CSV_FORMAT","APPEND", true));[m
[36m[10:20:17.273210] [D] [thread 132365] [QueryParsingService.cpp:104] [createQueryFromCodeString] QueryParsingService: query code
#include <API/QueryAPI.hpp>
namespace NES{
Query createQuery(){
return Query::from("debs").window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out","CSV_FORMAT","APPEND", true));
}
}
[m
[36m[10:20:17.274734] [D] [thread 132366] [File.cpp:27] [createFile] Create File to file:///tmp/query_13-11-2023_10-20-17_6005146.cpp[m
[36m[10:20:17.275311] [D] [thread 132366] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[10:20:17.275398] [D] [thread 132366] [CPPCompilerFlags.cpp:64] [enableProfilingFlags] Compilation Time tracing is activated open: chrome://tracing/[m
[36m[10:20:17.275761] [D] [thread 132366] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DNES_COMPILE_TIME_LOG_LEVEL=6 -fno-trigraphs -fpic -Wparentheses-equality -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -std=c++20 -stdlib=libstdc++ -shared -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -ftime-trace -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-core/ -I/home/ubuntu/git/nebulastream/build/include/nebulastream -o/tmp/query_13-11-2023_10-20-17_6005146.so -DFMT_HEADER_ONLY /tmp/query_13-11-2023_10-20-17_6005146.cpp'[m
[36m[10:20:18.271848] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:19.273075] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:20:20.263134] [I] [thread 132366] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 2988.495873ms[m
[36m[10:20:20.263504] [D] [thread 132365] [Query.cpp:231] [from] Query: create new Query with source debs[m
[36m[10:20:20.263554] [D] [thread 132365] [QueryPlanBuilder.cpp:43] [createQueryPlan] QueryPlanBuilder: create query plan for input source  debs[m
[32m[10:20:20.263970] [I] [thread 132365] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:20:20.265219] [D] [thread 132365] [WindowedQuery.cpp:122] [windowByKey] Query: add keyed window operator[m
[36m[10:20:20.265694] [D] [thread 132365] [WindowedQuery.cpp:142] [windowByKey] add default watermark strategy as non is provided[m
[32m[10:20:20.266074] [I] [thread 132365] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:20:20.266232] [D] [thread 132365] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WATERMARKASSIGNER(2) as new root of the plan.[m
[36m[10:20:20.266460] [D] [thread 132365] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:20.266535] [D] [thread 132365] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:20:20.267034] [I] [thread 132365] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[10:20:20.267211] [D] [thread 132365] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WINDOW AGGREGATION(OP-3, Min;) as new root of the plan.[m
[36m[10:20:20.267401] [D] [thread 132365] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:20.267432] [D] [thread 132365] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:20:20.267696] [D] [thread 132365] [Query.cpp:353] [sink] Query: add sink operator to query[m
[32m[10:20:20.267840] [I] [thread 132365] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[10:20:20.268027] [D] [thread 132365] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(4: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[10:20:20.268235] [D] [thread 132365] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:20.268288] [D] [thread 132365] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:20:20.269353] [D] [thread 132365] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:20:20.269566] [D] [thread 132365] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:20:20.269695] [D] [thread 132365] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:20:20.269996] [D] [thread 132365] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:20:20.270093] [D] [thread 132365] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:20:20.270126] [D] [thread 132365] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:20:20.270241] [D] [thread 132365] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[10:20:20.270343] [D] [thread 132365] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:20:20.270454] [D] [thread 132365] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:20:20.270534] [D] [thread 132365] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:20:20.271260] [D] [thread 132365] [TypeInferencePhase.cpp:76] [execute] TypeInferencePhase: update source descriptor for source debs with schema: debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.271315] [D] [thread 132365] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:20:20.271430] [D] [thread 132365] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:20:20.272423] [D] [thread 132365] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.273133] [D] [thread 132365] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[10:20:20.273711] [I] [thread 132365] [QueryCatalog.cpp:55] [createNewEntry] QueryCatalog: Creating query catalog entry for query with id 1[m
[36m[10:20:20.274285] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:20:20.274461] [I] [thread 132365] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : RunQueryRequest { QueryId: 1, QueryPlan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
, QueryPlacementStrategy: BottomUp}[m
[32m[10:20:20.274535] [I] [thread 132365] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[10:20:20.274610] [I] [thread 132313] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[10:20:20.274727] [I] [thread 132313] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[10:20:20.274764] [I] [thread 132313] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[10:20:20.275028] [I] [thread 132313] [GlobalQueryPlanUpdatePhase.cpp:150] [processAddQueryRequest] QueryProcessingService: Request received for optimizing and deploying of the query 1[m
[36m[10:20:20.275172] [D] [thread 132313] [GlobalQueryPlanUpdatePhase.cpp:156] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[10:20:20.275203] [D] [thread 132313] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:20:20.275271] [D] [thread 132313] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:20:20.275327] [D] [thread 132313] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:20:20.275383] [D] [thread 132313] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:20:20.275426] [D] [thread 132313] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:20:20.276140] [D] [thread 132313] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.276744] [D] [thread 132313] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:20:20.276823] [D] [thread 132313] [GlobalQueryPlanUpdatePhase.cpp:160] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[10:20:20.276848] [D] [thread 132313] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[10:20:20.277101] [D] [thread 132313] [GlobalQueryPlanUpdatePhase.cpp:164] [processAddQueryRequest] QueryProcessingService: Performing Query rewrite phase for query:  1[m
[32m[10:20:20.277132] [I] [thread 132313] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[10:20:20.277346] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[10:20:20.277688] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[10:20:20.278034] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[10:20:20.278313] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:20:20.278634] [D] [thread 132313] [RenameSourceToProjectOperatorRule.cpp:27] [apply] RenameSourceToProjectOperatorRule: Convert all Rename Source operator to the project operator[m
[36m[10:20:20.278993] [D] [thread 132313] [ProjectBeforeUnionOperatorRule.cpp:32] [apply] Before applying ProjectBeforeUnionOperatorRule to the query plan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[10:20:20.279205] [D] [thread 132313] [ProjectBeforeUnionOperatorRule.cpp:52] [apply] After applying ProjectBeforeUnionOperatorRule to the query plan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[32m[10:20:20.279352] [I] [thread 132313] [FilterSplitUpRule.cpp:30] [apply] Applying FilterSplitUpRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[10:20:20.279511] [D] [thread 132313] [FilterSplitUpRule.cpp:38] [apply] FilterSplitUpRule: Sort all filter nodes in increasing order of the operator id[m
[32m[10:20:20.279538] [I] [thread 132313] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[10:20:20.279639] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[10:20:20.279803] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[10:20:20.280045] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[10:20:20.280243] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:20:20.280493] [D] [thread 132313] [FilterSplitUpRule.cpp:46] [apply] FilterSplitUpRule: Iterate over all the filter operators to split them[m
[32m[10:20:20.280720] [I] [thread 132313] [FilterPushDownRule.cpp:50] [apply] Applying FilterPushDownRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[10:20:20.280788] [D] [thread 132313] [FilterPushDownRule.cpp:58] [apply] FilterPushDownRule: Sort all filter nodes in increasing order of the operator id[m
[32m[10:20:20.280801] [I] [thread 132313] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[10:20:20.280888] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[10:20:20.281021] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[10:20:20.281276] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[10:20:20.281478] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:20:20.281686] [D] [thread 132313] [FilterPushDownRule.cpp:66] [apply] FilterPushDownRule: Iterate over all the filter operators to push them down in the query plan[m
[32m[10:20:20.281830] [I] [thread 132313] [FilterPushDownRule.cpp:71] [apply] FilterPushDownRule: Return the updated query plan SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[32m[10:20:20.281976] [I] [thread 132313] [FilterMergeRule.cpp:27] [apply] Applying FilterMergeRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[10:20:20.282119] [D] [thread 132313] [FilterMergeRule.cpp:30] [apply] FilterMergeRule: Identified 0 filter nodes in the query plan[m
[36m[10:20:20.282238] [D] [thread 132313] [FilterMergeRule.cpp:31] [apply] Query before applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[10:20:20.282351] [D] [thread 132313] [FilterMergeRule.cpp:77] [apply] Query after applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[10:20:20.282481] [D] [thread 132313] [PredicateReorderingRule.cpp:28] [apply] PredicateReorderingRule: Identified 0 filter nodes in the query plan[m
[36m[10:20:20.282605] [D] [thread 132313] [PredicateReorderingRule.cpp:29] [apply] Query before applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[10:20:20.282706] [D] [thread 132313] [PredicateReorderingRule.cpp:87] [apply] Query after applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[10:20:20.282810] [D] [thread 132313] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:20:20.282872] [D] [thread 132313] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:20:20.282911] [D] [thread 132313] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:20:20.282956] [D] [thread 132313] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:20:20.282992] [D] [thread 132313] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:20:20.283537] [D] [thread 132313] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.283940] [D] [thread 132313] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[10:20:20.284015] [I] [thread 132313] [SignatureInferencePhase.cpp:59] [execute] Skipping signature creation[m
[32m[10:20:20.284184] [I] [thread 132313] [LogicalSourceExpansionRule.cpp:49] [apply] LogicalSourceExpansionRule: Plan before
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[10:20:20.284215] [D] [thread 132313] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:20:20.284260] [D] [thread 132313] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:20:20.284295] [D] [thread 132313] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[32m[10:20:20.284954] [I] [thread 132313] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:20:20.285051] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:20:20.285151] [D] [thread 132313] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:20:20.285170] [D] [thread 132313] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:20:20.285204] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:20:20.285440] [D] [thread 132313] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:20:20.285904] [I] [thread 132313] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:20:20.285980] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:20:20.286058] [D] [thread 132313] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:20:20.286074] [D] [thread 132313] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:20:20.286104] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:20:20.286284] [D] [thread 132313] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:20:20.286573] [I] [thread 132313] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:20:20.286639] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:20:20.286707] [D] [thread 132313] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:20:20.286722] [D] [thread 132313] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:20:20.286750] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:20:20.286911] [D] [thread 132313] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:20:20.287162] [I] [thread 132313] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:20:20.287248] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:20:20.287314] [D] [thread 132313] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:20:20.287330] [D] [thread 132313] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:20:20.287357] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:20:20.287517] [D] [thread 132313] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:20:20.287781] [I] [thread 132313] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:20:20.287843] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:20:20.287914] [D] [thread 132313] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:20:20.287930] [D] [thread 132313] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:20:20.287957] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:20:20.288118] [D] [thread 132313] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:20:20.288433] [I] [thread 132313] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:20:20.288505] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:20:20.288580] [D] [thread 132313] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:20:20.288597] [D] [thread 132313] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:20:20.288649] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:20:20.288849] [D] [thread 132313] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[36m[10:20:20.289393] [D] [thread 132313] [LogicalSourceExpansionRule.cpp:151] [apply] LogicalSourceExpansionRule: Plan after
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[32m[10:20:20.289502] [I] [thread 132313] [DistributedJoinRule.cpp:31] [apply] DistributeJoinRule: Apply DistributeJoinRule.[m
[36m[10:20:20.289708] [D] [thread 132313] [DistributedJoinRule.cpp:32] [apply] DistributeJoinRule::apply: plan before replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[10:20:20.289983] [D] [thread 132313] [DistributedJoinRule.cpp:55] [apply] DistributeJoinRule::apply: no join operator in query[m
[36m[10:20:20.290233] [D] [thread 132313] [DistributedJoinRule.cpp:58] [apply] DistributeJoinRule::apply: plan after replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[10:20:20.290292] [D] [thread 132313] [NemoWindowPinningRule.cpp:58] [apply] NemoWindowPinningRule: Apply NemoWindowPinningRule.[m
[36m[10:20:20.290485] [D] [thread 132313] [NemoWindowPinningRule.cpp:59] [apply] NemoWindowPinningRule::apply: plan before replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[10:20:20.290772] [D] [thread 132313] [NemoWindowPinningRule.cpp:68] [apply] NemoWindowPinningRule::apply: found 1 window operators[m
[36m[10:20:20.290845] [D] [thread 132313] [NemoWindowPinningRule.cpp:70] [apply] NemoWindowPinningRule::apply: window operator WINDOW AGGREGATION(OP-3, Min;)[m
[36m[10:20:20.290888] [D] [thread 132313] [NemoWindowPinningRule.cpp:92] [createCentralWindowOperator] NemoWindowPinningRule::apply: introduce centralized window operator for window WINDOW AGGREGATION(OP-3, Min;)[m
[32m[10:20:20.290977] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[36m[10:20:20.291131] [D] [thread 132313] [NemoWindowPinningRule.cpp:94] [createCentralWindowOperator] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(17) old node=WINDOW AGGREGATION(OP-3, Min;)[m
[36m[10:20:20.291195] [D] [thread 132313] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:20:20.291223] [D] [thread 132313] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:20:20.291284] [I] [thread 132313] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:20:20.291296] [I] [thread 132313] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:20:20.291312] [I] [thread 132313] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:20:20.291374] [D] [thread 132313] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:20:20.291389] [D] [thread 132313] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[10:20:20.291444] [D] [thread 132313] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[10:20:20.291479] [D] [thread 132313] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[10:20:20.291538] [D] [thread 132313] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[10:20:20.291552] [D] [thread 132313] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[10:20:20.291610] [D] [thread 132313] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[10:20:20.291623] [D] [thread 132313] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[10:20:20.291687] [D] [thread 132313] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[10:20:20.291701] [D] [thread 132313] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[10:20:20.291767] [D] [thread 132313] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[10:20:20.291780] [D] [thread 132313] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[10:20:20.291851] [D] [thread 132313] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[10:20:20.291868] [D] [thread 132313] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[36m[10:20:20.292108] [D] [thread 132313] [NemoWindowPinningRule.cpp:81] [apply] NemoWindowPinningRule::apply: central op
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(17)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[10:20:20.292294] [D] [thread 132313] [NemoWindowPinningRule.cpp:87] [apply] NemoWindowPinningRule::apply: plan after replace
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(17)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[10:20:20.292555] [D] [thread 132313] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:20:20.292664] [D] [thread 132313] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:20:20.292736] [D] [thread 132313] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 6 source operators.[m
[36m[10:20:20.292797] [D] [thread 132313] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:20:20.292839] [D] [thread 132313] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:20:20.294092] [D] [thread 132313] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[10:20:20.294351] [I] [thread 132313] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[10:20:20.294465] [I] [thread 132313] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[10:20:20.294575] [D] [thread 132313] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:20:20.295246] [D] [thread 132313] [GlobalQueryPlanUpdatePhase.cpp:196] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[10:20:20.295292] [D] [thread 132313] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[10:20:20.295561] [D] [thread 132313] [GlobalQueryPlanUpdatePhase.cpp:203] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[10:20:20.295670] [D] [thread 132313] [GlobalQueryPlanUpdatePhase.cpp:207] [processAddQueryRequest] QueryProcessingService: Applying Query Merger Rules as Query Merging is enabled.[m
[36m[10:20:20.295703] [D] [thread 132313] [QueryMergerPhase.cpp:72] [execute] QueryMergerPhase: Executing query merger phase.[m
[32m[10:20:20.295762] [I] [thread 132313] [GlobalQueryPlan.cpp:173] [createNewSharedQueryPlan] Create new shared query plan[m
[32m[10:20:20.295803] [I] [thread 132313] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[10:20:20.295935] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[10:20:20.296118] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[32m[10:20:20.296430] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[32m[10:20:20.296605] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[32m[10:20:20.296760] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[32m[10:20:20.296906] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[32m[10:20:20.297051] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[32m[10:20:20.297197] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[32m[10:20:20.297379] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[10:20:20.297614] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[32m[10:20:20.297786] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[32m[10:20:20.297955] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[32m[10:20:20.298123] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[32m[10:20:20.298287] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[36m[10:20:20.298937] [D] [thread 132313] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[10:20:20.298993] [D] [thread 132313] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[10:20:20.299054] [D] [thread 132313] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:20:20.299096] [D] [thread 132313] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:20:20.299119] [D] [thread 132313] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:20:20.299140] [D] [thread 132313] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:20:20.299159] [D] [thread 132313] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:20:20.299179] [D] [thread 132313] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:20:20.299199] [D] [thread 132313] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:20:20.299221] [D] [thread 132313] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:20:20.299251] [D] [thread 132313] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:20:20.299263] [D] [thread 132313] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:20:20.299291] [D] [thread 132313] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:20:20.299302] [D] [thread 132313] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:20:20.299333] [D] [thread 132313] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:20:20.299345] [D] [thread 132313] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:20:20.299375] [D] [thread 132313] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:20:20.299387] [D] [thread 132313] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:20:20.299404] [D] [thread 132313] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:20:20.299423] [D] [thread 132313] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:20:20.299446] [D] [thread 132313] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:20:20.299459] [D] [thread 132313] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:20:20.300647] [D] [thread 132313] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[10:20:20.300703] [D] [thread 132313] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[10:20:20.300775] [D] [thread 132313] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[10:20:20.300794] [D] [thread 132313] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[10:20:20.300808] [D] [thread 132313] [RequestProcessorService.cpp:111] [start] QueryProcessingService: Shared Query Plan is new.[m
[36m[10:20:20.300820] [D] [thread 132313] [RequestProcessorService.cpp:115] [start] QueryProcessingService: Performing Operator placement for shared query plan[m
[32m[10:20:20.300844] [I] [thread 132313] [QueryPlacementPhase.cpp:54] [execute] QueryPlacementPhase: Perform query placement phase for shared query plan 1[m
[36m[10:20:20.301366] [D] [thread 132313] [QueryPlacementPhase.cpp:70] [execute] QueryPlacementPhase: Perform query placement for query plan
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(17)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[10:20:20.301415] [D] [thread 132313] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[10:20:20.301430] [D] [thread 132313] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[10:20:20.301486] [D] [thread 132313] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:20:20.301526] [D] [thread 132313] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:20:20.301548] [D] [thread 132313] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:20:20.301569] [D] [thread 132313] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:20:20.301589] [D] [thread 132313] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:20:20.301608] [D] [thread 132313] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:20:20.301628] [D] [thread 132313] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:20:20.301649] [D] [thread 132313] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:20:20.301681] [D] [thread 132313] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:20:20.301694] [D] [thread 132313] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:20:20.301723] [D] [thread 132313] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:20:20.301737] [D] [thread 132313] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:20:20.301761] [D] [thread 132313] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:20:20.301772] [D] [thread 132313] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:20:20.301791] [D] [thread 132313] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:20:20.301802] [D] [thread 132313] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:20:20.301818] [D] [thread 132313] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:20:20.301828] [D] [thread 132313] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:20:20.301848] [D] [thread 132313] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:20:20.301860] [D] [thread 132313] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:20:20.302069] [D] [thread 132313] [BottomUpStrategy.cpp:50] [updateGlobalExecutionPlan] Perform placement of the pinned and all their downstream operators.[m
[32m[10:20:20.302119] [I] [thread 132313] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[10:20:20.302139] [D] [thread 132313] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[10:20:20.302215] [I] [thread 132313] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[10:20:20.302236] [D] [thread 132313] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[10:20:20.302272] [I] [thread 132313] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[10:20:20.302284] [D] [thread 132313] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[10:20:20.302310] [I] [thread 132313] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[10:20:20.302322] [D] [thread 132313] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[10:20:20.302343] [I] [thread 132313] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[10:20:20.302354] [D] [thread 132313] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[10:20:20.302371] [I] [thread 132313] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[10:20:20.302382] [D] [thread 132313] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[10:20:20.302401] [I] [thread 132313] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:20:20.302411] [D] [thread 132313] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[32m[10:20:20.302479] [I] [thread 132313] [Topology.cpp:73] [findPathBetween] Topology: Finding path between set of start and destination nodes[m
[36m[10:20:20.302721] [D] [thread 132313] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:20:20.302880] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:20:20.302991] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:20:20.303074] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:20:20.303251] [D] [thread 132313] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:20:20.303316] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:20:20.303398] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:20:20.303472] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:20:20.303615] [D] [thread 132313] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:20:20.303675] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:20:20.303731] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:20:20.303796] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:20:20.303901] [D] [thread 132313] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:20:20.303954] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:20:20.304038] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:20:20.304129] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:20:20.304239] [D] [thread 132313] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:20:20.304291] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:20:20.304385] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:20:20.304464] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:20:20.304615] [D] [thread 132313] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:20:20.304677] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:20:20.304737] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:20:20.304802] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[32m[10:20:20.304850] [I] [thread 132313] [Topology.cpp:98] [mergeSubGraphs] Topology: Merge 6 sub-graphs to create a single sub-graph[m
[36m[10:20:20.304860] [D] [thread 132313] [Topology.cpp:100] [mergeSubGraphs] Topology: Compute a map storing number of times a node occurred in different sub-graphs[m
[36m[10:20:20.305196] [D] [thread 132313] [Topology.cpp:120] [mergeSubGraphs] Topology: Iterate over each sub-graph and compute a single merged sub-graph[m
[36m[10:20:20.305212] [D] [thread 132313] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:20:20.305274] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:20:20.305287] [D] [thread 132313] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:20:20.305313] [D] [thread 132313] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[10:20:20.305405] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:20:20.305498] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:20:20.305533] [D] [thread 132313] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:20:20.305575] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:20:20.305586] [D] [thread 132313] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:20:20.305607] [D] [thread 132313] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[10:20:20.305659] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:20:20.305715] [D] [thread 132313] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:20:20.305759] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:20:20.305770] [D] [thread 132313] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:20:20.305789] [D] [thread 132313] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[10:20:20.305857] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:20:20.305915] [D] [thread 132313] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:20:20.305959] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:20:20.305969] [D] [thread 132313] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:20:20.305983] [D] [thread 132313] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[10:20:20.306022] [W] [thread 132313] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[10:20:20.306037] [D] [thread 132313] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:20:20.306077] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:20:20.306088] [D] [thread 132313] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:20:20.306107] [D] [thread 132313] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[10:20:20.306147] [W] [thread 132313] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[10:20:20.306162] [D] [thread 132313] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:20:20.306204] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:20:20.306222] [D] [thread 132313] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:20:20.306236] [D] [thread 132313] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[10:20:20.306276] [W] [thread 132313] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[10:20:20.306350] [D] [thread 132313] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[10:20:20.306363] [D] [thread 132313] [Node.cpp:435] [getAllRootNodes] Node: Iterating over all parents to find more root nodes[m
[36m[10:20:20.306370] [D] [thread 132313] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[10:20:20.306376] [D] [thread 132313] [Node.cpp:426] [getAllRootNodes] Node: Inserting this node to the collection[m
[36m[10:20:20.306394] [D] [thread 132313] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[10:20:20.306401] [D] [thread 132313] [Node.cpp:438] [getAllRootNodes] Node: inserting parent nodes into the collection of parent nodes[m
[36m[10:20:20.306422] [D] [thread 132313] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[10:20:20.306588] [D] [thread 132313] [BottomUpStrategy.cpp:74] [pinOperators] BottomUpStrategy: Get the all source operators for performing the placement.[m
[36m[10:20:20.306652] [D] [thread 132313] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4)) placement.[m
[36m[10:20:20.306717] [D] [thread 132313] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))[m
[36m[10:20:20.306749] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:20:20.306805] [D] [thread 132313] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(6)[m
[36m[10:20:20.306820] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:20:20.306893] [D] [thread 132313] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(17)[m
[36m[10:20:20.306907] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:20:20.306924] [D] [thread 132313] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[10:20:20.306975] [W] [thread 132313] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[10:20:20.306994] [W] [thread 132313] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[10:20:20.307027] [D] [thread 132313] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5)) placement.[m
[36m[10:20:20.307061] [D] [thread 132313] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))[m
[36m[10:20:20.307076] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:20:20.307112] [D] [thread 132313] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(8)[m
[36m[10:20:20.307126] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:20:20.307169] [D] [thread 132313] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(17)[m
[36m[10:20:20.307184] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:20:20.307195] [D] [thread 132313] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[10:20:20.307238] [W] [thread 132313] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[10:20:20.307253] [W] [thread 132313] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[10:20:20.307282] [D] [thread 132313] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6)) placement.[m
[36m[10:20:20.307314] [D] [thread 132313] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))[m
[36m[10:20:20.307328] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:20:20.307361] [D] [thread 132313] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(10)[m
[36m[10:20:20.307374] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:20:20.307413] [D] [thread 132313] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(17)[m
[36m[10:20:20.307428] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:20:20.307438] [D] [thread 132313] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[10:20:20.307488] [W] [thread 132313] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[10:20:20.307508] [W] [thread 132313] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[10:20:20.307538] [D] [thread 132313] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7)) placement.[m
[36m[10:20:20.307570] [D] [thread 132313] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))[m
[36m[10:20:20.307585] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:20:20.307619] [D] [thread 132313] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(12)[m
[36m[10:20:20.307632] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:20:20.307672] [D] [thread 132313] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(17)[m
[36m[10:20:20.307686] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:20:20.307697] [D] [thread 132313] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[10:20:20.307755] [W] [thread 132313] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[10:20:20.307769] [W] [thread 132313] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[10:20:20.307798] [D] [thread 132313] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8)) placement.[m
[36m[10:20:20.307830] [D] [thread 132313] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))[m
[36m[10:20:20.307845] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:20:20.307879] [D] [thread 132313] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(14)[m
[36m[10:20:20.307893] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:20:20.307946] [D] [thread 132313] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(17)[m
[36m[10:20:20.307962] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:20:20.307973] [D] [thread 132313] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[10:20:20.308040] [W] [thread 132313] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[10:20:20.308054] [W] [thread 132313] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[10:20:20.308082] [D] [thread 132313] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9)) placement.[m
[36m[10:20:20.308114] [D] [thread 132313] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))[m
[36m[10:20:20.308128] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:20:20.308161] [D] [thread 132313] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(16)[m
[36m[10:20:20.308174] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:20:20.308212] [D] [thread 132313] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(17)[m
[36m[10:20:20.308226] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:20:20.308237] [D] [thread 132313] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[10:20:20.308304] [D] [thread 132313] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[10:20:20.308377] [D] [thread 132313] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[10:20:20.308397] [D] [thread 132313] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[10:20:20.308668] [D] [thread 132313] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[10:20:20.308699] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:20:20.308712] [D] [thread 132313] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[10:20:20.308756] [D] [thread 132313] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[10:20:20.308796] [D] [thread 132313] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[10:20:20.308809] [D] [thread 132313] [BottomUpStrategy.cpp:103] [pinOperators] BottomUpStrategy: Finished placing query operators into the global execution plan[m
[36m[10:20:20.308820] [D] [thread 132313] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:20:20.308870] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:20:20.308904] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:20:20.309149] [D] [thread 132313] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4)) on execution node with id 5[m
[36m[10:20:20.309183] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:20:20.309216] [W] [thread 132313] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:20:20.309411] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[36m[10:20:20.309600] [D] [thread 132313] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4)) as new root of the plan.[m
[36m[10:20:20.309619] [D] [thread 132313] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:20.309627] [D] [thread 132313] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:20:20.309665] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.309679] [D] [thread 132313] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:20:20.309809] [D] [thread 132313] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[10:20:20.309892] [D] [thread 132313] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:20:20.309931] [W] [thread 132313] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[10:20:20.309942] [D] [thread 132313] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[10:20:20.310035] [D] [thread 132313] [GlobalExecutionPlan.cpp:188] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Query Id 1 does not exists adding a new entry with execution node 5[m
[36m[10:20:20.310215] [D] [thread 132313] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:20:20.310238] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:20:20.310266] [I] [thread 132313] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[10:20:20.310287] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:20:20.310345] [D] [thread 132313] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:20:20.310436] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:20:20.310458] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:20:20.310519] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:20:20.310545] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[10:20:20.310587] [D] [thread 132313] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(6) on execution node with id 5[m
[36m[10:20:20.310600] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.310616] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.310648] [D] [thread 132313] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:20:20.310661] [D] [thread 132313] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:20:20.310696] [D] [thread 132313] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:20:20.310718] [D] [thread 132313] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:20:20.310789] [D] [thread 132313] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:20:20.310800] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.310831] [D] [thread 132313] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:20:20.310923] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[36m[10:20:20.311111] [D] [thread 132313] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:20:20.311130] [D] [thread 132313] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:20:20.311146] [D] [thread 132313] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[10:20:20.311163] [D] [thread 132313] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[10:20:20.311284] [D] [thread 132313] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4)) as root operator.[m
[36m[10:20:20.311346] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.311364] [D] [thread 132313] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:20:20.311399] [D] [thread 132313] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[10:20:20.311417] [D] [thread 132313] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:20:20.311432] [W] [thread 132313] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[10:20:20.311441] [D] [thread 132313] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[10:20:20.311559] [D] [thread 132313] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[10:20:20.311617] [D] [thread 132313] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:20:20.311635] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:20:20.311651] [I] [thread 132313] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[10:20:20.311671] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:20:20.311732] [D] [thread 132313] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:20:20.311801] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:20:20.311823] [W] [thread 132313] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:20:20.311832] [D] [thread 132313] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:20:20.311845] [D] [thread 132313] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:20:20.311892] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:20:20.311910] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:20:20.311999] [D] [thread 132313] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5)) on execution node with id 6[m
[36m[10:20:20.312014] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:20:20.312026] [W] [thread 132313] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:20:20.312119] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[36m[10:20:20.312279] [D] [thread 132313] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5)) as new root of the plan.[m
[36m[10:20:20.312294] [D] [thread 132313] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:20.312302] [D] [thread 132313] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:20:20.312354] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.312368] [D] [thread 132313] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:20:20.312423] [D] [thread 132313] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[10:20:20.312451] [D] [thread 132313] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:20:20.312468] [W] [thread 132313] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[10:20:20.312477] [D] [thread 132313] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[10:20:20.312535] [D] [thread 132313] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 6 to the query Id 1[m
[36m[10:20:20.312616] [D] [thread 132313] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:20:20.312635] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:20:20.312650] [I] [thread 132313] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[10:20:20.312669] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:20:20.312721] [D] [thread 132313] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:20:20.312790] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:20:20.312809] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:20:20.312859] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:20:20.312872] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[10:20:20.312901] [D] [thread 132313] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(8) on execution node with id 6[m
[36m[10:20:20.312912] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.312924] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.312946] [D] [thread 132313] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:20:20.312957] [D] [thread 132313] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:20:20.312984] [D] [thread 132313] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:20:20.312994] [D] [thread 132313] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:20:20.313041] [D] [thread 132313] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:20:20.313052] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.313069] [D] [thread 132313] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:20:20.313137] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[36m[10:20:20.313309] [D] [thread 132313] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:20:20.313327] [D] [thread 132313] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:20:20.313339] [D] [thread 132313] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 7 exists in the query plan or not[m
[36m[10:20:20.313348] [D] [thread 132313] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 7 in the query plan[m
[36m[10:20:20.313457] [D] [thread 132313] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5)) as root operator.[m
[36m[10:20:20.313520] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.313537] [D] [thread 132313] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:20:20.313569] [D] [thread 132313] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[10:20:20.313586] [D] [thread 132313] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:20:20.313600] [W] [thread 132313] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[10:20:20.313608] [D] [thread 132313] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[10:20:20.313655] [D] [thread 132313] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[10:20:20.313689] [D] [thread 132313] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:20:20.313706] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:20:20.313721] [I] [thread 132313] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[10:20:20.313740] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:20:20.313791] [D] [thread 132313] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:20:20.313849] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:20:20.313869] [W] [thread 132313] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:20:20.313878] [D] [thread 132313] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:20:20.313891] [D] [thread 132313] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:20:20.313935] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:20:20.313952] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:20:20.314038] [D] [thread 132313] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6)) on execution node with id 7[m
[36m[10:20:20.314052] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:20:20.314064] [W] [thread 132313] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:20:20.314173] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[36m[10:20:20.314332] [D] [thread 132313] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6)) as new root of the plan.[m
[36m[10:20:20.314346] [D] [thread 132313] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:20.314354] [D] [thread 132313] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:20:20.314375] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.314386] [D] [thread 132313] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:20:20.314432] [D] [thread 132313] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[10:20:20.314458] [D] [thread 132313] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:20:20.314473] [W] [thread 132313] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[10:20:20.314482] [D] [thread 132313] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[10:20:20.314528] [D] [thread 132313] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 7 to the query Id 1[m
[36m[10:20:20.314573] [D] [thread 132313] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:20:20.314590] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:20:20.314619] [I] [thread 132313] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[10:20:20.314637] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:20:20.314685] [D] [thread 132313] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:20:20.314752] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:20:20.314772] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:20:20.314821] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:20:20.314833] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[10:20:20.314863] [D] [thread 132313] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(10) on execution node with id 7[m
[36m[10:20:20.314874] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.314897] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.314919] [D] [thread 132313] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:20:20.314930] [D] [thread 132313] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:20:20.314963] [D] [thread 132313] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:20:20.314974] [D] [thread 132313] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:20:20.315024] [D] [thread 132313] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:20:20.315035] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.315052] [D] [thread 132313] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:20:20.315126] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[36m[10:20:20.315285] [D] [thread 132313] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:20:20.315303] [D] [thread 132313] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:20:20.315316] [D] [thread 132313] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 9 exists in the query plan or not[m
[36m[10:20:20.315325] [D] [thread 132313] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 9 in the query plan[m
[36m[10:20:20.315437] [D] [thread 132313] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6)) as root operator.[m
[36m[10:20:20.315483] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.315499] [D] [thread 132313] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:20:20.315532] [D] [thread 132313] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[10:20:20.315549] [D] [thread 132313] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:20:20.315563] [W] [thread 132313] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[10:20:20.315584] [D] [thread 132313] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[10:20:20.315635] [D] [thread 132313] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[10:20:20.315673] [D] [thread 132313] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:20:20.315689] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:20:20.315704] [I] [thread 132313] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[10:20:20.315723] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:20:20.315766] [D] [thread 132313] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:20:20.315823] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:20:20.315845] [W] [thread 132313] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:20:20.315853] [D] [thread 132313] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:20:20.315866] [D] [thread 132313] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:20:20.315909] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:20:20.315927] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:20:20.316009] [D] [thread 132313] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7)) on execution node with id 8[m
[36m[10:20:20.316022] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:20:20.316034] [W] [thread 132313] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:20:20.316116] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[36m[10:20:20.316267] [D] [thread 132313] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7)) as new root of the plan.[m
[36m[10:20:20.316286] [D] [thread 132313] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:20.316294] [D] [thread 132313] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:20:20.316314] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.316365] [D] [thread 132313] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:20:20.316421] [D] [thread 132313] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[10:20:20.316449] [D] [thread 132313] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:20:20.316465] [W] [thread 132313] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[10:20:20.316474] [D] [thread 132313] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[10:20:20.316527] [D] [thread 132313] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 8 to the query Id 1[m
[36m[10:20:20.316573] [D] [thread 132313] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:20:20.316591] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:20:20.316607] [I] [thread 132313] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[10:20:20.316627] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:20:20.316675] [D] [thread 132313] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:20:20.316744] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:20:20.316763] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:20:20.316810] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:20:20.316822] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[10:20:20.316852] [D] [thread 132313] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(12) on execution node with id 8[m
[36m[10:20:20.316864] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.316876] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.316897] [D] [thread 132313] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:20:20.316908] [D] [thread 132313] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:20:20.316938] [D] [thread 132313] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:20:20.316948] [D] [thread 132313] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:20:20.317012] [D] [thread 132313] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:20:20.317025] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.317041] [D] [thread 132313] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:20:20.317105] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[36m[10:20:20.317268] [D] [thread 132313] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:20:20.317287] [D] [thread 132313] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:20:20.317300] [D] [thread 132313] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 11 exists in the query plan or not[m
[36m[10:20:20.317309] [D] [thread 132313] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 11 in the query plan[m
[36m[10:20:20.317419] [D] [thread 132313] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7)) as root operator.[m
[36m[10:20:20.317463] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.317477] [D] [thread 132313] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:20:20.317510] [D] [thread 132313] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[10:20:20.317527] [D] [thread 132313] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:20:20.317541] [W] [thread 132313] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[10:20:20.317549] [D] [thread 132313] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[10:20:20.317600] [D] [thread 132313] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[10:20:20.317634] [D] [thread 132313] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:20:20.317650] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:20:20.317664] [I] [thread 132313] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[10:20:20.317683] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:20:20.317741] [D] [thread 132313] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:20:20.317870] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:20:20.317896] [W] [thread 132313] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:20:20.317905] [D] [thread 132313] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:20:20.317918] [D] [thread 132313] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:20:20.317967] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:20:20.317986] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:20:20.318077] [D] [thread 132313] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8)) on execution node with id 9[m
[36m[10:20:20.318091] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:20:20.318103] [W] [thread 132313] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:20:20.318215] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[36m[10:20:20.318378] [D] [thread 132313] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8)) as new root of the plan.[m
[36m[10:20:20.318395] [D] [thread 132313] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:20.318403] [D] [thread 132313] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:20:20.318423] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.318434] [D] [thread 132313] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:20:20.318482] [D] [thread 132313] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[10:20:20.318508] [D] [thread 132313] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:20:20.318523] [W] [thread 132313] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[10:20:20.318532] [D] [thread 132313] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[10:20:20.318583] [D] [thread 132313] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 9 to the query Id 1[m
[36m[10:20:20.318628] [D] [thread 132313] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:20:20.318657] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:20:20.318673] [I] [thread 132313] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[10:20:20.318691] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:20:20.318746] [D] [thread 132313] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:20:20.318805] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:20:20.318827] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:20:20.318877] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:20:20.318889] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[10:20:20.318918] [D] [thread 132313] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(14) on execution node with id 9[m
[36m[10:20:20.318929] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.318949] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.318971] [D] [thread 132313] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:20:20.318983] [D] [thread 132313] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:20:20.319012] [D] [thread 132313] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:20:20.319023] [D] [thread 132313] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:20:20.319072] [D] [thread 132313] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:20:20.319083] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.319100] [D] [thread 132313] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:20:20.319171] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[36m[10:20:20.319322] [D] [thread 132313] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:20:20.319339] [D] [thread 132313] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:20:20.319351] [D] [thread 132313] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 13 exists in the query plan or not[m
[36m[10:20:20.319361] [D] [thread 132313] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 13 in the query plan[m
[36m[10:20:20.319469] [D] [thread 132313] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8)) as root operator.[m
[36m[10:20:20.319515] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.319530] [D] [thread 132313] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:20:20.319562] [D] [thread 132313] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[10:20:20.319579] [D] [thread 132313] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:20:20.319593] [W] [thread 132313] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[10:20:20.319602] [D] [thread 132313] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[10:20:20.319650] [D] [thread 132313] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[10:20:20.319694] [D] [thread 132313] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:20:20.319710] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:20:20.319725] [I] [thread 132313] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[10:20:20.319743] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:20:20.319786] [D] [thread 132313] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:20:20.319844] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:20:20.319869] [W] [thread 132313] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:20:20.319878] [D] [thread 132313] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:20:20.319891] [D] [thread 132313] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:20:20.319934] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:20:20.319951] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:20:20.320034] [D] [thread 132313] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9)) on execution node with id 10[m
[36m[10:20:20.320048] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:20:20.320060] [W] [thread 132313] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:20:20.320142] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[36m[10:20:20.320293] [D] [thread 132313] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9)) as new root of the plan.[m
[36m[10:20:20.320308] [D] [thread 132313] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:20.320315] [D] [thread 132313] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:20:20.320380] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.320393] [D] [thread 132313] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:20:20.320443] [D] [thread 132313] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[10:20:20.320469] [D] [thread 132313] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:20:20.320485] [W] [thread 132313] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[10:20:20.320494] [D] [thread 132313] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[10:20:20.320544] [D] [thread 132313] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 10 to the query Id 1[m
[36m[10:20:20.320591] [D] [thread 132313] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:20:20.320607] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:20:20.320634] [I] [thread 132313] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[10:20:20.320655] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:20:20.320702] [D] [thread 132313] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:20:20.320767] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:20:20.320786] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:20:20.320836] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:20:20.320857] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[10:20:20.320888] [D] [thread 132313] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(16) on execution node with id 10[m
[36m[10:20:20.320900] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.320911] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.320932] [D] [thread 132313] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:20:20.320943] [D] [thread 132313] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:20:20.320970] [D] [thread 132313] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:20:20.320981] [D] [thread 132313] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:20:20.321028] [D] [thread 132313] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:20:20.321038] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.321054] [D] [thread 132313] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:20:20.321120] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[36m[10:20:20.321280] [D] [thread 132313] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:20:20.321298] [D] [thread 132313] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:20:20.321311] [D] [thread 132313] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 15 exists in the query plan or not[m
[36m[10:20:20.321320] [D] [thread 132313] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 15 in the query plan[m
[36m[10:20:20.321429] [D] [thread 132313] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9)) as root operator.[m
[36m[10:20:20.321474] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.321490] [D] [thread 132313] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:20:20.321522] [D] [thread 132313] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[10:20:20.321539] [D] [thread 132313] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:20:20.321553] [W] [thread 132313] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[10:20:20.321562] [D] [thread 132313] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[10:20:20.321611] [D] [thread 132313] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[10:20:20.321645] [D] [thread 132313] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:20:20.321660] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:20:20.321688] [I] [thread 132313] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[10:20:20.321708] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:20:20.321753] [D] [thread 132313] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:20:20.321812] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:20:20.321842] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:20:20.321950] [D] [thread 132313] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(17) on execution node with id 1[m
[36m[10:20:20.321965] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:20:20.321976] [W] [thread 132313] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:20:20.322065] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[36m[10:20:20.322239] [D] [thread 132313] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator CENTRALWINDOW(17) as new root of the plan.[m
[36m[10:20:20.322255] [D] [thread 132313] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:20.322263] [D] [thread 132313] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:20:20.322282] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.322305] [D] [thread 132313] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:20:20.322351] [D] [thread 132313] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[10:20:20.322383] [D] [thread 132313] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:20:20.322398] [W] [thread 132313] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 1 already scheduled[m
[36m[10:20:20.322416] [D] [thread 132313] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 1 to the query Id index.[m
[36m[10:20:20.322467] [D] [thread 132313] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 1 to the query Id 1[m
[36m[10:20:20.322516] [D] [thread 132313] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:20:20.322542] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:20:20.322557] [I] [thread 132313] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 1[m
[36m[10:20:20.322576] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:20:20.322632] [D] [thread 132313] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:20:20.322697] [D] [thread 132313] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:20:20.322721] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:20:20.322773] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:20:20.322785] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:20:20.322818] [D] [thread 132313] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SINK(4: {FileSinkDescriptor()}) on execution node with id 1[m
[36m[10:20:20.322829] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.322841] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.322864] [D] [thread 132313] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:20:20.322876] [D] [thread 132313] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:20:20.322903] [D] [thread 132313] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:20:20.322914] [D] [thread 132313] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:20:20.322953] [D] [thread 132313] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:20:20.322963] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.322990] [D] [thread 132313] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:20:20.323094] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[10:20:20.323252] [D] [thread 132313] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:20:20.323270] [D] [thread 132313] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:20:20.323284] [D] [thread 132313] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[10:20:20.323293] [D] [thread 132313] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 17 in the query plan[m
[36m[10:20:20.323390] [D] [thread 132313] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(17) as root operator.[m
[36m[10:20:20.323431] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.323446] [D] [thread 132313] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:20:20.323480] [D] [thread 132313] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[10:20:20.323496] [D] [thread 132313] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:20:20.323511] [W] [thread 132313] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 1 already scheduled[m
[36m[10:20:20.323520] [D] [thread 132313] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 1 to the query Id index.[m
[36m[10:20:20.323573] [D] [thread 132313] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 1 already mapped to the query Id 1[m
[36m[10:20:20.323609] [D] [thread 132313] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:20:20.323625] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:20:20.323640] [I] [thread 132313] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 1[m
[36m[10:20:20.323658] [D] [thread 132313] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:20:20.323678] [D] [thread 132313] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:20:20.323693] [D] [thread 132313] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:20:20.323713] [D] [thread 132313] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:20:20.323723] [D] [thread 132313] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:20:20.323739] [D] [thread 132313] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[32m[10:20:20.323778] [I] [thread 132313] [BasePlacementStrategy.cpp:361] [addNetworkSourceAndSinkOperators] [m
[36m[10:20:20.323802] [D] [thread 132313] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:20:20.323858] [D] [thread 132313] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 6 exists in the query plan or not[m
[36m[10:20:20.323879] [D] [thread 132313] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 6 in the query plan[m
[36m[10:20:20.323907] [D] [thread 132313] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:20:20.324030] [D] [thread 132313] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:20:20.324054] [D] [thread 132313] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:20:20.324075] [D] [thread 132313] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[10:20:20.324120] [D] [thread 132313] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:20:20.324188] [D] [thread 132313] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:20:20.324204] [D] [thread 132313] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:20:20.324229] [D] [thread 132313] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:20:20.324265] [D] [thread 132313] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:20:20.324274] [D] [thread 132313] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:20:20.324439] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:20:20.324523] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:20:20.324549] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[10:20:20.324573] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.324589] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.324616] [D] [thread 132313] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 6 exists in the query plan or not[m
[36m[10:20:20.324629] [D] [thread 132313] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 6 in the query plan[m
[32m[10:20:20.324774] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[36m[10:20:20.324957] [D] [thread 132313] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(6) as root operator.[m
[36m[10:20:20.325030] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[32m[10:20:20.325287] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[36m[10:20:20.325414] [D] [thread 132313] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(18,,NetworkSourceDescriptor{tcp://192.168.2.32:42335 1::18::0::0}) as new root of the plan.[m
[36m[10:20:20.325431] [D] [thread 132313] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:20.325439] [D] [thread 132313] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:20:20.325541] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[36m[10:20:20.325614] [D] [thread 132313] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(23: {NetworkSinkDescriptor(partition=1::21::0::0;nodeLocation=tcp://192.168.2.11:41695)}) as new root of the plan.[m
[36m[10:20:20.325727] [D] [thread 132313] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:20.325739] [D] [thread 132313] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:20:20.325763] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.325777] [D] [thread 132313] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:20:20.325842] [D] [thread 132313] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[10:20:20.325878] [D] [thread 132313] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:20:20.325903] [W] [thread 132313] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[10:20:20.325913] [D] [thread 132313] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[10:20:20.325973] [D] [thread 132313] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 2 to the query Id 1[m
[36m[10:20:20.326025] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:20:20.326039] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[10:20:20.326050] [D] [thread 132313] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[10:20:20.326063] [D] [thread 132313] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:20:20.326095] [D] [thread 132313] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[10:20:20.326112] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:20:20.326174] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:20:20.326188] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:20:20.326202] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.326213] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:20:20.326315] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[10:20:20.326360] [D] [thread 132313] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[10:20:20.326511] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:20:20.326528] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[10:20:20.326539] [D] [thread 132313] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[10:20:20.326548] [D] [thread 132313] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:20:20.326569] [D] [thread 132313] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[10:20:20.326598] [D] [thread 132313] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:20:20.326640] [D] [thread 132313] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[10:20:20.326653] [D] [thread 132313] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[36m[10:20:20.326678] [D] [thread 132313] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:20:20.326785] [D] [thread 132313] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:20:20.326845] [D] [thread 132313] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:20:20.326887] [D] [thread 132313] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:20:20.326926] [D] [thread 132313] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:20:20.326991] [D] [thread 132313] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:20:20.327005] [D] [thread 132313] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:20:20.327031] [D] [thread 132313] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:20:20.327043] [D] [thread 132313] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:20:20.327050] [D] [thread 132313] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:20:20.327119] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:20:20.327185] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:20:20.327210] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[10:20:20.327229] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.327243] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.327269] [D] [thread 132313] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[10:20:20.327281] [D] [thread 132313] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[32m[10:20:20.327348] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[36m[10:20:20.327498] [D] [thread 132313] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(8) as root operator.[m
[36m[10:20:20.327566] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:20:20.327608] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:20:20.327620] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[10:20:20.327771] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[36m[10:20:20.327855] [D] [thread 132313] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(24,,NetworkSourceDescriptor{tcp://192.168.2.33:34273 1::24::0::0}) as new root of the plan.[m
[36m[10:20:20.327868] [D] [thread 132313] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:20.327876] [D] [thread 132313] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:20:20.327951] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 29[m
[36m[10:20:20.328014] [D] [thread 132313] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(29: {NetworkSinkDescriptor(partition=1::27::0::0;nodeLocation=tcp://192.168.2.11:41695)}) as new root of the plan.[m
[36m[10:20:20.328119] [D] [thread 132313] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:20.328132] [D] [thread 132313] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:20:20.328170] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.328187] [D] [thread 132313] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:20:20.328241] [D] [thread 132313] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[10:20:20.328259] [D] [thread 132313] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:20:20.328274] [W] [thread 132313] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[10:20:20.328284] [D] [thread 132313] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[10:20:20.328379] [D] [thread 132313] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[10:20:20.328418] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:20:20.328431] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[10:20:20.328442] [D] [thread 132313] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  6[m
[36m[10:20:20.328451] [D] [thread 132313] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:20:20.328500] [D] [thread 132313] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[10:20:20.328518] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:20:20.328574] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:20:20.328592] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:20:20.328607] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.328619] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:20:20.328718] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 27[m
[36m[10:20:20.328763] [D] [thread 132313] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[10:20:20.328917] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:20:20.328934] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[10:20:20.328945] [D] [thread 132313] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[10:20:20.328953] [D] [thread 132313] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:20:20.328967] [D] [thread 132313] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[10:20:20.328994] [D] [thread 132313] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:20:20.329036] [D] [thread 132313] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[10:20:20.329048] [D] [thread 132313] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 10 in the query plan[m
[36m[10:20:20.329072] [D] [thread 132313] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:20:20.329182] [D] [thread 132313] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:20:20.329229] [D] [thread 132313] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:20:20.329267] [D] [thread 132313] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[10:20:20.329305] [D] [thread 132313] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:20:20.329369] [D] [thread 132313] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:20:20.329383] [D] [thread 132313] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:20:20.329409] [D] [thread 132313] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:20:20.329421] [D] [thread 132313] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:20:20.329442] [D] [thread 132313] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:20:20.329515] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:20:20.329579] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:20:20.329592] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[10:20:20.329619] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.329635] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.329660] [D] [thread 132313] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[10:20:20.329673] [D] [thread 132313] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 10 in the query plan[m
[32m[10:20:20.329739] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 32[m
[36m[10:20:20.329884] [D] [thread 132313] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(10) as root operator.[m
[36m[10:20:20.329951] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[32m[10:20:20.330145] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 30[m
[36m[10:20:20.330232] [D] [thread 132313] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.34:43321 1::30::0::0}) as new root of the plan.[m
[36m[10:20:20.330246] [D] [thread 132313] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:20.330253] [D] [thread 132313] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:20:20.330325] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 35[m
[36m[10:20:20.330404] [D] [thread 132313] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:41695)}) as new root of the plan.[m
[36m[10:20:20.330509] [D] [thread 132313] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:20.330521] [D] [thread 132313] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:20:20.330547] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.330561] [D] [thread 132313] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:20:20.330613] [D] [thread 132313] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[10:20:20.330641] [D] [thread 132313] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:20:20.330658] [W] [thread 132313] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[10:20:20.330667] [D] [thread 132313] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[10:20:20.330725] [D] [thread 132313] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 3 to the query Id 1[m
[36m[10:20:20.330772] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:20:20.330785] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[10:20:20.330796] [D] [thread 132313] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  7[m
[36m[10:20:20.330804] [D] [thread 132313] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:20:20.330832] [D] [thread 132313] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[10:20:20.330848] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:20:20.330898] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:20:20.330910] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:20:20.330923] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.330934] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:20:20.331024] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 33[m
[36m[10:20:20.331067] [D] [thread 132313] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[10:20:20.331220] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:20:20.331238] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[10:20:20.331249] [D] [thread 132313] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[10:20:20.331259] [D] [thread 132313] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:20:20.331284] [D] [thread 132313] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[10:20:20.331314] [D] [thread 132313] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:20:20.331351] [D] [thread 132313] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[10:20:20.331364] [D] [thread 132313] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 12 in the query plan[m
[36m[10:20:20.331388] [D] [thread 132313] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:20:20.331495] [D] [thread 132313] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:20:20.331544] [D] [thread 132313] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:20:20.331580] [D] [thread 132313] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 3 source operators.[m
[36m[10:20:20.331621] [D] [thread 132313] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:20:20.331685] [D] [thread 132313] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:20:20.331699] [D] [thread 132313] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:20:20.331723] [D] [thread 132313] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:20:20.331736] [D] [thread 132313] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:20:20.331743] [D] [thread 132313] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:20:20.331810] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:20:20.331873] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:20:20.331886] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[10:20:20.331914] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.331929] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.331955] [D] [thread 132313] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[10:20:20.331967] [D] [thread 132313] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 12 in the query plan[m
[32m[10:20:20.332068] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 38[m
[36m[10:20:20.332220] [D] [thread 132313] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(12) as root operator.[m
[36m[10:20:20.332290] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:20:20.332371] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:20:20.332387] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[32m[10:20:20.332535] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 36[m
[36m[10:20:20.332624] [D] [thread 132313] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.35:45185 1::36::0::0}) as new root of the plan.[m
[36m[10:20:20.332639] [D] [thread 132313] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:20.332659] [D] [thread 132313] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:20:20.332743] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 41[m
[36m[10:20:20.332811] [D] [thread 132313] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.11:41695)}) as new root of the plan.[m
[36m[10:20:20.332940] [D] [thread 132313] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:20.332953] [D] [thread 132313] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:20:20.332979] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.332996] [D] [thread 132313] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:20:20.333043] [D] [thread 132313] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[10:20:20.333059] [D] [thread 132313] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:20:20.333074] [W] [thread 132313] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[10:20:20.333082] [D] [thread 132313] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[10:20:20.333143] [D] [thread 132313] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 3 already mapped to the query Id 1[m
[36m[10:20:20.333174] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:20:20.333185] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[10:20:20.333196] [D] [thread 132313] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  8[m
[36m[10:20:20.333205] [D] [thread 132313] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:20:20.333241] [D] [thread 132313] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[10:20:20.333257] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:20:20.333307] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:20:20.333319] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:20:20.333341] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.333352] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:20:20.333443] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 39[m
[36m[10:20:20.333500] [D] [thread 132313] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[10:20:20.333708] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:20:20.333726] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[10:20:20.333739] [D] [thread 132313] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[10:20:20.333749] [D] [thread 132313] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:20:20.333764] [D] [thread 132313] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  3[m
[36m[10:20:20.333791] [D] [thread 132313] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:20:20.333832] [D] [thread 132313] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[10:20:20.333846] [D] [thread 132313] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[36m[10:20:20.333881] [D] [thread 132313] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:20:20.333993] [D] [thread 132313] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:20:20.334055] [D] [thread 132313] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:20:20.334095] [D] [thread 132313] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 4 source operators.[m
[36m[10:20:20.334134] [D] [thread 132313] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:20:20.334200] [D] [thread 132313] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:20:20.334214] [D] [thread 132313] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:20:20.334239] [D] [thread 132313] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:20:20.334251] [D] [thread 132313] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:20:20.334258] [D] [thread 132313] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:20:20.334327] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:20:20.334395] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:20:20.334408] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[10:20:20.334423] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.334437] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.334464] [D] [thread 132313] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[10:20:20.334477] [D] [thread 132313] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[32m[10:20:20.334545] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 44[m
[36m[10:20:20.334689] [D] [thread 132313] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(14) as root operator.[m
[36m[10:20:20.334754] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[32m[10:20:20.334922] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 42[m
[36m[10:20:20.335004] [D] [thread 132313] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.37:41851 1::42::0::0}) as new root of the plan.[m
[36m[10:20:20.335017] [D] [thread 132313] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:20.335025] [D] [thread 132313] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:20:20.335093] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 47[m
[36m[10:20:20.335156] [D] [thread 132313] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.11:41695)}) as new root of the plan.[m
[36m[10:20:20.335260] [D] [thread 132313] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:20.335272] [D] [thread 132313] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:20:20.335294] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.335306] [D] [thread 132313] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:20:20.335357] [D] [thread 132313] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[10:20:20.335387] [D] [thread 132313] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:20:20.335403] [W] [thread 132313] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[10:20:20.335425] [D] [thread 132313] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[10:20:20.335483] [D] [thread 132313] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 4 to the query Id 1[m
[36m[10:20:20.335533] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:20:20.335546] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[10:20:20.335557] [D] [thread 132313] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  9[m
[36m[10:20:20.335567] [D] [thread 132313] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:20:20.335608] [D] [thread 132313] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[10:20:20.335625] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:20:20.335704] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:20:20.335721] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:20:20.335736] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.335748] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:20:20.335848] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 45[m
[36m[10:20:20.335894] [D] [thread 132313] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[10:20:20.336075] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[10:20:20.336092] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[10:20:20.336105] [D] [thread 132313] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[10:20:20.336115] [D] [thread 132313] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:20:20.336142] [D] [thread 132313] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[10:20:20.336171] [D] [thread 132313] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:20:20.336215] [D] [thread 132313] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[10:20:20.336229] [D] [thread 132313] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 16 in the query plan[m
[36m[10:20:20.336253] [D] [thread 132313] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:20:20.336395] [D] [thread 132313] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:20:20.336456] [D] [thread 132313] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:20:20.336498] [D] [thread 132313] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 5 source operators.[m
[36m[10:20:20.336540] [D] [thread 132313] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:20:20.336605] [D] [thread 132313] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:20:20.336620] [D] [thread 132313] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:20:20.336645] [D] [thread 132313] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:20:20.336656] [D] [thread 132313] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:20:20.336663] [D] [thread 132313] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:20:20.336735] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:20:20.336805] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:20:20.336818] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[10:20:20.336834] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.336849] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.336875] [D] [thread 132313] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[10:20:20.336887] [D] [thread 132313] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 16 in the query plan[m
[32m[10:20:20.336955] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 50[m
[36m[10:20:20.337117] [D] [thread 132313] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(16) as root operator.[m
[36m[10:20:20.337185] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[10:20:20.337233] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[10:20:20.337245] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[32m[10:20:20.337375] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 48[m
[36m[10:20:20.337462] [D] [thread 132313] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.38:34819 1::48::0::0}) as new root of the plan.[m
[36m[10:20:20.337475] [D] [thread 132313] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:20.337483] [D] [thread 132313] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:20:20.337556] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 53[m
[36m[10:20:20.337663] [D] [thread 132313] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:41695)}) as new root of the plan.[m
[36m[10:20:20.337777] [D] [thread 132313] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:20.337790] [D] [thread 132313] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:20:20.337814] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.337830] [D] [thread 132313] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:20:20.337877] [D] [thread 132313] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[10:20:20.337905] [D] [thread 132313] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:20:20.337922] [W] [thread 132313] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[10:20:20.337932] [D] [thread 132313] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[10:20:20.337994] [D] [thread 132313] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 4 already mapped to the query Id 1[m
[36m[10:20:20.338032] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:20:20.338044] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[10:20:20.338055] [D] [thread 132313] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  10[m
[36m[10:20:20.338064] [D] [thread 132313] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:20:20.338108] [D] [thread 132313] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[10:20:20.338126] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:20:20.338177] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:20:20.338193] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:20:20.338209] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.338219] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:20:20.338313] [I] [thread 132313] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 51[m
[36m[10:20:20.338355] [D] [thread 132313] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[10:20:20.338521] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[10:20:20.338540] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[10:20:20.338552] [D] [thread 132313] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[10:20:20.338561] [D] [thread 132313] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:20:20.338574] [D] [thread 132313] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  4[m
[36m[10:20:20.338608] [D] [thread 132313] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:20:20.338640] [D] [thread 132313] [GlobalExecutionPlan.cpp:33] [checkIfExecutionNodeIsARoot] GlobalExecutionPlan: Checking if Execution node with id 1 is a root node[m
[36m[10:20:20.338671] [D] [thread 132313] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:20:20.338682] [D] [thread 132313] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:20:20.338698] [D] [thread 132313] [GlobalExecutionPlan.cpp:68] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node as root node[m
[36m[10:20:20.338716] [D] [thread 132313] [GlobalExecutionPlan.cpp:72] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[10:20:20.338749] [D] [thread 132313] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[10:20:20.338761] [D] [thread 132313] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[10:20:20.338792] [D] [thread 132313] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:20:20.338855] [D] [thread 132313] [BasePlacementStrategy.cpp:337] [runTypeInferencePhase] BasePlacementStrategy: Run type inference phase for all the query sub plans to be deployed.[m
[36m[10:20:20.338877] [D] [thread 132313] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[10:20:20.338897] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.338910] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.339124] [D] [thread 132313] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:20:20.339179] [D] [thread 132313] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:20:20.339213] [D] [thread 132313] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:20:20.339256] [D] [thread 132313] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:20:20.339280] [D] [thread 132313] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:20:20.339702] [D] [thread 132313] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:20:20.339752] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.339767] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.339894] [D] [thread 132313] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:20:20.339925] [D] [thread 132313] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:20:20.339950] [D] [thread 132313] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:20:20.339983] [D] [thread 132313] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:20:20.340003] [D] [thread 132313] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:20:20.340404] [D] [thread 132313] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:20:20.340449] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.340465] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.340591] [D] [thread 132313] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:20:20.340626] [D] [thread 132313] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:20:20.340652] [D] [thread 132313] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:20:20.340685] [D] [thread 132313] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:20:20.340706] [D] [thread 132313] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:20:20.341068] [D] [thread 132313] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:20:20.341107] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.341121] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.341233] [D] [thread 132313] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:20:20.341262] [D] [thread 132313] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:20:20.341287] [D] [thread 132313] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:20:20.341317] [D] [thread 132313] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:20:20.341336] [D] [thread 132313] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:20:20.341678] [D] [thread 132313] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:20:20.341714] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.341727] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.341831] [D] [thread 132313] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:20:20.341860] [D] [thread 132313] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:20:20.341882] [D] [thread 132313] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:20:20.341907] [D] [thread 132313] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:20:20.341926] [D] [thread 132313] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:20:20.342273] [D] [thread 132313] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:20:20.342310] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.342339] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.342448] [D] [thread 132313] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:20:20.342478] [D] [thread 132313] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:20:20.342502] [D] [thread 132313] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:20:20.342531] [D] [thread 132313] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:20:20.342551] [D] [thread 132313] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:20:20.342888] [D] [thread 132313] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:20:20.342922] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.342943] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.343090] [D] [thread 132313] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:20:20.343136] [D] [thread 132313] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:20:20.343170] [D] [thread 132313] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 6 source operators.[m
[36m[10:20:20.343201] [D] [thread 132313] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:20:20.343220] [D] [thread 132313] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:20:20.343680] [D] [thread 132313] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[10:20:20.343971] [I] [thread 132313] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[10:20:20.344070] [I] [thread 132313] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[10:20:20.344168] [D] [thread 132313] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:20:20.344211] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.344227] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.344445] [D] [thread 132313] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:20:20.344490] [D] [thread 132313] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:20:20.344521] [D] [thread 132313] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:20:20.344571] [D] [thread 132313] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:20:20.344596] [D] [thread 132313] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:20:20.344792] [D] [thread 132313] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:20:20.344890] [D] [thread 132313] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:20:20.344915] [D] [thread 132313] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:20:20.344950] [D] [thread 132313] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:20:20.344976] [D] [thread 132313] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:20:20.344995] [D] [thread 132313] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:20:20.345214] [D] [thread 132313] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:20:20.345249] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.345276] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.345377] [D] [thread 132313] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:20:20.345407] [D] [thread 132313] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:20:20.345428] [D] [thread 132313] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:20:20.345452] [D] [thread 132313] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:20:20.345471] [D] [thread 132313] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:20:20.345645] [D] [thread 132313] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:20:20.345732] [D] [thread 132313] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:20:20.345756] [D] [thread 132313] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:20:20.345777] [D] [thread 132313] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:20:20.345797] [D] [thread 132313] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:20:20.345826] [D] [thread 132313] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:20:20.346030] [D] [thread 132313] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:20:20.346063] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.346078] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.346184] [D] [thread 132313] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:20:20.346212] [D] [thread 132313] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:20:20.346233] [D] [thread 132313] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:20:20.346258] [D] [thread 132313] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:20:20.346278] [D] [thread 132313] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:20:20.346501] [D] [thread 132313] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:20:20.346601] [D] [thread 132313] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:20:20.346626] [D] [thread 132313] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:20:20.346648] [D] [thread 132313] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:20:20.346672] [D] [thread 132313] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:20:20.346690] [D] [thread 132313] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:20:20.346859] [D] [thread 132313] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:20:20.346906] [D] [thread 132313] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[36m[10:20:20.348773] [D] [thread 132313] [QueryPlacementPhase.cpp:140] [execute] QueryPlacementPhase: Update Global Execution Plan:
ExecutionNode(id:1, ip:192.168.2.11, topologyId:1)
| QuerySubPlan(queryId:1, querySubPlanId:7)
|  SINK(4: {FileSinkDescriptor()})
|    CENTRALWINDOW(17)
|      SOURCE(21,,NetworkSourceDescriptor{tcp://192.168.2.12:38829 1::21::0::0})
|      SOURCE(27,,NetworkSourceDescriptor{tcp://192.168.2.12:38829 1::27::0::0})
|      SOURCE(33,,NetworkSourceDescriptor{tcp://192.168.2.30:33039 1::33::0::0})
|      SOURCE(39,,NetworkSourceDescriptor{tcp://192.168.2.30:33039 1::39::0::0})
|      SOURCE(45,,NetworkSourceDescriptor{tcp://192.168.2.31:45699 1::45::0::0})
|      SOURCE(51,,NetworkSourceDescriptor{tcp://192.168.2.31:45699 1::51::0::0})
|--ExecutionNode(id:2, ip:192.168.2.12, topologyId:2)
|  | QuerySubPlan(queryId:1, querySubPlanId:8)
|  |  SINK(23: {NetworkSinkDescriptor(partition=1::21::0::0;nodeLocation=tcp://192.168.2.11:41695)})
|  |    SOURCE(18,,NetworkSourceDescriptor{tcp://192.168.2.32:42335 1::18::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:9)
|  |  SINK(29: {NetworkSinkDescriptor(partition=1::27::0::0;nodeLocation=tcp://192.168.2.11:41695)})
|  |    SOURCE(24,,NetworkSourceDescriptor{tcp://192.168.2.33:34273 1::24::0::0})
|  |--ExecutionNode(id:5, ip:192.168.2.32, topologyId:5)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:1)
|  |  |  SINK(20: {NetworkSinkDescriptor(partition=1::18::0::0;nodeLocation=tcp://192.168.2.12:38829)})
|  |  |    WATERMARKASSIGNER(6)
|  |  |      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
|  |--ExecutionNode(id:6, ip:192.168.2.33, topologyId:6)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:2)
|  |  |  SINK(26: {NetworkSinkDescriptor(partition=1::24::0::0;nodeLocation=tcp://192.168.2.12:38829)})
|  |  |    WATERMARKASSIGNER(8)
|  |  |      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
|--ExecutionNode(id:3, ip:192.168.2.30, topologyId:3)
|  | QuerySubPlan(queryId:1, querySubPlanId:10)
|  |  SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:41695)})
|  |    SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.34:43321 1::30::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:11)
|  |  SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.11:41695)})
|  |    SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.35:45185 1::36::0::0})
|  |--ExecutionNode(id:7, ip:192.168.2.34, topologyId:7)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:3)
|  |  |  SINK(32: {NetworkSinkDescriptor(partition=1::30::0::0;nodeLocation=tcp://192.168.2.30:33039)})
|  |  |    WATERMARKASSIGNER(10)
|  |  |      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
|  |--ExecutionNode(id:8, ip:192.168.2.35, topologyId:8)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:4)
|  |  |  SINK(38: {NetworkSinkDescriptor(partition=1::36::0::0;nodeLocation=tcp://192.168.2.30:33039)})
|  |  |    WATERMARKASSIGNER(12)
|  |  |      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
|--ExecutionNode(id:4, ip:192.168.2.31, topologyId:4)
|  | QuerySubPlan(queryId:1, querySubPlanId:12)
|  |  SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.11:41695)})
|  |    SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.37:41851 1::42::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:13)
|  |  SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:41695)})
|  |    SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.38:34819 1::48::0::0})
|  |--ExecutionNode(id:9, ip:192.168.2.37, topologyId:9)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:5)
|  |  |  SINK(44: {NetworkSinkDescriptor(partition=1::42::0::0;nodeLocation=tcp://192.168.2.31:45699)})
|  |  |    WATERMARKASSIGNER(14)
|  |  |      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
|  |--ExecutionNode(id:10, ip:192.168.2.38, topologyId:10)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:6)
|  |  |  SINK(50: {NetworkSinkDescriptor(partition=1::48::0::0;nodeLocation=tcp://192.168.2.31:45699)})
|  |  |    WATERMARKASSIGNER(16)
|  |  |      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[10:20:20.348922] [D] [thread 132313] [QueryDeploymentPhase.cpp:54] [execute] QueryDeploymentPhase: deploy the query[m
[36m[10:20:20.348957] [D] [thread 132313] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[10:20:20.349244] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.349272] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.349508] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.349532] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.349603] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.349617] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.349656] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.349667] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.349703] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.349715] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.349749] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.349761] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.349795] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.349824] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.349874] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.349887] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.349947] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.349960] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.350015] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.350027] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.350214] [D] [thread 132313] [QueryDeploymentPhase.cpp:106] [deployQuery] QueryDeploymentPhase::deployQuery queryId= 1[m
[36m[10:20:20.350248] [D] [thread 132313] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=5[m
[36m[10:20:20.350258] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.350269] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.350466] [D] [thread 132313] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.32:33899[m
[36m[10:20:20.350514] [D] [thread 132313] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:33899 queryId=1 querySubPlanId = 1[m
[36m[10:20:20.350796] [D] [thread 132313] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(20: {NetworkSinkDescriptor(partition=1::18::0::0;nodeLocation=tcp://192.168.2.12:38829)})
  WATERMARKASSIGNER(6)
    SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
[m
[36m[10:20:20.350837] [D] [thread 132313] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:20:20.351125] [D] [thread 132313] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:20:20.355153] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.356193] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.356689] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.357082] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.357852] [D] [thread 132313] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[10:20:20.358909] [D] [thread 132313] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:20:20.359298] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.359657] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.359908] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.360222] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.360765] [D] [thread 132313] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream4)[m
[36m[10:20:20.361030] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.361400] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.361955] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.362340] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.362586] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.362902] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.374530] [D] [thread 132313] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=6[m
[36m[10:20:20.374617] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.374680] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.374807] [D] [thread 132313] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.33:44393[m
[36m[10:20:20.374845] [D] [thread 132313] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:44393 queryId=1 querySubPlanId = 2[m
[36m[10:20:20.375044] [D] [thread 132313] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(26: {NetworkSinkDescriptor(partition=1::24::0::0;nodeLocation=tcp://192.168.2.12:38829)})
  WATERMARKASSIGNER(8)
    SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
[m
[36m[10:20:20.375131] [D] [thread 132313] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:20:20.375298] [D] [thread 132313] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:20:20.375631] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.376015] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.376288] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.376669] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.377171] [D] [thread 132313] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[10:20:20.377277] [D] [thread 132313] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:20:20.377504] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.377871] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.378123] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.378468] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.378885] [D] [thread 132313] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream5)[m
[36m[10:20:20.379095] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.379463] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.379844] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.380196] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.380477] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.380837] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.389680] [D] [thread 132313] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=7[m
[36m[10:20:20.389809] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.389829] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.389950] [D] [thread 132313] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.34:35677[m
[36m[10:20:20.389984] [D] [thread 132313] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.34:35677 queryId=1 querySubPlanId = 3[m
[36m[10:20:20.390180] [D] [thread 132313] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(32: {NetworkSinkDescriptor(partition=1::30::0::0;nodeLocation=tcp://192.168.2.30:33039)})
  WATERMARKASSIGNER(10)
    SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
[m
[36m[10:20:20.390214] [D] [thread 132313] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:20:20.390385] [D] [thread 132313] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:20:20.390724] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.391113] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.391386] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.391731] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.392214] [D] [thread 132313] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[10:20:20.392344] [D] [thread 132313] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:20:20.392585] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.392953] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.393207] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.393547] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.393952] [D] [thread 132313] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream6)[m
[36m[10:20:20.394155] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.394513] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.394898] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.395241] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.395485] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.395833] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.404164] [D] [thread 132313] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=8[m
[36m[10:20:20.404250] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.404282] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.404441] [D] [thread 132313] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.35:45919[m
[36m[10:20:20.404481] [D] [thread 132313] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.35:45919 queryId=1 querySubPlanId = 4[m
[36m[10:20:20.404750] [D] [thread 132313] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(38: {NetworkSinkDescriptor(partition=1::36::0::0;nodeLocation=tcp://192.168.2.30:33039)})
  WATERMARKASSIGNER(12)
    SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
[m
[36m[10:20:20.404788] [D] [thread 132313] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:20:20.404964] [D] [thread 132313] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:20:20.405307] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.405691] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.405963] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.406308] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.406798] [D] [thread 132313] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[10:20:20.406906] [D] [thread 132313] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:20:20.407138] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.407503] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.407766] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.408106] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.408584] [D] [thread 132313] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream7)[m
[36m[10:20:20.408799] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.409174] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.409570] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.409927] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.410176] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.410521] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.418712] [D] [thread 132313] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=9[m
[36m[10:20:20.418797] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.418829] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.418948] [D] [thread 132313] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.37:44265[m
[36m[10:20:20.418978] [D] [thread 132313] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.37:44265 queryId=1 querySubPlanId = 5[m
[36m[10:20:20.419171] [D] [thread 132313] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(44: {NetworkSinkDescriptor(partition=1::42::0::0;nodeLocation=tcp://192.168.2.31:45699)})
  WATERMARKASSIGNER(14)
    SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
[m
[36m[10:20:20.419203] [D] [thread 132313] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:20:20.419358] [D] [thread 132313] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:20:20.419749] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.420131] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.420441] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.420796] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.421305] [D] [thread 132313] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[10:20:20.421416] [D] [thread 132313] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:20:20.421643] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.422008] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.422264] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.422604] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.423029] [D] [thread 132313] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream8)[m
[36m[10:20:20.423233] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.423598] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.423980] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.424403] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.424676] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.425030] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.433268] [D] [thread 132313] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=10[m
[36m[10:20:20.433351] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.433382] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.433499] [D] [thread 132313] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.38:37017[m
[36m[10:20:20.433528] [D] [thread 132313] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.38:37017 queryId=1 querySubPlanId = 6[m
[36m[10:20:20.433721] [D] [thread 132313] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(50: {NetworkSinkDescriptor(partition=1::48::0::0;nodeLocation=tcp://192.168.2.31:45699)})
  WATERMARKASSIGNER(16)
    SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[10:20:20.433755] [D] [thread 132313] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:20:20.433909] [D] [thread 132313] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:20:20.434253] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.434642] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.434924] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.435272] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.435764] [D] [thread 132313] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[10:20:20.435870] [D] [thread 132313] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:20:20.436099] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.436532] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.436804] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.437149] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.437593] [D] [thread 132313] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream9)[m
[36m[10:20:20.437803] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.438174] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.438578] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.438938] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.439190] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.439535] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.447781] [D] [thread 132313] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=1[m
[36m[10:20:20.447868] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.447930] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.448051] [D] [thread 132313] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.11:38421[m
[36m[10:20:20.448082] [D] [thread 132313] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.11:38421 queryId=1 querySubPlanId = 7[m
[36m[10:20:20.448439] [D] [thread 132313] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(17)
    SOURCE(21,,NetworkSourceDescriptor{tcp://192.168.2.12:38829 1::21::0::0})
    SOURCE(27,,NetworkSourceDescriptor{tcp://192.168.2.12:38829 1::27::0::0})
    SOURCE(33,,NetworkSourceDescriptor{tcp://192.168.2.30:33039 1::33::0::0})
    SOURCE(39,,NetworkSourceDescriptor{tcp://192.168.2.30:33039 1::39::0::0})
    SOURCE(45,,NetworkSourceDescriptor{tcp://192.168.2.31:45699 1::45::0::0})
    SOURCE(51,,NetworkSourceDescriptor{tcp://192.168.2.31:45699 1::51::0::0})
[m
[36m[10:20:20.448493] [D] [thread 132313] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:20:20.448641] [D] [thread 132313] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:20:20.448926] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[10:20:20.449121] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.449282] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[10:20:20.449430] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.449842] [D] [thread 132313] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[10:20:20.449985] [D] [thread 132313] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:20:20.450279] [D] [thread 132313] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[10:20:20.450392] [D] [thread 132313] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:20:20.450434] [D] [thread 132313] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[10:20:20.450498] [D] [thread 132313] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:20:20.451006] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.451391] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.451598] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[10:20:20.451746] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.452156] [D] [thread 132313] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:38829 1::21::0::0}[m
[36m[10:20:20.452420] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.452816] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.453347] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.453716] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.453973] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.454320] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.454811] [D] [thread 132313] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:38829 1::27::0::0}[m
[36m[10:20:20.455004] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.455374] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.455792] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.456143] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.456426] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.456780] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.457254] [D] [thread 132313] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:33039 1::33::0::0}[m
[36m[10:20:20.457442] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.457820] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.458231] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.458584] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.458826] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.459165] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.459626] [D] [thread 132313] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:33039 1::39::0::0}[m
[36m[10:20:20.459815] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.460181] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.460624] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.460976] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.461225] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.461563] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.462047] [D] [thread 132313] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:45699 1::45::0::0}[m
[36m[10:20:20.462239] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.462618] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.463035] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.463391] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.463635] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.463976] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.464507] [D] [thread 132313] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:45699 1::51::0::0}[m
[36m[10:20:20.464703] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.465081] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.465500] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.465847] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.466092] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.466431] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.481057] [D] [thread 132313] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=2[m
[36m[10:20:20.481144] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.481167] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.481304] [D] [thread 132313] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.12:43279[m
[36m[10:20:20.481340] [D] [thread 132313] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:43279 queryId=1 querySubPlanId = 8[m
[36m[10:20:20.481548] [D] [thread 132313] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(23: {NetworkSinkDescriptor(partition=1::21::0::0;nodeLocation=tcp://192.168.2.11:41695)})
  SOURCE(18,,NetworkSourceDescriptor{tcp://192.168.2.32:42335 1::18::0::0})
[m
[36m[10:20:20.481583] [D] [thread 132313] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:20:20.481734] [D] [thread 132313] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:20:20.482049] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.482436] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.482709] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.483048] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.483521] [D] [thread 132313] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:42335 1::18::0::0}[m
[36m[10:20:20.483715] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.484083] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.484665] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.485056] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.485331] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.485696] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.493034] [D] [thread 132313] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:43279 queryId=1 querySubPlanId = 9[m
[36m[10:20:20.493307] [D] [thread 132313] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(29: {NetworkSinkDescriptor(partition=1::27::0::0;nodeLocation=tcp://192.168.2.11:41695)})
  SOURCE(24,,NetworkSourceDescriptor{tcp://192.168.2.33:34273 1::24::0::0})
[m
[36m[10:20:20.493356] [D] [thread 132313] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:20:20.493523] [D] [thread 132313] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:20:20.493856] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.494241] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.494516] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.494861] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.495346] [D] [thread 132313] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:34273 1::24::0::0}[m
[36m[10:20:20.495541] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.495908] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.496381] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.496744] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.497005] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.497358] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.504838] [D] [thread 132313] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=3[m
[36m[10:20:20.504916] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.504949] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.505069] [D] [thread 132313] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.30:33875[m
[36m[10:20:20.505099] [D] [thread 132313] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:33875 queryId=1 querySubPlanId = 10[m
[36m[10:20:20.505297] [D] [thread 132313] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:41695)})
  SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.34:43321 1::30::0::0})
[m
[36m[10:20:20.505330] [D] [thread 132313] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:20:20.505504] [D] [thread 132313] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:20:20.505847] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.506235] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.506508] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.506866] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.507354] [D] [thread 132313] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.34:43321 1::30::0::0}[m
[36m[10:20:20.507552] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.507925] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.508416] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.508787] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.509055] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.509404] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.516676] [D] [thread 132313] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:33875 queryId=1 querySubPlanId = 11[m
[36m[10:20:20.516949] [D] [thread 132313] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.11:41695)})
  SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.35:45185 1::36::0::0})
[m
[36m[10:20:20.516998] [D] [thread 132313] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:20:20.517162] [D] [thread 132313] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:20:20.517494] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.517887] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.518161] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.518502] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.518984] [D] [thread 132313] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.35:45185 1::36::0::0}[m
[36m[10:20:20.519182] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.519550] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.519988] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.520432] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.520695] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.521047] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.528217] [D] [thread 132313] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=4[m
[36m[10:20:20.528306] [D] [thread 132313] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:20:20.528409] [D] [thread 132313] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:20:20.528541] [D] [thread 132313] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.31:42073[m
[36m[10:20:20.528571] [D] [thread 132313] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:42073 queryId=1 querySubPlanId = 12[m
[36m[10:20:20.528767] [D] [thread 132313] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.11:41695)})
  SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.37:41851 1::42::0::0})
[m
[36m[10:20:20.528821] [D] [thread 132313] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:20:20.528984] [D] [thread 132313] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:20:20.529317] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.529725] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.530000] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.530344] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.530828] [D] [thread 132313] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.37:41851 1::42::0::0}[m
[36m[10:20:20.531023] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.531394] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.531852] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.532225] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.532522] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.532881] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.540234] [D] [thread 132313] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:42073 queryId=1 querySubPlanId = 13[m
[36m[10:20:20.540542] [D] [thread 132313] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:41695)})
  SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.38:34819 1::48::0::0})
[m
[36m[10:20:20.540594] [D] [thread 132313] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:20:20.540761] [D] [thread 132313] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:20:20.541095] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.541483] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.541758] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.542105] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.542580] [D] [thread 132313] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.38:34819 1::48::0::0}[m
[36m[10:20:20.542773] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.543139] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.543573] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.543935] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.544193] [D] [thread 132313] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:20.544574] [D] [thread 132313] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:20:20.551942] [D] [thread 132313] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Register for 10 queues[m
[36m[10:20:20.707428] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:20.707896] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:21.708539] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:21.739060] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:21.739478] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:21.907442] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:21.907788] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:22.257999] [D] [thread 132330] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[10:20:22.258236] [D] [thread 132330] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:20:22.259528] [D] [thread 132330] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:20:22.259797] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 54[m
[36m[10:20:22.259979] [D] [thread 132330] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:20:22.261179] [D] [thread 132330] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:20:22.261289] [D] [thread 132330] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:20:22.262405] [D] [thread 132330] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:20:22.265845] [D] [thread 132330] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[10:20:22.266100] [D] [thread 132330] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:20:22.267377] [D] [thread 132330] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:20:22.267594] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 55[m
[36m[10:20:22.267674] [D] [thread 132330] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:20:22.268887] [D] [thread 132330] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:20:22.268981] [D] [thread 132330] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:20:22.270085] [D] [thread 132330] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:20:22.272838] [D] [thread 132330] [ExpressionSerializationUtil.cpp:170] [deserializeExpression] ExpressionSerializationUtil:: deserialize expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:20:22.272929] [D] [thread 132330] [ExpressionSerializationUtil.cpp:691] [deserializeLogicalExpressions] ExpressionSerializationUtil:: de-serialize logical expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:20:22.273151] [D] [thread 132330] [ExpressionSerializationUtil.cpp:762] [deserializeGeographyExpressions] ExpressionSerializationUtil:: de-serialize geography expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:20:22.273195] [D] [thread 132330] [ExpressionSerializationUtil.cpp:830] [deserializeUDFCallExpressions] ExpressionSerializationUtil:: de-serialize udf call expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:20:22.273748] [D] [thread 132330] [ExpressionSerializationUtil.cpp:284] [deserializeExpression] ExpressionSerializationUtil:: deserialized expression node to the following node: FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[10:20:22.273835] [D] [thread 132330] [ExpressionSerializationUtil.cpp:170] [deserializeExpression] ExpressionSerializationUtil:: deserialize expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:20:22.273848] [D] [thread 132330] [ExpressionSerializationUtil.cpp:691] [deserializeLogicalExpressions] ExpressionSerializationUtil:: de-serialize logical expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:20:22.273894] [D] [thread 132330] [ExpressionSerializationUtil.cpp:762] [deserializeGeographyExpressions] ExpressionSerializationUtil:: de-serialize geography expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:20:22.273909] [D] [thread 132330] [ExpressionSerializationUtil.cpp:830] [deserializeUDFCallExpressions] ExpressionSerializationUtil:: de-serialize udf call expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:20:22.274211] [D] [thread 132330] [ExpressionSerializationUtil.cpp:284] [deserializeExpression] ExpressionSerializationUtil:: deserialized expression node to the following node: FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[10:20:22.274704] [D] [thread 132330] [OperatorSerializationUtil.cpp:783] [deserializeWindowOperator] OperatorSerializationUtil::deserializeWindowOperator: SerializableOperator_WindowDetails_DistributionCharacteristic_Distribution_Complete[m
[36m[10:20:22.274815] [D] [thread 132330] [ExpressionSerializationUtil.cpp:170] [deserializeExpression] ExpressionSerializationUtil:: deserialize expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:20:22.274830] [D] [thread 132330] [ExpressionSerializationUtil.cpp:691] [deserializeLogicalExpressions] ExpressionSerializationUtil:: de-serialize logical expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:20:22.274878] [D] [thread 132330] [ExpressionSerializationUtil.cpp:762] [deserializeGeographyExpressions] ExpressionSerializationUtil:: de-serialize geography expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:20:22.274975] [D] [thread 132330] [ExpressionSerializationUtil.cpp:830] [deserializeUDFCallExpressions] ExpressionSerializationUtil:: de-serialize udf call expression type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:20:22.275357] [D] [thread 132330] [ExpressionSerializationUtil.cpp:284] [deserializeExpression] ExpressionSerializationUtil:: deserialized expression node to the following node: FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[32m[10:20:22.275590] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 56[m
[36m[10:20:22.275861] [D] [thread 132330] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:20:22.276519] [D] [thread 132330] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:20:22.276603] [D] [thread 132330] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:20:22.277594] [D] [thread 132330] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:20:22.280653] [D] [thread 132330] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[10:20:22.280873] [D] [thread 132330] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:20:22.282162] [D] [thread 132330] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:20:22.282413] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 57[m
[36m[10:20:22.282532] [D] [thread 132330] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:20:22.283684] [D] [thread 132330] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:20:22.283785] [D] [thread 132330] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:20:22.286975] [D] [thread 132330] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:20:22.288063] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 1:1::27::0::0[m
[36m[10:20:22.288104] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 2:1::27::0::0[m
[32m[10:20:22.288192] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=1) Data[m
[33m[1m[10:20:22.288313] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[10:20:22.288446] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::27::0::0[m
[33m[1m[10:20:22.288627] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::27::0::0[m
[32m[10:20:22.288752] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=2) Data[m
[33m[1m[10:20:22.288822] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[10:20:22.288886] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::27::0::0[m
[33m[1m[10:20:22.289313] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::27::0::0[m
[36m[10:20:22.290010] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 0:1::27::0::0[m
[36m[10:20:22.290064] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 3:1::27::0::0[m
[32m[10:20:22.290113] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=3) Data[m
[32m[10:20:22.290113] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=0) Data[m
[33m[1m[10:20:22.290187] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[10:20:22.290342] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::27::0::0[m
[33m[1m[10:20:22.290453] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::27::0::0[m
[33m[1m[10:20:22.290196] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[10:20:22.290541] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::27::0::0[m
[33m[1m[10:20:22.290602] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::27::0::0[m
[36m[10:20:22.293446] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 2:1::51::0::0[m
[32m[10:20:22.293561] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) Data[m
[33m[1m[10:20:22.293615] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[10:20:22.293654] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::51::0::0[m
[33m[1m[10:20:22.293766] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::51::0::0[m
[36m[10:20:22.293767] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 1:1::51::0::0[m
[32m[10:20:22.293823] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) Data[m
[33m[1m[10:20:22.293862] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[10:20:22.293891] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::51::0::0[m
[33m[1m[10:20:22.293971] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::51::0::0[m
[36m[10:20:22.294665] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 0:1::51::0::0[m
[32m[10:20:22.294729] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) Data[m
[33m[1m[10:20:22.294776] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[10:20:22.294811] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::51::0::0[m
[33m[1m[10:20:22.294901] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::51::0::0[m
[36m[10:20:22.295243] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 3:1::51::0::0[m
[32m[10:20:22.295334] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) Data[m
[36m[10:20:22.295383] [D] [thread 132330] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[33m[1m[10:20:22.295387] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[10:20:22.295502] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::51::0::0[m
[33m[1m[10:20:22.295601] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::51::0::0[m
[36m[10:20:22.295920] [D] [thread 132330] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:20:22.296258] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 2:1::39::0::0[m
[32m[10:20:22.296371] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) Data[m
[33m[1m[10:20:22.296430] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[10:20:22.296472] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::39::0::0[m
[33m[1m[10:20:22.296599] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::39::0::0[m
[36m[10:20:22.297003] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 0:1::39::0::0[m
[32m[10:20:22.297096] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) Data[m
[33m[1m[10:20:22.297148] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[10:20:22.297188] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::39::0::0[m
[36m[10:20:22.297218] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 3:1::39::0::0[m
[32m[10:20:22.297257] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) Data[m
[33m[1m[10:20:22.297278] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::39::0::0[m
[33m[1m[10:20:22.297291] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[10:20:22.297317] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::39::0::0[m
[33m[1m[10:20:22.297382] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::39::0::0[m
[36m[10:20:22.297671] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 1:1::39::0::0[m
[32m[10:20:22.297717] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) Data[m
[33m[1m[10:20:22.297758] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[10:20:22.297792] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::39::0::0[m
[33m[1m[10:20:22.297896] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::39::0::0[m
[36m[10:20:22.298047] [D] [thread 132330] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:20:22.298385] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 58[m
[36m[10:20:22.298468] [D] [thread 132330] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:20:22.299814] [D] [thread 132330] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:20:22.299893] [D] [thread 132330] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:20:22.300553] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 1:1::27::0::0[m
[32m[10:20:22.300636] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=1) Data[m
[33m[1m[10:20:22.300687] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[10:20:22.300721] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::27::0::0[m
[33m[1m[10:20:22.300843] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::27::0::0[m
[36m[10:20:22.301181] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 2:1::27::0::0[m
[32m[10:20:22.301252] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=2) Data[m
[33m[1m[10:20:22.301299] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[10:20:22.301335] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::27::0::0[m
[33m[1m[10:20:22.301460] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::27::0::0[m
[36m[10:20:22.302013] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 3:1::27::0::0[m
[36m[10:20:22.302051] [D] [thread 132330] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:20:22.302013] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 0:1::27::0::0[m
[32m[10:20:22.302111] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=0) Data[m
[32m[10:20:22.302111] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=3) Data[m
[33m[1m[10:20:22.302178] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[10:20:22.302192] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[10:20:22.302217] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::27::0::0[m
[33m[1m[10:20:22.302224] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::27::0::0[m
[33m[1m[10:20:22.302326] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::27::0::0[m
[33m[1m[10:20:22.302329] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::27::0::0[m
[36m[10:20:22.305946] [D] [thread 132330] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[10:20:22.306079] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 1:1::51::0::0[m
[36m[10:20:22.306079] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 2:1::51::0::0[m
[36m[10:20:22.306137] [D] [thread 132330] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[32m[10:20:22.306151] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) Data[m
[32m[10:20:22.306153] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) Data[m
[33m[1m[10:20:22.306224] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[10:20:22.306232] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[10:20:22.306262] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::51::0::0[m
[33m[1m[10:20:22.306264] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::51::0::0[m
[33m[1m[10:20:22.306394] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::51::0::0[m
[33m[1m[10:20:22.306394] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::51::0::0[m
[36m[10:20:22.306737] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 3:1::51::0::0[m
[32m[10:20:22.306801] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) Data[m
[33m[1m[10:20:22.306848] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[10:20:22.306881] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::51::0::0[m
[33m[1m[10:20:22.307026] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::51::0::0[m
[36m[10:20:22.307150] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 0:1::51::0::0[m
[32m[10:20:22.307195] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) Data[m
[33m[1m[10:20:22.307237] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[10:20:22.307270] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::51::0::0[m
[33m[1m[10:20:22.307392] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::51::0::0[m
[36m[10:20:22.308523] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 2:1::39::0::0[m
[32m[10:20:22.308589] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) Data[m
[33m[1m[10:20:22.308637] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[10:20:22.308673] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::39::0::0[m
[33m[1m[10:20:22.308787] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::39::0::0[m
[36m[10:20:22.309364] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 3:1::39::0::0[m
[36m[10:20:22.309364] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 0:1::39::0::0[m
[36m[10:20:22.309447] [D] [thread 132330] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:20:22.309478] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) Data[m
[32m[10:20:22.309478] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) Data[m
[33m[1m[10:20:22.309544] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[10:20:22.309552] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[10:20:22.309583] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::39::0::0[m
[33m[1m[10:20:22.309583] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::39::0::0[m
[32m[10:20:22.309600] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 59[m
[36m[10:20:22.309661] [D] [thread 132330] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[33m[1m[10:20:22.309716] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::39::0::0[m
[33m[1m[10:20:22.309719] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::39::0::0[m
[36m[10:20:22.310175] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 1:1::39::0::0[m
[32m[10:20:22.310228] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) Data[m
[33m[1m[10:20:22.310273] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[10:20:22.310307] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::39::0::0[m
[33m[1m[10:20:22.310403] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::39::0::0[m
[36m[10:20:22.311096] [D] [thread 132330] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:20:22.311173] [D] [thread 132330] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:20:22.312302] [D] [thread 132330] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:20:22.314379] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 60[m
[36m[10:20:22.314495] [D] [thread 132330] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:20:22.315046] [D] [thread 132330] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:20:22.315112] [D] [thread 132330] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:20:22.315549] [D] [thread 132330] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:20:22.317852] [D] [thread 132330] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[10:20:22.318053] [D] [thread 132330] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:20:22.319168] [D] [thread 132330] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:20:22.319344] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 61[m
[36m[10:20:22.319436] [D] [thread 132330] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:20:22.320544] [D] [thread 132330] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:20:22.320609] [D] [thread 132330] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:20:22.321622] [D] [thread 132330] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:20:22.322229] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 1:1::27::0::0[m
[32m[10:20:22.322309] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=1) Data[m
[33m[1m[10:20:22.322361] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[10:20:22.322398] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::27::0::0[m
[33m[1m[10:20:22.322520] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::27::0::0[m
[36m[10:20:22.322923] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 2:1::27::0::0[m
[32m[10:20:22.323051] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=2) Data[m
[33m[1m[10:20:22.323104] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[10:20:22.323181] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::27::0::0[m
[33m[1m[10:20:22.323305] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::27::0::0[m
[36m[10:20:22.324860] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 3:1::27::0::0[m
[36m[10:20:22.324860] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 0:1::27::0::0[m
[32m[10:20:22.324959] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=0) Data[m
[32m[10:20:22.324959] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=3) Data[m
[33m[1m[10:20:22.325025] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[10:20:22.325037] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[10:20:22.325063] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::27::0::0[m
[33m[1m[10:20:22.325068] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::27::0::0[m
[33m[1m[10:20:22.325143] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::27::0::0[m
[33m[1m[10:20:22.325160] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::27::0::0[m
[36m[10:20:22.326030] [D] [thread 132330] [WorkerRPCServer.cpp:45] [RegisterQuery] WorkerRPCServer::RegisterQuery: got request for queryId: 1 plan=SINK(60: {FileSinkDescriptor()})
  CENTRALWINDOW(56)
    SOURCE(61,,NetworkSourceDescriptor{tcp://192.168.2.12:38829 1::21::0::0})
    SOURCE(57,,NetworkSourceDescriptor{tcp://192.168.2.12:38829 1::27::0::0})
    SOURCE(59,,NetworkSourceDescriptor{tcp://192.168.2.30:33039 1::33::0::0})
    SOURCE(55,,NetworkSourceDescriptor{tcp://192.168.2.30:33039 1::39::0::0})
    SOURCE(58,,NetworkSourceDescriptor{tcp://192.168.2.31:45699 1::45::0::0})
    SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.31:45699 1::51::0::0})
[m
[32m[10:20:22.326101] [I] [thread 132330] [NodeEngine.cpp:112] [registerQueryInNodeEngine] Creating ExecutableQueryPlan for 1 7 [m
[32m[10:20:22.326276] [I] [thread 132330] [NautilusQueryCompiler.cpp:59] [compileQuery] Compile Query with Nautilus[m
[36m[10:20:22.326704] [D] [thread 132330] [NautilusQueryCompiler.cpp:70] [compileQuery] compile query with id: 1 subPlanId: 7[m
Dumping queryPlan: [36m[10:20:22.326767] [D] [thread 132330] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-7-2023-11-13 10:20:22 - 1. LogicalQueryPlan[m
SINK(60: {FileSinkDescriptor()})
  CENTRALWINDOW(56)
    SOURCE(61,,NetworkSourceDescriptor{tcp://192.168.2.12:38829 1::21::0::0})
    SOURCE(57,,NetworkSourceDescriptor{tcp://192.168.2.12:38829 1::27::0::0})
    SOURCE(59,,NetworkSourceDescriptor{tcp://192.168.2.30:33039 1::33::0::0})
    SOURCE(55,,NetworkSourceDescriptor{tcp://192.168.2.30:33039 1::39::0::0})
    SOURCE(58,,NetworkSourceDescriptor{tcp://192.168.2.31:45699 1::45::0::0})
    SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.31:45699 1::51::0::0})

[32m[10:20:22.327724] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 62[m
[36m[10:20:22.327856] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 1:1::51::0::0[m
[32m[10:20:22.327907] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) Data[m
[36m[10:20:22.327949] [D] [thread 132330] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[32m[10:20:22.327968] [I] [thread 132330] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[33m[1m[10:20:22.327971] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) NOT REGISTERED[m
[32m[10:20:22.327976] [I] [thread 132330] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[33m[1m[10:20:22.328007] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::51::0::0[m
[36m[10:20:22.328223] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 2:1::51::0::0[m
[36m[10:20:22.328228] [D] [thread 132330] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:20:22.328259] [D] [thread 132330] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[32m[10:20:22.328275] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) Data[m
[33m[1m[10:20:22.328316] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) NOT REGISTERED[m
[36m[10:20:22.328364] [D] [thread 132330] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[33m[1m[10:20:22.328387] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::51::0::0[m
[36m[10:20:22.328414] [D] [thread 132330] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[33m[1m[10:20:22.328499] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::51::0::0[m
[33m[1m[10:20:22.328572] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::51::0::0[m
[32m[10:20:22.328679] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 63[m
[32m[10:20:22.328860] [I] [thread 132330] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[32m[10:20:22.328890] [I] [thread 132330] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[10:20:22.328939] [I] [thread 132330] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[10:20:22.328960] [I] [thread 132330] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:20:22.329011] [I] [thread 132330] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:20:22.329031] [I] [thread 132330] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[10:20:22.329037] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 3:1::51::0::0[m
[32m[10:20:22.329128] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) Data[m
[36m[10:20:22.329157] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 0:1::51::0::0[m
[33m[1m[10:20:22.329176] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) NOT REGISTERED[m
[32m[10:20:22.329190] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) Data[m
[33m[1m[10:20:22.329207] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::51::0::0[m
[33m[1m[10:20:22.329245] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[10:20:22.329275] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::51::0::0[m
[33m[1m[10:20:22.329295] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::51::0::0[m
[33m[1m[10:20:22.329323] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::51::0::0[m
[32m[10:20:22.329041] [I] [thread 132330] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:20:22.329488] [I] [thread 132330] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:20:22.329506] [I] [thread 132330] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:20:22.329815] [I] [thread 132330] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[36m[10:20:22.330277] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 2:1::39::0::0[m
[32m[10:20:22.330325] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) Data[m
[33m[1m[10:20:22.330384] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[10:20:22.330423] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::39::0::0[m
[33m[1m[10:20:22.330527] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::39::0::0[m
[36m[10:20:22.331191] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 3:1::39::0::0[m
[32m[10:20:22.331266] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) Data[m
[33m[1m[10:20:22.331312] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[10:20:22.331345] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::39::0::0[m
[36m[10:20:22.331349] [D] [thread 132330] [DefaultPhysicalOperatorProvider.cpp:853] [lowerWindowOperator] DefaultPhysicalOperatorProvider::lowerWindowOperator: Plan before
PhysicalSinkOperator
  CENTRALWINDOW(56)
    PhysicalMultiplexOperator
      SOURCE(61,,NetworkSourceDescriptor{tcp://192.168.2.12:38829 1::21::0::0})
      SOURCE(57,,NetworkSourceDescriptor{tcp://192.168.2.12:38829 1::27::0::0})
      SOURCE(59,,NetworkSourceDescriptor{tcp://192.168.2.30:33039 1::33::0::0})
      SOURCE(55,,NetworkSourceDescriptor{tcp://192.168.2.30:33039 1::39::0::0})
      SOURCE(58,,NetworkSourceDescriptor{tcp://192.168.2.31:45699 1::45::0::0})
      SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.31:45699 1::51::0::0})
[m
[33m[1m[10:20:22.331441] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::39::0::0[m
[36m[10:20:22.331564] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 0:1::39::0::0[m
[32m[10:20:22.331603] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) Data[m
[33m[1m[10:20:22.331641] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[10:20:22.331672] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::39::0::0[m
[36m[10:20:22.331692] [D] [thread 132330] [DefaultPhysicalOperatorProvider.cpp:784] [lowerThreadLocalWindowOperator] Create Thread local window aggregation[m
[33m[1m[10:20:22.331759] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::39::0::0[m
[36m[10:20:22.332445] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 1:1::39::0::0[m
[32m[10:20:22.332536] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) Data[m
[33m[1m[10:20:22.332588] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[10:20:22.332627] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::39::0::0[m
[33m[1m[10:20:22.332748] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::39::0::0[m
[32m[10:20:22.335296] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 64[m
[32m[10:20:22.335579] [I] [thread 132330] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[32m[10:20:22.335624] [I] [thread 132330] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[10:20:22.335633] [I] [thread 132330] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[10:20:22.335677] [I] [thread 132330] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:20:22.335891] [I] [thread 132330] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:20:22.336228] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 65[m
[32m[10:20:22.336390] [I] [thread 132330] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[32m[10:20:22.336417] [I] [thread 132330] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[10:20:22.336425] [I] [thread 132330] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[10:20:22.336437] [I] [thread 132330] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:20:22.336547] [I] [thread 132330] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:20:22.336857] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 66[m
[36m[10:20:22.336990] [D] [thread 132330] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:20:22.337040] [D] [thread 132330] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:20:22.337088] [I] [thread 132330] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:20:22.337099] [I] [thread 132330] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:20:22.337111] [I] [thread 132330] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:20:22.337221] [D] [thread 132330] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:20:22.337251] [D] [thread 132330] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[10:20:22.337342] [D] [thread 132330] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[10:20:22.337452] [D] [thread 132330] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[36m[10:20:22.337953] [D] [thread 132330] [DefaultPhysicalOperatorProvider.cpp:937] [lowerWindowOperator] DefaultPhysicalOperatorProvider::lowerWindowOperator: Plan after
PhysicalSinkOperator
  PhysicalKeyedTumblingWindowSink
    PhysicalKeyedSliceMergingOperator
      PhysicalKeyedThreadLocalPreAggregationOperator
        PhysicalMultiplexOperator
          SOURCE(61,,NetworkSourceDescriptor{tcp://192.168.2.12:38829 1::21::0::0})
          SOURCE(57,,NetworkSourceDescriptor{tcp://192.168.2.12:38829 1::27::0::0})
          SOURCE(59,,NetworkSourceDescriptor{tcp://192.168.2.30:33039 1::33::0::0})
          SOURCE(55,,NetworkSourceDescriptor{tcp://192.168.2.30:33039 1::39::0::0})
          SOURCE(58,,NetworkSourceDescriptor{tcp://192.168.2.31:45699 1::45::0::0})
          SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.31:45699 1::51::0::0})
[m
[36m[10:20:22.338017] [D] [thread 132330] [WindowOperatorHandler.hpp:95] [~WindowOperatorHandler] ~WindowOperatorHandler() 0[m
[32m[10:20:22.338199] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 67[m
[36m[10:20:22.338428] [D] [thread 132330] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:20:22.338496] [D] [thread 132330] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:20:22.338554] [I] [thread 132330] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:20:22.338563] [I] [thread 132330] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:20:22.338576] [I] [thread 132330] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:20:22.338699] [D] [thread 132330] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:20:22.338757] [D] [thread 132330] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[10:20:22.338894] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 68[m
[36m[10:20:22.339134] [D] [thread 132330] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:20:22.339173] [D] [thread 132330] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:20:22.339255] [I] [thread 132330] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:20:22.339268] [I] [thread 132330] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:20:22.339280] [I] [thread 132330] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:20:22.339396] [D] [thread 132330] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:20:22.339450] [D] [thread 132330] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[10:20:22.339521] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 69[m
[36m[10:20:22.339664] [D] [thread 132330] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:20:22.339734] [D] [thread 132330] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:20:22.339861] [I] [thread 132330] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:20:22.339916] [I] [thread 132330] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:20:22.339945] [I] [thread 132330] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:20:22.340131] [D] [thread 132330] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:20:22.340205] [D] [thread 132330] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[10:20:22.340297] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 70[m
[36m[10:20:22.340522] [D] [thread 132330] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:20:22.340591] [D] [thread 132330] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:20:22.340696] [I] [thread 132330] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:20:22.340720] [I] [thread 132330] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:20:22.340743] [I] [thread 132330] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:20:22.340933] [D] [thread 132330] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:20:22.340999] [D] [thread 132330] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[10:20:22.341129] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 71[m
[36m[10:20:22.341266] [D] [thread 132330] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:20:22.341338] [D] [thread 132330] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:20:22.341395] [I] [thread 132330] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:20:22.341437] [I] [thread 132330] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:20:22.341461] [I] [thread 132330] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:20:22.341589] [D] [thread 132330] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:20:22.341622] [D] [thread 132330] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[10:20:22.341741] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 72[m
[36m[10:20:22.341936] [D] [thread 132330] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:20:22.342002] [D] [thread 132330] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:20:22.342088] [I] [thread 132330] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:20:22.342100] [I] [thread 132330] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:20:22.342111] [I] [thread 132330] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:20:22.342224] [D] [thread 132330] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:20:22.342277] [D] [thread 132330] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[36m[10:20:22.342605] [D] [thread 132330] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-7-2023-11-13 10:20:22 - 2. PhysicalQueryPlan[m
Dumping queryPlan: PhysicalSinkOperator
  PhysicalKeyedTumblingWindowSink
    PhysicalKeyedSliceMergingOperator
      PhysicalKeyedThreadLocalPreAggregationOperator
        PhysicalMultiplexOperator
          PhysicalSourceOperator
          PhysicalSourceOperator
          PhysicalSourceOperator
          PhysicalSourceOperator
          PhysicalSourceOperator
          PhysicalSourceOperator

[36m[10:20:22.343000] [D] [thread 132330] [DefaultPipeliningPhase.cpp:42] [apply] Pipeline: query id: 1 - 7[m
[32m[10:20:22.343477] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 62[m
[36m[10:20:22.343724] [D] [thread 132330] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSinkOperator as new root of the plan.[m
[36m[10:20:22.343758] [D] [thread 132330] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:22.343769] [D] [thread 132330] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:20:22.344304] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 73[m
[36m[10:20:22.344449] [D] [thread 132330] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalKeyedTumblingWindowSink as new root of the plan.[m
[36m[10:20:22.344466] [D] [thread 132330] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:22.344473] [D] [thread 132330] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:20:22.344596] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 74[m
[36m[10:20:22.344722] [D] [thread 132330] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalKeyedSliceMergingOperator as new root of the plan.[m
[36m[10:20:22.344945] [D] [thread 132330] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:22.344975] [D] [thread 132330] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:20:22.345259] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 75[m
[36m[10:20:22.345397] [D] [thread 132330] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalKeyedThreadLocalPreAggregationOperator as new root of the plan.[m
[36m[10:20:22.345438] [D] [thread 132330] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:22.345450] [D] [thread 132330] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:20:22.345709] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 67[m
[36m[10:20:22.345940] [D] [thread 132330] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[10:20:22.345976] [D] [thread 132330] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:22.345985] [D] [thread 132330] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:20:22.346186] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 68[m
[36m[10:20:22.346433] [D] [thread 132330] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[10:20:22.346465] [D] [thread 132330] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:22.346505] [D] [thread 132330] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:20:22.346650] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 69[m
[36m[10:20:22.346839] [D] [thread 132330] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[10:20:22.346898] [D] [thread 132330] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:22.346910] [D] [thread 132330] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:20:22.347063] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 70[m
[36m[10:20:22.347216] [D] [thread 132330] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[10:20:22.347282] [D] [thread 132330] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:22.347322] [D] [thread 132330] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:20:22.347476] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 71[m
[36m[10:20:22.347688] [D] [thread 132330] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[10:20:22.347721] [D] [thread 132330] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:22.347733] [D] [thread 132330] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:20:22.347899] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 72[m
[36m[10:20:22.348072] [D] [thread 132330] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[10:20:22.348136] [D] [thread 132330] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
Dumping pipelineQueryPlan: [36m[10:20:22.348148] [D] [thread 132330] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:20:22.348267] [D] [thread 132330] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-7-2023-11-13 10:20:22 - 3. AfterPipelinedQueryPlan[m
PipelineQueryPlan: 
- queryId: 1, subPlanId: 7, no. pipelines: 9
- pipeline: - Id: 1, Type: SinkPipelineType, Successors: , Predecessors: 2
- Queryplan: PhysicalSinkOperator

- pipeline: - Id: 2, Type: OperatorPipelineType, Successors: 1, Predecessors: 3
- Queryplan: PhysicalKeyedSliceMergingOperator
  PhysicalKeyedTumblingWindowSink

- pipeline: - Id: 3, Type: OperatorPipelineType, Successors: 2, Predecessors: 4, 5, 6, 7, 8, 9
- Queryplan: PhysicalKeyedThreadLocalPreAggregationOperator

- pipeline: - Id: 4, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 5, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 6, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 7, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 8, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 9, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator


[36m[10:20:22.349035] [D] [thread 132330] [Node.cpp:448] [getAllLeafNodes] Node: Get all leaf nodes for this node[m
[36m[10:20:22.349096] [D] [thread 132330] [Node.cpp:458] [getAllLeafNodes] Node: Inserting leaf node to the collection[m
[36m[10:20:22.349127] [D] [thread 132330] [Node.cpp:469] [getAllLeafNodes] Node: Found 1 leaf nodes[m
[32m[10:20:22.349246] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 76[m
[32m[10:20:22.349674] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 77[m
[36m[10:20:22.349777] [D] [thread 132330] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalScanOperator as new root of the plan.[m
[36m[10:20:22.349835] [D] [thread 132330] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:20:22.349847] [D] [thread 132330] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
Dumping pipelineQueryPlan: [36m[10:20:22.349876] [D] [thread 132330] [Node.cpp:448] [getAllLeafNodes] Node: Get all leaf nodes for this node[m
[36m[10:20:22.349888] [D] [thread 132330] [Node.cpp:452] [getAllLeafNodes] Node: found no children. Returning itself as leaf.[m
[36m[10:20:22.349909] [D] [thread 132330] [Node.cpp:469] [getAllLeafNodes] Node: Found 1 leaf nodes[m
[36m[10:20:22.349949] [D] [thread 132330] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-7-2023-11-13 10:20:22 - 4. AfterAddScanAndEmitPhase[m
PipelineQueryPlan: 
- queryId: 1, subPlanId: 7, no. pipelines: 9
- pipeline: - Id: 1, Type: SinkPipelineType, Successors: , Predecessors: 2
- Queryplan: PhysicalSinkOperator

- pipeline: - Id: 2, Type: OperatorPipelineType, Successors: 1, Predecessors: 3
- Queryplan: PhysicalKeyedSliceMergingOperator
  PhysicalKeyedTumblingWindowSink
    PhysicalEmitOperator

- pipeline: - Id: 3, Type: OperatorPipelineType, Successors: 2, Predecessors: 4, 5, 6, 7, 8, 9
- Queryplan: PhysicalScanOperator
  PhysicalKeyedThreadLocalPreAggregationOperator

- pipeline: - Id: 4, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 5, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 6, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 7, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 8, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 9, Type: SourcePipelineType, Successors: 3, Predecessors: 
- Queryplan: PhysicalSourceOperator


[32m[10:20:22.350880] [I] [thread 132330] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalKeyedSliceMergingOperator[m
[32m[10:20:22.350955] [I] [thread 132330] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalKeyedSliceMergingOperator to NautilusOperator.[m
[32m[10:20:22.351237] [I] [thread 132330] [LowerPhysicalToNautilusOperators.cpp:877] [lowerAggregations] Lower Window Aggregations to Nautilus Operator[m
[32m[10:20:22.351518] [I] [thread 132330] [ExpressionProvider.cpp:54] [lowerExpression] Lower Expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[32m[10:20:22.352770] [I] [thread 132330] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalKeyedTumblingWindowSink[m
[32m[10:20:22.352852] [I] [thread 132330] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalKeyedTumblingWindowSink to NautilusOperator.[m
[32m[10:20:22.352892] [I] [thread 132330] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalEmitOperator[m
[32m[10:20:22.352907] [I] [thread 132330] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalEmitOperator to NautilusOperator.[m
[36m[10:20:22.353854] [D] [thread 132330] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PhysicalKeyedSliceMergingOperator as root operator.[m
[32m[10:20:22.354031] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7953757509803730293[m
[32m[10:20:22.354475] [I] [thread 132330] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalScanOperator[m
[32m[10:20:22.354537] [I] [thread 132330] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalScanOperator to NautilusOperator.[m
[32m[10:20:22.355123] [I] [thread 132330] [LowerPhysicalToNautilusOperators.cpp:146] [apply] Node: PhysicalKeyedThreadLocalPreAggregationOperator[m
[32m[10:20:22.355182] [I] [thread 132330] [LowerPhysicalToNautilusOperators.cpp:164] [lower] Lower node:PhysicalKeyedThreadLocalPreAggregationOperator to NautilusOperator.[m
[32m[10:20:22.355247] [I] [thread 132330] [LowerPhysicalToNautilusOperators.cpp:877] [lowerAggregations] Lower Window Aggregations to Nautilus Operator[m
[32m[10:20:22.355326] [I] [thread 132330] [ExpressionProvider.cpp:54] [lowerExpression] Lower Expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[32m[10:20:22.355817] [I] [thread 132330] [ExpressionProvider.cpp:54] [lowerExpression] Lower Expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[10:20:22.356591] [D] [thread 132330] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PhysicalScanOperator as root operator.[m
[32m[10:20:22.356714] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 281472865720336[m
[36m[10:20:22.356964] [D] [thread 132330] [NautilusCompilationPhase.cpp:38] [apply] Generate code for query plan 1 - 7[m
[32m[10:20:22.357587] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 78[m
[32m[10:20:22.358100] [I] [thread 132330] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 79[m
[36m[10:20:22.358620] [D] [thread 132330] [ConvertLogicalToPhysicalSink.cpp:43] [createDataSink] Convert sink  62[m
[32m[10:20:22.358708] [I] [thread 132330] [ConvertLogicalToPhysicalSink.cpp:157] [createDataSink] ConvertLogicalToPhysicalSink: Creating file sink for format=CSV_FORMAT[m
[36m[10:20:22.359132] [D] [thread 132330] [FileSink.cpp:56] [FileSink] FileSink: open file= /home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out[m
[36m[10:20:22.360494] [D] [thread 132330] [LowerToExecutableQueryPlanPhase.cpp:291] [processOperatorPipeline] Adding current pipeline: 3 as a predecessor to its child pipeline: 2[m
[32m[10:20:22.360912] [I] [thread 132330] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[10:20:22.361739] [D] [thread 132330] [DataSource.cpp:75] [DataSource] DataSource  21 : Init Data Source with schema  debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:22.362292] [D] [thread 132330] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 21 as a predecessor to its child pipeline: 3[m
[32m[10:20:22.362696] [I] [thread 132330] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[10:20:22.363140] [D] [thread 132330] [DataSource.cpp:75] [DataSource] DataSource  27 : Init Data Source with schema  debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:22.363581] [D] [thread 132330] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 27 as a predecessor to its child pipeline: 3[m
[32m[10:20:22.363997] [I] [thread 132330] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[10:20:22.364196] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 1:1::27::0::0[m
[32m[10:20:22.364267] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=1) Data[m
[33m[1m[10:20:22.364349] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[10:20:22.364390] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::27::0::0[m
[36m[10:20:22.364435] [D] [thread 132330] [DataSource.cpp:75] [DataSource] DataSource  33 : Init Data Source with schema  debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[33m[1m[10:20:22.364743] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::27::0::0[m
[36m[10:20:22.365132] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 2:1::27::0::0[m
[36m[10:20:22.365197] [D] [thread 132330] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 33 as a predecessor to its child pipeline: 3[m
[32m[10:20:22.365217] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=2) Data[m
[33m[1m[10:20:22.365269] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[10:20:22.365305] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::27::0::0[m
[32m[10:20:22.365526] [I] [thread 132330] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[33m[1m[10:20:22.365656] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::27::0::0[m
[36m[10:20:22.366135] [D] [thread 132330] [DataSource.cpp:75] [DataSource] DataSource  39 : Init Data Source with schema  debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:22.366651] [D] [thread 132330] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 39 as a predecessor to its child pipeline: 3[m
[32m[10:20:22.366962] [I] [thread 132330] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[10:20:22.366998] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 3:1::27::0::0[m
[32m[10:20:22.367062] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=3) Data[m
[33m[1m[10:20:22.367115] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=3) NOT REGISTERED[m
[36m[10:20:22.367257] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 0:1::27::0::0[m
[32m[10:20:22.367297] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=0) Data[m
[33m[1m[10:20:22.367334] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[10:20:22.367363] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::27::0::0[m
[36m[10:20:22.367523] [D] [thread 132330] [DataSource.cpp:75] [DataSource] DataSource  45 : Init Data Source with schema  debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[33m[1m[10:20:22.367153] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::27::0::0[m
[33m[1m[10:20:22.367918] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::27::0::0[m
[33m[1m[10:20:22.368038] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::27::0::0[m
[36m[10:20:22.368432] [D] [thread 132330] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 45 as a predecessor to its child pipeline: 3[m
[32m[10:20:22.368716] [I] [thread 132330] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[10:20:22.369112] [D] [thread 132330] [DataSource.cpp:75] [DataSource] DataSource  51 : Init Data Source with schema  debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[10:20:22.369674] [D] [thread 132330] [LowerToExecutableQueryPlanPhase.cpp:192] [processSource] Adding current source operator: 51 as a predecessor to its child pipeline: 3[m
[36m[10:20:22.370305] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 2:1::51::0::0[m
[36m[10:20:22.370305] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 1:1::51::0::0[m
[32m[10:20:22.370403] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) Data[m
[32m[10:20:22.370403] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) Data[m
[33m[1m[10:20:22.370491] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[10:20:22.370501] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[10:20:22.370535] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::51::0::0[m
[33m[1m[10:20:22.370535] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::51::0::0[m
[33m[1m[10:20:22.370628] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::51::0::0[m
[33m[1m[10:20:22.370877] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::51::0::0[m
[36m[10:20:22.371204] [D] [thread 132330] [NodeEngine.cpp:131] [registerQueryInNodeEngine] Runtime: registerQueryInNodeEngine query with queryId= 1 querySubPlanId = 7[m
[36m[10:20:22.371423] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 3:1::51::0::0[m
[36m[10:20:22.371447] [D] [thread 132330] [NodeEngine.cpp:137] [registerQueryInNodeEngine] Runtime: register of QEP  7  as a singleton[m
[36m[10:20:22.371472] [D] [thread 132330] [QueryManagerLifecycle.cpp:38] [registerQuery] AbstractQueryManager::registerQueryInNodeEngine: query 1 subquery=7[m
[32m[10:20:22.371475] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) Data[m
[33m[1m[10:20:22.371522] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[10:20:22.371556] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::51::0::0[m
[36m[10:20:22.371570] [D] [thread 132330] [QueryManagerLifecycle.cpp:48] [registerQuery] AbstractQueryManager: resolving sources for query  1  with sources= 6[m
2023-11-13 10:20:22.372 setup: queryId=1, querySubPlanId=7; 
[36m[10:20:22.371639] [D] [thread 132330] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  21  not found. Creating new element with with qep [m
[36m[10:20:22.371930] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 0:1::51::0::0[m
[32m[10:20:22.371981] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) Data[m
[33m[1m[10:20:22.372024] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[10:20:22.372059] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::51::0::0[m
[33m[1m[10:20:22.372137] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::51::0::0[m
[36m[10:20:22.372141] [D] [thread 132330] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  27  not found. Creating new element with with qep [m
[36m[10:20:22.372201] [D] [thread 132330] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  33  not found. Creating new element with with qep [m
[33m[1m[10:20:22.372214] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::51::0::0[m
[36m[10:20:22.372224] [D] [thread 132330] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  39  not found. Creating new element with with qep [m
[36m[10:20:22.372244] [D] [thread 132330] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  45  not found. Creating new element with with qep [m
[36m[10:20:22.372263] [D] [thread 132330] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  51  not found. Creating new element with with qep [m
[36m[10:20:22.372267] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 2:1::39::0::0[m
[36m[10:20:22.372301] [D] [thread 132330] [QueryManagerLifecycle.cpp:68] [registerQuery] queryToStatisticsMap add for= 7  pair queryId= 1  subplanId= 7[m
[32m[10:20:22.372304] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) Data[m
[33m[1m[10:20:22.372379] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[10:20:22.372414] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::39::0::0[m
[33m[1m[10:20:22.372727] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::39::0::0[m
[36m[10:20:22.372951] [D] [thread 132330] [ExecutableQueryPlan.cpp:126] [setup] QueryExecutionPlan: setup queryId=1 querySubPlanId=7[m
[36m[10:20:22.374317] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 3:1::39::0::0[m
[32m[10:20:22.374411] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) Data[m
[33m[1m[10:20:22.374462] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[10:20:22.374500] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::39::0::0[m
[36m[10:20:22.374899] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 0:1::39::0::0[m
[32m[10:20:22.374981] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) Data[m
[33m[1m[10:20:22.375028] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[10:20:22.375065] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::39::0::0[m
[33m[1m[10:20:22.375415] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::39::0::0[m
[36m[10:20:22.375487] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 1:1::39::0::0[m
[32m[10:20:22.375528] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) Data[m
[33m[1m[10:20:22.375569] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[10:20:22.375598] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::39::0::0[m
[33m[1m[10:20:22.375902] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::39::0::0[m
[33m[1m[10:20:22.375988] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::39::0::0[m
[36m[10:20:22.381232] [D] [thread 132330] [KeyedSliceMerging.cpp:115] [combineThreadLocalSlices] combine 0 slices[m
[36m[10:20:22.389240] [D] [thread 132330] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff2403e1a0[m
[36m[10:20:22.390510] [D] [thread 132330] [KeyedSliceMerging.cpp:115] [combineThreadLocalSlices] combine 0 slices[m
[36m[10:20:22.399279] [D] [thread 132330] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[10:20:22.401126] [D] [thread 132330] [KeyedSliceMerging.cpp:115] [combineThreadLocalSlices] combine 0 slices[m
[36m[10:20:22.413871] [D] [thread 132330] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[10:20:22.415302] [D] [thread 132330] [KeyedSliceMerging.cpp:115] [combineThreadLocalSlices] combine 0 slices[m
[36m[10:20:22.419307] [D] [thread 132330] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[10:20:22.420526] [D] [thread 132330] [KeyedSliceMerging.cpp:115] [combineThreadLocalSlices] combine 0 slices[m
[36m[10:20:22.423913] [D] [thread 132330] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[10:20:22.424365] [D] [thread 132330] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff2405a320[m
[36m[10:20:22.424484] [D] [thread 132330] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff2405e320[m
[36m[10:20:22.425466] [D] [thread 132330] [KeyedSliceMerging.cpp:115] [combineThreadLocalSlices] combine 0 slices[m
[36m[10:20:22.429501] [D] [thread 132330] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[10:20:22.429861] [D] [thread 132330] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff2406ea90[m
[36m[10:20:22.429933] [D] [thread 132330] [TraceContext.cpp:231] [apply] Iterations: 6[m
[36m[10:20:22.446700] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 1:1::27::0::0[m
[32m[10:20:22.446799] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=1) Data[m
[33m[1m[10:20:22.446847] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[10:20:22.446882] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::27::0::0[m
[33m[1m[10:20:22.447115] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::27::0::0[m
[36m[10:20:22.447148] [D] [thread 132330] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 0 JMP	$0_0	Block5($0_125,$0_124,$0_4,$0_5,$0_19,$0_18,$0_15,$0_9,$0_22,$0_21,$0_20,$0_12,$0_6,)	[m
[36m[10:20:22.447483] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 2:1::27::0::0[m
[32m[10:20:22.447563] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=2) Data[m
[33m[1m[10:20:22.447615] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[10:20:22.447654] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::27::0::0[m
[33m[1m[10:20:22.448004] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::27::0::0[m
[36m[10:20:22.449528] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 3:1::27::0::0[m
[36m[10:20:22.449528] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 0:1::27::0::0[m
[32m[10:20:22.449625] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=3) Data[m
[32m[10:20:22.449625] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=0) Data[m
[33m[1m[10:20:22.449691] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[10:20:22.449701] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[10:20:22.449729] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::27::0::0[m
[33m[1m[10:20:22.449732] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::27::0::0[m
[33m[1m[10:20:22.449814] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::27::0::0[m
[33m[1m[10:20:22.449831] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::27::0::0[m
[36m[10:20:22.450162] [D] [thread 132330] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 1 JMP	$0_0	Block16($1_116,$1_117,$1_118,$1_119,$1_120,$1_121,$1_122,$1_123,$1_124,$1_125,$1_4,$1_11,$1_0,$1_8,$1_3,$1_5,$1_126,$1_7,$1_127,$1_128,)	[m
[36m[10:20:22.452178] [D] [thread 132330] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 3 JMP	$0_0	Block5($3_103,$3_104,$3_105,$3_106,$3_107,$3_108,$3_109,$3_110,$3_1,$3_111,$3_113,$3_114,$3_115,)	[m
[36m[10:20:22.452575] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 2:1::51::0::0[m
[36m[10:20:22.452575] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 1:1::51::0::0[m
[32m[10:20:22.452668] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) Data[m
[32m[10:20:22.452668] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) Data[m
[33m[1m[10:20:22.452739] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[10:20:22.452780] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::51::0::0[m
[33m[1m[10:20:22.452900] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::51::0::0[m
[33m[1m[10:20:22.453053] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[10:20:22.453278] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::51::0::0[m
[36m[10:20:22.453693] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 0:1::51::0::0[m
[33m[1m[10:20:22.453693] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::51::0::0[m
[32m[10:20:22.453776] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) Data[m
[33m[1m[10:20:22.453830] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[10:20:22.453863] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::51::0::0[m
[33m[1m[10:20:22.453933] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::51::0::0[m
[36m[10:20:22.454146] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 3:1::51::0::0[m
[32m[10:20:22.454195] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) Data[m
[33m[1m[10:20:22.454237] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[10:20:22.454309] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::51::0::0[m
[33m[1m[10:20:22.454615] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::51::0::0[m
[36m[10:20:22.454684] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 2:1::39::0::0[m
[32m[10:20:22.454721] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) Data[m
[33m[1m[10:20:22.454762] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[10:20:22.454790] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::39::0::0[m
[33m[1m[10:20:22.455101] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::39::0::0[m
[36m[10:20:22.455829] [D] [thread 132330] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 4 JMP	$0_0	Block25($4_108,$4_109,$4_110,$4_111,$4_112,$4_113,$4_114,$4_115,$4_116,$4_117,$4_118,$4_119,$4_120,$4_121,$4_122,$4_123,$4_2,$4_124,$4_6,$4_125,$4_126,$4_127,)	[m
[36m[10:20:22.456231] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 3:1::39::0::0[m
[32m[10:20:22.456301] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) Data[m
[33m[1m[10:20:22.456382] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[10:20:22.456423] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::39::0::0[m
[33m[1m[10:20:22.456687] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::39::0::0[m
[36m[10:20:22.456935] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 0:1::39::0::0[m
[32m[10:20:22.456992] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) Data[m
[33m[1m[10:20:22.457037] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[10:20:22.457072] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::39::0::0[m
[33m[1m[10:20:22.457156] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::39::0::0[m
[36m[10:20:22.457361] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 1:1::39::0::0[m
[32m[10:20:22.457414] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) Data[m
[33m[1m[10:20:22.457452] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[10:20:22.457492] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::39::0::0[m
[33m[1m[10:20:22.457590] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::39::0::0[m
[36m[10:20:22.460361] [D] [thread 132330] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 10 JMP	$0_0	Block22($10_119,$10_120,$10_121,$10_122,$10_123,$10_124,$10_125,$10_126,$10_127,$10_128,$10_129,$10_130,$10_131,$10_132,$10_133,$10_134,$10_135,$10_136,$10_137,$10_138,$10_139,$10_140,)	[m
[36m[10:20:22.462531] [D] [thread 132330] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 12 JMP	$0_0	Block23($12_111,$12_112,$12_113,$12_114,$12_115,$12_116,$12_117,$12_118,$12_119,$12_120,$12_121,$12_122,$12_123,$12_124,$12_125,$12_126,$12_128,$12_129,$12_130,$12_131,)	[m
[36m[10:20:22.464391] [D] [thread 132330] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 14 JMP	$0_0	Block24($14_105,$14_106,$14_107,$14_108,$14_109,$14_110,$14_111,$14_112,$14_113,$14_114,$14_115,$14_116,$14_117,$14_3,$14_119,$14_0,$14_120,$14_5,$14_121,$14_122,)	[m
[36m[10:20:22.465544] [D] [thread 132330] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 24 JMP	$0_0	Block16($24_103,$24_104,$24_105,$24_106,$24_107,$24_108,$24_109,$24_110,$24_111,$24_112,$14_8,$24_113,$24_115,$24_116,$24_117,$24_118,$24_119,$24_120,$24_121,$24_122,)	[m
[36m[10:20:22.467276] [D] [thread 132330] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 15 JMP	$0_0	Block24($15_101,$15_102,$15_103,$15_104,$15_105,$15_106,$15_107,$15_108,$15_109,$15_110,$15_111,$15_112,$15_113,$15_114,$15_115,$15_116,$15_117,$15_118,$15_119,$15_120,)	[m
[36m[10:20:22.469437] [D] [thread 132330] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 13 JMP	$0_0	Block23($13_101,$13_102,$13_103,$13_104,$13_105,$13_106,$13_107,$13_108,$13_109,$13_110,$13_111,$13_112,$13_113,$13_114,$13_115,$13_116,$13_117,$13_118,$13_119,$13_120,)	[m
[36m[10:20:22.471595] [D] [thread 132330] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 11 JMP	$0_0	Block25($11_104,$11_105,$11_106,$11_107,$11_108,$11_109,$11_110,$11_111,$11_112,$11_113,$11_114,$11_115,$11_116,$11_117,$11_118,$11_119,$11_120,$11_121,$11_2,$11_123,$11_124,$11_125,)	[m
[36m[10:20:22.473437] [D] [thread 132330] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 9 JMP	$0_0	Block22($9_101,$9_102,$9_103,$9_104,$9_105,$9_106,$9_107,$9_108,$9_109,$9_110,$9_111,$9_112,$9_113,$9_114,$9_115,$9_116,$9_117,$9_118,$9_119,$9_120,$9_121,$9_122,)	[m
[36m[10:20:22.476108] [D] [thread 132330] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 2 JMP	$0_0	Block21($2_118,$2_119,$2_120,$2_123,$2_2,$2_124,$2_121,$2_122,$2_9,$2_16,$2_5,$2_13,$2_8,$2_10,$2_124,$2_126,$2_127,$2_12,)	[m
[36m[10:20:22.480470] [D] [thread 132330] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 17 JMP	$0_0	Block26($17_109,$17_110,$17_5,$17_111,$17_112,$17_113,$17_9,$17_114,$17_115,$17_116,$17_117,$17_118,$17_119,$17_120,$17_123,$17_124,$17_7,$17_125,)	[m
[36m[10:20:22.482316] [D] [thread 132330] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 19 JMP	$0_0	Block27($19_105,$19_106,$19_107,$19_108,$19_109,$19_110,$19_111,$19_112,$19_113,$19_114,$19_115,$19_3,$19_117,$19_0,$19_118,$19_119,$19_120,$19_5,)	[m
[36m[10:20:22.483445] [D] [thread 132330] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 27 JMP	$0_0	Block21($27_103,$27_104,$27_105,$27_106,$27_107,$27_108,$27_109,$27_110,$19_8,$27_111,$27_113,$27_114,$27_115,$27_116,$27_117,$27_118,$27_119,$27_120,)	[m
[36m[10:20:22.484940] [D] [thread 132330] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 20 JMP	$0_0	Block27($20_101,$20_102,$20_103,$20_104,$20_105,$20_106,$20_107,$20_108,$20_109,$20_110,$20_111,$20_112,$20_113,$20_114,$20_115,$20_116,$20_117,$20_118,)	[m
[36m[10:20:22.486656] [D] [thread 132330] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 18 JMP	$0_0	Block26($18_101,$18_102,$18_103,$18_104,$18_105,$18_106,$18_107,$18_108,$18_109,$18_110,$18_111,$18_112,$18_113,$18_114,$18_115,$18_116,$18_117,$18_118,)	[m
[36m[10:20:22.609100] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 1:1::27::0::0[m
[32m[10:20:22.609216] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=1) Data[m
[33m[1m[10:20:22.609274] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[10:20:22.609310] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::27::0::0[m
[36m[10:20:22.609311] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 2:1::27::0::0[m
[32m[10:20:22.609350] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=2) Data[m
[33m[1m[10:20:22.609384] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[10:20:22.609411] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::27::0::0[m
[33m[1m[10:20:22.609459] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::27::0::0[m
[33m[1m[10:20:22.609490] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::27::0::0[m
[36m[10:20:22.611592] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 3:1::27::0::0[m
[36m[10:20:22.611592] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 0:1::27::0::0[m
[32m[10:20:22.611711] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=3) Data[m
[32m[10:20:22.611711] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=0) Data[m
[33m[1m[10:20:22.611786] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[10:20:22.611796] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[10:20:22.611826] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::27::0::0[m
[33m[1m[10:20:22.611828] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::27::0::0[m
[33m[1m[10:20:22.611964] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::27::0::0[m
[33m[1m[10:20:22.612045] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::27::0::0[m
[36m[10:20:22.614845] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 1:1::51::0::0[m
[36m[10:20:22.614844] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 2:1::51::0::0[m
[32m[10:20:22.614956] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) Data[m
[32m[10:20:22.614956] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) Data[m
[33m[1m[10:20:22.615024] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[10:20:22.615034] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[10:20:22.615064] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::51::0::0[m
[33m[1m[10:20:22.615065] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::51::0::0[m
[33m[1m[10:20:22.615218] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::51::0::0[m
[33m[1m[10:20:22.615411] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::51::0::0[m
[36m[10:20:22.616035] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 0:1::51::0::0[m
[36m[10:20:22.616036] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 3:1::51::0::0[m
[32m[10:20:22.616134] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) Data[m
[32m[10:20:22.616134] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) Data[m
[33m[1m[10:20:22.616203] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[10:20:22.616208] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[10:20:22.616244] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::51::0::0[m
[33m[1m[10:20:22.616768] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::51::0::0[m
[33m[1m[10:20:22.616244] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::51::0::0[m
[33m[1m[10:20:22.616924] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::51::0::0[m
[36m[10:20:22.617436] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 2:1::39::0::0[m
[32m[10:20:22.617530] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) Data[m
[33m[1m[10:20:22.617584] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[10:20:22.617623] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::39::0::0[m
[33m[1m[10:20:22.617742] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::39::0::0[m
[36m[10:20:22.618300] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 3:1::39::0::0[m
[32m[10:20:22.618390] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) Data[m
[33m[1m[10:20:22.618441] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[10:20:22.618480] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::39::0::0[m
[33m[1m[10:20:22.618591] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::39::0::0[m
[36m[10:20:22.619182] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 0:1::39::0::0[m
[36m[10:20:22.619236] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 1:1::39::0::0[m
[32m[10:20:22.619276] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) Data[m
[32m[10:20:22.619304] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) Data[m
[33m[1m[10:20:22.619327] [W] [thread 132323] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[10:20:22.619336] [W] [thread 132324] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[10:20:22.619363] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::39::0::0[m
[33m[1m[10:20:22.619363] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::39::0::0[m
[33m[1m[10:20:22.619453] [W] [thread 132323] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::39::0::0[m
[33m[1m[10:20:22.619466] [W] [thread 132324] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::39::0::0[m
[36m[10:20:22.624736] [D] [thread 132330] [MLIRLoweringProvider.cpp:170] [~MLIRLoweringProvider] ~MLIRLoweringProvider[m
[32m[10:20:22.626127] [I] [thread 132330] [CompiledExecutablePipelineStage.cpp:97] [compilePipeline] overall runtime: 249.929 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-2_Trace Generation:	68.253 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-2_IR Generation:	44.3434 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-2_Compilation:	137.332 ms[m
[36m[10:20:22.689803] [D] [thread 132330] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff240ccf00[m
[36m[10:20:22.694159] [D] [thread 132330] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[10:20:22.698075] [D] [thread 132330] [SymbolicExecutionContext.cpp:51] [record] Trace: early terminate via exception.[m
[36m[10:20:22.698608] [D] [thread 132330] [SymbolicExecutionContext.cpp:87] [shouldContinue] Skip tag 0xffff24039a50[m
[36m[10:20:22.698674] [D] [thread 132330] [TraceContext.cpp:231] [apply] Iterations: 3[m
[36m[10:20:22.704384] [D] [thread 132330] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 0 JMP	$0_0	Block9($0_116,$0_115,$0_6,$0_8,$0_4,$0_16,$0_14,$0_13,$0_15,)	[m
[36m[10:20:22.707092] [D] [thread 132330] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 1 JMP	$0_0	Block12($1_147,$1_148,$1_149,$1_150,$1_151,$1_152,$1_153,$1_20,$1_5,$1_43,$1_45,$1_47,$1_154,$1_155,)	[m
[36m[10:20:22.709784] [D] [thread 132330] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 5 JMP	$0_0	Block10($5_101,$5_102,$5_103,$5_104,$5_105,$5_106,$5_107,$5_108,$5_109,$5_110,$5_111,$5_112,$5_113,$5_114,)	[m
[36m[10:20:22.711624] [D] [thread 132330] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 7 JMP	$0_0	Block11($7_113,$7_114,$7_115,$7_116,$7_117,$7_118,$7_119,$7_120,$7_0,$7_124,$7_125,)	[m
[36m[10:20:22.712908] [D] [thread 132330] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 11 JMP	$0_0	Block9($11_110,$11_111,$11_112,$11_113,$11_114,$7_24,$11_115,$11_119,$11_120,)	[m
[36m[10:20:22.714048] [D] [thread 132330] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 8 JMP	$0_0	Block11($8_101,$8_102,$8_103,$8_104,$8_105,$8_106,$8_107,$8_108,$8_109,$8_110,$8_111,)	[m
[36m[10:20:22.715557] [D] [thread 132330] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 6 JMP	$0_0	Block12($6_104,$6_105,$6_106,$6_107,$6_108,$6_109,$6_110,$6_111,$6_112,$6_113,$6_114,$6_2,$6_115,$6_116,)	[m
[36m[10:20:22.716883] [D] [thread 132330] [TraceToIRConversionPhase.cpp:210] [processJMP] current block 4 JMP	$0_0	Block10($4_101,$4_102,$4_103,$4_104,$4_105,$4_106,$4_107,$4_108,$4_109,$4_110,$4_111,$4_112,$4_113,$4_114,)	[m
[36m[10:20:22.768629] [D] [thread 132330] [MLIRLoweringProvider.cpp:170] [~MLIRLoweringProvider] ~MLIRLoweringProvider[m
[32m[10:20:22.769674] [I] [thread 132330] [CompiledExecutablePipelineStage.cpp:97] [compilePipeline] overall runtime: 96.551 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-3_Trace Generation:	30.5466 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-3_IR Generation:	15.1661 ms
CompilationBasedPipelineExecutionEngine NautilusCompilation-0-0-3_Compilation:	50.8384 ms[m
2023-11-13 10:20:22.795 start: queryId=1, querySubPlanId=7; 
[36m[10:20:22.796090] [D] [thread 132330] [ExecutableQueryPlan.cpp:144] [start] QueryExecutionPlan: start query=1 subplan=7[m
[36m[10:20:22.796182] [D] [thread 132330] [ExecutableQueryPlan.cpp:148] [start] ExecutableQueryPlan::start qep=7 pipe=2[m
[36m[10:20:22.796432] [D] [thread 132330] [KeyedSliceMergingHandler.cpp:33] [start] start GlobalSliceMergingHandler[m
[36m[10:20:22.796506] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[10:20:22.797061] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[10:20:22.797872] [D] [thread 132325] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 2 belonging to query id: 7 stage id: 2[m
[36m[10:20:22.797872] [D] [thread 132326] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 2 belonging to query id: 7 stage id: 2[m
[36m[10:20:22.797872] [D] [thread 132328] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 2 belonging to query id: 7 stage id: 2[m
[36m[10:20:22.797872] [D] [thread 132327] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 2 belonging to query id: 7 stage id: 2[m
[36m[10:20:22.798340] [D] [thread 132330] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 7 stage id: 2[m
[36m[10:20:22.798420] [D] [thread 132330] [ExecutableQueryPlan.cpp:148] [start] ExecutableQueryPlan::start qep=7 pipe=3[m
[36m[10:20:22.798482] [D] [thread 132330] [AbstractSlicePreAggregationHandler.cpp:110] [start] start AbstractSlicePreAggregationHandler[m
[36m[10:20:22.798525] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[10:20:22.798718] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[10:20:22.799179] [D] [thread 132326] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[10:20:22.799179] [D] [thread 132325] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[10:20:22.799178] [D] [thread 132327] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[10:20:22.799330] [D] [thread 132328] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[10:20:22.799504] [D] [thread 132330] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 7 stage id: 3[m
[36m[10:20:22.799865] [D] [thread 132330] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::21::0::0 from 192.168.2.12[m
[36m[10:20:22.800165] [D] [thread 132330] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::21::0::0=1[m
[36m[10:20:22.800211] [D] [thread 132330] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff24019900  started successfully[m
[36m[10:20:22.800267] [D] [thread 132330] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::27::0::0 from 192.168.2.12[m
[36m[10:20:22.800359] [D] [thread 132330] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::27::0::0=1[m
[36m[10:20:22.800415] [D] [thread 132330] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff24033890  started successfully[m
[36m[10:20:22.800461] [D] [thread 132330] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::33::0::0 from 192.168.2.30[m
[36m[10:20:22.800517] [D] [thread 132330] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::33::0::0=1[m
[36m[10:20:22.800534] [D] [thread 132330] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff24033f00  started successfully[m
[36m[10:20:22.800574] [D] [thread 132330] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::39::0::0 from 192.168.2.30[m
[36m[10:20:22.800611] [D] [thread 132330] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::39::0::0=1[m
[36m[10:20:22.800625] [D] [thread 132330] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff24034d20  started successfully[m
[36m[10:20:22.800654] [D] [thread 132330] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::45::0::0 from 192.168.2.31[m
[36m[10:20:22.800687] [D] [thread 132330] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::45::0::0=1[m
[36m[10:20:22.800700] [D] [thread 132330] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff24035c00  started successfully[m
[36m[10:20:22.800728] [D] [thread 132330] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::51::0::0 from 192.168.2.31[m
[36m[10:20:22.800763] [D] [thread 132330] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::51::0::0=1[m
[36m[10:20:22.800776] [D] [thread 132330] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff24036b70  started successfully[m
[36m[10:20:22.800829] [D] [thread 132330] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:21 PartitionId: 0 SubpartitionID: 0[m
[36m[10:20:22.800917] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[10:20:22.801053] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[10:20:22.801483] [D] [thread 132327] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::21::0::0[m
[36m[10:20:22.801483] [D] [thread 132326] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::21::0::0[m
[36m[10:20:22.801554] [D] [thread 132328] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::21::0::0[m
[36m[10:20:22.801615] [D] [thread 132325] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::21::0::0[m
[36m[10:20:22.801716] [D] [thread 132330] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::21::0::0[m
[36m[10:20:22.801767] [D] [thread 132330] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:21 PartitionId: 0 SubpartitionID: 0[m
[36m[10:20:22.801784] [D] [thread 132330] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff24019900  started successfully[m
[36m[10:20:22.801813] [D] [thread 132330] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:27 PartitionId: 0 SubpartitionID: 0[m
[36m[10:20:22.801887] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[10:20:22.802008] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[10:20:22.802422] [D] [thread 132326] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::27::0::0[m
[36m[10:20:22.802422] [D] [thread 132327] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::27::0::0[m
[36m[10:20:22.802422] [D] [thread 132325] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::27::0::0[m
[36m[10:20:22.802471] [D] [thread 132328] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::27::0::0[m
[36m[10:20:22.802691] [D] [thread 132330] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::27::0::0[m
[36m[10:20:22.802741] [D] [thread 132330] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:27 PartitionId: 0 SubpartitionID: 0[m
[36m[10:20:22.802758] [D] [thread 132330] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff24033890  started successfully[m
[36m[10:20:22.802786] [D] [thread 132330] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[10:20:22.802844] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[10:20:22.803018] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[10:20:22.803410] [D] [thread 132327] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[10:20:22.803454] [D] [thread 132328] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[10:20:22.803498] [D] [thread 132325] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[10:20:22.803410] [D] [thread 132326] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[10:20:22.803634] [D] [thread 132330] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::33::0::0[m
[36m[10:20:22.803683] [D] [thread 132330] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[10:20:22.803699] [D] [thread 132330] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff24033f00  started successfully[m
[36m[10:20:22.803727] [D] [thread 132330] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[10:20:22.803786] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[10:20:22.803927] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[10:20:22.804356] [D] [thread 132327] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[10:20:22.804355] [D] [thread 132326] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[10:20:22.804400] [D] [thread 132328] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[10:20:22.804356] [D] [thread 132325] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[10:20:22.804894] [D] [thread 132330] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::39::0::0[m
[36m[10:20:22.805051] [D] [thread 132330] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[10:20:22.805073] [D] [thread 132330] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff24034d20  started successfully[m
[36m[10:20:22.805111] [D] [thread 132330] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[36m[10:20:22.805178] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[10:20:22.805280] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[10:20:22.805706] [D] [thread 132325] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[10:20:22.805749] [D] [thread 132327] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[10:20:22.805794] [D] [thread 132328] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[10:20:22.805706] [D] [thread 132326] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[10:20:22.805957] [D] [thread 132330] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::45::0::0[m
[36m[10:20:22.806006] [D] [thread 132330] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[36m[10:20:22.806022] [D] [thread 132330] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff24035c00  started successfully[m
[36m[10:20:22.806048] [D] [thread 132330] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[10:20:22.806107] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[10:20:22.806251] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[10:20:22.806692] [D] [thread 132327] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[10:20:22.806691] [D] [thread 132325] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[10:20:22.806753] [D] [thread 132328] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[10:20:22.806832] [D] [thread 132326] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[10:20:22.806902] [D] [thread 132330] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::51::0::0[m
[36m[10:20:22.806947] [D] [thread 132330] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[10:20:22.806963] [D] [thread 132330] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff24036b70  started successfully[m
[36m[10:20:22.807015] [D] [thread 132330] [QueryManagerLifecycle.cpp:158] [registerQuery] AbstractQueryManager: start sink  FileSink()[m
[36m[10:20:22.807309] [D] [thread 132330] [NodeEngine.cpp:144] [registerQueryInNodeEngine] Runtime: register of subqep  7  succeeded[m
[36m[10:20:22.807409] [D] [thread 132330] [WorkerRPCServer.cpp:54] [RegisterQuery] WorkerRPCServer::RegisterQuery: success[m
[36m[10:20:22.909013] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:22.932095] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 1:1::27::0::0[m
[36m[10:20:22.932106] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 2:1::27::0::0[m
[32m[10:20:22.932290] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=1) Data[m
[32m[10:20:22.932290] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=2) Data[m
[36m[10:20:22.932602] [D] [thread 132324] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::27::0::0(threadId=2) REGISTERED[m
[36m[10:20:22.932614] [D] [thread 132323] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::27::0::0(threadId=1) REGISTERED[m
[36m[10:20:22.934817] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 0:1::27::0::0[m
[36m[10:20:22.934828] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 3:1::27::0::0[m
[32m[10:20:22.934993] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=0) Data[m
[32m[10:20:22.934993] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::27::0::0(threadId=3) Data[m
[36m[10:20:22.935152] [D] [thread 132323] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::27::0::0(threadId=0) REGISTERED[m
[36m[10:20:22.935185] [D] [thread 132324] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::27::0::0(threadId=3) REGISTERED[m
[36m[10:20:22.938253] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 1:1::51::0::0[m
[36m[10:20:22.938277] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 2:1::51::0::0[m
[32m[10:20:22.938368] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) Data[m
[32m[10:20:22.938388] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) Data[m
[36m[10:20:22.939087] [D] [thread 132324] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=2) REGISTERED[m
[36m[10:20:22.939119] [D] [thread 132323] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=1) REGISTERED[m
[36m[10:20:22.939326] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 0:1::51::0::0[m
[36m[10:20:22.939340] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 3:1::51::0::0[m
[32m[10:20:22.939407] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) Data[m
[32m[10:20:22.939422] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) Data[m
[36m[10:20:22.939493] [D] [thread 132323] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=0) REGISTERED[m
[36m[10:20:22.939528] [D] [thread 132324] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=3) REGISTERED[m
[36m[10:20:22.940071] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 2:1::39::0::0[m
[32m[10:20:22.940127] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) Data[m
[36m[10:20:22.940185] [D] [thread 132323] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::39::0::0(threadId=2) REGISTERED[m
[36m[10:20:22.940589] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 3:1::39::0::0[m
[32m[10:20:22.940650] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) Data[m
[36m[10:20:22.940710] [D] [thread 132324] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::39::0::0(threadId=3) REGISTERED[m
[36m[10:20:22.941626] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 0:1::39::0::0[m
[36m[10:20:22.941642] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 1:1::39::0::0[m
[32m[10:20:22.941704] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) Data[m
[32m[10:20:22.941710] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) Data[m
[36m[10:20:22.941796] [D] [thread 132324] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::39::0::0(threadId=1) REGISTERED[m
[36m[10:20:22.941813] [D] [thread 132323] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::39::0::0(threadId=0) REGISTERED[m
[36m[10:20:22.948271] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 2:1::21::0::0[m
[36m[10:20:22.948287] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 0:1::21::0::0[m
[32m[10:20:22.948436] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=2) Data[m
[32m[10:20:22.948440] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=0) Data[m
[36m[10:20:22.948557] [D] [thread 132323] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::21::0::0(threadId=2) REGISTERED[m
[36m[10:20:22.948572] [D] [thread 132324] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::21::0::0(threadId=0) REGISTERED[m
[36m[10:20:22.948709] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 1:1::21::0::0[m
[36m[10:20:22.948717] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 3:1::21::0::0[m
[32m[10:20:22.948757] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=1) Data[m
[32m[10:20:22.948765] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::21::0::0(threadId=3) Data[m
[36m[10:20:22.948821] [D] [thread 132324] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::21::0::0(threadId=1) REGISTERED[m
[36m[10:20:22.948837] [D] [thread 132323] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::21::0::0(threadId=3) REGISTERED[m
[36m[10:20:22.954924] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 3:1::45::0::0[m
[32m[10:20:22.955049] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=3) Data[m
[36m[10:20:22.955129] [D] [thread 132323] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::45::0::0(threadId=3) REGISTERED[m
[36m[10:20:22.955503] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 1:1::45::0::0[m
[32m[10:20:22.955568] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=1) Data[m
[36m[10:20:22.955632] [D] [thread 132324] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::45::0::0(threadId=1) REGISTERED[m
[36m[10:20:22.956531] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 2:1::45::0::0[m
[32m[10:20:22.956602] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=2) Data[m
[36m[10:20:22.956676] [D] [thread 132323] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::45::0::0(threadId=2) REGISTERED[m
[36m[10:20:22.957111] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 0:1::45::0::0[m
[32m[10:20:22.957174] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) Data[m
[36m[10:20:22.957239] [D] [thread 132324] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::45::0::0(threadId=0) REGISTERED[m
[36m[10:20:22.957752] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 1:1::33::0::0[m
[36m[10:20:22.957753] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 2:1::33::0::0[m
[32m[10:20:22.957861] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=2) Data[m
[32m[10:20:22.957861] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=1) Data[m
[36m[10:20:22.957964] [D] [thread 132324] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=1) REGISTERED[m
[36m[10:20:22.957951] [D] [thread 132323] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=2) REGISTERED[m
[36m[10:20:22.958948] [D] [thread 132323] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 0:1::33::0::0[m
[32m[10:20:22.959020] [I] [thread 132323] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=0) Data[m
[36m[10:20:22.959088] [D] [thread 132323] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=0) REGISTERED[m
[36m[10:20:22.959142] [D] [thread 132324] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): ClientAnnouncement received for channel 3:1::33::0::0[m
[32m[10:20:22.959189] [I] [thread 132324] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=3) Data[m
[36m[10:20:22.959235] [D] [thread 132324] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=3) REGISTERED[m
[36m[10:20:23.367730] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:23.368091] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:23.401783] [D] [thread 132313] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Register succeed[m
[36m[10:20:23.401898] [D] [thread 132313] [QueryDeploymentPhase.cpp:215] [deployQuery] QueryDeploymentPhase: Finished deploying execution plan for query with Id 1 [m
[36m[10:20:23.402641] [D] [thread 132313] [QueryDeploymentPhase.cpp:94] [execute] QueryDeploymentPhase: deployment for shared query 1 successful[m
[36m[10:20:23.402842] [D] [thread 132313] [QueryDeploymentPhase.cpp:101] [execute] QueryService: start query[m
[36m[10:20:23.402872] [D] [thread 132313] [QueryDeploymentPhase.cpp:219] [startQuery] QueryDeploymentPhase::startQuery queryId= 1[m
[36m[10:20:23.403083] [D] [thread 132313] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=5 and IP=192.168.2.32[m
[36m[10:20:23.403169] [D] [thread 132313] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.32:33899 queryId=1[m
[36m[10:20:23.407692] [D] [thread 132313] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=6 and IP=192.168.2.33[m
[36m[10:20:23.407783] [D] [thread 132313] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.33:44393 queryId=1[m
[36m[10:20:23.413134] [D] [thread 132313] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=7 and IP=192.168.2.34[m
[36m[10:20:23.413222] [D] [thread 132313] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.34:35677 queryId=1[m
[36m[10:20:23.418381] [D] [thread 132313] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=8 and IP=192.168.2.35[m
[36m[10:20:23.418471] [D] [thread 132313] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.35:45919 queryId=1[m
[36m[10:20:23.423613] [D] [thread 132313] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=9 and IP=192.168.2.37[m
[36m[10:20:23.423704] [D] [thread 132313] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.37:44265 queryId=1[m
[36m[10:20:23.428855] [D] [thread 132313] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=10 and IP=192.168.2.38[m
[36m[10:20:23.428941] [D] [thread 132313] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.38:37017 queryId=1[m
[36m[10:20:23.434556] [D] [thread 132313] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=1 and IP=192.168.2.11[m
[36m[10:20:23.434656] [D] [thread 132313] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.11:38421 queryId=1[m
[36m[10:20:23.440153] [D] [thread 132313] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=2 and IP=192.168.2.12[m
[36m[10:20:23.440254] [D] [thread 132313] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.12:43279 queryId=1[m
[36m[10:20:23.445288] [D] [thread 132313] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=3 and IP=192.168.2.30[m
[36m[10:20:23.445372] [D] [thread 132313] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.30:33875 queryId=1[m
[36m[10:20:23.449968] [D] [thread 132313] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=4 and IP=192.168.2.31[m
[36m[10:20:23.450052] [D] [thread 132313] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.31:42073 queryId=1[m
[36m[10:20:23.454508] [D] [thread 132313] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Start for 10 queues[m
[36m[10:20:23.457701] [D] [thread 132384] [WorkerRPCServer.cpp:77] [StartQuery] WorkerRPCServer::StartQuery: got request for 1[m
[36m[10:20:23.457789] [D] [thread 132384] [NodeEngine.cpp:158] [startQuery] Runtime: startQuery= 1[m
[36m[10:20:23.457890] [D] [thread 132384] [QueryManagerLifecycle.cpp:183] [startQuery] AbstractQueryManager::startQuery: query id  7   1[m
[36m[10:20:23.458003] [D] [thread 132384] [QueryStatistics.cpp:48] [setTimestampQueryStart] QueryStatistics::setTimestampQueryStart called with  1699870823457[m
[36m[10:20:23.458018] [D] [thread 132384] [NodeEngine.cpp:170] [startQuery] Runtime: start of QEP  7  succeeded[m
[36m[10:20:23.458038] [D] [thread 132384] [WorkerRPCServer.cpp:80] [StartQuery] WorkerRPCServer::StartQuery: success[m
[36m[10:20:23.547461] [D] [thread 132313] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Start succeed[m
[36m[10:20:23.547568] [D] [thread 132313] [QueryDeploymentPhase.cpp:238] [startQuery] QueryDeploymentPhase: Finished starting execution plan for query with Id 1[m
[32m[10:20:23.548448] [I] [thread 132313] [GlobalQueryPlan.cpp:124] [removeFailedOrStoppedSharedQueryPlans] GlobalQueryPlan: remove empty metadata information.[m
[36m[10:20:23.548636] [D] [thread 132313] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[10:20:23.674557] [D] [thread 132326] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10620000-10680000[m
[36m[10:20:23.676171] [D] [thread 132326] [QueryStatistics.cpp:54] [setTimestampFirstProcessedTask] QueryStatistics::setTimestampFirstProcessedTask called with  1699870823676[m
[36m[10:20:23.685636] [D] [thread 132327] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10620000-10680000[m
[36m[10:20:23.699604] [D] [thread 132328] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10620000-10680000[m
[36m[10:20:23.701675] [D] [thread 132325] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10620000-10680000[m
[36m[10:20:24.369420] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:24.493357] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:24.493698] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:25.495064] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:26.476238] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:26.476631] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:26.477840] [D] [thread 132399] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:26.477967] [I] [thread 132399] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:26.477987] [I] [thread 132399] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:26.478167] [I] [thread 132399] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:26.478183] [I] [thread 132399] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:26.742168] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:26.743542] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:27.744802] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:28.746056] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:28.751300] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:28.751661] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:28.752650] [D] [thread 132404] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:28.752745] [I] [thread 132404] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:28.752762] [I] [thread 132404] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:28.752879] [I] [thread 132404] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:28.752894] [I] [thread 132404] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:28.958503] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:28.958916] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:29.960171] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:30.925496] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:30.925841] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:30.926831] [D] [thread 132409] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:30.926940] [I] [thread 132409] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:30.926958] [I] [thread 132409] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:30.927047] [I] [thread 132409] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:30.927060] [I] [thread 132409] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:31.146124] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:31.146478] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:32.147803] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:33.117205] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:33.117540] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:33.118498] [D] [thread 132414] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:33.118626] [I] [thread 132414] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:33.118644] [I] [thread 132414] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:33.118764] [I] [thread 132414] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:33.118779] [I] [thread 132414] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:33.380847] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:33.381202] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:34.382535] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:35.313570] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:35.313902] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:35.314866] [D] [thread 132419] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:35.314959] [I] [thread 132419] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:35.314977] [I] [thread 132419] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:35.315093] [I] [thread 132419] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:35.315106] [I] [thread 132419] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:35.530571] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:35.530928] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:36.532128] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:37.036534] [D] [thread 132327] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10680000-10740000[m
[36m[10:20:37.339820] [D] [thread 132328] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10680000-10740000[m
[36m[10:20:37.394605] [D] [thread 132326] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10680000-10740000[m
[36m[10:20:37.451641] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:37.451981] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:37.453407] [D] [thread 132424] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:37.453503] [I] [thread 132424] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:37.453521] [I] [thread 132424] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:37.453636] [I] [thread 132424] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:37.453651] [I] [thread 132424] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:37.619210] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:37.619540] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:37.696982] [D] [thread 132325] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10680000-10740000[m
[36m[10:20:38.620736] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:39.085011] [D] [thread 132325] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 60000 Deploy merge task for slice 10620000-10680000 [m
[36m[10:20:39.085669] [D] [thread 132328] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 10620000-10680000-1[m
[36m[10:20:39.085771] [D] [thread 132328] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10620000-10680000[m
[36m[10:20:39.085890] [D] [thread 132328] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10620000-10680000[m
[36m[10:20:39.085930] [D] [thread 132328] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10620000-10680000[m
[36m[10:20:39.085967] [D] [thread 132328] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10620000-10680000[m
[36m[10:20:39.086003] [D] [thread 132328] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10620000-10680000[m
[36m[10:20:39.086151] [D] [thread 132328] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[10:20:39.089777] [D] [thread 132328] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out following content 10620000,10680000,24,1699870823478,1699870839086
10620000,10680000,13,1699870823544,1699870839086
10620000,10680000,47,1699870823488,1699870839086
10620000,10680000,100,1699870823467,1699870839086
10620000,10680000,63,1699870823498,1699870839086
10620000,10680000,54,1699870823516,1699870839086
[m
[36m[10:20:39.598311] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:39.598671] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:39.599696] [D] [thread 132429] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:39.599798] [I] [thread 132429] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:39.599815] [I] [thread 132429] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:39.599932] [I] [thread 132429] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:39.599946] [I] [thread 132429] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:39.816843] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:39.817195] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:40.818353] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:41.814797] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:41.815290] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:41.816790] [D] [thread 132434] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:41.816915] [I] [thread 132434] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:41.816935] [I] [thread 132434] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:41.817075] [I] [thread 132434] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:41.817089] [I] [thread 132434] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:41.985626] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:41.986198] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:42.987500] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:43.957284] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:43.957871] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:43.958590] [D] [thread 132439] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:43.958682] [I] [thread 132439] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:43.958699] [I] [thread 132439] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:43.958814] [I] [thread 132439] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:43.958827] [I] [thread 132439] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:44.214364] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:44.214927] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:45.216148] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:46.165765] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:46.166405] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:46.167138] [D] [thread 132445] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:46.167225] [I] [thread 132445] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:46.167241] [I] [thread 132445] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:46.167351] [I] [thread 132445] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:46.167365] [I] [thread 132445] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:46.334915] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:46.335568] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:47.336816] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:48.338100] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:48.369756] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:48.370157] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:48.371265] [D] [thread 132450] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:48.371361] [I] [thread 132450] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:48.371378] [I] [thread 132450] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:48.371495] [I] [thread 132450] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:48.371508] [I] [thread 132450] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:48.587323] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:48.587658] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:49.589026] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:50.590309] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:50.600602] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:50.601201] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:50.601912] [D] [thread 132455] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:50.602007] [I] [thread 132455] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:50.602024] [I] [thread 132455] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:50.602141] [I] [thread 132455] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:50.602154] [I] [thread 132455] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:50.818500] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:50.819069] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:51.819735] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:52.762017] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:52.762339] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:52.763321] [D] [thread 132460] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:52.763416] [I] [thread 132460] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:52.763433] [I] [thread 132460] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:52.763550] [I] [thread 132460] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:52.763564] [I] [thread 132460] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:52.976746] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:52.977080] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:53.132868] [D] [thread 132327] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10740000-10800000[m
[36m[10:20:53.433608] [D] [thread 132328] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10740000-10800000[m
[36m[10:20:53.978452] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:54.648144] [D] [thread 132325] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10740000-10800000[m
[36m[10:20:54.913495] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:54.913824] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:54.914967] [D] [thread 132465] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:54.915065] [I] [thread 132465] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:54.915082] [I] [thread 132465] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:54.915200] [I] [thread 132465] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:54.915233] [I] [thread 132465] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:55.136705] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:55.137033] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:55.892522] [D] [thread 132326] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10740000-10800000[m
[36m[10:20:56.138256] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:57.062439] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:57.062849] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:57.063958] [D] [thread 132470] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:57.064032] [I] [thread 132470] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:57.064047] [I] [thread 132470] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:57.064154] [I] [thread 132470] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:57.064166] [I] [thread 132470] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:57.278722] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:57.279067] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:58.280378] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:59.266315] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:59.266710] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:59.267636] [D] [thread 132475] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:20:59.267730] [I] [thread 132475] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:59.267747] [I] [thread 132475] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:20:59.267862] [I] [thread 132475] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:20:59.267874] [I] [thread 132475] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:20:59.390035] [D] [thread 132328] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 60000 Deploy merge task for slice 10680000-10740000 [m
[36m[10:20:59.390755] [D] [thread 132325] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 10680000-10740000-2[m
[36m[10:20:59.390898] [D] [thread 132325] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10680000-10740000[m
[36m[10:20:59.390967] [D] [thread 132325] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10680000-10740000[m
[36m[10:20:59.391107] [D] [thread 132325] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10680000-10740000[m
[36m[10:20:59.391155] [D] [thread 132325] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10680000-10740000[m
[36m[10:20:59.391227] [D] [thread 132325] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10680000-10740000[m
[36m[10:20:59.391379] [D] [thread 132325] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[10:20:59.391428] [D] [thread 132325] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:20:59.394199] [D] [thread 132325] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out following content 10680000,10740000,100,1699870836842,1699870859391
10680000,10740000,63,1699870837298,1699870859391
10680000,10740000,24,1699870837679,1699870859391
10680000,10740000,54,1699870837223,1699870859391
10680000,10740000,13,1699870838906,1699870859391
10680000,10740000,47,1699870837924,1699870859391
[m
[36m[10:20:59.414286] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:20:59.414684] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:00.415944] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:01.416548] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:01.440013] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:01.440674] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:01.441377] [D] [thread 132480] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:01.441474] [I] [thread 132480] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:01.441492] [I] [thread 132480] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:01.441607] [I] [thread 132480] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:01.441619] [I] [thread 132480] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:01.708480] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:01.709055] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:02.710194] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:03.711562] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:04.249994] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:04.250341] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:04.251312] [D] [thread 132486] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:04.251409] [I] [thread 132486] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:04.251427] [I] [thread 132486] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:04.251544] [I] [thread 132486] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:04.251558] [I] [thread 132486] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:04.462528] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:04.462859] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:05.464082] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:06.450896] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:06.451248] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:06.452437] [D] [thread 132491] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:06.452530] [I] [thread 132491] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:06.452549] [I] [thread 132491] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:06.452669] [I] [thread 132491] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:06.452681] [I] [thread 132491] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:06.713418] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:06.713756] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:07.714951] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:08.016592] [D] [thread 132325] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10800000-10860000[m
[36m[10:21:08.321821] [D] [thread 132328] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10800000-10860000[m
[36m[10:21:08.716187] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:08.718030] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:08.718355] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:08.719489] [D] [thread 132498] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:08.719588] [I] [thread 132498] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:08.719606] [I] [thread 132498] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:08.719724] [I] [thread 132498] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:08.719737] [I] [thread 132498] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:08.935869] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:08.936236] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:09.836981] [D] [thread 132327] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10800000-10860000[m
[36m[10:21:09.937495] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:10.140379] [D] [thread 132326] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10800000-10860000[m
[36m[10:21:10.938757] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:10.970331] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:10.970876] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:10.971683] [D] [thread 132506] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:10.971776] [I] [thread 132506] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:10.971794] [I] [thread 132506] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:10.971910] [I] [thread 132506] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:10.971926] [I] [thread 132506] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:11.193879] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:11.194681] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:12.195969] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:13.197258] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:13.237310] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:13.237945] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:13.238611] [D] [thread 132513] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:13.238704] [I] [thread 132513] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:13.238721] [I] [thread 132513] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:13.238837] [I] [thread 132513] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:13.238850] [I] [thread 132513] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:13.500932] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:13.501511] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:14.502825] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:15.490848] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:15.491439] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:15.492254] [D] [thread 132521] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:15.492378] [I] [thread 132521] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:15.492397] [I] [thread 132521] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:15.492517] [I] [thread 132521] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:15.492529] [I] [thread 132521] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:15.717946] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:15.718283] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:16.719512] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:17.720789] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:17.777609] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:17.777935] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:17.779083] [D] [thread 132527] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:17.779206] [I] [thread 132527] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:17.779224] [I] [thread 132527] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:17.779357] [I] [thread 132527] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:17.779380] [I] [thread 132527] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:17.971741] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:17.972094] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:18.973430] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:19.075212] [D] [thread 132326] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 60000 Deploy merge task for slice 10740000-10800000 [m
[36m[10:21:19.076108] [D] [thread 132325] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 10740000-10800000-3[m
[36m[10:21:19.076214] [D] [thread 132325] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10740000-10800000[m
[36m[10:21:19.076281] [D] [thread 132325] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10740000-10800000[m
[36m[10:21:19.076379] [D] [thread 132325] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10740000-10800000[m
[36m[10:21:19.076440] [D] [thread 132325] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10740000-10800000[m
[36m[10:21:19.076493] [D] [thread 132325] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10740000-10800000[m
[36m[10:21:19.076759] [D] [thread 132325] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[10:21:19.076829] [D] [thread 132325] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:19.079458] [D] [thread 132325] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out following content 10740000,10800000,100,1699870852998,1699870879076
10740000,10800000,47,1699870856988,1699870879076
10740000,10800000,24,1699870856701,1699870879076
10740000,10800000,63,1699870855594,1699870879076
10740000,10800000,54,1699870855731,1699870879076
10740000,10800000,13,1699870859188,1699870879076
[m
[36m[10:21:19.942518] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:19.942874] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:19.943930] [D] [thread 132532] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:19.944030] [I] [thread 132532] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:19.944047] [I] [thread 132532] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:19.944165] [I] [thread 132532] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:19.944190] [I] [thread 132532] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:20.114298] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:20.114646] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:21.115957] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:22.116582] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:22.143842] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:22.144424] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:22.145275] [D] [thread 132538] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:22.145369] [I] [thread 132538] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:22.145387] [I] [thread 132538] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:22.145515] [I] [thread 132538] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:22.145531] [I] [thread 132538] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:22.361755] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:22.362219] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:23.363605] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:24.364884] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:24.750077] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:24.750712] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:24.751387] [D] [thread 132543] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:24.751480] [I] [thread 132543] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:24.751497] [I] [thread 132543] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:24.751614] [I] [thread 132543] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:24.751631] [I] [thread 132543] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:24.969188] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:24.969724] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:25.328010] [D] [thread 132325] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10860000-10920000[m
[36m[10:21:25.631509] [D] [thread 132328] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10860000-10920000[m
[36m[10:21:25.970968] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:26.238989] [D] [thread 132327] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10860000-10920000[m
[36m[10:21:26.543092] [D] [thread 132326] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10860000-10920000[m
[36m[10:21:26.972218] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:26.977368] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:26.977692] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:26.978921] [D] [thread 132548] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:26.979024] [I] [thread 132548] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:26.979041] [I] [thread 132548] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:26.979158] [I] [thread 132548] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:26.979171] [I] [thread 132548] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:27.199215] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:27.199595] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:28.200562] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:29.146987] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:29.147320] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:29.148425] [D] [thread 132553] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:29.148526] [I] [thread 132553] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:29.148546] [I] [thread 132553] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:29.148671] [I] [thread 132553] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:29.148688] [I] [thread 132553] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:29.309288] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:29.309640] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:30.310859] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:31.310199] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:31.310589] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:31.311692] [D] [thread 132559] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:31.311790] [I] [thread 132559] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:31.311808] [I] [thread 132559] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:31.311924] [I] [thread 132559] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:31.311939] [I] [thread 132559] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:31.574613] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:31.575110] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:32.576508] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:33.577828] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:33.613214] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:33.613766] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:33.614668] [D] [thread 132566] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:33.614765] [I] [thread 132566] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:33.614784] [I] [thread 132566] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:33.614901] [I] [thread 132566] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:33.614913] [I] [thread 132566] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:33.781924] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:33.782546] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:34.783823] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:35.784509] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:35.790433] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:35.790794] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:35.791857] [D] [thread 132572] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:35.791982] [I] [thread 132572] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:35.792001] [I] [thread 132572] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:35.792122] [I] [thread 132572] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:35.792138] [I] [thread 132572] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:35.997865] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:35.998194] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:36.999478] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:38.000490] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:38.004473] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:38.004831] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:38.006196] [D] [thread 132577] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:38.006318] [I] [thread 132577] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:38.006337] [I] [thread 132577] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:38.006460] [I] [thread 132577] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:38.006477] [I] [thread 132577] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:38.230575] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:38.230934] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:39.050240] [D] [thread 132326] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 60000 Deploy merge task for slice 10800000-10860000 [m
[36m[10:21:39.050867] [D] [thread 132328] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 10800000-10860000-4[m
[36m[10:21:39.050974] [D] [thread 132328] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10800000-10860000[m
[36m[10:21:39.051044] [D] [thread 132328] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10800000-10860000[m
[36m[10:21:39.051087] [D] [thread 132328] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10800000-10860000[m
[36m[10:21:39.051132] [D] [thread 132328] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10800000-10860000[m
[36m[10:21:39.051180] [D] [thread 132328] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10800000-10860000[m
[36m[10:21:39.051302] [D] [thread 132328] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[10:21:39.051332] [D] [thread 132328] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:39.054282] [D] [thread 132328] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out following content 10800000,10860000,100,1699870867880,1699870899051
10800000,10860000,63,1699870873575,1699870899051
10800000,10860000,47,1699870875654,1699870899051
10800000,10860000,24,1699870875709,1699870899051
10800000,10860000,13,1699870878904,1699870899051
10800000,10860000,54,1699870874506,1699870899051
[m
[36m[10:21:39.232089] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:40.233340] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:40.267962] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:40.268349] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:40.269349] [D] [thread 132583] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:40.269446] [I] [thread 132583] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:40.269463] [I] [thread 132583] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:40.269577] [I] [thread 132583] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:40.269590] [I] [thread 132583] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:40.463431] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:40.463793] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:41.464950] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:42.032481] [D] [thread 132326] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10920000-10980000[m
[36m[10:21:42.335831] [D] [thread 132325] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10920000-10980000[m
[36m[10:21:42.449681] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:42.450094] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:42.451735] [D] [thread 132588] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:42.451831] [I] [thread 132588] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:42.451848] [I] [thread 132588] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:42.451963] [I] [thread 132588] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:42.451976] [I] [thread 132588] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:42.739699] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:42.740083] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:43.741258] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:44.665490] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:44.665835] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:44.666899] [D] [thread 132593] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:44.667049] [I] [thread 132593] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:44.667070] [I] [thread 132593] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:44.667231] [I] [thread 132593] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:44.667265] [I] [thread 132593] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:44.837358] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:44.837716] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:45.838927] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:46.840244] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:46.888551] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:46.888870] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:46.890151] [D] [thread 132598] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:46.890255] [I] [thread 132598] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:46.890274] [I] [thread 132598] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:46.890324] [D] [thread 132328] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10920000-10980000[m
[32m[10:21:46.890397] [I] [thread 132598] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:46.890411] [I] [thread 132598] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:47.085773] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:47.086102] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:48.087357] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:49.088618] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:49.129342] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:49.129671] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:49.130692] [D] [thread 132603] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:49.130793] [I] [thread 132603] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:49.130810] [I] [thread 132603] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:49.130926] [I] [thread 132603] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:49.130950] [I] [thread 132603] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:49.325610] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:49.325942] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:50.327155] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:50.900817] [D] [thread 132327] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10920000-10980000[m
[36m[10:21:51.328649] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:51.349860] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:51.350214] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:51.351255] [D] [thread 132608] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:51.351352] [I] [thread 132608] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:51.351370] [I] [thread 132608] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:51.351487] [I] [thread 132608] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:51.351509] [I] [thread 132608] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:51.571457] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:51.571834] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:52.573092] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:53.574389] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:53.605160] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:53.605506] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:53.606688] [D] [thread 132613] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:53.606809] [I] [thread 132613] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:53.606830] [I] [thread 132613] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:53.606963] [I] [thread 132613] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:53.606983] [I] [thread 132613] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:53.878315] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:53.878683] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:54.879923] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:55.880522] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:55.894147] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:55.894707] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:55.895457] [D] [thread 132618] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:55.895549] [I] [thread 132618] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:55.895567] [I] [thread 132618] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:55.895684] [I] [thread 132618] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:55.895697] [I] [thread 132618] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:56.112834] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:56.113377] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:57.114672] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:58.115664] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:58.121388] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:58.122030] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:58.122755] [D] [thread 132623] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:21:58.122849] [I] [thread 132623] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:58.122867] [I] [thread 132623] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:21:58.122982] [I] [thread 132623] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:21:58.122996] [I] [thread 132623] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:21:58.389671] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:58.389996] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:59.391209] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:21:59.632707] [D] [thread 132328] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10980000-11040000[m
[36m[10:21:59.664399] [D] [thread 132325] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 60000 Deploy merge task for slice 10860000-10920000 [m
[36m[10:21:59.665050] [D] [thread 132326] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 10860000-10920000-5[m
[36m[10:21:59.665146] [D] [thread 132326] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10860000-10920000[m
[36m[10:21:59.665212] [D] [thread 132326] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10860000-10920000[m
[36m[10:21:59.665259] [D] [thread 132326] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10860000-10920000[m
[36m[10:21:59.665299] [D] [thread 132326] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10860000-10920000[m
[36m[10:21:59.665341] [D] [thread 132326] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10860000-10920000[m
[36m[10:21:59.665456] [D] [thread 132326] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[10:21:59.665488] [D] [thread 132326] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:21:59.668015] [D] [thread 132326] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out following content 10860000,10920000,100,1699870885151,1699870919665
10860000,10920000,63,1699870890942,1699870919665
10860000,10920000,47,1699870894332,1699870919665
10860000,10920000,24,1699870894954,1699870919665
10860000,10920000,54,1699870893300,1699870919665
10860000,10920000,13,1699870898896,1699870919665
[m
[36m[10:21:59.936536] [D] [thread 132327] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10980000-11040000[m
[36m[10:22:00.240589] [D] [thread 132325] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10980000-11040000[m
[36m[10:22:00.392558] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:00.494039] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:00.494387] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:00.495381] [D] [thread 132628] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:00.495476] [I] [thread 132628] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:00.495493] [I] [thread 132628] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:00.495606] [I] [thread 132628] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:00.495620] [I] [thread 132628] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:00.694738] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:00.695105] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:01.695889] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:02.697119] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:02.706373] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:02.706973] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:02.707750] [D] [thread 132633] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:02.707880] [I] [thread 132633] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:02.707899] [I] [thread 132633] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:02.708015] [I] [thread 132633] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:02.708053] [I] [thread 132633] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:02.921302] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:02.921827] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:03.923088] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:04.924377] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:04.939701] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:04.940050] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:04.941114] [D] [thread 132638] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:04.941215] [I] [thread 132638] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:04.941233] [I] [thread 132638] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:04.941349] [I] [thread 132638] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:04.941363] [I] [thread 132638] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:05.114184] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:05.114574] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:06.115812] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:07.117197] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:07.269223] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:07.269916] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:07.270610] [D] [thread 132643] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:07.270702] [I] [thread 132643] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:07.270720] [I] [thread 132643] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:07.270835] [I] [thread 132643] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:07.270849] [I] [thread 132643] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:07.478395] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:07.478905] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:08.272625] [D] [thread 132326] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 10980000-11040000[m
[36m[10:22:08.480160] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:09.481607] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:09.631161] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:09.631695] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:09.632560] [D] [thread 132648] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:09.632656] [I] [thread 132648] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:09.632675] [I] [thread 132648] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:09.632794] [I] [thread 132648] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:09.632810] [I] [thread 132648] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:09.830608] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:09.831096] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:10.832435] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:11.833856] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:11.893847] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:11.894453] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:11.895229] [D] [thread 132653] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:11.895326] [I] [thread 132653] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:11.895343] [I] [thread 132653] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:11.895458] [I] [thread 132653] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:11.895472] [I] [thread 132653] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:12.103932] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:12.104458] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:13.105844] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:14.107144] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:14.252919] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:14.253550] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:14.254328] [D] [thread 132659] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:14.254518] [I] [thread 132659] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:14.254565] [I] [thread 132659] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:14.254766] [I] [thread 132659] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:14.254834] [I] [thread 132659] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:14.452469] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:14.453137] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:15.422538] [D] [thread 132328] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11040000-11100000[m
[36m[10:22:15.454366] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:15.723424] [D] [thread 132326] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11040000-11100000[m
[36m[10:22:16.455628] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:16.618256] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:16.618635] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:16.620252] [D] [thread 132666] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:16.620380] [I] [thread 132666] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:16.620399] [I] [thread 132666] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:16.620517] [I] [thread 132666] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:16.620541] [I] [thread 132666] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:16.856254] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:16.856665] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:17.857903] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:18.461275] [D] [thread 132325] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11040000-11100000[m
[36m[10:22:18.699621] [D] [thread 132327] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 60000 Deploy merge task for slice 10920000-10980000 [m
[36m[10:22:18.700383] [D] [thread 132325] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 10920000-10980000-6[m
[36m[10:22:18.700492] [D] [thread 132325] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10920000-10980000[m
[36m[10:22:18.700564] [D] [thread 132325] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10920000-10980000[m
[36m[10:22:18.700615] [D] [thread 132325] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10920000-10980000[m
[36m[10:22:18.700662] [D] [thread 132325] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10920000-10980000[m
[36m[10:22:18.700715] [D] [thread 132325] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10920000-10980000[m
[36m[10:22:18.700876] [D] [thread 132325] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[10:22:18.700908] [D] [thread 132325] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:18.703733] [D] [thread 132325] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out following content 10920000,10980000,63,1699870908346,1699870938700
10920000,10980000,54,1699870911872,1699870938700
10920000,10980000,100,1699870901862,1699870938700
10920000,10980000,24,1699870913983,1699870938700
10920000,10980000,47,1699870913386,1699870938700
10920000,10980000,13,1699870919476,1699870938700
[m
[36m[10:22:18.859225] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:18.970641] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:18.971172] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:18.972008] [D] [thread 132671] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:18.972102] [I] [thread 132671] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:18.972120] [I] [thread 132671] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:18.972236] [I] [thread 132671] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:18.972249] [I] [thread 132671] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:19.197704] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:19.198314] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:20.199567] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:21.193104] [D] [thread 132327] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11040000-11100000[m
[36m[10:22:21.200812] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:21.375211] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:21.375775] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:21.376578] [D] [thread 132676] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:21.376669] [I] [thread 132676] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:21.376686] [I] [thread 132676] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:21.376802] [I] [thread 132676] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:21.376815] [I] [thread 132676] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:21.607790] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:21.608472] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:22.609781] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:23.611076] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:23.661629] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:23.662090] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:23.662937] [D] [thread 132681] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:23.663029] [I] [thread 132681] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:23.663046] [I] [thread 132681] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:23.663160] [I] [thread 132681] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:23.663174] [I] [thread 132681] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:23.854446] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:23.855439] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:24.856701] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:25.857986] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:25.901456] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:25.902053] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:25.902783] [D] [thread 132686] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:25.902877] [I] [thread 132686] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:25.902894] [I] [thread 132686] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:25.903011] [I] [thread 132686] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:25.903024] [I] [thread 132686] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:26.105365] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:26.105884] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:27.107193] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:28.108548] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:28.265495] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:28.266127] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:28.266882] [D] [thread 132691] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:28.266974] [I] [thread 132691] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:28.266991] [I] [thread 132691] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:28.267107] [I] [thread 132691] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:28.267120] [I] [thread 132691] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:28.484893] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:28.485359] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:29.486806] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:30.488062] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:30.550961] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:30.551461] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:30.552468] [D] [thread 132696] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:30.552564] [I] [thread 132696] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:30.552584] [I] [thread 132696] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:30.552702] [I] [thread 132696] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:30.552715] [I] [thread 132696] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:30.747600] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:30.748128] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:31.524448] [D] [thread 132327] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11100000-11160000[m
[36m[10:22:31.748512] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:31.827542] [D] [thread 132325] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11100000-11160000[m
[36m[10:22:32.740899] [D] [thread 132326] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11100000-11160000[m
[36m[10:22:32.749788] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:32.906637] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:32.907366] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:32.908051] [D] [thread 132701] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:32.908135] [I] [thread 132701] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:32.908153] [I] [thread 132701] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:32.908268] [I] [thread 132701] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:32.908281] [I] [thread 132701] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:33.127148] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:33.127646] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:34.128922] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:35.130161] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:35.162919] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:35.163271] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:35.164464] [D] [thread 132706] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:35.164556] [I] [thread 132706] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:35.164574] [I] [thread 132706] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:35.164692] [I] [thread 132706] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:35.164705] [I] [thread 132706] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:35.385420] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:35.385776] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:36.386892] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:37.362820] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:37.363173] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:37.364196] [D] [thread 132711] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:37.364294] [I] [thread 132711] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:37.364311] [I] [thread 132711] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:37.364463] [I] [thread 132711] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:37.364525] [I] [thread 132711] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:37.579373] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:37.579747] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:38.362943] [D] [thread 132328] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 60000 Deploy merge task for slice 10980000-11040000 [m
[36m[10:22:38.363587] [D] [thread 132326] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 10980000-11040000-7[m
[36m[10:22:38.363682] [D] [thread 132326] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10980000-11040000[m
[36m[10:22:38.363745] [D] [thread 132326] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10980000-11040000[m
[36m[10:22:38.363787] [D] [thread 132326] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10980000-11040000[m
[36m[10:22:38.363827] [D] [thread 132326] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10980000-11040000[m
[36m[10:22:38.363869] [D] [thread 132326] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 10980000-11040000[m
[36m[10:22:38.363979] [D] [thread 132326] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[10:22:38.364030] [D] [thread 132326] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:38.366593] [D] [thread 132326] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out following content 10980000,11040000,100,1699870919438,1699870958364
10980000,11040000,63,1699870925393,1699870958364
10980000,11040000,54,1699870930064,1699870958364
10980000,11040000,24,1699870933282,1699870958364
10980000,11040000,13,1699870938531,1699870958364
10980000,11040000,47,1699870932426,1699870958364
[m
[36m[10:22:38.515590] [D] [thread 132328] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11100000-11160000[m
[36m[10:22:38.581025] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:39.574372] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:39.574786] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:39.575848] [D] [thread 132716] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:39.575943] [I] [thread 132716] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:39.575960] [I] [thread 132716] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:39.576077] [I] [thread 132716] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:39.576091] [I] [thread 132716] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:39.847597] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:39.847931] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:40.849157] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:41.850435] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:42.000090] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:42.000502] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:42.001493] [D] [thread 132721] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:42.001588] [I] [thread 132721] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:42.001608] [I] [thread 132721] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:42.001724] [I] [thread 132721] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:42.001738] [I] [thread 132721] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:42.219101] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:42.219453] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:43.220675] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:44.221938] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:44.245307] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:44.245637] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:44.246641] [D] [thread 132726] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:44.246736] [I] [thread 132726] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:44.246755] [I] [thread 132726] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:44.246872] [I] [thread 132726] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:44.246887] [I] [thread 132726] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:44.459506] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:44.459890] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:44.885258] [D] [thread 132327] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11160000-11220000[m
[36m[10:22:45.188472] [D] [thread 132328] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11160000-11220000[m
[36m[10:22:45.461136] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:46.462554] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:46.572945] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:46.573276] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:46.574262] [D] [thread 132731] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:46.574358] [I] [thread 132731] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:46.574376] [I] [thread 132731] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:46.574494] [I] [thread 132731] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:46.574509] [I] [thread 132731] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:46.704628] [D] [thread 132325] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11160000-11220000[m
[36m[10:22:46.856057] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:46.856670] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:47.857852] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:48.859146] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:48.904394] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:48.904760] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:48.905689] [D] [thread 132736] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:48.905780] [I] [thread 132736] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:48.905798] [I] [thread 132736] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:48.905914] [I] [thread 132736] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:48.905927] [I] [thread 132736] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:49.082999] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:49.083365] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:50.084591] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:51.085884] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:51.214188] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:51.214556] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:51.215485] [D] [thread 132741] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:51.215577] [I] [thread 132741] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:51.215595] [I] [thread 132741] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:51.215712] [I] [thread 132741] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:51.215727] [I] [thread 132741] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:51.498847] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:51.499161] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:52.500431] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:53.501849] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:53.556026] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:53.556397] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:53.557491] [D] [thread 132746] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:53.557596] [I] [thread 132746] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:53.557616] [I] [thread 132746] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:53.557735] [I] [thread 132746] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:53.557749] [I] [thread 132746] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:53.752368] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:53.752733] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:54.598579] [D] [thread 132326] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11160000-11220000[m
[36m[10:22:54.753939] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:55.746211] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:55.746609] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:55.747508] [D] [thread 132752] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:55.747602] [I] [thread 132752] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:55.747622] [I] [thread 132752] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:55.747739] [I] [thread 132752] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:55.747752] [I] [thread 132752] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:56.030739] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:56.031073] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:57.032302] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:58.025486] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:58.025819] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:58.026831] [D] [thread 132757] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:22:58.026925] [I] [thread 132757] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:58.026943] [I] [thread 132757] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:22:58.027057] [I] [thread 132757] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:22:58.027071] [I] [thread 132757] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:22:58.036928] [D] [thread 132328] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 60000 Deploy merge task for slice 11040000-11100000 [m
[36m[10:22:58.037300] [D] [thread 132325] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 11040000-11100000-8[m
[36m[10:22:58.037362] [D] [thread 132325] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11040000-11100000[m
[36m[10:22:58.037395] [D] [thread 132325] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11040000-11100000[m
[36m[10:22:58.037416] [D] [thread 132325] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11040000-11100000[m
[36m[10:22:58.037432] [D] [thread 132325] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11040000-11100000[m
[36m[10:22:58.037453] [D] [thread 132325] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11040000-11100000[m
[36m[10:22:58.037521] [D] [thread 132325] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[10:22:58.037536] [D] [thread 132325] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:22:58.039307] [D] [thread 132325] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out following content 11040000,11100000,100,1699870935237,1699870978037
11040000,11100000,63,1699870943057,1699870978037
11040000,11100000,54,1699870948595,1699870978037
11040000,11100000,24,1699870952238,1699870978037
11040000,11100000,47,1699870951450,1699870978037
11040000,11100000,13,1699870958161,1699870978037
[m
[36m[10:22:58.234519] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:58.234890] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:22:59.235756] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:00.237029] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:00.262915] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:00.263281] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:00.264223] [D] [thread 132763] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:23:00.264350] [I] [thread 132763] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:00.264371] [I] [thread 132763] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:23:00.264491] [I] [thread 132763] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:00.264506] [I] [thread 132763] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:23:00.499689] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:00.500027] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:01.501241] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:01.584524] [D] [thread 132327] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11220000-11280000[m
[36m[10:23:01.888202] [D] [thread 132328] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11220000-11280000[m
[36m[10:23:02.502643] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:02.560406] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:02.561069] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:02.562091] [D] [thread 132770] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:23:02.562188] [I] [thread 132770] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:02.562206] [I] [thread 132770] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:23:02.562320] [I] [thread 132770] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:02.562333] [I] [thread 132770] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:23:02.736542] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:02.737015] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:03.738340] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:04.315122] [D] [thread 132325] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11220000-11280000[m
[36m[10:23:04.618409] [D] [thread 132326] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11220000-11280000[m
[36m[10:23:04.739634] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:04.771870] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:04.772563] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:04.773300] [D] [thread 132777] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:23:04.773393] [I] [thread 132777] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:04.773410] [I] [thread 132777] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:23:04.773525] [I] [thread 132777] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:04.773538] [I] [thread 132777] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:23:04.998001] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:04.998643] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:05.999944] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:07.001194] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:07.068940] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:07.069432] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:07.070309] [D] [thread 132782] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:23:07.070402] [I] [thread 132782] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:07.070419] [I] [thread 132782] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:23:07.070536] [I] [thread 132782] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:07.070551] [I] [thread 132782] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:23:07.273372] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:07.273712] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:08.274932] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:09.276245] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:09.384896] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:09.385477] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:09.386204] [D] [thread 132787] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:23:09.386295] [I] [thread 132787] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:09.386315] [I] [thread 132787] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:23:09.386432] [I] [thread 132787] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:09.386447] [I] [thread 132787] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:23:09.598215] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:09.598733] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:10.600030] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:11.601351] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:11.659770] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:11.660241] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:11.661193] [D] [thread 132792] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:23:11.661290] [I] [thread 132792] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:11.661308] [I] [thread 132792] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:23:11.661425] [I] [thread 132792] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:11.661442] [I] [thread 132792] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:23:11.861016] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:11.861479] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:12.862746] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:13.864047] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:13.912725] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:13.913421] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:13.914141] [D] [thread 132797] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:23:13.914230] [I] [thread 132797] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:13.914247] [I] [thread 132797] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:23:13.914364] [I] [thread 132797] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:13.914376] [I] [thread 132797] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:23:14.100532] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:14.100858] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:15.102013] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:16.103210] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:16.154919] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:16.155247] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:16.156395] [D] [thread 132802] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:23:16.156481] [I] [thread 132802] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:16.156500] [I] [thread 132802] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:23:16.156618] [I] [thread 132802] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:16.156632] [I] [thread 132802] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:23:16.353825] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:16.354180] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:17.355387] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:18.291643] [D] [thread 132328] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11280000-11340000[m
[36m[10:23:18.354470] [D] [thread 132325] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 60000 Deploy merge task for slice 11100000-11160000 [m
[36m[10:23:18.355031] [D] [thread 132326] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 11100000-11160000-9[m
[36m[10:23:18.355270] [D] [thread 132326] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11100000-11160000[m
[36m[10:23:18.355342] [D] [thread 132326] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11100000-11160000[m
[36m[10:23:18.355392] [D] [thread 132326] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11100000-11160000[m
[36m[10:23:18.355439] [D] [thread 132326] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11100000-11160000[m
[36m[10:23:18.355514] [D] [thread 132326] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11100000-11160000[m
[36m[10:23:18.355743] [D] [thread 132326] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[10:23:18.355784] [D] [thread 132326] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:23:18.356657] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:18.359368] [D] [thread 132326] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out following content 11100000,11160000,100,1699870951353,1699870998355
11100000,11160000,63,1699870959596,1699870998355
11100000,11160000,54,1699870967109,1699870998355
11100000,11160000,47,1699870970168,1699870998355
11100000,11160000,24,1699870970955,1699870998355
11100000,11160000,13,1699870977879,1699870998355
[m
[36m[10:23:18.495368] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:18.495689] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:18.496728] [D] [thread 132807] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:23:18.496825] [I] [thread 132807] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:18.496843] [I] [thread 132807] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:23:18.496961] [I] [thread 132807] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:18.496974] [I] [thread 132807] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:23:18.595028] [D] [thread 132327] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11280000-11340000[m
[36m[10:23:18.698392] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:18.698768] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:18.900611] [D] [thread 132325] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11280000-11340000[m
[36m[10:23:19.700030] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:20.701282] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:20.714459] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:20.714789] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:20.715841] [D] [thread 132812] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:23:20.715941] [I] [thread 132812] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:20.715958] [I] [thread 132812] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:23:20.716073] [I] [thread 132812] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:20.716088] [I] [thread 132812] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:23:20.928166] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:20.928549] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:21.929796] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:22.931078] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:22.968490] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:22.968857] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:22.969903] [D] [thread 132817] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:23:22.969998] [I] [thread 132817] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:22.970016] [I] [thread 132817] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:23:22.970132] [I] [thread 132817] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:22.970146] [I] [thread 132817] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:23:23.178925] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:23.179559] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:24.180738] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:25.181931] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:25.184463] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:25.184773] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:25.186538] [D] [thread 132823] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:23:25.186630] [I] [thread 132823] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:25.186648] [I] [thread 132823] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:23:25.186765] [I] [thread 132823] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:25.186779] [I] [thread 132823] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:23:25.415631] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:25.415976] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:26.417214] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:27.418634] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:27.571577] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:27.571912] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:27.573049] [D] [thread 132828] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:23:27.573155] [I] [thread 132828] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:27.573173] [I] [thread 132828] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:23:27.573290] [I] [thread 132828] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:27.573311] [I] [thread 132828] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:23:27.710790] [D] [thread 132326] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11280000-11340000[m
[36m[10:23:27.870203] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:27.870603] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:28.871820] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:29.873123] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:29.914699] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:29.915064] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:29.916106] [D] [thread 132833] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:23:29.916212] [I] [thread 132833] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:29.916235] [I] [thread 132833] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:23:29.916405] [I] [thread 132833] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:29.916426] [I] [thread 132833] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:23:30.095159] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:30.095518] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:31.096740] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:32.098053] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:32.144471] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:32.144841] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:32.145962] [D] [thread 132838] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:23:32.146058] [I] [thread 132838] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:32.146076] [I] [thread 132838] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:23:32.146192] [I] [thread 132838] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:32.146206] [I] [thread 132838] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:23:32.350747] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:32.351112] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:33.352384] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:34.353632] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:34.508850] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:34.509177] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:34.510234] [D] [thread 132843] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:23:34.510334] [I] [thread 132843] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:34.510351] [I] [thread 132843] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:23:34.510468] [I] [thread 132843] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:34.510491] [I] [thread 132843] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:23:34.696528] [D] [thread 132328] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11340000-11400000[m
[36m[10:23:34.732314] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:34.732883] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:35.000433] [D] [thread 132326] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11340000-11400000[m
[36m[10:23:35.302861] [D] [thread 132325] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11340000-11400000[m
[36m[10:23:35.734204] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:36.735572] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:36.744956] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:36.745615] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:36.746312] [D] [thread 132848] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:23:36.746406] [I] [thread 132848] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:36.746423] [I] [thread 132848] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:23:36.746541] [I] [thread 132848] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:36.746554] [I] [thread 132848] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:23:36.968723] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:36.969315] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:37.970561] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:38.331322] [D] [thread 132327] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 60000 Deploy merge task for slice 11160000-11220000 [m
[36m[10:23:38.332052] [D] [thread 132325] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 11160000-11220000-10[m
[36m[10:23:38.332157] [D] [thread 132325] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11160000-11220000[m
[36m[10:23:38.332223] [D] [thread 132325] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11160000-11220000[m
[36m[10:23:38.332271] [D] [thread 132325] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11160000-11220000[m
[36m[10:23:38.332372] [D] [thread 132325] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11160000-11220000[m
[36m[10:23:38.332435] [D] [thread 132325] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11160000-11220000[m
[36m[10:23:38.332593] [D] [thread 132325] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[10:23:38.332625] [D] [thread 132325] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:23:38.335442] [D] [thread 132325] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out following content 11160000,11220000,100,1699870964679,1699871018332
11160000,11220000,63,1699870977554,1699871018332
11160000,11220000,54,1699870986173,1699871018332
11160000,11220000,47,1699870989147,1699871018332
11160000,11220000,24,1699870990241,1699871018332
11160000,11220000,13,1699870998175,1699871018332
[m
[36m[10:23:38.641815] [D] [thread 132327] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11340000-11400000[m
[36m[10:23:38.971863] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:39.001747] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:39.002076] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:39.003066] [D] [thread 132853] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:23:39.003160] [I] [thread 132853] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:39.003177] [I] [thread 132853] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:23:39.003293] [I] [thread 132853] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:39.003307] [I] [thread 132853] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:23:39.209496] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:39.210019] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:40.211325] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:41.212671] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:41.269395] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:41.270040] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:41.270790] [D] [thread 132858] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:23:41.270882] [I] [thread 132858] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:41.270900] [I] [thread 132858] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:23:41.271015] [I] [thread 132858] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:41.271028] [I] [thread 132858] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:23:41.452957] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:41.453293] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:42.454667] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:43.456008] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:43.491111] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:43.491471] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:43.492694] [D] [thread 132863] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:23:43.492789] [I] [thread 132863] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:43.492807] [I] [thread 132863] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:23:43.492926] [I] [thread 132863] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:43.492938] [I] [thread 132863] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:23:43.692080] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:43.692622] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:44.693901] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:45.654350] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:45.654964] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:45.655880] [D] [thread 132868] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:23:45.655984] [I] [thread 132868] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:45.656003] [I] [thread 132868] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:23:45.656124] [I] [thread 132868] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:45.656140] [I] [thread 132868] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:23:45.796828] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:45.797362] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:46.798566] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:47.799966] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:47.808831] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:47.809379] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:47.810168] [D] [thread 132873] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:23:47.810264] [I] [thread 132873] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:47.810281] [I] [thread 132873] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:23:47.810397] [I] [thread 132873] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:47.810410] [I] [thread 132873] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:23:48.014252] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:48.014984] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:49.016227] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:50.016471] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:50.017284] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:50.017837] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:50.018634] [D] [thread 132878] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:23:50.018758] [I] [thread 132878] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:50.018777] [I] [thread 132878] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:23:50.018892] [I] [thread 132878] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:50.018916] [I] [thread 132878] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:23:50.234868] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:50.235358] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:51.236659] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:51.383219] [D] [thread 132327] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11400000-11460000[m
[36m[10:23:51.687858] [D] [thread 132326] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11400000-11460000[m
[36m[10:23:52.237921] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:52.394006] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:52.394334] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:52.395910] [D] [thread 132883] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:23:52.396005] [I] [thread 132883] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:52.396022] [I] [thread 132883] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:23:52.396138] [I] [thread 132883] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:52.396153] [I] [thread 132883] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:23:52.578492] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:52.578837] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:53.580069] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:54.556463] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:54.556807] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:54.557779] [D] [thread 132888] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:23:54.557874] [I] [thread 132888] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:54.557891] [I] [thread 132888] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:23:54.558006] [I] [thread 132888] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:54.558019] [I] [thread 132888] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:23:54.820449] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:54.820770] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:55.821998] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:56.231635] [D] [thread 132328] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11400000-11460000[m
[36m[10:23:56.535065] [D] [thread 132325] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11400000-11460000[m
[36m[10:23:56.817002] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:56.817353] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:56.818335] [D] [thread 132894] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:23:56.818428] [I] [thread 132894] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:56.818445] [I] [thread 132894] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:23:56.818561] [I] [thread 132894] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:56.818574] [I] [thread 132894] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:23:57.056080] [D] [thread 132327] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 60000 Deploy merge task for slice 11220000-11280000 [m
[36m[10:23:57.056618] [D] [thread 132325] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 11220000-11280000-11[m
[36m[10:23:57.056707] [D] [thread 132325] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11220000-11280000[m
[36m[10:23:57.056755] [D] [thread 132325] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11220000-11280000[m
[36m[10:23:57.056786] [D] [thread 132325] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11220000-11280000[m
[36m[10:23:57.056817] [D] [thread 132325] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11220000-11280000[m
[36m[10:23:57.056849] [D] [thread 132325] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11220000-11280000[m
[36m[10:23:57.056948] [D] [thread 132325] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[10:23:57.056970] [D] [thread 132325] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:23:57.058857] [D] [thread 132325] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out following content 11220000,11280000,100,1699870981447,1699871037056
11220000,11280000,63,1699870992869,1699871037056
11220000,11280000,54,1699871003810,1699871037056
11220000,11280000,24,1699871006216,1699871037056
11220000,11280000,47,1699871007574,1699871037056
11220000,11280000,13,1699871018187,1699871037056
[m
[36m[10:23:57.080287] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:57.080692] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:58.081921] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:59.006694] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:59.007036] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:59.008186] [D] [thread 132899] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:23:59.008284] [I] [thread 132899] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:59.008301] [I] [thread 132899] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:23:59.008460] [I] [thread 132899] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:23:59.008476] [I] [thread 132899] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:23:59.266576] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:23:59.266915] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:00.268165] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:01.209537] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:01.209896] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:01.211130] [D] [thread 132904] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:24:01.211243] [I] [thread 132904] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:01.211263] [I] [thread 132904] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:24:01.211411] [I] [thread 132904] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:01.211429] [I] [thread 132904] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:24:01.376700] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:01.377047] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:02.378280] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:03.346930] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:03.347479] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:03.348695] [D] [thread 132909] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:24:03.348769] [I] [thread 132909] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:03.348784] [I] [thread 132909] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:24:03.348892] [I] [thread 132909] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:03.348903] [I] [thread 132909] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:24:03.561408] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:03.561761] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:04.563130] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:05.564414] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:05.578851] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:05.579528] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:05.580650] [D] [thread 132914] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:24:05.580760] [I] [thread 132914] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:05.580778] [I] [thread 132914] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:24:05.580907] [I] [thread 132914] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:05.580926] [I] [thread 132914] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:24:05.844261] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:05.844882] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:06.539899] [D] [thread 132328] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11460000-11520000[m
[36m[10:24:06.843607] [D] [thread 132326] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11460000-11520000[m
[36m[10:24:06.846171] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:07.847492] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:07.889867] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:07.890478] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:07.891169] [D] [thread 132919] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:24:07.891264] [I] [thread 132919] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:07.891281] [I] [thread 132919] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:24:07.891398] [I] [thread 132919] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:07.891411] [I] [thread 132919] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:24:08.057259] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:08.057606] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:09.058873] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:10.025005] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:10.025335] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:10.026424] [D] [thread 132924] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:24:10.026682] [I] [thread 132924] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:10.026730] [I] [thread 132924] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:24:10.026868] [I] [thread 132924] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:10.026965] [I] [thread 132924] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:24:10.243886] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:10.244255] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:10.491615] [D] [thread 132325] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11460000-11520000[m
[36m[10:24:10.795804] [D] [thread 132327] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11460000-11520000[m
[36m[10:24:11.245517] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:12.166539] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:12.166858] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:12.167933] [D] [thread 132929] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:24:12.168054] [I] [thread 132929] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:12.168072] [I] [thread 132929] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:24:12.168201] [I] [thread 132929] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:12.168219] [I] [thread 132929] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:24:12.365878] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:12.366194] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:13.367465] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:14.323100] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:14.323583] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:14.324599] [D] [thread 132934] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:24:14.324675] [I] [thread 132934] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:14.324692] [I] [thread 132934] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:24:14.324798] [I] [thread 132934] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:14.324811] [I] [thread 132934] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:24:14.511352] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:14.511883] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:15.513058] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:16.417744] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:16.418367] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:16.419101] [D] [thread 132939] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:24:16.419194] [I] [thread 132939] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:16.419211] [I] [thread 132939] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:24:16.419328] [I] [thread 132939] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:16.419342] [I] [thread 132939] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:24:16.425896] [D] [thread 132325] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 60000 Deploy merge task for slice 11280000-11340000 [m
[36m[10:24:16.426359] [D] [thread 132326] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 11280000-11340000-12[m
[36m[10:24:16.426476] [D] [thread 132326] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11280000-11340000[m
[36m[10:24:16.426513] [D] [thread 132326] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11280000-11340000[m
[36m[10:24:16.426534] [D] [thread 132326] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11280000-11340000[m
[36m[10:24:16.426551] [D] [thread 132326] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11280000-11340000[m
[36m[10:24:16.426585] [D] [thread 132326] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11280000-11340000[m
[36m[10:24:16.426682] [D] [thread 132326] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[10:24:16.426738] [D] [thread 132326] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:24:16.428281] [D] [thread 132326] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out following content 11280000,11340000,100,1699870998118,1699871056426
11280000,11340000,63,1699871009908,1699871056426
11280000,11340000,24,1699871023442,1699871056426
11280000,11340000,54,1699871020820,1699871056426
11280000,11340000,47,1699871026290,1699871056426
11280000,11340000,13,1699871036862,1699871056426
[m
[36m[10:24:16.613647] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:16.614197] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:17.615517] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:18.616473] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:18.620222] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:18.620613] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:18.622240] [D] [thread 132944] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:24:18.622336] [I] [thread 132944] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:18.622353] [I] [thread 132944] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:24:18.622468] [I] [thread 132944] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:18.622481] [I] [thread 132944] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:24:18.791670] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:18.792001] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:19.793356] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:20.769678] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:20.770085] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:20.771196] [D] [thread 132950] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:24:20.771291] [I] [thread 132950] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:20.771308] [I] [thread 132950] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:24:20.771423] [I] [thread 132950] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:20.771436] [I] [thread 132950] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:24:20.991193] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:20.991533] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:21.992769] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:22.993999] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:22.995831] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:22.996127] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:22.997245] [D] [thread 132955] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:24:22.997346] [I] [thread 132955] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:22.997363] [I] [thread 132955] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:24:22.997480] [I] [thread 132955] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:22.997511] [I] [thread 132955] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:24:23.168883] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:23.169235] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:23.555862] [D] [thread 132327] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11520000-11580000[m
[36m[10:24:23.859895] [D] [thread 132326] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11520000-11580000[m
[36m[10:24:24.170436] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:25.163252] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:25.163581] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:25.164747] [D] [thread 132960] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:24:25.164828] [I] [thread 132960] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:25.164844] [I] [thread 132960] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:24:25.164953] [I] [thread 132960] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:25.164965] [I] [thread 132960] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:24:25.391026] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:25.391389] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:26.392620] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:27.361959] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:27.362283] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:27.363298] [D] [thread 132965] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:24:27.363392] [I] [thread 132965] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:27.363409] [I] [thread 132965] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:24:27.363523] [I] [thread 132965] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:27.363536] [I] [thread 132965] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:24:27.576699] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:27.577052] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:28.114515] [D] [thread 132325] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11520000-11580000[m
[36m[10:24:28.419677] [D] [thread 132328] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11520000-11580000[m
[36m[10:24:28.578269] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:29.579617] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:29.732645] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:29.732965] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:29.734001] [D] [thread 132973] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:24:29.734103] [I] [thread 132973] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:29.734120] [I] [thread 132973] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:24:29.734237] [I] [thread 132973] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:29.734261] [I] [thread 132973] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:24:29.946398] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:29.947008] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:30.948420] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:31.949700] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:31.987009] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:31.987629] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:31.988425] [D] [thread 132979] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:24:31.988513] [I] [thread 132979] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:31.988532] [I] [thread 132979] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:24:31.988649] [I] [thread 132979] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:31.988664] [I] [thread 132979] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:24:32.205832] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:32.206388] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:33.207676] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:34.208907] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:34.209560] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:34.210068] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:34.210924] [D] [thread 132985] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:24:34.211018] [I] [thread 132985] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:34.211035] [I] [thread 132985] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:24:34.211152] [I] [thread 132985] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:34.211166] [I] [thread 132985] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:24:34.379489] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:34.379803] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:35.381126] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:35.487956] [D] [thread 132327] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 60000 Deploy merge task for slice 11340000-11400000 [m
[36m[10:24:35.488475] [D] [thread 132326] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 11340000-11400000-13[m
[36m[10:24:35.488566] [D] [thread 132326] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11340000-11400000[m
[36m[10:24:35.488620] [D] [thread 132326] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11340000-11400000[m
[36m[10:24:35.488656] [D] [thread 132326] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11340000-11400000[m
[36m[10:24:35.488690] [D] [thread 132326] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11340000-11400000[m
[36m[10:24:35.488726] [D] [thread 132326] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11340000-11400000[m
[36m[10:24:35.488832] [D] [thread 132326] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[10:24:35.488860] [D] [thread 132326] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:24:35.491148] [D] [thread 132326] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out following content 11340000,11400000,100,1699871014535,1699871075488
11340000,11400000,63,1699871026403,1699871075488
11340000,11400000,24,1699871041206,1699871075488
11340000,11400000,54,1699871039624,1699871075488
11340000,11400000,47,1699871045270,1699871075488
11340000,11400000,13,1699871056264,1699871075488
[m
[36m[10:24:36.382412] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:36.441915] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:36.442235] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:36.443391] [D] [thread 132991] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:24:36.443487] [I] [thread 132991] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:36.443505] [I] [thread 132991] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:24:36.443621] [I] [thread 132991] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:36.443645] [I] [thread 132991] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:24:36.632368] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:36.632703] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:37.634004] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:38.635289] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:38.644845] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:38.645198] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:38.646233] [D] [thread 132997] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:24:38.646333] [I] [thread 132997] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:38.646350] [I] [thread 132997] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:24:38.646465] [I] [thread 132997] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:38.646531] [I] [thread 132997] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:24:38.861700] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:38.862027] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:39.352748] [D] [thread 132326] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11580000-11640000[m
[36m[10:24:39.655940] [D] [thread 132328] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11580000-11640000[m
[36m[10:24:39.863210] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:40.856963] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:40.857313] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:40.859008] [D] [thread 133003] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:24:40.859122] [I] [thread 133003] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:40.859140] [I] [thread 133003] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:24:40.859267] [I] [thread 133003] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:40.859284] [I] [thread 133003] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:24:41.074233] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:41.074623] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:42.075806] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:42.692799] [D] [thread 132327] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11580000-11640000[m
[36m[10:24:43.077143] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:43.183341] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:43.183942] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:43.185092] [D] [thread 133008] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:24:43.185202] [I] [thread 133008] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:43.185222] [I] [thread 133008] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:24:43.185342] [I] [thread 133008] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:43.185360] [I] [thread 133008] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:24:43.300952] [D] [thread 132325] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11580000-11640000[m
[36m[10:24:43.352259] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:43.352947] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:44.354151] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:45.261802] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:45.262387] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:45.263126] [D] [thread 133013] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:24:45.263223] [I] [thread 133013] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:45.263240] [I] [thread 133013] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:24:45.263358] [I] [thread 133013] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:45.263371] [I] [thread 133013] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:24:45.523112] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:45.523666] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:46.524957] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:47.435200] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:47.435512] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:47.436649] [D] [thread 133018] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:24:47.436727] [I] [thread 133018] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:47.436743] [I] [thread 133018] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:24:47.436848] [I] [thread 133018] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:47.436860] [I] [thread 133018] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:24:47.654603] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:47.654961] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:48.656184] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:49.562800] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:49.563150] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:49.564169] [D] [thread 133023] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:24:49.564264] [I] [thread 133023] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:49.564280] [I] [thread 133023] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:24:49.564433] [I] [thread 133023] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:49.564451] [I] [thread 133023] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:24:49.781277] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:49.781602] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:50.782818] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:51.726391] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:51.726758] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:51.727900] [D] [thread 133028] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:24:51.727997] [I] [thread 133028] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:51.728015] [I] [thread 133028] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:24:51.728132] [I] [thread 133028] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:51.728147] [I] [thread 133028] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:24:51.989326] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:51.989732] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:52.990959] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:53.910431] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:53.910772] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:53.911922] [D] [thread 133033] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:24:53.912017] [I] [thread 133033] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:53.912034] [I] [thread 133033] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:24:53.912147] [I] [thread 133033] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:53.912160] [I] [thread 133033] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:24:54.077715] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:54.078304] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:54.863442] [D] [thread 132325] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 60000 Deploy merge task for slice 11400000-11460000 [m
[36m[10:24:54.864295] [D] [thread 132328] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 11400000-11460000-14[m
[36m[10:24:54.864428] [D] [thread 132328] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11400000-11460000[m
[36m[10:24:54.864484] [D] [thread 132328] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11400000-11460000[m
[36m[10:24:54.864521] [D] [thread 132328] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11400000-11460000[m
[36m[10:24:54.864552] [D] [thread 132328] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11400000-11460000[m
[36m[10:24:54.864592] [D] [thread 132328] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11400000-11460000[m
[36m[10:24:54.864695] [D] [thread 132328] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[10:24:54.864745] [D] [thread 132328] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:24:54.867290] [D] [thread 132328] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out following content 11400000,11460000,100,1699871031175,1699871094864
11400000,11460000,63,1699871042595,1699871094864
11400000,11460000,24,1699871058716,1699871094864
11400000,11460000,54,1699871058104,1699871094864
11400000,11460000,47,1699871064278,1699871094864
11400000,11460000,13,1699871075295,1699871094864
[m
[36m[10:24:55.079556] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:56.046063] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:56.046675] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:56.047437] [D] [thread 133038] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:24:56.047529] [I] [thread 133038] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:56.047547] [I] [thread 133038] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:24:56.047663] [I] [thread 133038] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:56.047676] [I] [thread 133038] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:24:56.261057] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:56.261626] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:56.360790] [D] [thread 132326] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11640000-11700000[m
[36m[10:24:56.664978] [D] [thread 132325] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11640000-11700000[m
[36m[10:24:57.262902] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:58.211959] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:58.212486] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:58.213423] [D] [thread 133043] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:24:58.213500] [I] [thread 133043] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:58.213516] [I] [thread 133043] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:24:58.213622] [I] [thread 133043] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:24:58.213634] [I] [thread 133043] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:24:58.433332] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:58.433940] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:24:59.435286] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:00.401531] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:00.401895] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:00.402918] [D] [thread 133050] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:25:00.403039] [I] [thread 133050] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:25:00.403058] [I] [thread 133050] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:25:00.403186] [I] [thread 133050] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:25:00.403205] [I] [thread 133050] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:25:00.666135] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:00.666585] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:00.915035] [D] [thread 132327] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11640000-11700000[m
[36m[10:25:01.218961] [D] [thread 132328] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11640000-11700000[m
[36m[10:25:01.667805] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:02.669043] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:02.810252] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:02.810647] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:02.812213] [D] [thread 133056] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:25:02.812307] [I] [thread 133056] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:25:02.812353] [I] [thread 133056] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:25:02.812474] [I] [thread 133056] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:25:02.812487] [I] [thread 133056] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:25:03.047068] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:03.047478] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:04.048700] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:05.049932] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:05.065898] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:05.066210] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:05.067228] [D] [thread 133061] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:25:05.067347] [I] [thread 133061] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:25:05.067367] [I] [thread 133061] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:25:05.067500] [I] [thread 133061] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:25:05.067529] [I] [thread 133061] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:25:05.285259] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:05.285596] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:06.286862] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:07.198974] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:07.199316] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:07.200518] [D] [thread 133066] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:25:07.200612] [I] [thread 133066] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:25:07.200632] [I] [thread 133066] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:25:07.200749] [I] [thread 133066] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:25:07.200763] [I] [thread 133066] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:25:07.410268] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:07.410795] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:08.412021] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:09.363743] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:09.364467] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:09.365176] [D] [thread 133072] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:25:09.365266] [I] [thread 133072] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:25:09.365283] [I] [thread 133072] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:25:09.365399] [I] [thread 133072] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:25:09.365412] [I] [thread 133072] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:25:09.564073] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:09.565206] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:10.566532] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:11.433188] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:11.433787] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:11.434524] [D] [thread 133077] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:25:11.434616] [I] [thread 133077] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:25:11.434632] [I] [thread 133077] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:25:11.434748] [I] [thread 133077] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:25:11.434760] [I] [thread 133077] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:25:11.645252] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:11.645592] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:12.145400] [D] [thread 132328] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11700000-11760000[m
[36m[10:25:12.447985] [D] [thread 132327] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11700000-11760000[m
[36m[10:25:12.646854] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:13.561121] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:13.561720] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:13.562439] [D] [thread 133082] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:25:13.562567] [I] [thread 133082] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:25:13.562585] [I] [thread 133082] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:25:13.562702] [I] [thread 133082] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:25:13.562717] [I] [thread 133082] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:25:13.768111] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:13.768688] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:14.770081] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:15.173801] [D] [thread 132326] [AbstractSlicePreAggregationHandler.cpp:57] [dispatchSliceMergingTasks] 60000 Deploy merge task for slice 11460000-11520000 [m
[36m[10:25:15.174478] [D] [thread 132328] [WindowProcessingTasks.hpp:31] [~SliceMergeTask] ~SliceMergeTask 11460000-11520000-15[m
[36m[10:25:15.174577] [D] [thread 132328] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11460000-11520000[m
[36m[10:25:15.174641] [D] [thread 132328] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11460000-11520000[m
[36m[10:25:15.174684] [D] [thread 132328] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11460000-11520000[m
[36m[10:25:15.174724] [D] [thread 132328] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11460000-11520000[m
[36m[10:25:15.174766] [D] [thread 132328] [KeyedSlice.cpp:22] [~KeyedSlice] ~KeyedSlice 11460000-11520000[m
[36m[10:25:15.174952] [D] [thread 132328] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[10:25:15.174985] [D] [thread 132328] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[10:25:15.177519] [D] [thread 132328] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/topDownDebsThreeLevel_tumbling_1_32000_200.out following content 11460000,11520000,100,1699871046362,1699871115174
11460000,11520000,63,1699871056950,1699871115174
11460000,11520000,54,1699871076651,1699871115174
11460000,11520000,24,1699871076737,1699871115174
11460000,11520000,47,1699871082949,1699871115174
11460000,11520000,13,1699871094704,1699871115174
[m
[36m[10:25:15.183606] [D] [thread 132325] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11700000-11760000[m
[36m[10:25:15.487381] [D] [thread 132326] [KeyedThreadLocalSliceStore.cpp:32] [allocateNewSlice] allocateNewSlice 11700000-11760000[m
[36m[10:25:15.695055] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:15.695650] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:15.696436] [D] [thread 133087] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:25:15.696528] [I] [thread 133087] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:25:15.696545] [I] [thread 133087] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:25:15.696660] [I] [thread 133087] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:25:15.696675] [I] [thread 133087] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:25:15.906095] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:15.906816] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:16.908150] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:17.889672] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:17.890297] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:17.891026] [D] [thread 133092] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:25:17.891119] [I] [thread 133092] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:25:17.891136] [I] [thread 133092] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:25:17.891252] [I] [thread 133092] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:25:17.891266] [I] [thread 133092] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:25:18.061382] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:18.061964] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:19.063251] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:20.033465] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:20.034054] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:20.034953] [D] [thread 133098] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:25:20.035054] [I] [thread 133098] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:25:20.035075] [I] [thread 133098] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:25:20.035209] [I] [thread 133098] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:25:20.035225] [I] [thread 133098] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:25:20.240191] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:20.240790] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:21.242051] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:22.219891] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:22.220529] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:22.221516] [D] [thread 133103] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:25:22.221725] [I] [thread 133103] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:25:22.221746] [I] [thread 133103] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:25:22.221876] [I] [thread 133103] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:25:22.221894] [I] [thread 133103] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:25:22.405850] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:22.406341] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:23.407689] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:24.345995] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:24.346613] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:24.347313] [D] [thread 133108] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:25:24.347408] [I] [thread 133108] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:25:24.347426] [I] [thread 133108] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:25:24.347542] [I] [thread 133108] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:25:24.347555] [I] [thread 133108] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:25:24.512727] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:24.513050] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:24.723088] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:25:24.723421] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:25:24.724491] [I] [thread 133113] [QueryCatalogService.cpp:65] [checkAndMarkForHardStop] QueryCatalogService: Handle hard stop request.[m
[36m[10:25:24.724585] [D] [thread 133113] [QueryCatalogService.cpp:83] [checkAndMarkForHardStop] QueryCatalog: Changing query status to Mark query for stop.[m
[32m[10:25:24.724721] [I] [thread 133113] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : StopQueryRequest { QueryId: 1}[m
[32m[10:25:24.724739] [I] [thread 133113] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[10:25:24.724778] [I] [thread 132313] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[10:25:24.724827] [I] [thread 132313] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[10:25:24.724846] [I] [thread 132313] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[10:25:24.724894] [I] [thread 132313] [GlobalQueryPlanUpdatePhase.cpp:133] [processStopQueryRequest] QueryProcessingService: Request received for stopping the query 1[m
[36m[10:25:24.724908] [D] [thread 132313] [GlobalQueryPlan.cpp:45] [removeQuery] GlobalQueryPlan: Removing query information from the meta data[m
[36m[10:25:24.724955] [D] [thread 132313] [SharedQueryPlan.cpp:194] [removeQuery] SharedQueryPlan: Remove the Query Id 1 and associated Global Query Nodes with sink operators.[m
[36m[10:25:24.725110] [D] [thread 132313] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SINK(4: {FileSinkDescriptor()}) as root operator.[m
[36m[10:25:24.725569] [D] [thread 132313] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[10:25:24.725627] [D] [thread 132313] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[10:25:24.725676] [D] [thread 132313] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[10:25:24.725691] [D] [thread 132313] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[10:25:24.725699] [D] [thread 132313] [RequestProcessorService.cpp:162] [start] QueryProcessingService: Shared Query Plan is empty and an older version is already running.[m
[36m[10:25:24.725730] [D] [thread 132313] [QueryUndeploymentPhase.cpp:44] [execute] QueryUndeploymentPhase::stopAndUndeployQuery : queryId= 1[m
[36m[10:25:24.725752] [D] [thread 132313] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[10:25:24.725786] [D] [thread 132313] [QueryUndeploymentPhase.cpp:54] [execute] QueryUndeploymentPhase:removeQuery: stop query[m
[36m[10:25:24.725798] [D] [thread 132313] [QueryUndeploymentPhase.cpp:80] [stopQuery] QueryUndeploymentPhase:markQueryForStop queryId= 1[m
[36m[10:25:24.725957] [D] [thread 132313] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=5 and IP=192.168.2.32:33899[m
[36m[10:25:24.725984] [D] [thread 132313] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.32:33899 queryId=1[m
[36m[10:25:24.731203] [D] [thread 132313] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=6 and IP=192.168.2.33:44393[m
[36m[10:25:24.731290] [D] [thread 132313] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.33:44393 queryId=1[m
[36m[10:25:24.735608] [D] [thread 132313] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=7 and IP=192.168.2.34:35677[m
[36m[10:25:24.735801] [D] [thread 132313] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.34:35677 queryId=1[m
[36m[10:25:24.740197] [D] [thread 132313] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=8 and IP=192.168.2.35:45919[m
[36m[10:25:24.740285] [D] [thread 132313] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.35:45919 queryId=1[m
[36m[10:25:24.744729] [D] [thread 132313] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=9 and IP=192.168.2.37:44265[m
[36m[10:25:24.744806] [D] [thread 132313] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.37:44265 queryId=1[m
[36m[10:25:24.749326] [D] [thread 132313] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=10 and IP=192.168.2.38:37017[m
[36m[10:25:24.749411] [D] [thread 132313] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.38:37017 queryId=1[m
[36m[10:25:24.753795] [D] [thread 132313] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=1 and IP=192.168.2.11:38421[m
[36m[10:25:24.753880] [D] [thread 132313] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.11:38421 queryId=1[m
[36m[10:25:24.758593] [D] [thread 132313] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=2 and IP=192.168.2.12:43279[m
[36m[10:25:24.758735] [D] [thread 132313] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.12:43279 queryId=1[m
[36m[10:25:24.762967] [D] [thread 132313] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=3 and IP=192.168.2.30:33875[m
[36m[10:25:24.763053] [D] [thread 132313] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.30:33875 queryId=1[m
[36m[10:25:24.767312] [D] [thread 132313] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=4 and IP=192.168.2.31:42073[m
[36m[10:25:24.767396] [D] [thread 132313] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.31:42073 queryId=1[m
[36m[10:25:24.771661] [D] [thread 132313] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Stop for 10 queues[m
[36m[10:25:24.780115] [D] [thread 132323] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): EndOfStream received for channel [m
[36m[10:25:24.780115] [D] [thread 132324] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): EndOfStream received for channel [m
[36m[10:25:24.780234] [D] [thread 132323] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::27::0::0(threadId=3)[m
[36m[10:25:24.780234] [D] [thread 132324] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::27::0::0(threadId=0)[m
[32m[10:25:24.780405] [I] [thread 132324] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::27::0::0; newCnt(4)[m
[32m[10:25:24.780460] [I] [thread 132323] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::27::0::0; newCnt(3)[m
[36m[10:25:24.780521] [D] [thread 132323] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::27::0::0(threadId=3) but there is still some active subpartition: 3[m
[36m[10:25:24.780522] [D] [thread 132324] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::27::0::0(threadId=0) but there is still some active subpartition: 3[m
[36m[10:25:24.782788] [D] [thread 132324] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): EndOfStream received for channel [m
[36m[10:25:24.782918] [D] [thread 132324] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::27::0::0(threadId=2)[m
[32m[10:25:24.783004] [I] [thread 132324] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::27::0::0; newCnt(2)[m
[36m[10:25:24.783061] [D] [thread 132324] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::27::0::0(threadId=2) but there is still some active subpartition: 2[m
[36m[10:25:24.784542] [D] [thread 132323] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): EndOfStream received for channel [m
[36m[10:25:24.784664] [D] [thread 132323] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::27::0::0(threadId=1)[m
[32m[10:25:24.784754] [I] [thread 132323] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::27::0::0; newCnt(1)[m
[36m[10:25:24.784791] [D] [thread 132323] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::27::0::0, counter is at 1.[m
[36m[10:25:24.784882] [D] [thread 132323] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:27 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[10:25:24.784920] [W] [thread 132323] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:27 PartitionId: 0 SubpartitionID: 0[m
[36m[10:25:25.190583] [D] [thread 132324] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): EndOfStream received for channel [m
[36m[10:25:25.190583] [D] [thread 132323] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): EndOfStream received for channel [m
[36m[10:25:25.190704] [D] [thread 132324] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::39::0::0(threadId=3)[m
[36m[10:25:25.190705] [D] [thread 132323] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::39::0::0(threadId=2)[m
[32m[10:25:25.190798] [I] [thread 132324] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(4)[m
[32m[10:25:25.190868] [I] [thread 132323] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(3)[m
[36m[10:25:25.190923] [D] [thread 132324] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::39::0::0(threadId=3) but there is still some active subpartition: 3[m
[36m[10:25:25.190932] [D] [thread 132323] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::39::0::0(threadId=2) but there is still some active subpartition: 3[m
[36m[10:25:25.191442] [D] [thread 132324] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): EndOfStream received for channel [m
[36m[10:25:25.191525] [D] [thread 132324] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::39::0::0(threadId=1)[m
[32m[10:25:25.191583] [I] [thread 132324] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(2)[m
[36m[10:25:25.191625] [D] [thread 132324] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::39::0::0(threadId=1) but there is still some active subpartition: 2[m
[36m[10:25:25.192303] [D] [thread 132323] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): EndOfStream received for channel [m
[36m[10:25:25.192401] [D] [thread 132323] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::39::0::0(threadId=0)[m
[32m[10:25:25.192457] [I] [thread 132323] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(1)[m
[36m[10:25:25.192481] [D] [thread 132323] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::39::0::0, counter is at 1.[m
[36m[10:25:25.192592] [D] [thread 132323] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[10:25:25.192621] [W] [thread 132323] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[10:25:25.204062] [D] [thread 132330] [WorkerRPCServer.cpp:90] [StopQuery] WorkerRPCServer::StopQuery: got request for 1[m
[36m[10:25:25.204208] [D] [thread 132330] [NodeEngine.cpp:250] [stopQuery] Runtime:stopQuery for qep= 1  termination= HardStop[m
[36m[10:25:25.204422] [D] [thread 132330] [QueryManagerLifecycle.cpp:312] [stopQuery] AbstractQueryManager::stopQuery: query sub-plan id  7  type= HardStop[m
[36m[10:25:25.204494] [D] [thread 132330] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:21 PartitionId: 0 SubpartitionID: 0[m
[36m[10:25:25.204595] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:25:25.204804] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:25:25.205326] [D] [thread 132330] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 21 is notifying completion: HardStop[m
[36m[10:25:25.205448] [D] [thread 132330] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 21 is terminated; tokens left = 9[m
[36m[10:25:25.205501] [D] [thread 132330] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 21 terminationType=HardStop[m
[36m[10:25:25.205626] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:25:25.205770] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:25:25.206022] [D] [thread 132330] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=21 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[10:25:25.206083] [D] [thread 132330] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:21 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[10:25:25.206116] [D] [thread 132330] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:27 PartitionId: 0 SubpartitionID: 0[m
[36m[10:25:25.206157] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:25:25.206254] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:25:25.206443] [D] [thread 132330] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 27 is notifying completion: HardStop[m
[36m[10:25:25.206485] [D] [thread 132330] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 27 is terminated; tokens left = 8[m
[36m[10:25:25.206515] [D] [thread 132330] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 27 terminationType=HardStop[m
[36m[10:25:25.206571] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:25:25.206657] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:25:25.206810] [D] [thread 132330] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=27 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[10:25:25.206858] [D] [thread 132330] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:27 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[10:25:25.206888] [D] [thread 132330] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[10:25:25.206935] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:25:25.207017] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:25:25.207176] [D] [thread 132330] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 33 is notifying completion: HardStop[m
[36m[10:25:25.207211] [D] [thread 132330] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 33 is terminated; tokens left = 7[m
[36m[10:25:25.207239] [D] [thread 132330] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 33 terminationType=HardStop[m
[36m[10:25:25.207288] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:25:25.207365] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:25:25.207513] [D] [thread 132330] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=33 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[10:25:25.207560] [D] [thread 132330] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[10:25:25.207588] [D] [thread 132330] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[10:25:25.207621] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:25:25.207693] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:25:25.207854] [D] [thread 132330] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 39 is notifying completion: HardStop[m
[36m[10:25:25.207889] [D] [thread 132330] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 39 is terminated; tokens left = 6[m
[36m[10:25:25.207917] [D] [thread 132330] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 39 terminationType=HardStop[m
[36m[10:25:25.207968] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:25:25.208059] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:25:25.208210] [D] [thread 132330] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=39 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[10:25:25.208266] [D] [thread 132330] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[10:25:25.208295] [D] [thread 132330] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[36m[10:25:25.208370] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:25:25.208493] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:25:25.208691] [D] [thread 132330] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 45 is notifying completion: HardStop[m
[36m[10:25:25.208726] [D] [thread 132330] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 45 is terminated; tokens left = 5[m
[36m[10:25:25.208756] [D] [thread 132330] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 45 terminationType=HardStop[m
[36m[10:25:25.208811] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:25:25.208898] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:25:25.209053] [D] [thread 132330] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=45 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[10:25:25.209102] [D] [thread 132330] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[10:25:25.209132] [D] [thread 132330] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[10:25:25.209183] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:25:25.209260] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:25:25.209418] [D] [thread 132330] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 51 is notifying completion: HardStop[m
[36m[10:25:25.209453] [D] [thread 132330] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 51 is terminated; tokens left = 4[m
[36m[10:25:25.209480] [D] [thread 132330] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 51 terminationType=HardStop[m
[36m[10:25:25.209531] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:25:25.209608] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:25:25.209759] [D] [thread 132330] [QueryManagerLifecycle.cpp:454] [addHardEndOfStream] hard end-of-stream Exec Op opId=51 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[10:25:25.209809] [D] [thread 132330] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[10:25:25.210528] [D] [thread 132328] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::21::0::0[m
[36m[10:25:25.210528] [D] [thread 132327] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::21::0::0[m
[36m[10:25:25.210707] [D] [thread 132328] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::21::0::0 Thread 1[m
[36m[10:25:25.210707] [D] [thread 132327] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::21::0::0 Thread 0[m
[36m[10:25:25.210934] [D] [thread 132326] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::21::0::0[m
[36m[10:25:25.210987] [D] [thread 132326] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::21::0::0 Thread 2[m
[36m[10:25:25.211139] [D] [thread 132325] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::21::0::0[m
[36m[10:25:25.211215] [D] [thread 132325] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::21::0::0 Thread 3[m
[36m[10:25:25.211251] [D] [thread 132325] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::21::0::0[m
[36m[10:25:25.211278] [D] [thread 132325] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::21::0::0[m
[36m[10:25:25.211311] [D] [thread 132325] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::21::0::0[m
[32m[10:25:25.211379] [I] [thread 132325] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::21::0::0; newCnt(4)[m
[36m[10:25:25.211698] [D] [thread 132325] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[10:25:25.211700] [D] [thread 132327] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[10:25:25.211956] [D] [thread 132326] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[10:25:25.212142] [D] [thread 132328] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[10:25:25.212201] [D] [thread 132328] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 7 stage id: 3[m
[36m[10:25:25.212247] [D] [thread 132328] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 7 stage id: 3 but refCount was 6 and now is 5[m
[36m[10:25:25.212619] [D] [thread 132328] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::27::0::0[m
[36m[10:25:25.212648] [D] [thread 132326] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::27::0::0[m
[36m[10:25:25.212623] [D] [thread 132327] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::27::0::0[m
[36m[10:25:25.212714] [D] [thread 132327] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::27::0::0 Thread 0[m
[36m[10:25:25.212714] [D] [thread 132326] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::27::0::0 Thread 2[m
[36m[10:25:25.212714] [D] [thread 132328] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::27::0::0 Thread 1[m
[36m[10:25:25.212774] [D] [thread 132325] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::27::0::0[m
[36m[10:25:25.212820] [D] [thread 132325] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::27::0::0 Thread 3[m
[36m[10:25:25.212854] [D] [thread 132325] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::27::0::0[m
[36m[10:25:25.212881] [D] [thread 132325] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::27::0::0[m
[36m[10:25:25.212908] [D] [thread 132325] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::27::0::0[m
[32m[10:25:25.212968] [I] [thread 132325] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::27::0::0; newCnt(0)[m
[36m[10:25:25.213238] [D] [thread 132326] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[10:25:25.213238] [D] [thread 132328] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[10:25:25.213292] [D] [thread 132327] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[10:25:25.213238] [D] [thread 132325] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[10:25:25.213475] [D] [thread 132325] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 7 stage id: 3[m
[36m[10:25:25.213507] [D] [thread 132325] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 7 stage id: 3 but refCount was 5 and now is 4[m
[36m[10:25:25.213747] [D] [thread 132325] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[10:25:25.213759] [D] [thread 132326] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[10:25:25.213811] [D] [thread 132326] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 2[m
[36m[10:25:25.213808] [D] [thread 132325] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 3[m
[36m[10:25:25.213982] [D] [thread 132327] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[10:25:25.214073] [D] [thread 132327] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 0[m
[36m[10:25:25.214110] [D] [thread 132328] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[10:25:25.214204] [D] [thread 132328] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 1[m
[36m[10:25:25.214293] [D] [thread 132328] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::33::0::0[m
[36m[10:25:25.214321] [D] [thread 132328] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::33::0::0[m
[36m[10:25:25.214414] [D] [thread 132328] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::33::0::0[m
[32m[10:25:25.214539] [I] [thread 132328] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(4)[m
[36m[10:25:25.215329] [D] [thread 132327] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[10:25:25.215373] [D] [thread 132328] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[10:25:25.215533] [D] [thread 132326] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[10:25:25.215700] [D] [thread 132325] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[10:25:25.215741] [D] [thread 132325] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 7 stage id: 3[m
[36m[10:25:25.215769] [D] [thread 132325] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 7 stage id: 3 but refCount was 4 and now is 3[m
[36m[10:25:25.216039] [D] [thread 132325] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[10:25:25.216100] [D] [thread 132325] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::39::0::0 Thread 3[m
[36m[10:25:25.216077] [D] [thread 132327] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[10:25:25.216170] [D] [thread 132327] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::39::0::0 Thread 0[m
[36m[10:25:25.216252] [D] [thread 132326] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[10:25:25.216296] [D] [thread 132326] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::39::0::0 Thread 2[m
[36m[10:25:25.216549] [D] [thread 132328] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[10:25:25.216653] [D] [thread 132328] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::39::0::0 Thread 1[m
[36m[10:25:25.216687] [D] [thread 132328] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::39::0::0[m
[36m[10:25:25.216717] [D] [thread 132328] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::39::0::0[m
[36m[10:25:25.216769] [D] [thread 132328] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::39::0::0[m
[32m[10:25:25.216973] [I] [thread 132328] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(0)[m
[36m[10:25:25.217450] [D] [thread 132325] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[10:25:25.217459] [D] [thread 132326] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[10:25:25.217471] [D] [thread 132328] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[10:25:25.217450] [D] [thread 132327] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[10:25:25.217512] [D] [thread 132327] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 7 stage id: 3[m
[36m[10:25:25.217534] [D] [thread 132327] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 7 stage id: 3 but refCount was 3 and now is 2[m
[36m[10:25:25.217721] [D] [thread 132325] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[10:25:25.217721] [D] [thread 132328] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[10:25:25.217759] [D] [thread 132326] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[10:25:25.217779] [D] [thread 132328] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::45::0::0 Thread 1[m
[36m[10:25:25.217779] [D] [thread 132325] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::45::0::0 Thread 3[m
[36m[10:25:25.217789] [D] [thread 132326] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::45::0::0 Thread 2[m
[36m[10:25:25.217721] [D] [thread 132327] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[10:25:25.217937] [D] [thread 132327] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::45::0::0 Thread 0[m
[36m[10:25:25.217967] [D] [thread 132327] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::45::0::0[m
[36m[10:25:25.217985] [D] [thread 132327] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::45::0::0[m
[36m[10:25:25.218004] [D] [thread 132327] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::45::0::0[m
[32m[10:25:25.218048] [I] [thread 132327] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(4)[m
[36m[10:25:25.218260] [D] [thread 132327] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[10:25:25.218271] [D] [thread 132325] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[10:25:25.218279] [D] [thread 132328] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[10:25:25.218397] [D] [thread 132326] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[10:25:25.218424] [D] [thread 132326] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 7 stage id: 3[m
[36m[10:25:25.218445] [D] [thread 132326] [ExecutablePipeline.cpp:303] [postReconfigurationCallback] Requested reconfiguration of pipeline belonging to subplanId: 7 stage id: 3 but refCount was 2 and now is 1[m
[36m[10:25:25.218634] [D] [thread 132326] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[10:25:25.218638] [D] [thread 132325] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[10:25:25.218686] [D] [thread 132326] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 2[m
[36m[10:25:25.218759] [D] [thread 132325] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 3[m
[36m[10:25:25.218805] [D] [thread 132327] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[10:25:25.218839] [D] [thread 132327] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 0[m
[36m[10:25:25.218965] [D] [thread 132328] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[10:25:25.219000] [D] [thread 132328] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 1[m
[36m[10:25:25.219022] [D] [thread 132328] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::51::0::0[m
[36m[10:25:25.219038] [D] [thread 132328] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::51::0::0[m
[36m[10:25:25.219056] [D] [thread 132328] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::51::0::0[m
[32m[10:25:25.219098] [I] [thread 132328] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(4)[m
[36m[10:25:25.219335] [D] [thread 132326] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[10:25:25.219354] [D] [thread 132325] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[10:25:25.219527] [D] [thread 132327] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[10:25:25.219624] [D] [thread 132328] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 3 belonging to query id: 7 stage id: 3[m
[36m[10:25:25.219666] [D] [thread 132328] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 7 stage id: 3[m
[36m[10:25:25.219680] [D] [thread 132328] [ExecutablePipeline.cpp:259] [postReconfigurationCallback] Reconfiguration of pipeline belonging to subplanId:7 stage id:3 reached prev=1[m
[36m[10:25:25.219718] [D] [thread 132328] [AbstractSlicePreAggregationHandler.cpp:116] [stop] shutdown AbstractSlicePreAggregationHandler: HardStop[m
[36m[10:25:25.219852] [D] [thread 132328] [ExecutableQueryPlan.cpp:330] [notifyPipelineCompletion] QEP 7 Pipeline 3 is terminated; tokens left = 3[m
[36m[10:25:25.219904] [D] [thread 132328] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:25:25.220016] [D] [thread 132328] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:25:25.220435] [D] [thread 132328] [ExecutablePipeline.cpp:286] [postReconfigurationCallback] Going to reconfigure next pipeline belonging to subplanId: 7 stage id: 2 got EndOfStream  with nextPipeline[m
[36m[10:25:25.220713] [D] [thread 132325] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 2 belonging to query id: 7 stage id: 2[m
[36m[10:25:25.220817] [D] [thread 132326] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 2 belonging to query id: 7 stage id: 2[m
[36m[10:25:25.220923] [D] [thread 132328] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 2 belonging to query id: 7 stage id: 2[m
[36m[10:25:25.220713] [D] [thread 132327] [ExecutablePipeline.cpp:188] [reconfigure] Going to reconfigure pipeline 2 belonging to query id: 7 stage id: 2[m
[36m[10:25:25.221120] [D] [thread 132327] [ExecutablePipeline.cpp:218] [postReconfigurationCallback] Going to execute postReconfigurationCallback on pipeline belonging to subplanId: 7 stage id: 2[m
[36m[10:25:25.221195] [D] [thread 132327] [ExecutablePipeline.cpp:259] [postReconfigurationCallback] Reconfiguration of pipeline belonging to subplanId:7 stage id:2 reached prev=1[m
[36m[10:25:25.221256] [D] [thread 132327] [KeyedSliceMergingHandler.cpp:38] [stop] stop GlobalSliceMergingHandler: HardStop[m
[36m[10:25:25.221384] [D] [thread 132327] [ExecutableQueryPlan.cpp:330] [notifyPipelineCompletion] QEP 7 Pipeline 2 is terminated; tokens left = 2[m
[36m[10:25:25.221490] [D] [thread 132327] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:25:25.221743] [D] [thread 132327] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:25:25.222121] [D] [thread 132327] [ExecutablePipeline.cpp:293] [postReconfigurationCallback] Going to reconfigure next sink belonging to subplanId: 7 sink id: FileSink() got EndOfStream  with nextPipeline[m
[36m[10:25:25.222444] [D] [thread 132328] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[10:25:25.222571] [D] [thread 132328] [ExecutableQueryPlan.cpp:352] [notifySinkCompletion] QEP 7 Sink FileSink() is terminated; tokens left = 1[m
[36m[10:25:25.222628] [D] [thread 132328] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:25:25.222755] [D] [thread 132328] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[10:25:25.223046] [D] [thread 132328] [SinkMedium.cpp:136] [postReconfigurationCallback] Sink [ FileSink() ] is completed with  HardStop[m
2023-11-13 10:25:25.223 postReconfigurationCallback: queryId=1, querySubPlanId=7; queryId=1 subPlanId=7 processedTasks=5956 processedTuple=1188215 processedBuffers=5956 processedWatermarks=0 latencyAVG=1699870974312 queueSizeAVG=0 availableGlobalBufferAVG=510 availableFixedBufferAVG=0
[36m[10:25:25.223561] [D] [thread 132327] [ExecutableQueryPlan.cpp:231] [postReconfigurationCallback] Executing HardEndOfStream on qep queryId=1 querySubPlanId=7[m
[36m[10:25:25.223609] [D] [thread 132327] [ExecutableQueryPlan.cpp:172] [stop] QueryExecutionPlan: stop queryId=1 querySubPlanId=7[m
[36m[10:25:25.223623] [D] [thread 132327] [ExecutableQueryPlan.cpp:174] [stop] QueryExecutionPlan: stop 1-7 is marked as stopped now[m
[36m[10:25:25.223835] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Destroy[m
[36m[10:25:25.224003] [D] [thread 132330] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Destroy[m
[36m[10:25:25.224672] [D] [thread 132330] [QueryManager.cpp:312] [postReconfigurationCallback] AbstractQueryManager: removed running QEP  7[m
[36m[10:25:25.224821] [D] [thread 132330] [QueryManagerLifecycle.cpp:380] [stopQuery] AbstractQueryManager::stopQuery: query 7 was successful[m
[36m[10:25:25.224844] [D] [thread 132330] [NodeEngine.cpp:265] [stopQuery] Runtime: stop of QEP  7  succeeded[m
[36m[10:25:25.224862] [D] [thread 132330] [WorkerRPCServer.cpp:97] [StopQuery] WorkerRPCServer::StopQuery: success[m
[36m[10:25:25.302150] [D] [thread 132324] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): EndOfStream received for channel [m
[36m[10:25:25.302182] [D] [thread 132323] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): EndOfStream received for channel [m
[36m[10:25:25.302344] [D] [thread 132324] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=1)[m
[36m[10:25:25.302383] [D] [thread 132323] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=2)[m
[32m[10:25:25.302867] [I] [thread 132323] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(3)[m
[36m[10:25:25.303349] [D] [thread 132323] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::33::0::0(threadId=2) but there is still some active subpartition: 3[m
[32m[10:25:25.303731] [I] [thread 132324] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(2)[m
[36m[10:25:25.303916] [D] [thread 132324] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::33::0::0(threadId=1) but there is still some active subpartition: 2[m
[36m[10:25:25.304244] [D] [thread 132323] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): EndOfStream received for channel [m
[36m[10:25:25.304126] [D] [thread 132324] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): EndOfStream received for channel [m
[36m[10:25:25.304437] [D] [thread 132323] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=3)[m
[36m[10:25:25.304454] [D] [thread 132324] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=0)[m
[32m[10:25:25.304551] [I] [thread 132323] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(1)[m
[36m[10:25:25.304623] [D] [thread 132323] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::33::0::0, counter is at 1.[m
[36m[10:25:25.304738] [D] [thread 132323] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[10:25:25.304786] [W] [thread 132323] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[32m[10:25:25.304939] [I] [thread 132324] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(0)[m
[36m[10:25:25.305045] [D] [thread 132324] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::33::0::0(threadId=0) but there is still some active subpartition: 0[m
[31m[1m[10:25:25.366636] [E] [thread 133095] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 3 Reason for failure: onFatalException: exception=[Failed assertion on metadata.count() == 0 error message: PartitionManager: Consumer Partition 1::36::0::0 is still alive: 4:: callstack:
Stack trace (most recent call last):
#8    Object "./nesWorker", at 0xaaaae366113f, in 
#7    Object "/lib/aarch64-linux-gnu/libc.so.6", at 0xffff77c79d4f, in __libc_start_main
#6    Object "./nesWorker", at 0xaaaae3661af7, in 
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff81ae92ef, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff81901f23, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff79ca8207, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff783296e7, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff79cba7e7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff79cbb773, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "./nesWorker", at 0xaaaae366113f, in 
#7    Object "/lib/aarch64-linux-gnu/libc.so.6", at 0xffff77c79d4f, in __libc_start_main
#6    Object "./nesWorker", at 0xaaaae3661af7, in 
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff81ae92ef, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff81901f23, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff79ca8207, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff783296e7, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff79cba7e7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff79cbb773, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[33m[1m[10:25:25.424068] [W] [thread 132324] [QueryManagerTaskScheduler.cpp:183] [addWorkForNextPipeline] Pushed task for non running executable pipeline id=3[m
[36m[10:25:25.548986] [D] [thread 132323] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): EndOfStream received for channel [m
[36m[10:25:25.549003] [D] [thread 132324] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): EndOfStream received for channel [m
[36m[10:25:25.549185] [D] [thread 132323] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=3)[m
[36m[10:25:25.549185] [D] [thread 132324] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=1)[m
[32m[10:25:25.549510] [I] [thread 132323] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(3)[m
[32m[10:25:25.549675] [I] [thread 132324] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(2)[m
[36m[10:25:25.549803] [D] [thread 132324] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::51::0::0(threadId=1) but there is still some active subpartition: 2[m
[36m[10:25:25.549851] [D] [thread 132323] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::51::0::0(threadId=3) but there is still some active subpartition: 2[m
[36m[10:25:25.549940] [D] [thread 132323] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): EndOfStream received for channel [m
[36m[10:25:25.550055] [D] [thread 132323] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=0)[m
[32m[10:25:25.550639] [I] [thread 132323] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(1)[m
[36m[10:25:25.550784] [D] [thread 132323] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::51::0::0, counter is at 1.[m
[36m[10:25:25.550903] [D] [thread 132324] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): EndOfStream received for channel [m
[36m[10:25:25.550970] [D] [thread 132324] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=2)[m
[36m[10:25:25.551010] [D] [thread 132323] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[32m[10:25:25.551037] [I] [thread 132324] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(0)[m
[33m[1m[10:25:25.551051] [W] [thread 132323] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[10:25:25.551093] [D] [thread 132324] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::51::0::0(threadId=2) but there is still some active subpartition: 0[m
[36m[10:25:25.554643] [D] [thread 132313] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Stop succeed[m
[36m[10:25:25.554748] [D] [thread 132313] [QueryUndeploymentPhase.cpp:114] [stopQuery] QueryDeploymentPhase: Finished stopping execution plan for query with Id 1[m
[36m[10:25:25.555405] [D] [thread 132313] [QueryUndeploymentPhase.cpp:59] [execute] QueryUndeploymentPhase:removeQuery: undeploy query  1[m
[36m[10:25:25.555466] [D] [thread 132313] [QueryUndeploymentPhase.cpp:125] [undeployQuery] QueryUndeploymentPhase::undeployQuery queryId= 1[m
[36m[10:25:25.555607] [D] [thread 132313] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=5 and IP=192.168.2.32:33899[m
[36m[10:25:25.555643] [D] [thread 132313] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.32:33899 queryId=1[m
[36m[10:25:25.561586] [D] [thread 132313] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=6 and IP=192.168.2.33:44393[m
[36m[10:25:25.561687] [D] [thread 132313] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.33:44393 queryId=1[m
[36m[10:25:25.566199] [D] [thread 132313] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=7 and IP=192.168.2.34:35677[m
[36m[10:25:25.566285] [D] [thread 132313] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.34:35677 queryId=1[m
[36m[10:25:25.570754] [D] [thread 132313] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=8 and IP=192.168.2.35:45919[m
[36m[10:25:25.570947] [D] [thread 132313] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.35:45919 queryId=1[m
[36m[10:25:25.575365] [D] [thread 132313] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=9 and IP=192.168.2.37:44265[m
[36m[10:25:25.575448] [D] [thread 132313] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.37:44265 queryId=1[m
[36m[10:25:25.579672] [D] [thread 132313] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=10 and IP=192.168.2.38:37017[m
[36m[10:25:25.579757] [D] [thread 132313] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.38:37017 queryId=1[m
[36m[10:25:25.584067] [D] [thread 132313] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=1 and IP=192.168.2.11:38421[m
[36m[10:25:25.584191] [D] [thread 132313] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.11:38421 queryId=1[m
[36m[10:25:25.588652] [D] [thread 132313] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=2 and IP=192.168.2.12:43279[m
[36m[10:25:25.588744] [D] [thread 132313] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.12:43279 queryId=1[m
[36m[10:25:25.592997] [D] [thread 132313] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=3 and IP=192.168.2.30:33875[m
[36m[10:25:25.593078] [D] [thread 132313] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.30:33875 queryId=1[m
[36m[10:25:25.597546] [D] [thread 132313] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=4 and IP=192.168.2.31:42073[m
[36m[10:25:25.597631] [D] [thread 132313] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.31:42073 queryId=1[m
[36m[10:25:25.601806] [D] [thread 132313] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Unregister for 10 queues[m
[36m[10:25:25.645643] [D] [thread 132323] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): EndOfStream received for channel [m
[36m[10:25:25.645643] [D] [thread 132324] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): EndOfStream received for channel [m
[36m[10:25:25.645774] [D] [thread 132323] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::45::0::0(threadId=3)[m
[36m[10:25:25.645774] [D] [thread 132324] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::45::0::0(threadId=2)[m
[32m[10:25:25.645901] [I] [thread 132324] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(3)[m
[32m[10:25:25.645961] [I] [thread 132323] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(2)[m
[36m[10:25:25.646050] [D] [thread 132324] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::45::0::0(threadId=2) but there is still some active subpartition: 2[m
[36m[10:25:25.646055] [D] [thread 132323] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::45::0::0(threadId=3) but there is still some active subpartition: 2[m
[36m[10:25:25.649186] [D] [thread 132323] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): EndOfStream received for channel [m
[36m[10:25:25.649329] [D] [thread 132323] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::45::0::0(threadId=1)[m
[32m[10:25:25.649520] [I] [thread 132323] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(1)[m
[36m[10:25:25.649558] [D] [thread 132323] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::45::0::0, counter is at 1.[m
[36m[10:25:25.649631] [D] [thread 132323] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[10:25:25.649659] [W] [thread 132323] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[36m[10:25:25.650992] [D] [thread 132324] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41695): EndOfStream received for channel [m
[36m[10:25:25.651101] [D] [thread 132324] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::45::0::0(threadId=0)[m
[32m[10:25:25.651184] [I] [thread 132324] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(0)[m
[36m[10:25:25.651224] [D] [thread 132324] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::45::0::0(threadId=0) but there is still some active subpartition: 0[m
[31m[1m[10:25:25.662852] [E] [thread 132334] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:25:25.663883] [W] [thread 132334] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:33875 went dead so we remove it[m
[32m[10:25:25.664047] [I] [thread 132334] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[10:25:25.664076] [I] [thread 132334] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:25:25.664109] [I] [thread 132334] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[10:25:25.664119] [I] [thread 132334] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[10:25:25.664132] [I] [thread 132334] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:25:25.664143] [I] [thread 132334] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[10:25:25.664192] [D] [thread 132334] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[10:25:25.724461] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[10:25:26.097426] [E] [thread 133095] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 2 Reason for failure: onFatalError: signal [11] error [Success] callstack Stack trace (most recent call last) in thread 45958:
#21   Object "/usr/lib/aarch64-linux-gnu/ld-2.31.so", at 0xffffffffffffffff, in 
#20   Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff7424622b, in 
#19   Object "/usr/lib/aarch64-linux-gnu/libpthread-2.31.so", at 0xffff7460751b, in start_thread
#18   Object "/usr/lib/aarch64-linux-gnu/libstdc++.so.6.0.28", at 0xffff743daf9b, in 
#17   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff7def5dbb, in std::thread::_State_impl<std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> > >::_M_run()
#16   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff7def5f0b, in std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> >::operator()()
#15   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff7def5f37, in void std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> >::_M_invoke<0ul>(std::_Index_tuple<0ul>)
#14   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff7def5f5f, in std::__invoke_result<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>::type std::__invoke<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>(NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0&&)
#13   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff7def5fab, in void std::__invoke_impl<void, NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>(std::__invoke_other, NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0&&)
#12   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff7def69ef, in NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0::operator()() const
#11   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff7def49c3, in NES::Runtime::ThreadPool::runningRoutine(NES::Runtime::WorkerContext&&)
#10   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff7ded5d93, in NES::Runtime::DynamicQueryManager::processNextTask(bool, NES::Runtime::WorkerContext&)
#9    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff7defa813, in NES::Runtime::Task::operator()(NES::Runtime::WorkerContext&)
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff7df88b1f, in NES::Network::NetworkSink::writeData(NES::Runtime::TupleBuffer&, NES::Runtime::WorkerContext&)
#7    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff7627f7ff, in NES::Runtime::WorkerContext::getNetworkChannel(unsigned long)
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff7df8fa77, in std::unique_ptr<NES::Network::NetworkChannel, std::default_delete<NES::Network::NetworkChannel> >::get() const
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff7df8faac, in std::__uniq_ptr_impl<NES::Network::NetworkChannel, std::default_delete<NES::Network::NetworkChannel> >::_M_ptr() const
#4    Object "[vdso: 45942]", at 0xffff81748597, in 
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff7624244f, in NES::Runtime::detail::nesErrorHandler(int)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff748a9b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff76243ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff76244c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[36m[10:25:26.144099] [D] [thread 132384] [WorkerRPCServer.cpp:64] [UnregisterQuery] WorkerRPCServer::UnregisterQuery: got request for 1[m
[36m[10:25:26.144199] [D] [thread 132384] [NodeEngine.cpp:206] [unregisterQuery] Runtime: unregisterQuery query= 1[m
[36m[10:25:26.144280] [D] [thread 132384] [NodeEngine.cpp:231] [unregisterQuery] Runtime: unregister of query  7 : current status is stopped= true[m
[36m[10:25:26.144305] [D] [thread 132384] [QueryManagerLifecycle.cpp:222] [deregisterQuery] AbstractQueryManager::deregisterAndUndeployQuery: query 1[m
[36m[10:25:26.144423] [D] [thread 132384] [NodeEngine.cpp:234] [unregisterQuery] Runtime: unregister of query  7  succeeded[m
[36m[10:25:26.144507] [D] [thread 132384] [WorkerRPCServer.cpp:67] [UnregisterQuery] WorkerRPCServer::UnregisterQuery: success[m
[1m[41m[10:25:26.148870] [C] [thread 132313] [RequestProcessorService.cpp:236] [start] QueryProcessingService: Received unexpected exception while scheduling the queryIdAndCatalogEntryMapping: [m
[32m[10:25:26.148946] [I] [thread 132313] [RequestProcessorService.cpp:255] [shutDown] Request Processor Service is shutting down! No further requests can be processed![m
[32m[10:25:26.148964] [I] [thread 132313] [RequestQueue.cpp:63] [insertPoisonPill] QueryRequestQueue: Shutdown is called. Inserting Poison pill in the query request queue.[m
[33m[1m[10:25:26.149027] [W] [thread 132313] [RequestProcessorService.cpp:240] [start] QueryProcessingService: Terminated[m
[32m[10:25:26.149038] [I] [thread 132313] [RequestProcessorService.cpp:255] [shutDown] Request Processor Service is shutting down! No further requests can be processed![m
[33m[1m[10:25:26.149047] [W] [thread 132313] [NesCoordinator.cpp:171] [operator()] NesCoordinator: finished queryRequestProcessor[m
[36m[10:25:26.725747] [D] [thread 132333] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[10:25:26.805363] [E] [thread 132334] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:25:26.806273] [W] [thread 132334] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.12:43279 went dead so we remove it[m
[32m[10:25:26.806422] [I] [thread 132334] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[32m[10:25:26.806446] [I] [thread 132334] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:25:26.806475] [I] [thread 132334] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[10:25:26.806484] [I] [thread 132334] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[10:25:26.806494] [I] [thread 132334] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:25:26.806514] [I] [thread 132334] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[10:25:26.806537] [D] [thread 132334] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[10:25:26.811414] [E] [thread 132334] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:25:26.812300] [W] [thread 132334] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:33875 went dead so we remove it[m
[32m[10:25:26.812473] [I] [thread 132334] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[33m[1m[10:25:26.812503] [W] [thread 132334] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[31m[1m[10:25:26.817384] [E] [thread 132334] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:25:26.818366] [W] [thread 132334] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:42073 went dead so we remove it[m
[32m[10:25:26.818509] [I] [thread 132334] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[32m[10:25:26.818536] [I] [thread 132334] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:25:26.818558] [I] [thread 132334] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[10:25:26.818567] [I] [thread 132334] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[10:25:26.818584] [I] [thread 132334] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:25:26.818594] [I] [thread 132334] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[10:25:26.818617] [D] [thread 132334] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[10:25:26.823608] [E] [thread 132334] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:25:26.824597] [W] [thread 132334] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.32:33899 went dead so we remove it[m
[32m[10:25:26.824745] [I] [thread 132334] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=2][m
[32m[10:25:26.824772] [I] [thread 132334] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:25:26.824783] [I] [thread 132334] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[10:25:26.824806] [D] [thread 132334] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[10:25:26.829728] [E] [thread 132334] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:25:26.830645] [W] [thread 132334] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.33:44393 went dead so we remove it[m
[32m[10:25:26.830795] [I] [thread 132334] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=2][m
[32m[10:25:26.830821] [I] [thread 132334] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:25:26.830831] [I] [thread 132334] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[10:25:26.830855] [D] [thread 132334] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[10:25:26.835810] [E] [thread 132334] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:25:26.836773] [W] [thread 132334] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.34:35677 went dead so we remove it[m
[32m[10:25:26.836921] [I] [thread 132334] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=2][m
[32m[10:25:26.836946] [I] [thread 132334] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:25:26.836958] [I] [thread 132334] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[10:25:26.836982] [D] [thread 132334] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
